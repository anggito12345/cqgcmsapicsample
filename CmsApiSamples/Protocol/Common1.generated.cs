// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace CmsApiSamples.Protocol.CMSApi {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Common1 {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_common_1_Text__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Text, global::CmsApiSamples.Protocol.CMSApi.Text.Builder> internal__static_common_1_Text__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UserMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UserMessage, global::CmsApiSamples.Protocol.CMSApi.UserMessage.Builder> internal__static_common_1_UserMessage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_Logon__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Logon, global::CmsApiSamples.Protocol.CMSApi.Logon.Builder> internal__static_common_1_Logon__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_RestoreOrJoinSession__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSession, global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSession.Builder> internal__static_common_1_RestoreOrJoinSession__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_Logoff__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Logoff, global::CmsApiSamples.Protocol.CMSApi.Logoff.Builder> internal__static_common_1_Logoff__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_ObtainDemoAccess__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccess, global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccess.Builder> internal__static_common_1_ObtainDemoAccess__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_Credentials__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Credentials, global::CmsApiSamples.Protocol.CMSApi.Credentials.Builder> internal__static_common_1_Credentials__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_ObtainDemoAccessResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccessResult, global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccessResult.Builder> internal__static_common_1_ObtainDemoAccessResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LogonResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LogonResult, global::CmsApiSamples.Protocol.CMSApi.LogonResult.Builder> internal__static_common_1_LogonResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_RestoreOrJoinSessionResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSessionResult, global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSessionResult.Builder> internal__static_common_1_RestoreOrJoinSessionResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LoggedOff__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoggedOff, global::CmsApiSamples.Protocol.CMSApi.LoggedOff.Builder> internal__static_common_1_LoggedOff__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UserEntitlementServiceRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UserEntitlementServiceRequest, global::CmsApiSamples.Protocol.CMSApi.UserEntitlementServiceRequest.Builder> internal__static_common_1_UserEntitlementServiceRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_EntitlementCategoryListRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementCategoryListRequest, global::CmsApiSamples.Protocol.CMSApi.EntitlementCategoryListRequest.Builder> internal__static_common_1_EntitlementCategoryListRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_EntitlementServiceRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceRequest, global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceRequest.Builder> internal__static_common_1_EntitlementServiceRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_EntitlementServiceListRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceListRequest, global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceListRequest.Builder> internal__static_common_1_EntitlementServiceListRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_EntitlementService__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementService, global::CmsApiSamples.Protocol.CMSApi.EntitlementService.Builder> internal__static_common_1_EntitlementService__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_EntitlementServiceItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem, global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem.Builder> internal__static_common_1_EntitlementServiceItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_EntitlementServiceItemType__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType, global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType.Builder> internal__static_common_1_EntitlementServiceItemType__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_Price__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Price, global::CmsApiSamples.Protocol.CMSApi.Price.Builder> internal__static_common_1_Price__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_EntitlementCategory__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory, global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory.Builder> internal__static_common_1_EntitlementCategory__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_EntitlementConstraint__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint, global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint.Builder> internal__static_common_1_EntitlementConstraint__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UserInfoRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UserInfoRequest, global::CmsApiSamples.Protocol.CMSApi.UserInfoRequest.Builder> internal__static_common_1_UserInfoRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_User__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.User, global::CmsApiSamples.Protocol.CMSApi.User.Builder> internal__static_common_1_User__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LoginSettings__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoginSettings, global::CmsApiSamples.Protocol.CMSApi.LoginSettings.Builder> internal__static_common_1_LoginSettings__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UserEntitlementService__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UserEntitlementService, global::CmsApiSamples.Protocol.CMSApi.UserEntitlementService.Builder> internal__static_common_1_UserEntitlementService__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_AssignedBrokerage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage, global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage.Builder> internal__static_common_1_AssignedBrokerage__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UserSearchRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UserSearchRequest, global::CmsApiSamples.Protocol.CMSApi.UserSearchRequest.Builder> internal__static_common_1_UserSearchRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UserSearchResultRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UserSearchResultRecord, global::CmsApiSamples.Protocol.CMSApi.UserSearchResultRecord.Builder> internal__static_common_1_UserSearchResultRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_CloneUser__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CloneUser, global::CmsApiSamples.Protocol.CMSApi.CloneUser.Builder> internal__static_common_1_CloneUser__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_CloneUserResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CloneUserResult, global::CmsApiSamples.Protocol.CMSApi.CloneUserResult.Builder> internal__static_common_1_CloneUserResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_Address__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Address, global::CmsApiSamples.Protocol.CMSApi.Address.Builder> internal__static_common_1_Address__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_ContactInformation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ContactInformation, global::CmsApiSamples.Protocol.CMSApi.ContactInformation.Builder> internal__static_common_1_ContactInformation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_Email__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Email, global::CmsApiSamples.Protocol.CMSApi.Email.Builder> internal__static_common_1_Email__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_Phone__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Phone, global::CmsApiSamples.Protocol.CMSApi.Phone.Builder> internal__static_common_1_Phone__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_CustomerRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CustomerRequest, global::CmsApiSamples.Protocol.CMSApi.CustomerRequest.Builder> internal__static_common_1_CustomerRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_Customer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Customer, global::CmsApiSamples.Protocol.CMSApi.Customer.Builder> internal__static_common_1_Customer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_CustomerSearchRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CustomerSearchRequest, global::CmsApiSamples.Protocol.CMSApi.CustomerSearchRequest.Builder> internal__static_common_1_CustomerSearchRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_CustomerSearchResultRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CustomerSearchResultRecord, global::CmsApiSamples.Protocol.CMSApi.CustomerSearchResultRecord.Builder> internal__static_common_1_CustomerSearchResultRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_CreateCustomer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateCustomer, global::CmsApiSamples.Protocol.CMSApi.CreateCustomer.Builder> internal__static_common_1_CreateCustomer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UpdateCustomer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateCustomer, global::CmsApiSamples.Protocol.CMSApi.UpdateCustomer.Builder> internal__static_common_1_UpdateCustomer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_RemoveCustomer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RemoveCustomer, global::CmsApiSamples.Protocol.CMSApi.RemoveCustomer.Builder> internal__static_common_1_RemoveCustomer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_RestoreCustomer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreCustomer, global::CmsApiSamples.Protocol.CMSApi.RestoreCustomer.Builder> internal__static_common_1_RestoreCustomer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_CreateCustomerResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateCustomerResult, global::CmsApiSamples.Protocol.CMSApi.CreateCustomerResult.Builder> internal__static_common_1_CreateCustomerResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UpdateCustomerResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerResult, global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerResult.Builder> internal__static_common_1_UpdateCustomerResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_RemoveCustomerResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RemoveCustomerResult, global::CmsApiSamples.Protocol.CMSApi.RemoveCustomerResult.Builder> internal__static_common_1_RemoveCustomerResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_RestoreCustomerResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreCustomerResult, global::CmsApiSamples.Protocol.CMSApi.RestoreCustomerResult.Builder> internal__static_common_1_RestoreCustomerResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_CreateUser__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateUser, global::CmsApiSamples.Protocol.CMSApi.CreateUser.Builder> internal__static_common_1_CreateUser__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UpdateUser__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateUser, global::CmsApiSamples.Protocol.CMSApi.UpdateUser.Builder> internal__static_common_1_UpdateUser__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_RemoveUser__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RemoveUser, global::CmsApiSamples.Protocol.CMSApi.RemoveUser.Builder> internal__static_common_1_RemoveUser__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_RestoreUser__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreUser, global::CmsApiSamples.Protocol.CMSApi.RestoreUser.Builder> internal__static_common_1_RestoreUser__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_CreateUserResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateUserResult, global::CmsApiSamples.Protocol.CMSApi.CreateUserResult.Builder> internal__static_common_1_CreateUserResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UpdateUserResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateUserResult, global::CmsApiSamples.Protocol.CMSApi.UpdateUserResult.Builder> internal__static_common_1_UpdateUserResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_RestoreUserResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreUserResult, global::CmsApiSamples.Protocol.CMSApi.RestoreUserResult.Builder> internal__static_common_1_RestoreUserResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_RemoveUserResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RemoveUserResult, global::CmsApiSamples.Protocol.CMSApi.RemoveUserResult.Builder> internal__static_common_1_RemoveUserResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LinkUserToCustomer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomer, global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomer.Builder> internal__static_common_1_LinkUserToCustomer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LinkUserToCustomerResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomerResult, global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomerResult.Builder> internal__static_common_1_LinkUserToCustomerResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_RestrictedEntitlementService__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService, global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService.Builder> internal__static_common_1_RestrictedEntitlementService__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_ModifyUserEntitlementService__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementService, global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementService.Builder> internal__static_common_1_ModifyUserEntitlementService__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_ModifyUserEntitlementServiceResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementServiceResult, global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementServiceResult.Builder> internal__static_common_1_ModifyUserEntitlementServiceResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_GetUniqueUsernameRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.GetUniqueUsernameRequest, global::CmsApiSamples.Protocol.CMSApi.GetUniqueUsernameRequest.Builder> internal__static_common_1_GetUniqueUsernameRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UniqueUsernameResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UniqueUsernameResult, global::CmsApiSamples.Protocol.CMSApi.UniqueUsernameResult.Builder> internal__static_common_1_UniqueUsernameResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LookupProperty__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LookupProperty, global::CmsApiSamples.Protocol.CMSApi.LookupProperty.Builder> internal__static_common_1_LookupProperty__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LookupPropertyListRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest, global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest.Builder> internal__static_common_1_LookupPropertyListRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LookupPropertyListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult, global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult.Builder> internal__static_common_1_LookupPropertyListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_SalesSeriesSearchRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchRequest, global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchRequest.Builder> internal__static_common_1_SalesSeriesSearchRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_SalesSeriesSearchResultRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchResultRecord, global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchResultRecord.Builder> internal__static_common_1_SalesSeriesSearchResultRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_Tuple__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Tuple, global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder> internal__static_common_1_Tuple__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_CustomerSalesSeriesAuthorizationListRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListRequest, global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListRequest.Builder> internal__static_common_1_CustomerSalesSeriesAuthorizationListRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationList__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationList, global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationList.Builder> internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationList__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_CustomerSalesSeriesAuthorizationListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListResult, global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListResult.Builder> internal__static_common_1_CustomerSalesSeriesAuthorizationListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationListResult, global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationListResult.Builder> internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_CustomerSalesSeriesLink__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink, global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink.Builder> internal__static_common_1_CustomerSalesSeriesLink__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LoginSettingsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoginSettingsRequest, global::CmsApiSamples.Protocol.CMSApi.LoginSettingsRequest.Builder> internal__static_common_1_LoginSettingsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LoginSettingsResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoginSettingsResult, global::CmsApiSamples.Protocol.CMSApi.LoginSettingsResult.Builder> internal__static_common_1_LoginSettingsResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UpdateLoginSettings__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettings, global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettings.Builder> internal__static_common_1_UpdateLoginSettings__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UpdateLoginSettingsResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettingsResult, global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettingsResult.Builder> internal__static_common_1_UpdateLoginSettingsResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LoginExchangeMemberIdListRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListRequest, global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListRequest.Builder> internal__static_common_1_LoginExchangeMemberIdListRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LoginExchangeMemberIdListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListResult, global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListResult.Builder> internal__static_common_1_LoginExchangeMemberIdListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LoginExchangeMemberId__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId, global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId.Builder> internal__static_common_1_LoginExchangeMemberId__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UpdateLoginExchangeMemberIdList__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdList, global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdList.Builder> internal__static_common_1_UpdateLoginExchangeMemberIdList__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UpdateLoginExchangeMemberIdListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdListResult, global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdListResult.Builder> internal__static_common_1_UpdateLoginExchangeMemberIdListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_ActivateLogin__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ActivateLogin, global::CmsApiSamples.Protocol.CMSApi.ActivateLogin.Builder> internal__static_common_1_ActivateLogin__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_DeactivateLogin__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.DeactivateLogin, global::CmsApiSamples.Protocol.CMSApi.DeactivateLogin.Builder> internal__static_common_1_DeactivateLogin__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_ActivateLoginResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ActivateLoginResult, global::CmsApiSamples.Protocol.CMSApi.ActivateLoginResult.Builder> internal__static_common_1_ActivateLoginResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_DeactivateLoginResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.DeactivateLoginResult, global::CmsApiSamples.Protocol.CMSApi.DeactivateLoginResult.Builder> internal__static_common_1_DeactivateLoginResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_EraseCurrentCredentials__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentials, global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentials.Builder> internal__static_common_1_EraseCurrentCredentials__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_EraseCurrentCredentialsResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentialsResult, global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentialsResult.Builder> internal__static_common_1_EraseCurrentCredentialsResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_SearchOption__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SearchOption, global::CmsApiSamples.Protocol.CMSApi.SearchOption.Builder> internal__static_common_1_SearchOption__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_TerminateLoginSession__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSession, global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSession.Builder> internal__static_common_1_TerminateLoginSession__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_TerminateLoginSessionResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSessionResult, global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSessionResult.Builder> internal__static_common_1_TerminateLoginSessionResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_NamedEntity__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.NamedEntity, global::CmsApiSamples.Protocol.CMSApi.NamedEntity.Builder> internal__static_common_1_NamedEntity__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UpdateEntityLinks__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinks, global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinks.Builder> internal__static_common_1_UpdateEntityLinks__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_UpdateEntityLinksResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinksResult, global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinksResult.Builder> internal__static_common_1_UpdateEntityLinksResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LinkedEntityListRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListRequest, global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListRequest.Builder> internal__static_common_1_LinkedEntityListRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_LinkedEntityListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListResult, global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListResult.Builder> internal__static_common_1_LinkedEntityListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_SalesSeriesListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SalesSeriesListResult, global::CmsApiSamples.Protocol.CMSApi.SalesSeriesListResult.Builder> internal__static_common_1_SalesSeriesListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_common_1_SalesSeries__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SalesSeries, global::CmsApiSamples.Protocol.CMSApi.SalesSeries.Builder> internal__static_common_1_SalesSeries__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Common1() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJDTVMvY29tbW9uXzEucHJvdG8SCGNvbW1vbl8xIkAKBFRleHQSCwoDa2V5", 
            "GAEgAigJEgwKBHRleHQYAiACKAkSDgoGZm9ybWF0GAMgASgJEg0KBXBhcmFt", 
            "GAQgAygJIsIBCgtVc2VyTWVzc2FnZRIUCgxtZXNzYWdlX3R5cGUYASACKA0S", 
            "DgoGc291cmNlGAIgASgJEg8KB3N1YmplY3QYAyABKAkSHAoEdGV4dBgEIAIo", 
            "CzIOLmNvbW1vbl8xLlRleHQSGwoTZXhwaXJhdGlvbl91dGNfdGltZRgFIAEo", 
            "EiJBCgtNZXNzYWdlVHlwZRISCg5DUklUSUNBTF9FUlJPUhABEgsKB1dBUk5J", 
            "TkcQAhIICgRJTkZPEAMSBwoDTE9HEAQisgIKBUxvZ29uEh4KFnByb3RvY29s", 
            "X3ZlcnNpb25fbWlub3IYASACKA0SHgoWcHJvdG9jb2xfdmVyc2lvbl9tYWpv", 
            "chgCIAIoDRIRCgl1c2VyX25hbWUYAyACKAkSEAoIcGFzc3dvcmQYBCACKAkS", 
            "FQoNY2xpZW50X2FwcF9pZBgFIAIoCRIWCg5jbGllbnRfdmVyc2lvbhgGIAIo", 
            "CRIYChBzZXNzaW9uX3NldHRpbmdzGAcgAygNEh8KF2Ryb3BfY29uY3VycmVu", 
            "dF9zZXNzaW9uGAggASgIEhUKDXByaXZhdGVfbGFiZWwYCSABKAkiQwoOU2Vz", 
            "c2lvblNldHRpbmcSGQoVQUxMT1dfU0VTU0lPTl9SRVNUT1JFEAESFgoSQUxM", 
            "T1dfU0VTU0lPTl9KT0lOEAIiXwoUUmVzdG9yZU9ySm9pblNlc3Npb24SFQoN", 
            "c2Vzc2lvbl90b2tlbhgBIAIoCRIVCg1jbGllbnRfYXBwX2lkGAIgAigJEhkK", 
            "EWNsaWVudF9pcF9hZGRyZXNzGAMgASgJIggKBkxvZ29mZiLnAQoQT2J0YWlu", 
            "RGVtb0FjY2VzcxIKCgJpZBgBIAIoDRIVCg1jbGllbnRfYXBwX2lkGAIgAigJ", 
            "EhUKDXByaXZhdGVfbGFiZWwYAyABKAkSEgoKZmlyc3RfbmFtZRgEIAIoCRIR", 
            "CglsYXN0X25hbWUYBSACKAkSHgoFZW1haWwYBiACKAsyDy5jb21tb25fMS5F", 
            "bWFpbBIeCgVwaG9uZRgHIAIoCzIPLmNvbW1vbl8xLlBob25lEiIKCWVtYWls", 
            "X2JjYxgIIAMoCzIPLmNvbW1vbl8xLkVtYWlsEg4KBnNvdXJjZRgJIAEoCSIy", 
            "CgtDcmVkZW50aWFscxIRCgl1c2VyX25hbWUYASACKAkSEAoIcGFzc3dvcmQY", 
            "AiABKAkitgEKFk9idGFpbkRlbW9BY2Nlc3NSZXN1bHQSEgoKcmVxdWVzdF9p", 
            "ZBgBIAIoDRIqCgtjcmVkZW50aWFscxgCIAEoCzIVLmNvbW1vbl8xLkNyZWRl", 
            "bnRpYWxzEhsKE2V4cGlyYXRpb25fdXRjX3RpbWUYAyABKBISGAoQb3BlcmF0", 
            "aW9uX3N0YXR1cxgEIAIoDRIlCg1lcnJvcl9tZXNzYWdlGAUgASgLMg4uY29t", 
            "bW9uXzEuVGV4dCKlAQoLTG9nb25SZXN1bHQSHgoWcHJvdG9jb2xfdmVyc2lv", 
            "bl9taW5vchgBIAIoDRIeChZwcm90b2NvbF92ZXJzaW9uX21ham9yGAIgAigN", 
            "EhgKEG9wZXJhdGlvbl9zdGF0dXMYAyACKA0SJQoNZXJyb3JfbWVzc2FnZRgE", 
            "IAEoCzIOLmNvbW1vbl8xLlRleHQSFQoNc2Vzc2lvbl90b2tlbhgFIAEoCSJd", 
            "ChpSZXN0b3JlT3JKb2luU2Vzc2lvblJlc3VsdBIYChBvcGVyYXRpb25fc3Rh", 
            "dHVzGAEgAigNEiUKDWVycm9yX21lc3NhZ2UYAiABKAsyDi5jb21tb25fMS5U", 
            "ZXh0IisKCUxvZ2dlZE9mZhIeCgZyZWFzb24YAiABKAsyDi5jb21tb25fMS5U", 
            "ZXh0IjAKHVVzZXJFbnRpdGxlbWVudFNlcnZpY2VSZXF1ZXN0Eg8KB3VzZXJf", 
            "aWQYASACKAkiIAoeRW50aXRsZW1lbnRDYXRlZ29yeUxpc3RSZXF1ZXN0IjsK", 
            "GUVudGl0bGVtZW50U2VydmljZVJlcXVlc3QSHgoWZW50aXRsZW1lbnRfc2Vy", 
            "dmljZV9pZBgBIAIoDSI1Ch1FbnRpdGxlbWVudFNlcnZpY2VMaXN0UmVxdWVz", 
            "dBIUCgxicm9rZXJhZ2VfaWQYASADKAkinAUKEkVudGl0bGVtZW50U2Vydmlj", 
            "ZRIKCgJpZBgBIAIoDRIcCgRuYW1lGAIgAigLMg4uY29tbW9uXzEuVGV4dBIT", 
            "CgtjYXRlZ29yeV9pZBgDIAMoDRIeCgVwcmljZRgEIAMoCzIPLmNvbW1vbl8x", 
            "LlByaWNlEiMKC2Rlc2NyaXB0aW9uGAUgAigLMg4uY29tbW9uXzEuVGV4dBIa", 
            "ChJhdXRob3JpemF0aW9uX3R5cGUYBiACKA0SMwoKY29uc3RyYWludBgHIAMo", 
            "CzIfLmNvbW1vbl8xLkVudGl0bGVtZW50Q29uc3RyYWludBIaChJhZ3JlZW1l", 
            "bnRfcmVxdWlyZWQYCCABKAgSIQoJYWdyZWVtZW50GAkgASgLMg4uY29tbW9u", 
            "XzEuVGV4dBIXCg9zdWJzY3JpYmVyX3R5cGUYCiABKA0SIgoaYmlsbGluZ19i", 
            "cm9rZXJhZ2VfcmVxdWlyZWQYCyABKAgSFQoNbG9naW5fZG9tYWlucxgMIAMo", 
            "DRIPCgdvcHRpb25zGA0gAygNEi8KBWl0ZW1zGA4gAygLMiAuY29tbW9uXzEu", 
            "RW50aXRsZW1lbnRTZXJ2aWNlSXRlbRIcChRicm9rZXJhZ2VfYXNzaWduYWJs", 
            "ZRgPIAEoCBIoCiBicm9rZXJhZ2VfYXV0aG9yaXphdGlvbl9yZXF1aXJlZBgQ", 
            "IAEoCCJXChFBdXRob3JpemF0aW9uVHlwZRIQCgxESVNBQkxFX09OTFkQARIN", 
            "CglWSUVXX09OTFkQAhIPCgtFTkFCTEVfT05MWRADEhAKDEZVTExfQ09OVFJP", 
            "TBAEIjsKDVNlcnZpY2VPcHRpb24SFAoQT05MWV9GT1JfVFJBREVSUxABEhQK", 
            "EEZSRUVfRk9SX1RSQURFUlMQAiJ2ChZFbnRpdGxlbWVudFNlcnZpY2VJdGVt", 
            "EgoKAmlkGAEgASgJEjIKBHR5cGUYAiABKAsyJC5jb21tb25fMS5FbnRpdGxl", 
            "bWVudFNlcnZpY2VJdGVtVHlwZRIcCgRuYW1lGAMgASgLMg4uY29tbW9uXzEu", 
            "VGV4dCJrChpFbnRpdGxlbWVudFNlcnZpY2VJdGVtVHlwZRIKCgJpZBgBIAEo", 
            "CRIcCgRuYW1lGAIgASgLMg4uY29tbW9uXzEuVGV4dBIjCgtkZXNjcmlwdGlv", 
            "bhgDIAEoCzIOLmNvbW1vbl8xLlRleHQiKAoFUHJpY2USEAoIY3VycmVuY3kY", 
            "ASACKAkSDQoFdmFsdWUYAiACKAEikgEKE0VudGl0bGVtZW50Q2F0ZWdvcnkS", 
            "CgoCaWQYASACKA0SHAoEbmFtZRgCIAIoCzIOLmNvbW1vbl8xLlRleHQSMwoM", 
            "c3ViX2NhdGVnb3J5GAMgAygLMh0uY29tbW9uXzEuRW50aXRsZW1lbnRDYXRl", 
            "Z29yeRIcChRicm9rZXJhZ2VfYXNzaWduYWJsZRgEIAEoCCKqAQoVRW50aXRs", 
            "ZW1lbnRDb25zdHJhaW50EhcKD2NvbnN0cmFpbnRfdHlwZRgBIAIoDRIWCg5y", 
            "ZWZfc2VydmljZV9pZBgCIAEoDRIYChBjb25zdHJhaW50X2dyb3VwGAMgASgJ", 
            "IkYKBFR5cGUSCwoHRVhDTFVERRABEgsKB1dBUk5JTkcQAhIWChJNQU5EQVRP", 
            "UllfT05MWV9PTkUQAxIMCghQSUNLX09ORRAEIiIKD1VzZXJJbmZvUmVxdWVz", 
            "dBIPCgd1c2VyX2lkGAQgAigJIoUECgRVc2VyEgoKAmlkGAEgASgJEhEKCXVz", 
            "ZXJfbmFtZRgCIAEoCRISCgpmaXJzdF9uYW1lGAMgASgJEhEKCWxhc3RfbmFt", 
            "ZRgEIAEoCRINCgVlbWFpbBgFIAEoCRITCgtjdXN0b21lcl9pZBgGIAEoCRIX", 
            "Cg9zdWJzY3JpYmVyX3R5cGUYByABKA0SFAoMcmVtb3ZhbF9kYXRlGAggASgS", 
            "EhEKCXN5c3RlbV9pZBgJIAEoCRIRCgl0cmFkZXJfaWQYCiABKAkSIQoZZW5m", 
            "b3JjZWRfY29uc3RyYWludF9ncm91cBgLIAMoCRIQCghjdXJyZW5jeRgMIAEo", 
            "CRIOCgZkb21haW4YDSABKA0SDwoHcmVtb3ZlZBgOIAEoCBINCgVjbGFzcxgP", 
            "IAEoDRIUCgxpc190ZW1wb3JhcnkYECABKAgSEQoJaXNfYWN0aXZlGBEgASgI", 
            "EhcKD2V4cGlyYXRpb25fdGltZRgSIAEoEhIUCgxjYXN0X3VzZXJfaWQYEyAB", 
            "KAkSDQoFc2NvcGUYFCABKA0iJgoOU3Vic2NyaWJlclR5cGUSBwoDUFJPEAAS", 
            "CwoHTk9OX1BSTxABIkoKCkxvZ2luQ2xhc3MSCwoHUkVHVUxBUhABEg4KCkZJ", 
            "WF9ESVJFQ1QQAhIRCg1PUkRFUl9IQU5ETEVSEAMSDAoIVEVNUExBVEUQBCKC", 
            "AgoNTG9naW5TZXR0aW5ncxIWCg5jbGVhcmVkX2ZpZWxkcxgHIAMoDRIQCghs", 
            "b2dpbl9pZBgBIAEoCRIlCh1wcmVmZXJyZWRfY29ubmVjdGlvbl9wb2ludF9p", 
            "ZBgCIAEoCRIiChpjb25jdXJyZW50X3Nlc3Npb25zX251bWJlchgDIAEoDRIe", 
            "ChZwYXNzd29yZF9uZXZlcl9leHBpcmVzGAQgASgIEhoKEmlzX3N0cmF0ZWd5", 
            "X3J1bm5lchgFIAEoCBInCh9wcmVmZXJyZWRfY29ubmVjdGlvbl9wb2ludF9u", 
            "YW1lGAYgASgJEhcKD2xpbmtlZF9sb2dpbl9pZBgIIAEoCSLNAQoWVXNlckVu", 
            "dGl0bGVtZW50U2VydmljZRIPCgd1c2VyX2lkGAEgAigJEh4KFmVudGl0bGVt", 
            "ZW50X3NlcnZpY2VfaWQYAiACKA0SFQoNZnJvbV91dGNfdGltZRgDIAEoEhIT", 
            "Cgt0b191dGNfdGltZRgEIAEoEhIcChRiaWxsaW5nX2Jyb2tlcmFnZV9pZBgF", 
            "IAEoCRI4ChNhc3NpZ25lZF9icm9rZXJhZ2VzGAYgAygLMhsuY29tbW9uXzEu", 
            "QXNzaWduZWRCcm9rZXJhZ2UiRAoRQXNzaWduZWRCcm9rZXJhZ2USFAoMYnJv", 
            "a2VyYWdlX2lkGAEgAigJEhkKEXdhaXZlX2Jhc2VfY2hhcmdlGAIgASgIItEC", 
            "ChFVc2VyU2VhcmNoUmVxdWVzdBIMCgR0ZXh0GAEgASgJEhcKD3NlYXJjaF9j", 
            "cml0ZXJpYRgCIAMoDRIuCg5zZWFyY2hfb3B0aW9ucxgDIAMoCzIWLmNvbW1v", 
            "bl8xLlNlYXJjaE9wdGlvbhIdCg5hbGxfbWF0Y2hfbW9kZRgEIAEoCDoFZmFs", 
            "c2UixQEKDlNlYXJjaENyaXRlcmlhEgsKB1VTRVJfSUQQARINCglVU0VSX05B", 
            "TUUQBBIXChNTQUxFU19TRVJJRVNfTlVNQkVSEAUSFQoRU0FMRVNfU0VSSUVT", 
            "X05BTUUQBhITCg9TQUxFU19TRVJJRVNfSUQQBxIPCgtDVVNUT01FUl9JRBAI", 
            "EhAKDEJST0tFUkFHRV9JRBAJEhIKDkJST0tFUkFHRV9OQU1FEAoSCQoFQ0xB", 
            "U1MQCxIQCgxMT0dJTl9ET01BSU4QDCLmAQoWVXNlclNlYXJjaFJlc3VsdFJl", 
            "Y29yZBIPCgd1c2VyX2lkGAEgAigJEhEKCXVzZXJfbmFtZRgCIAIoCRISCgpm", 
            "aXJzdF9uYW1lGAMgASgJEhEKCWxhc3RfbmFtZRgEIAEoCRITCgtjdXN0b21l", 
            "cl9pZBgFIAEoCRIVCg1jdXN0b21lcl9uYW1lGAYgASgJEh8KF2N1c3RvbWVy", 
            "X2Jyb2tlcmFnZV9uYW1lGAcgASgJEg8KB3JlbW92ZWQYCCABKAgSDQoFY2xh", 
            "c3MYCSABKA0SFAoMaXNfdGVtcG9yYXJ5GAogASgIIokCCglDbG9uZVVzZXIS", 
            "FgoOc291cmNlX3VzZXJfaWQYASACKAkSGQoRbmV3X3VzZXJfdXNlcm5hbWUY", 
            "AiACKAkSGwoTbmV3X3VzZXJfZmlyc3RfbmFtZRgDIAEoCRIaChJuZXdfdXNl", 
            "cl9sYXN0X25hbWUYBCABKAkSKwoQbmV3X3VzZXJfYWRkcmVzcxgFIAIoCzIR", 
            "LmNvbW1vbl8xLkFkZHJlc3MSQgocbmV3X3VzZXJfY29udGFjdF9pbmZvcm1h", 
            "dGlvbhgGIAIoCzIcLmNvbW1vbl8xLkNvbnRhY3RJbmZvcm1hdGlvbhIfChdu", 
            "ZXdfdXNlcl9taWRkbGVfaW5pdGlhbBgHIAEoCSImCg9DbG9uZVVzZXJSZXN1", 
            "bHQSEwoLbmV3X3VzZXJfaWQYASACKAki0wEKB0FkZHJlc3MSDwoHY291bnRy", 
            "eRgBIAIoCRINCgVzdGF0ZRgCIAEoCRIMCgRjaXR5GAMgASgJEgsKA3ppcBgE", 
            "IAEoCRIPCgdhZGRyZXNzGAUgASgJEhEKCWFkZHJlc3NfMhgGIAEoCRIMCgRu", 
            "YW1lGAcgASgJEhYKDmFkZHJlc3Nfc3RhdHVzGAggASgNIkMKDUFkZHJlc3NT", 
            "dGF0dXMSCwoHSU5WQUxJRBAAEgkKBVZBTElEEAESEQoNTk9fVkFMSURBVElP", 
            "ThACEgcKA05FVxADIr0BChJDb250YWN0SW5mb3JtYXRpb24SHgoFZW1haWwY", 
            "ASADKAsyDy5jb21tb25fMS5FbWFpbBIeCgVwaG9uZRgCIAMoCzIPLmNvbW1v", 
            "bl8xLlBob25lEhwKA2ZheBgDIAMoCzIPLmNvbW1vbl8xLlBob25lEhIKCmZp", 
            "cnN0X25hbWUYBCABKAkSEQoJbGFzdF9uYW1lGAUgASgJEiIKB2FkZHJlc3MY", 
            "BiADKAsyES5jb21tb25fMS5BZGRyZXNzIhYKBUVtYWlsEg0KBWVtYWlsGAEg", 
            "AigJIhcKBVBob25lEg4KBm51bWJlchgBIAIoCSIdCg9DdXN0b21lclJlcXVl", 
            "c3QSCgoCaWQYASACKAkikQMKCEN1c3RvbWVyEhYKDmNsZWFyZWRfZmllbGRz", 
            "GAkgAygNEgoKAmlkGAEgASgJEhIKCmxlZ2FsX3R5cGUYAiABKA0SDAoEbmFt", 
            "ZRgDIAEoCRI5ChNjb250YWN0X2luZm9ybWF0aW9uGAQgASgLMhwuY29tbW9u", 
            "XzEuQ29udGFjdEluZm9ybWF0aW9uEhQKDGJyb2tlcmFnZV9pZBgFIAEoCRIP", 
            "CgdyZW1vdmVkGAYgASgIEh0KFWF1dGhlbnRpY2F0aW9uX3N5c3RlbRgHIAEo", 
            "CRIXCgxwcm9maWxlX3R5cGUYCCABKA06ATEiXgoJTGVnYWxUeXBlEg4KCklO", 
            "RElWSURVQUwQARIJCgVKT0lOVBACEgsKB0xJTUlURUQQAxIJCgVUUlVTVBAE", 
            "Eg0KCUNPUlBPUkFURRAFEg8KC1BBUlRORVJTSElQEAYiRQoLUHJvZmlsZVR5", 
            "cGUSDAoIQ1VTVE9NRVIQARIJCgVBRE1JThACEg0KCUJST0tFUkFHRRADEg4K", 
            "ClNVQlNDUklCRVIQBCLiAQoVQ3VzdG9tZXJTZWFyY2hSZXF1ZXN0EgwKBHRl", 
            "eHQYASABKAkSFwoPc2VhcmNoX2NyaXRlcmlhGAIgAygNEi4KDnNlYXJjaF9v", 
            "cHRpb25zGAMgAygLMhYuY29tbW9uXzEuU2VhcmNoT3B0aW9uEh0KDmFsbF9t", 
            "YXRjaF9tb2RlGAQgASgIOgVmYWxzZSJTCg5TZWFyY2hDcml0ZXJpYRIGCgJJ", 
            "RBABEggKBE5BTUUQAhIOCgpGSVJTVF9OQU1FEAMSDQoJTEFTVF9OQU1FEAQS", 
            "EAoMQlJPS0VSQUdFX0lEEAUi0QEKGkN1c3RvbWVyU2VhcmNoUmVzdWx0UmVj", 
            "b3JkEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSFgoOYnJva2VyYWdlX25h", 
            "bWUYAyABKAkSEgoKZmlyc3RfbmFtZRgEIAEoCRIRCglsYXN0X25hbWUYBSAB", 
            "KAkSFAoMYnJva2VyYWdlX2lkGAYgASgJEg8KB3JlbW92ZWQYByABKAgSHQoV", 
            "YXV0aGVudGljYXRpb25fc3lzdGVtGAggASgJEhQKDHByb2ZpbGVfdHlwZRgJ", 
            "IAEoDSI2Cg5DcmVhdGVDdXN0b21lchIkCghjdXN0b21lchgBIAIoCzISLmNv", 
            "bW1vbl8xLkN1c3RvbWVyImUKDlVwZGF0ZUN1c3RvbWVyEiQKCGN1c3RvbWVy", 
            "GAEgAigLMhIuY29tbW9uXzEuQ3VzdG9tZXISLQoRb3JpZ2luYWxfY3VzdG9t", 
            "ZXIYAiABKAsyEi5jb21tb25fMS5DdXN0b21lciIcCg5SZW1vdmVDdXN0b21l", 
            "chIKCgJpZBgBIAIoCSIdCg9SZXN0b3JlQ3VzdG9tZXISCgoCaWQYASABKAki", 
            "IgoUQ3JlYXRlQ3VzdG9tZXJSZXN1bHQSCgoCaWQYASABKAkiFgoUVXBkYXRl", 
            "Q3VzdG9tZXJSZXN1bHQiFgoUUmVtb3ZlQ3VzdG9tZXJSZXN1bHQiFwoVUmVz", 
            "dG9yZUN1c3RvbWVyUmVzdWx0IioKCkNyZWF0ZVVzZXISHAoEdXNlchgBIAIo", 
            "CzIOLmNvbW1vbl8xLlVzZXIiUQoKVXBkYXRlVXNlchIcCgR1c2VyGAEgAigL", 
            "Mg4uY29tbW9uXzEuVXNlchIlCg1vcmlnaW5hbF91c2VyGAIgASgLMg4uY29t", 
            "bW9uXzEuVXNlciIYCgpSZW1vdmVVc2VyEgoKAmlkGAEgAigJIhkKC1Jlc3Rv", 
            "cmVVc2VyEgoKAmlkGAEgAigJIh4KEENyZWF0ZVVzZXJSZXN1bHQSCgoCaWQY", 
            "ASABKAkiEgoQVXBkYXRlVXNlclJlc3VsdCITChFSZXN0b3JlVXNlclJlc3Vs", 
            "dCISChBSZW1vdmVVc2VyUmVzdWx0IjoKEkxpbmtVc2VyVG9DdXN0b21lchIP", 
            "Cgd1c2VyX2lkGAEgAigJEhMKC2N1c3RvbWVyX2lkGAIgAigJIhoKGExpbmtV", 
            "c2VyVG9DdXN0b21lclJlc3VsdCLCAQocUmVzdHJpY3RlZEVudGl0bGVtZW50", 
            "U2VydmljZRIeChZlbnRpdGxlbWVudF9zZXJ2aWNlX2lkGAEgAigNEhUKDWZy", 
            "b21fdXRjX3RpbWUYAiABKBISEwoLdG9fdXRjX3RpbWUYAyABKBISHAoUYmls", 
            "bGluZ19icm9rZXJhZ2VfaWQYBCABKAkSOAoTYXNzaWduZWRfYnJva2VyYWdl", 
            "cxgFIAMoCzIbLmNvbW1vbl8xLkFzc2lnbmVkQnJva2VyYWdlIqUBChxNb2Rp", 
            "ZnlVc2VyRW50aXRsZW1lbnRTZXJ2aWNlEg8KB3VzZXJfaWQYASACKAkSSgoa", 
            "ZW50aXRsZW1lbnRfc2VydmljZV90b19zZXQYAiADKAsyJi5jb21tb25fMS5S", 
            "ZXN0cmljdGVkRW50aXRsZW1lbnRTZXJ2aWNlEigKIGVudGl0bGVtZW50X3Nl", 
            "cnZpY2VfaWRfdG9fcmVtb3ZlGAMgAygNInQKIk1vZGlmeVVzZXJFbnRpdGxl", 
            "bWVudFNlcnZpY2VSZXN1bHQSTgoecmVzdHJpY3RlZF9lbnRpdGxlbWVudF9z", 
            "ZXJ2aWNlGAEgAygLMiYuY29tbW9uXzEuUmVzdHJpY3RlZEVudGl0bGVtZW50", 
            "U2VydmljZSIvChhHZXRVbmlxdWVVc2VybmFtZVJlcXVlc3QSEwoLY3VzdG9t", 
            "ZXJfaWQYASACKAkiKAoUVW5pcXVlVXNlcm5hbWVSZXN1bHQSEAoIdXNlcm5h", 
            "bWUYASABKAkicAoOTG9va3VwUHJvcGVydHkSDAoEdHlwZRgBIAIoDRINCgV2", 
            "YWx1ZRgCIAIoCRIcCgRuYW1lGAMgAigLMg4uY29tbW9uXzEuVGV4dBIjCgtk", 
            "ZXNjcmlwdGlvbhgEIAEoCzIOLmNvbW1vbl8xLlRleHQiMgoZTG9va3VwUHJv", 
            "cGVydHlMaXN0UmVxdWVzdBIVCg1wcm9wZXJ0eV90eXBlGAEgAygNIk0KGExv", 
            "b2t1cFByb3BlcnR5TGlzdFJlc3VsdBIxCg9sb29rdXBfcHJvcGVydHkYASAD", 
            "KAsyGC5jb21tb25fMS5Mb29rdXBQcm9wZXJ0eSLSAQoYU2FsZXNTZXJpZXNT", 
            "ZWFyY2hSZXF1ZXN0EgwKBHRleHQYASABKAkSFwoPc2VhcmNoX2NyaXRlcmlh", 
            "GAIgAygNEi4KDnNlYXJjaF9vcHRpb25zGAMgAygLMhYuY29tbW9uXzEuU2Vh", 
            "cmNoT3B0aW9uEh0KDmFsbF9tYXRjaF9tb2RlGAQgASgIOgVmYWxzZSJACg5T", 
            "ZWFyY2hDcml0ZXJpYRIGCgJJRBABEgoKBk5VTUJFUhACEggKBE5BTUUQAxIQ", 
            "CgxCUk9LRVJBR0VfSUQQBCKvAQodU2FsZXNTZXJpZXNTZWFyY2hSZXN1bHRS", 
            "ZWNvcmQSFwoPc2FsZXNfc2VyaWVzX2lkGAEgASgJEhkKEXNhbGVzX3Nlcmll", 
            "c19uYW1lGAIgASgJEhsKE3NhbGVzX3Nlcmllc19udW1iZXIYAyABKAkSFAoM", 
            "YnJva2VyYWdlX2lkGAQgASgJEhYKDmJyb2tlcmFnZV9uYW1lGAUgASgJEg8K", 
            "B3JlbW92ZWQYBiABKAgiNQoFVHVwbGUSDQoFZmlyc3QYASABKAkSDgoGc2Vj", 
            "b25kGAIgASgJEg0KBXRoaXJkGAMgASgJImgKK0N1c3RvbWVyU2FsZXNTZXJp", 
            "ZXNBdXRob3JpemF0aW9uTGlzdFJlcXVlc3QSEwoLY3VzdG9tZXJfaWQYASAB", 
            "KAkSFwoPc2FsZXNfc2VyaWVzX2lkGAIgASgJEgsKA3RvcBgDIAEoDSKPAQoq", 
            "VXBkYXRlQ3VzdG9tZXJTYWxlc1Nlcmllc0F1dGhvcml6YXRpb25MaXN0EjcK", 
            "DGxpbmtzX3RvX3NldBgBIAMoCzIhLmNvbW1vbl8xLkN1c3RvbWVyU2FsZXNT", 
            "ZXJpZXNMaW5rEigKD2xpbmtzX3RvX3JlbW92ZRgCIAMoCzIPLmNvbW1vbl8x", 
            "LlR1cGxlIo8BCipDdXN0b21lclNhbGVzU2VyaWVzQXV0aG9yaXphdGlvbkxp", 
            "c3RSZXN1bHQSRgobY3VzdG9tZXJfc2FsZXNfc2VyaWVzX2xpbmtzGAEgAygL", 
            "MiEuY29tbW9uXzEuQ3VzdG9tZXJTYWxlc1Nlcmllc0xpbmsSGQoLaXNfY29t", 
            "cGxldGUYAiABKAg6BHRydWUiMgowVXBkYXRlQ3VzdG9tZXJTYWxlc1Nlcmll", 
            "c0F1dGhvcml6YXRpb25MaXN0UmVzdWx0In8KF0N1c3RvbWVyU2FsZXNTZXJp", 
            "ZXNMaW5rEhMKC2N1c3RvbWVyX2lkGAEgASgJEhcKD3NhbGVzX3Nlcmllc19p", 
            "ZBgCIAEoCRIZChFzYWxlc19zZXJpZXNfbmFtZRgDIAEoCRIbChNzYWxlc19z", 
            "ZXJpZXNfbnVtYmVyGAQgASgJIigKFExvZ2luU2V0dGluZ3NSZXF1ZXN0EhAK", 
            "CGxvZ2luX2lkGAEgASgJIkYKE0xvZ2luU2V0dGluZ3NSZXN1bHQSLwoObG9n", 
            "aW5fc2V0dGluZ3MYASABKAsyFy5jb21tb25fMS5Mb2dpblNldHRpbmdzIkYK", 
            "E1VwZGF0ZUxvZ2luU2V0dGluZ3MSLwoObG9naW5fc2V0dGluZ3MYASABKAsy", 
            "Fy5jb21tb25fMS5Mb2dpblNldHRpbmdzIhsKGVVwZGF0ZUxvZ2luU2V0dGlu", 
            "Z3NSZXN1bHQiNAogTG9naW5FeGNoYW5nZU1lbWJlcklkTGlzdFJlcXVlc3QS", 
            "EAoIbG9naW5faWQYASABKAkiXAofTG9naW5FeGNoYW5nZU1lbWJlcklkTGlz", 
            "dFJlc3VsdBI5ChBsb2dpbl9tZW1iZXJfaWRzGAEgAygLMh8uY29tbW9uXzEu", 
            "TG9naW5FeGNoYW5nZU1lbWJlcklkIlIKFUxvZ2luRXhjaGFuZ2VNZW1iZXJJ", 
            "ZBIQCghsb2dpbl9pZBgBIAEoCRIUCgxleGNoYW5nZV9rZXkYAiABKAkSEQoJ", 
            "bWVtYmVyX2lkGAMgASgJIp4BCh9VcGRhdGVMb2dpbkV4Y2hhbmdlTWVtYmVy", 
            "SWRMaXN0EhAKCGxvZ2luX2lkGAEgASgJEjoKEW1lbWJlcl9pZHNfdG9fc2V0", 
            "GAIgAygLMh8uY29tbW9uXzEuTG9naW5FeGNoYW5nZU1lbWJlcklkEi0KFG1l", 
            "bWJlcl9pZHNfdG9fcmVtb3ZlGAMgAygLMg8uY29tbW9uXzEuVHVwbGUiJwol", 
            "VXBkYXRlTG9naW5FeGNoYW5nZU1lbWJlcklkTGlzdFJlc3VsdCIhCg1BY3Rp", 
            "dmF0ZUxvZ2luEhAKCGxvZ2luX2lkGAEgASgJIjwKD0RlYWN0aXZhdGVMb2dp", 
            "bhIQCghsb2dpbl9pZBgBIAEoCRIXCg9leHBpcmF0aW9uX3RpbWUYAiABKBIi", 
            "FQoTQWN0aXZhdGVMb2dpblJlc3VsdCIXChVEZWFjdGl2YXRlTG9naW5SZXN1", 
            "bHQiRQoXRXJhc2VDdXJyZW50Q3JlZGVudGlhbHMSEAoIbG9naW5faWQYASAB", 
            "KAkSGAoQY3JlZGVudGlhbF90eXBlcxgCIAMoDSIfCh1FcmFzZUN1cnJlbnRD", 
            "cmVkZW50aWFsc1Jlc3VsdCKXAQoMU2VhcmNoT3B0aW9uEgwKBHRleHQYASAB", 
            "KAkSEAoIY3JpdGVyaWEYAiADKA0SFQoNbWF0Y2hpbmdfcnVsZRgDIAEoDSJQ", 
            "CgxNYXRjaGluZ1J1bGUSDAoIQ09OVEFJTlMQABIPCgtTVEFSVFNfV0lUSBAB", 
            "Eg0KCUVORFNfV0lUSBACEhIKDkVYQUNUX0VRVUFMSVRZEAMiKQoVVGVybWlu", 
            "YXRlTG9naW5TZXNzaW9uEhAKCGxvZ2luX2lkGAEgASgJIh0KG1Rlcm1pbmF0", 
            "ZUxvZ2luU2Vzc2lvblJlc3VsdCI3CgtOYW1lZEVudGl0eRIKCgJpZBgBIAEo", 
            "CRIcCgRuYW1lGAIgASgLMg4uY29tbW9uXzEuVGV4dCJkChFVcGRhdGVFbnRp", 
            "dHlMaW5rcxIlCgxsaW5rc190b19zZXQYASADKAsyDy5jb21tb25fMS5UdXBs", 
            "ZRIoCg9saW5rc190b19yZW1vdmUYAiADKAsyDy5jb21tb25fMS5UdXBsZSIZ", 
            "ChdVcGRhdGVFbnRpdHlMaW5rc1Jlc3VsdCIyChdMaW5rZWRFbnRpdHlMaXN0", 
            "UmVxdWVzdBIKCgJpZBgBIAEoCRILCgN0b3AYAiABKA0iXAoWTGlua2VkRW50", 
            "aXR5TGlzdFJlc3VsdBInCghlbnRpdGllcxgBIAMoCzIVLmNvbW1vbl8xLk5h", 
            "bWVkRW50aXR5EhkKC2lzX2NvbXBsZXRlGAIgASgIOgR0cnVlIl8KFVNhbGVz", 
            "U2VyaWVzTGlzdFJlc3VsdBIrCgxzYWxlc19zZXJpZXMYASADKAsyFS5jb21t", 
            "b25fMS5TYWxlc1NlcmllcxIZCgtpc19jb21wbGV0ZRgCIAEoCDoEdHJ1ZSJR", 
            "CgtTYWxlc1NlcmllcxIKCgJpZBgBIAEoCRIZChFzYWxlc19zZXJpZXNfbmFt", 
            "ZRgCIAEoCRIbChNzYWxlc19zZXJpZXNfbnVtYmVyGAMgASgJKisKD09wZXJh", 
            "dGlvblN0YXR1cxILCgdTVUNDRVNTEAESCwoHRkFJTFVSRRACKkMKC0xvZ2lu", 
            "RG9tYWluEhUKEUNRR19UUkFERV9ST1VUSU5HEAISDgoKQ1FHX1NZU1RFTRAD", 
            "Eg0KCUNRR19BRE1JThAEKlwKGENvbW1vbkxvb2t1cFByb3BlcnR5VHlwZRIa", 
            "ChVBVVRIRU5USUNBVElPTl9TWVNURU0QyQESFQoQQ09OTkVDVElPTl9QT0lO", 
            "VBDKARINCghFWENIQU5HRRDLASp4ChpBdXRoU2VydmVyU3BlY2lhbE9wZXJh", 
            "dGlvbhIQCgxTRVRfUEFTU1dPUkQQARIXChNTRVRVUF9TRUNPTkRfRkFDVE9S", 
            "EAISGwoXQ0hBTkdFX0VYUElSRURfUEFTU1dPUkQQAxISCg5TSUdOX0FHUkVF", 
            "TUVOVBAEKjgKDkNyZWRlbnRpYWxUeXBlEhMKD1NUQVRJQ19QQVNTV09SRBAB", 
            "EhEKDVNFQ09ORF9GQUNUT1IQAio8CgpFbnRpdHlUeXBlEgsKB0FDQ09VTlQQ", 
            "ARIJCgVPUkRFUhACEggKBFVTRVIQAxIMCghDVVNUT01FUhAEKpECCg9Mb2dv", 
            "blJlc3VsdENvZGUSEQoNTE9HT05fU1VDQ0VTUxAAEhEKDUxPR09OX0ZBSUxV", 
            "UkUQZRIXChNOT19PTkVUSU1FX1BBU1NXT1JEEGcSFAoQUEFTU1dPUkRfRVhQ", 
            "SVJFRBBoEhEKDVJPVVRJTkVfRVJST1IQaRIUChBXUk9OR19QQVJBTUVURVJT", 
            "EGoSFQoRVVNFUl9BVVRPX0xPQ0tPVVQQaxIXChNVU0VSX01BTlVBTF9MT0NL", 
            "T1VUEGwSHwobU0VDT05EX0ZBQ1RPUl9JTklUX1JFUVVJUkVEEG0SFwoTSU5D", 
            "T01QQVRJQkxFX0NMSUVOVBBuEhYKElVOU0lHTkVEX0FHUkVFTUVOVBBvKjgK", 
            "D0FkbWluTG9naW5TY29wZRIHCgNDUUcQARINCglCUk9LRVJBR0UQAhINCglT", 
            "QUxFU19SRVAQAyp4ChBBdXRoQWN0aXZpdHlUeXBlEgkKBUxPR0lOEAESEwoP", 
            "UEFTU1dPUkRfQ0hBTkdFEAISEQoNQ0xFQVJfTE9DS09VVBADEg4KCkNIQU5H", 
          "RV8yRkEQBBINCglFUkFTRV8yRkEQBRISCg5FUkFTRV9QQVNTV09SRBAG"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_common_1_Text__Descriptor = Descriptor.MessageTypes[0];
        internal__static_common_1_Text__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Text, global::CmsApiSamples.Protocol.CMSApi.Text.Builder>(internal__static_common_1_Text__Descriptor,
                new string[] { "Key", "Text_", "Format", "Param", });
        internal__static_common_1_UserMessage__Descriptor = Descriptor.MessageTypes[1];
        internal__static_common_1_UserMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UserMessage, global::CmsApiSamples.Protocol.CMSApi.UserMessage.Builder>(internal__static_common_1_UserMessage__Descriptor,
                new string[] { "MessageType", "Source", "Subject", "Text", "ExpirationUtcTime", });
        internal__static_common_1_Logon__Descriptor = Descriptor.MessageTypes[2];
        internal__static_common_1_Logon__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Logon, global::CmsApiSamples.Protocol.CMSApi.Logon.Builder>(internal__static_common_1_Logon__Descriptor,
                new string[] { "ProtocolVersionMinor", "ProtocolVersionMajor", "UserName", "Password", "ClientAppId", "ClientVersion", "SessionSettings", "DropConcurrentSession", "PrivateLabel", });
        internal__static_common_1_RestoreOrJoinSession__Descriptor = Descriptor.MessageTypes[3];
        internal__static_common_1_RestoreOrJoinSession__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSession, global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSession.Builder>(internal__static_common_1_RestoreOrJoinSession__Descriptor,
                new string[] { "SessionToken", "ClientAppId", "ClientIpAddress", });
        internal__static_common_1_Logoff__Descriptor = Descriptor.MessageTypes[4];
        internal__static_common_1_Logoff__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Logoff, global::CmsApiSamples.Protocol.CMSApi.Logoff.Builder>(internal__static_common_1_Logoff__Descriptor,
                new string[] { });
        internal__static_common_1_ObtainDemoAccess__Descriptor = Descriptor.MessageTypes[5];
        internal__static_common_1_ObtainDemoAccess__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccess, global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccess.Builder>(internal__static_common_1_ObtainDemoAccess__Descriptor,
                new string[] { "Id", "ClientAppId", "PrivateLabel", "FirstName", "LastName", "Email", "Phone", "EmailBcc", "Source", });
        internal__static_common_1_Credentials__Descriptor = Descriptor.MessageTypes[6];
        internal__static_common_1_Credentials__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Credentials, global::CmsApiSamples.Protocol.CMSApi.Credentials.Builder>(internal__static_common_1_Credentials__Descriptor,
                new string[] { "UserName", "Password", });
        internal__static_common_1_ObtainDemoAccessResult__Descriptor = Descriptor.MessageTypes[7];
        internal__static_common_1_ObtainDemoAccessResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccessResult, global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccessResult.Builder>(internal__static_common_1_ObtainDemoAccessResult__Descriptor,
                new string[] { "RequestId", "Credentials", "ExpirationUtcTime", "OperationStatus", "ErrorMessage", });
        internal__static_common_1_LogonResult__Descriptor = Descriptor.MessageTypes[8];
        internal__static_common_1_LogonResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LogonResult, global::CmsApiSamples.Protocol.CMSApi.LogonResult.Builder>(internal__static_common_1_LogonResult__Descriptor,
                new string[] { "ProtocolVersionMinor", "ProtocolVersionMajor", "OperationStatus", "ErrorMessage", "SessionToken", });
        internal__static_common_1_RestoreOrJoinSessionResult__Descriptor = Descriptor.MessageTypes[9];
        internal__static_common_1_RestoreOrJoinSessionResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSessionResult, global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSessionResult.Builder>(internal__static_common_1_RestoreOrJoinSessionResult__Descriptor,
                new string[] { "OperationStatus", "ErrorMessage", });
        internal__static_common_1_LoggedOff__Descriptor = Descriptor.MessageTypes[10];
        internal__static_common_1_LoggedOff__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoggedOff, global::CmsApiSamples.Protocol.CMSApi.LoggedOff.Builder>(internal__static_common_1_LoggedOff__Descriptor,
                new string[] { "Reason", });
        internal__static_common_1_UserEntitlementServiceRequest__Descriptor = Descriptor.MessageTypes[11];
        internal__static_common_1_UserEntitlementServiceRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UserEntitlementServiceRequest, global::CmsApiSamples.Protocol.CMSApi.UserEntitlementServiceRequest.Builder>(internal__static_common_1_UserEntitlementServiceRequest__Descriptor,
                new string[] { "UserId", });
        internal__static_common_1_EntitlementCategoryListRequest__Descriptor = Descriptor.MessageTypes[12];
        internal__static_common_1_EntitlementCategoryListRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementCategoryListRequest, global::CmsApiSamples.Protocol.CMSApi.EntitlementCategoryListRequest.Builder>(internal__static_common_1_EntitlementCategoryListRequest__Descriptor,
                new string[] { });
        internal__static_common_1_EntitlementServiceRequest__Descriptor = Descriptor.MessageTypes[13];
        internal__static_common_1_EntitlementServiceRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceRequest, global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceRequest.Builder>(internal__static_common_1_EntitlementServiceRequest__Descriptor,
                new string[] { "EntitlementServiceId", });
        internal__static_common_1_EntitlementServiceListRequest__Descriptor = Descriptor.MessageTypes[14];
        internal__static_common_1_EntitlementServiceListRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceListRequest, global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceListRequest.Builder>(internal__static_common_1_EntitlementServiceListRequest__Descriptor,
                new string[] { "BrokerageId", });
        internal__static_common_1_EntitlementService__Descriptor = Descriptor.MessageTypes[15];
        internal__static_common_1_EntitlementService__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementService, global::CmsApiSamples.Protocol.CMSApi.EntitlementService.Builder>(internal__static_common_1_EntitlementService__Descriptor,
                new string[] { "Id", "Name", "CategoryId", "Price", "Description", "AuthorizationType", "Constraint", "AgreementRequired", "Agreement", "SubscriberType", "BillingBrokerageRequired", "LoginDomains", "Options", "Items", "BrokerageAssignable", "BrokerageAuthorizationRequired", });
        internal__static_common_1_EntitlementServiceItem__Descriptor = Descriptor.MessageTypes[16];
        internal__static_common_1_EntitlementServiceItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem, global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem.Builder>(internal__static_common_1_EntitlementServiceItem__Descriptor,
                new string[] { "Id", "Type", "Name", });
        internal__static_common_1_EntitlementServiceItemType__Descriptor = Descriptor.MessageTypes[17];
        internal__static_common_1_EntitlementServiceItemType__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType, global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType.Builder>(internal__static_common_1_EntitlementServiceItemType__Descriptor,
                new string[] { "Id", "Name", "Description", });
        internal__static_common_1_Price__Descriptor = Descriptor.MessageTypes[18];
        internal__static_common_1_Price__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Price, global::CmsApiSamples.Protocol.CMSApi.Price.Builder>(internal__static_common_1_Price__Descriptor,
                new string[] { "Currency", "Value", });
        internal__static_common_1_EntitlementCategory__Descriptor = Descriptor.MessageTypes[19];
        internal__static_common_1_EntitlementCategory__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory, global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory.Builder>(internal__static_common_1_EntitlementCategory__Descriptor,
                new string[] { "Id", "Name", "SubCategory", "BrokerageAssignable", });
        internal__static_common_1_EntitlementConstraint__Descriptor = Descriptor.MessageTypes[20];
        internal__static_common_1_EntitlementConstraint__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint, global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint.Builder>(internal__static_common_1_EntitlementConstraint__Descriptor,
                new string[] { "ConstraintType", "RefServiceId", "ConstraintGroup", });
        internal__static_common_1_UserInfoRequest__Descriptor = Descriptor.MessageTypes[21];
        internal__static_common_1_UserInfoRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UserInfoRequest, global::CmsApiSamples.Protocol.CMSApi.UserInfoRequest.Builder>(internal__static_common_1_UserInfoRequest__Descriptor,
                new string[] { "UserId", });
        internal__static_common_1_User__Descriptor = Descriptor.MessageTypes[22];
        internal__static_common_1_User__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.User, global::CmsApiSamples.Protocol.CMSApi.User.Builder>(internal__static_common_1_User__Descriptor,
                new string[] { "Id", "UserName", "FirstName", "LastName", "Email", "CustomerId", "SubscriberType", "RemovalDate", "SystemId", "TraderId", "EnforcedConstraintGroup", "Currency", "Domain", "Removed", "Class", "IsTemporary", "IsActive", "ExpirationTime", "CastUserId", "Scope", });
        internal__static_common_1_LoginSettings__Descriptor = Descriptor.MessageTypes[23];
        internal__static_common_1_LoginSettings__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoginSettings, global::CmsApiSamples.Protocol.CMSApi.LoginSettings.Builder>(internal__static_common_1_LoginSettings__Descriptor,
                new string[] { "ClearedFields", "LoginId", "PreferredConnectionPointId", "ConcurrentSessionsNumber", "PasswordNeverExpires", "IsStrategyRunner", "PreferredConnectionPointName", "LinkedLoginId", });
        internal__static_common_1_UserEntitlementService__Descriptor = Descriptor.MessageTypes[24];
        internal__static_common_1_UserEntitlementService__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UserEntitlementService, global::CmsApiSamples.Protocol.CMSApi.UserEntitlementService.Builder>(internal__static_common_1_UserEntitlementService__Descriptor,
                new string[] { "UserId", "EntitlementServiceId", "FromUtcTime", "ToUtcTime", "BillingBrokerageId", "AssignedBrokerages", });
        internal__static_common_1_AssignedBrokerage__Descriptor = Descriptor.MessageTypes[25];
        internal__static_common_1_AssignedBrokerage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage, global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage.Builder>(internal__static_common_1_AssignedBrokerage__Descriptor,
                new string[] { "BrokerageId", "WaiveBaseCharge", });
        internal__static_common_1_UserSearchRequest__Descriptor = Descriptor.MessageTypes[26];
        internal__static_common_1_UserSearchRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UserSearchRequest, global::CmsApiSamples.Protocol.CMSApi.UserSearchRequest.Builder>(internal__static_common_1_UserSearchRequest__Descriptor,
                new string[] { "Text", "SearchCriteria", "SearchOptions", "AllMatchMode", });
        internal__static_common_1_UserSearchResultRecord__Descriptor = Descriptor.MessageTypes[27];
        internal__static_common_1_UserSearchResultRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UserSearchResultRecord, global::CmsApiSamples.Protocol.CMSApi.UserSearchResultRecord.Builder>(internal__static_common_1_UserSearchResultRecord__Descriptor,
                new string[] { "UserId", "UserName", "FirstName", "LastName", "CustomerId", "CustomerName", "CustomerBrokerageName", "Removed", "Class", "IsTemporary", });
        internal__static_common_1_CloneUser__Descriptor = Descriptor.MessageTypes[28];
        internal__static_common_1_CloneUser__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CloneUser, global::CmsApiSamples.Protocol.CMSApi.CloneUser.Builder>(internal__static_common_1_CloneUser__Descriptor,
                new string[] { "SourceUserId", "NewUserUsername", "NewUserFirstName", "NewUserLastName", "NewUserAddress", "NewUserContactInformation", "NewUserMiddleInitial", });
        internal__static_common_1_CloneUserResult__Descriptor = Descriptor.MessageTypes[29];
        internal__static_common_1_CloneUserResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CloneUserResult, global::CmsApiSamples.Protocol.CMSApi.CloneUserResult.Builder>(internal__static_common_1_CloneUserResult__Descriptor,
                new string[] { "NewUserId", });
        internal__static_common_1_Address__Descriptor = Descriptor.MessageTypes[30];
        internal__static_common_1_Address__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Address, global::CmsApiSamples.Protocol.CMSApi.Address.Builder>(internal__static_common_1_Address__Descriptor,
                new string[] { "Country", "State", "City", "Zip", "Address_", "Address2", "Name", "AddressStatus", });
        internal__static_common_1_ContactInformation__Descriptor = Descriptor.MessageTypes[31];
        internal__static_common_1_ContactInformation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ContactInformation, global::CmsApiSamples.Protocol.CMSApi.ContactInformation.Builder>(internal__static_common_1_ContactInformation__Descriptor,
                new string[] { "Email", "Phone", "Fax", "FirstName", "LastName", "Address", });
        internal__static_common_1_Email__Descriptor = Descriptor.MessageTypes[32];
        internal__static_common_1_Email__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Email, global::CmsApiSamples.Protocol.CMSApi.Email.Builder>(internal__static_common_1_Email__Descriptor,
                new string[] { "Email_", });
        internal__static_common_1_Phone__Descriptor = Descriptor.MessageTypes[33];
        internal__static_common_1_Phone__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Phone, global::CmsApiSamples.Protocol.CMSApi.Phone.Builder>(internal__static_common_1_Phone__Descriptor,
                new string[] { "Number", });
        internal__static_common_1_CustomerRequest__Descriptor = Descriptor.MessageTypes[34];
        internal__static_common_1_CustomerRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CustomerRequest, global::CmsApiSamples.Protocol.CMSApi.CustomerRequest.Builder>(internal__static_common_1_CustomerRequest__Descriptor,
                new string[] { "Id", });
        internal__static_common_1_Customer__Descriptor = Descriptor.MessageTypes[35];
        internal__static_common_1_Customer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Customer, global::CmsApiSamples.Protocol.CMSApi.Customer.Builder>(internal__static_common_1_Customer__Descriptor,
                new string[] { "ClearedFields", "Id", "LegalType", "Name", "ContactInformation", "BrokerageId", "Removed", "AuthenticationSystem", "ProfileType", });
        internal__static_common_1_CustomerSearchRequest__Descriptor = Descriptor.MessageTypes[36];
        internal__static_common_1_CustomerSearchRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CustomerSearchRequest, global::CmsApiSamples.Protocol.CMSApi.CustomerSearchRequest.Builder>(internal__static_common_1_CustomerSearchRequest__Descriptor,
                new string[] { "Text", "SearchCriteria", "SearchOptions", "AllMatchMode", });
        internal__static_common_1_CustomerSearchResultRecord__Descriptor = Descriptor.MessageTypes[37];
        internal__static_common_1_CustomerSearchResultRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CustomerSearchResultRecord, global::CmsApiSamples.Protocol.CMSApi.CustomerSearchResultRecord.Builder>(internal__static_common_1_CustomerSearchResultRecord__Descriptor,
                new string[] { "Id", "Name", "BrokerageName", "FirstName", "LastName", "BrokerageId", "Removed", "AuthenticationSystem", "ProfileType", });
        internal__static_common_1_CreateCustomer__Descriptor = Descriptor.MessageTypes[38];
        internal__static_common_1_CreateCustomer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateCustomer, global::CmsApiSamples.Protocol.CMSApi.CreateCustomer.Builder>(internal__static_common_1_CreateCustomer__Descriptor,
                new string[] { "Customer", });
        internal__static_common_1_UpdateCustomer__Descriptor = Descriptor.MessageTypes[39];
        internal__static_common_1_UpdateCustomer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateCustomer, global::CmsApiSamples.Protocol.CMSApi.UpdateCustomer.Builder>(internal__static_common_1_UpdateCustomer__Descriptor,
                new string[] { "Customer", "OriginalCustomer", });
        internal__static_common_1_RemoveCustomer__Descriptor = Descriptor.MessageTypes[40];
        internal__static_common_1_RemoveCustomer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RemoveCustomer, global::CmsApiSamples.Protocol.CMSApi.RemoveCustomer.Builder>(internal__static_common_1_RemoveCustomer__Descriptor,
                new string[] { "Id", });
        internal__static_common_1_RestoreCustomer__Descriptor = Descriptor.MessageTypes[41];
        internal__static_common_1_RestoreCustomer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreCustomer, global::CmsApiSamples.Protocol.CMSApi.RestoreCustomer.Builder>(internal__static_common_1_RestoreCustomer__Descriptor,
                new string[] { "Id", });
        internal__static_common_1_CreateCustomerResult__Descriptor = Descriptor.MessageTypes[42];
        internal__static_common_1_CreateCustomerResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateCustomerResult, global::CmsApiSamples.Protocol.CMSApi.CreateCustomerResult.Builder>(internal__static_common_1_CreateCustomerResult__Descriptor,
                new string[] { "Id", });
        internal__static_common_1_UpdateCustomerResult__Descriptor = Descriptor.MessageTypes[43];
        internal__static_common_1_UpdateCustomerResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerResult, global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerResult.Builder>(internal__static_common_1_UpdateCustomerResult__Descriptor,
                new string[] { });
        internal__static_common_1_RemoveCustomerResult__Descriptor = Descriptor.MessageTypes[44];
        internal__static_common_1_RemoveCustomerResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RemoveCustomerResult, global::CmsApiSamples.Protocol.CMSApi.RemoveCustomerResult.Builder>(internal__static_common_1_RemoveCustomerResult__Descriptor,
                new string[] { });
        internal__static_common_1_RestoreCustomerResult__Descriptor = Descriptor.MessageTypes[45];
        internal__static_common_1_RestoreCustomerResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreCustomerResult, global::CmsApiSamples.Protocol.CMSApi.RestoreCustomerResult.Builder>(internal__static_common_1_RestoreCustomerResult__Descriptor,
                new string[] { });
        internal__static_common_1_CreateUser__Descriptor = Descriptor.MessageTypes[46];
        internal__static_common_1_CreateUser__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateUser, global::CmsApiSamples.Protocol.CMSApi.CreateUser.Builder>(internal__static_common_1_CreateUser__Descriptor,
                new string[] { "User", });
        internal__static_common_1_UpdateUser__Descriptor = Descriptor.MessageTypes[47];
        internal__static_common_1_UpdateUser__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateUser, global::CmsApiSamples.Protocol.CMSApi.UpdateUser.Builder>(internal__static_common_1_UpdateUser__Descriptor,
                new string[] { "User", "OriginalUser", });
        internal__static_common_1_RemoveUser__Descriptor = Descriptor.MessageTypes[48];
        internal__static_common_1_RemoveUser__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RemoveUser, global::CmsApiSamples.Protocol.CMSApi.RemoveUser.Builder>(internal__static_common_1_RemoveUser__Descriptor,
                new string[] { "Id", });
        internal__static_common_1_RestoreUser__Descriptor = Descriptor.MessageTypes[49];
        internal__static_common_1_RestoreUser__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreUser, global::CmsApiSamples.Protocol.CMSApi.RestoreUser.Builder>(internal__static_common_1_RestoreUser__Descriptor,
                new string[] { "Id", });
        internal__static_common_1_CreateUserResult__Descriptor = Descriptor.MessageTypes[50];
        internal__static_common_1_CreateUserResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateUserResult, global::CmsApiSamples.Protocol.CMSApi.CreateUserResult.Builder>(internal__static_common_1_CreateUserResult__Descriptor,
                new string[] { "Id", });
        internal__static_common_1_UpdateUserResult__Descriptor = Descriptor.MessageTypes[51];
        internal__static_common_1_UpdateUserResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateUserResult, global::CmsApiSamples.Protocol.CMSApi.UpdateUserResult.Builder>(internal__static_common_1_UpdateUserResult__Descriptor,
                new string[] { });
        internal__static_common_1_RestoreUserResult__Descriptor = Descriptor.MessageTypes[52];
        internal__static_common_1_RestoreUserResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreUserResult, global::CmsApiSamples.Protocol.CMSApi.RestoreUserResult.Builder>(internal__static_common_1_RestoreUserResult__Descriptor,
                new string[] { });
        internal__static_common_1_RemoveUserResult__Descriptor = Descriptor.MessageTypes[53];
        internal__static_common_1_RemoveUserResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RemoveUserResult, global::CmsApiSamples.Protocol.CMSApi.RemoveUserResult.Builder>(internal__static_common_1_RemoveUserResult__Descriptor,
                new string[] { });
        internal__static_common_1_LinkUserToCustomer__Descriptor = Descriptor.MessageTypes[54];
        internal__static_common_1_LinkUserToCustomer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomer, global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomer.Builder>(internal__static_common_1_LinkUserToCustomer__Descriptor,
                new string[] { "UserId", "CustomerId", });
        internal__static_common_1_LinkUserToCustomerResult__Descriptor = Descriptor.MessageTypes[55];
        internal__static_common_1_LinkUserToCustomerResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomerResult, global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomerResult.Builder>(internal__static_common_1_LinkUserToCustomerResult__Descriptor,
                new string[] { });
        internal__static_common_1_RestrictedEntitlementService__Descriptor = Descriptor.MessageTypes[56];
        internal__static_common_1_RestrictedEntitlementService__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService, global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService.Builder>(internal__static_common_1_RestrictedEntitlementService__Descriptor,
                new string[] { "EntitlementServiceId", "FromUtcTime", "ToUtcTime", "BillingBrokerageId", "AssignedBrokerages", });
        internal__static_common_1_ModifyUserEntitlementService__Descriptor = Descriptor.MessageTypes[57];
        internal__static_common_1_ModifyUserEntitlementService__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementService, global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementService.Builder>(internal__static_common_1_ModifyUserEntitlementService__Descriptor,
                new string[] { "UserId", "EntitlementServiceToSet", "EntitlementServiceIdToRemove", });
        internal__static_common_1_ModifyUserEntitlementServiceResult__Descriptor = Descriptor.MessageTypes[58];
        internal__static_common_1_ModifyUserEntitlementServiceResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementServiceResult, global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementServiceResult.Builder>(internal__static_common_1_ModifyUserEntitlementServiceResult__Descriptor,
                new string[] { "RestrictedEntitlementService", });
        internal__static_common_1_GetUniqueUsernameRequest__Descriptor = Descriptor.MessageTypes[59];
        internal__static_common_1_GetUniqueUsernameRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.GetUniqueUsernameRequest, global::CmsApiSamples.Protocol.CMSApi.GetUniqueUsernameRequest.Builder>(internal__static_common_1_GetUniqueUsernameRequest__Descriptor,
                new string[] { "CustomerId", });
        internal__static_common_1_UniqueUsernameResult__Descriptor = Descriptor.MessageTypes[60];
        internal__static_common_1_UniqueUsernameResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UniqueUsernameResult, global::CmsApiSamples.Protocol.CMSApi.UniqueUsernameResult.Builder>(internal__static_common_1_UniqueUsernameResult__Descriptor,
                new string[] { "Username", });
        internal__static_common_1_LookupProperty__Descriptor = Descriptor.MessageTypes[61];
        internal__static_common_1_LookupProperty__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LookupProperty, global::CmsApiSamples.Protocol.CMSApi.LookupProperty.Builder>(internal__static_common_1_LookupProperty__Descriptor,
                new string[] { "Type", "Value", "Name", "Description", });
        internal__static_common_1_LookupPropertyListRequest__Descriptor = Descriptor.MessageTypes[62];
        internal__static_common_1_LookupPropertyListRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest, global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest.Builder>(internal__static_common_1_LookupPropertyListRequest__Descriptor,
                new string[] { "PropertyType", });
        internal__static_common_1_LookupPropertyListResult__Descriptor = Descriptor.MessageTypes[63];
        internal__static_common_1_LookupPropertyListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult, global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult.Builder>(internal__static_common_1_LookupPropertyListResult__Descriptor,
                new string[] { "LookupProperty", });
        internal__static_common_1_SalesSeriesSearchRequest__Descriptor = Descriptor.MessageTypes[64];
        internal__static_common_1_SalesSeriesSearchRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchRequest, global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchRequest.Builder>(internal__static_common_1_SalesSeriesSearchRequest__Descriptor,
                new string[] { "Text", "SearchCriteria", "SearchOptions", "AllMatchMode", });
        internal__static_common_1_SalesSeriesSearchResultRecord__Descriptor = Descriptor.MessageTypes[65];
        internal__static_common_1_SalesSeriesSearchResultRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchResultRecord, global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchResultRecord.Builder>(internal__static_common_1_SalesSeriesSearchResultRecord__Descriptor,
                new string[] { "SalesSeriesId", "SalesSeriesName", "SalesSeriesNumber", "BrokerageId", "BrokerageName", "Removed", });
        internal__static_common_1_Tuple__Descriptor = Descriptor.MessageTypes[66];
        internal__static_common_1_Tuple__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Tuple, global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder>(internal__static_common_1_Tuple__Descriptor,
                new string[] { "First", "Second", "Third", });
        internal__static_common_1_CustomerSalesSeriesAuthorizationListRequest__Descriptor = Descriptor.MessageTypes[67];
        internal__static_common_1_CustomerSalesSeriesAuthorizationListRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListRequest, global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListRequest.Builder>(internal__static_common_1_CustomerSalesSeriesAuthorizationListRequest__Descriptor,
                new string[] { "CustomerId", "SalesSeriesId", "Top", });
        internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationList__Descriptor = Descriptor.MessageTypes[68];
        internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationList__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationList, global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationList.Builder>(internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationList__Descriptor,
                new string[] { "LinksToSet", "LinksToRemove", });
        internal__static_common_1_CustomerSalesSeriesAuthorizationListResult__Descriptor = Descriptor.MessageTypes[69];
        internal__static_common_1_CustomerSalesSeriesAuthorizationListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListResult, global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListResult.Builder>(internal__static_common_1_CustomerSalesSeriesAuthorizationListResult__Descriptor,
                new string[] { "CustomerSalesSeriesLinks", "IsComplete", });
        internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationListResult__Descriptor = Descriptor.MessageTypes[70];
        internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationListResult, global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationListResult.Builder>(internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationListResult__Descriptor,
                new string[] { });
        internal__static_common_1_CustomerSalesSeriesLink__Descriptor = Descriptor.MessageTypes[71];
        internal__static_common_1_CustomerSalesSeriesLink__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink, global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink.Builder>(internal__static_common_1_CustomerSalesSeriesLink__Descriptor,
                new string[] { "CustomerId", "SalesSeriesId", "SalesSeriesName", "SalesSeriesNumber", });
        internal__static_common_1_LoginSettingsRequest__Descriptor = Descriptor.MessageTypes[72];
        internal__static_common_1_LoginSettingsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoginSettingsRequest, global::CmsApiSamples.Protocol.CMSApi.LoginSettingsRequest.Builder>(internal__static_common_1_LoginSettingsRequest__Descriptor,
                new string[] { "LoginId", });
        internal__static_common_1_LoginSettingsResult__Descriptor = Descriptor.MessageTypes[73];
        internal__static_common_1_LoginSettingsResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoginSettingsResult, global::CmsApiSamples.Protocol.CMSApi.LoginSettingsResult.Builder>(internal__static_common_1_LoginSettingsResult__Descriptor,
                new string[] { "LoginSettings", });
        internal__static_common_1_UpdateLoginSettings__Descriptor = Descriptor.MessageTypes[74];
        internal__static_common_1_UpdateLoginSettings__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettings, global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettings.Builder>(internal__static_common_1_UpdateLoginSettings__Descriptor,
                new string[] { "LoginSettings", });
        internal__static_common_1_UpdateLoginSettingsResult__Descriptor = Descriptor.MessageTypes[75];
        internal__static_common_1_UpdateLoginSettingsResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettingsResult, global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettingsResult.Builder>(internal__static_common_1_UpdateLoginSettingsResult__Descriptor,
                new string[] { });
        internal__static_common_1_LoginExchangeMemberIdListRequest__Descriptor = Descriptor.MessageTypes[76];
        internal__static_common_1_LoginExchangeMemberIdListRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListRequest, global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListRequest.Builder>(internal__static_common_1_LoginExchangeMemberIdListRequest__Descriptor,
                new string[] { "LoginId", });
        internal__static_common_1_LoginExchangeMemberIdListResult__Descriptor = Descriptor.MessageTypes[77];
        internal__static_common_1_LoginExchangeMemberIdListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListResult, global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListResult.Builder>(internal__static_common_1_LoginExchangeMemberIdListResult__Descriptor,
                new string[] { "LoginMemberIds", });
        internal__static_common_1_LoginExchangeMemberId__Descriptor = Descriptor.MessageTypes[78];
        internal__static_common_1_LoginExchangeMemberId__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId, global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId.Builder>(internal__static_common_1_LoginExchangeMemberId__Descriptor,
                new string[] { "LoginId", "ExchangeKey", "MemberId", });
        internal__static_common_1_UpdateLoginExchangeMemberIdList__Descriptor = Descriptor.MessageTypes[79];
        internal__static_common_1_UpdateLoginExchangeMemberIdList__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdList, global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdList.Builder>(internal__static_common_1_UpdateLoginExchangeMemberIdList__Descriptor,
                new string[] { "LoginId", "MemberIdsToSet", "MemberIdsToRemove", });
        internal__static_common_1_UpdateLoginExchangeMemberIdListResult__Descriptor = Descriptor.MessageTypes[80];
        internal__static_common_1_UpdateLoginExchangeMemberIdListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdListResult, global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdListResult.Builder>(internal__static_common_1_UpdateLoginExchangeMemberIdListResult__Descriptor,
                new string[] { });
        internal__static_common_1_ActivateLogin__Descriptor = Descriptor.MessageTypes[81];
        internal__static_common_1_ActivateLogin__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ActivateLogin, global::CmsApiSamples.Protocol.CMSApi.ActivateLogin.Builder>(internal__static_common_1_ActivateLogin__Descriptor,
                new string[] { "LoginId", });
        internal__static_common_1_DeactivateLogin__Descriptor = Descriptor.MessageTypes[82];
        internal__static_common_1_DeactivateLogin__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.DeactivateLogin, global::CmsApiSamples.Protocol.CMSApi.DeactivateLogin.Builder>(internal__static_common_1_DeactivateLogin__Descriptor,
                new string[] { "LoginId", "ExpirationTime", });
        internal__static_common_1_ActivateLoginResult__Descriptor = Descriptor.MessageTypes[83];
        internal__static_common_1_ActivateLoginResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ActivateLoginResult, global::CmsApiSamples.Protocol.CMSApi.ActivateLoginResult.Builder>(internal__static_common_1_ActivateLoginResult__Descriptor,
                new string[] { });
        internal__static_common_1_DeactivateLoginResult__Descriptor = Descriptor.MessageTypes[84];
        internal__static_common_1_DeactivateLoginResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.DeactivateLoginResult, global::CmsApiSamples.Protocol.CMSApi.DeactivateLoginResult.Builder>(internal__static_common_1_DeactivateLoginResult__Descriptor,
                new string[] { });
        internal__static_common_1_EraseCurrentCredentials__Descriptor = Descriptor.MessageTypes[85];
        internal__static_common_1_EraseCurrentCredentials__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentials, global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentials.Builder>(internal__static_common_1_EraseCurrentCredentials__Descriptor,
                new string[] { "LoginId", "CredentialTypes", });
        internal__static_common_1_EraseCurrentCredentialsResult__Descriptor = Descriptor.MessageTypes[86];
        internal__static_common_1_EraseCurrentCredentialsResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentialsResult, global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentialsResult.Builder>(internal__static_common_1_EraseCurrentCredentialsResult__Descriptor,
                new string[] { });
        internal__static_common_1_SearchOption__Descriptor = Descriptor.MessageTypes[87];
        internal__static_common_1_SearchOption__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SearchOption, global::CmsApiSamples.Protocol.CMSApi.SearchOption.Builder>(internal__static_common_1_SearchOption__Descriptor,
                new string[] { "Text", "Criteria", "MatchingRule", });
        internal__static_common_1_TerminateLoginSession__Descriptor = Descriptor.MessageTypes[88];
        internal__static_common_1_TerminateLoginSession__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSession, global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSession.Builder>(internal__static_common_1_TerminateLoginSession__Descriptor,
                new string[] { "LoginId", });
        internal__static_common_1_TerminateLoginSessionResult__Descriptor = Descriptor.MessageTypes[89];
        internal__static_common_1_TerminateLoginSessionResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSessionResult, global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSessionResult.Builder>(internal__static_common_1_TerminateLoginSessionResult__Descriptor,
                new string[] { });
        internal__static_common_1_NamedEntity__Descriptor = Descriptor.MessageTypes[90];
        internal__static_common_1_NamedEntity__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.NamedEntity, global::CmsApiSamples.Protocol.CMSApi.NamedEntity.Builder>(internal__static_common_1_NamedEntity__Descriptor,
                new string[] { "Id", "Name", });
        internal__static_common_1_UpdateEntityLinks__Descriptor = Descriptor.MessageTypes[91];
        internal__static_common_1_UpdateEntityLinks__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinks, global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinks.Builder>(internal__static_common_1_UpdateEntityLinks__Descriptor,
                new string[] { "LinksToSet", "LinksToRemove", });
        internal__static_common_1_UpdateEntityLinksResult__Descriptor = Descriptor.MessageTypes[92];
        internal__static_common_1_UpdateEntityLinksResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinksResult, global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinksResult.Builder>(internal__static_common_1_UpdateEntityLinksResult__Descriptor,
                new string[] { });
        internal__static_common_1_LinkedEntityListRequest__Descriptor = Descriptor.MessageTypes[93];
        internal__static_common_1_LinkedEntityListRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListRequest, global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListRequest.Builder>(internal__static_common_1_LinkedEntityListRequest__Descriptor,
                new string[] { "Id", "Top", });
        internal__static_common_1_LinkedEntityListResult__Descriptor = Descriptor.MessageTypes[94];
        internal__static_common_1_LinkedEntityListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListResult, global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListResult.Builder>(internal__static_common_1_LinkedEntityListResult__Descriptor,
                new string[] { "Entities", "IsComplete", });
        internal__static_common_1_SalesSeriesListResult__Descriptor = Descriptor.MessageTypes[95];
        internal__static_common_1_SalesSeriesListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SalesSeriesListResult, global::CmsApiSamples.Protocol.CMSApi.SalesSeriesListResult.Builder>(internal__static_common_1_SalesSeriesListResult__Descriptor,
                new string[] { "SalesSeries", "IsComplete", });
        internal__static_common_1_SalesSeries__Descriptor = Descriptor.MessageTypes[96];
        internal__static_common_1_SalesSeries__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SalesSeries, global::CmsApiSamples.Protocol.CMSApi.SalesSeries.Builder>(internal__static_common_1_SalesSeries__Descriptor,
                new string[] { "Id", "SalesSeriesName", "SalesSeriesNumber", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum OperationStatus {
    SUCCESS = 1,
    FAILURE = 2,
  }
  
  public enum LoginDomain {
    CQG_TRADE_ROUTING = 2,
    CQG_SYSTEM = 3,
    CQG_ADMIN = 4,
  }
  
  public enum CommonLookupPropertyType {
    AUTHENTICATION_SYSTEM = 201,
    CONNECTION_POINT = 202,
    EXCHANGE = 203,
  }
  
  public enum AuthServerSpecialOperation {
    SET_PASSWORD = 1,
    SETUP_SECOND_FACTOR = 2,
    CHANGE_EXPIRED_PASSWORD = 3,
    SIGN_AGREEMENT = 4,
  }
  
  public enum CredentialType {
    STATIC_PASSWORD = 1,
    SECOND_FACTOR = 2,
  }
  
  public enum EntityType {
    ACCOUNT = 1,
    ORDER = 2,
    USER = 3,
    CUSTOMER = 4,
  }
  
  public enum LogonResultCode {
    LOGON_SUCCESS = 0,
    LOGON_FAILURE = 101,
    NO_ONETIME_PASSWORD = 103,
    PASSWORD_EXPIRED = 104,
    ROUTINE_ERROR = 105,
    WRONG_PARAMETERS = 106,
    USER_AUTO_LOCKOUT = 107,
    USER_MANUAL_LOCKOUT = 108,
    SECOND_FACTOR_INIT_REQUIRED = 109,
    INCOMPATIBLE_CLIENT = 110,
    UNSIGNED_AGREEMENT = 111,
  }
  
  public enum AdminLoginScope {
    CQG = 1,
    BROKERAGE = 2,
    SALES_REP = 3,
  }
  
  public enum AuthActivityType {
    LOGIN = 1,
    PASSWORD_CHANGE = 2,
    CLEAR_LOCKOUT = 3,
    CHANGE_2FA = 4,
    ERASE_2FA = 5,
    ERASE_PASSWORD = 6,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Text : pb::GeneratedMessage<Text, Text.Builder> {
    private Text() { }
    private static readonly Text defaultInstance = new Text().MakeReadOnly();
    private static readonly string[] _textFieldNames = new string[] { "format", "key", "param", "text" };
    private static readonly uint[] _textFieldTags = new uint[] { 26, 10, 34, 18 };
    public static Text DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Text DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Text ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Text__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Text, Text.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Text__FieldAccessorTable; }
    }
    
    public const int KeyFieldNumber = 1;
    private bool hasKey;
    private string key_ = "";
    public bool HasKey {
      get { return hasKey; }
    }
    public string Key {
      get { return key_; }
    }
    
    public const int Text_FieldNumber = 2;
    private bool hasText_;
    private string text_ = "";
    public bool HasText_ {
      get { return hasText_; }
    }
    public string Text_ {
      get { return text_; }
    }
    
    public const int FormatFieldNumber = 3;
    private bool hasFormat;
    private string format_ = "";
    public bool HasFormat {
      get { return hasFormat; }
    }
    public string Format {
      get { return format_; }
    }
    
    public const int ParamFieldNumber = 4;
    private pbc::PopsicleList<string> param_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ParamList {
      get { return pbc::Lists.AsReadOnly(param_); }
    }
    public int ParamCount {
      get { return param_.Count; }
    }
    public string GetParam(int index) {
      return param_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasKey) return false;
        if (!hasText_) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _textFieldNames;
      if (hasKey) {
        output.WriteString(1, field_names[1], Key);
      }
      if (hasText_) {
        output.WriteString(2, field_names[3], Text_);
      }
      if (hasFormat) {
        output.WriteString(3, field_names[0], Format);
      }
      if (param_.Count > 0) {
        output.WriteStringArray(4, field_names[2], param_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasKey) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Key);
      }
      if (hasText_) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Text_);
      }
      if (hasFormat) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Format);
      }
      {
        int dataSize = 0;
        foreach (string element in ParamList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * param_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Text ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Text ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Text ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Text ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Text ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Text ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Text ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Text ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Text ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Text ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Text MakeReadOnly() {
      param_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Text prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Text, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Text cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Text result;
      
      private Text PrepareBuilder() {
        if (resultIsReadOnly) {
          Text original = result;
          result = new Text();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Text MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Text.Descriptor; }
      }
      
      public override Text DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
      }
      
      public override Text BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Text) {
          return MergeFrom((Text) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Text other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasKey) {
          Key = other.Key;
        }
        if (other.HasText_) {
          Text_ = other.Text_;
        }
        if (other.HasFormat) {
          Format = other.Format;
        }
        if (other.param_.Count != 0) {
          result.param_.Add(other.param_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_textFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _textFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasKey = input.ReadString(ref result.key_);
              break;
            }
            case 18: {
              result.hasText_ = input.ReadString(ref result.text_);
              break;
            }
            case 26: {
              result.hasFormat = input.ReadString(ref result.format_);
              break;
            }
            case 34: {
              input.ReadStringArray(tag, field_name, result.param_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasKey {
        get { return result.hasKey; }
      }
      public string Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = "";
        return this;
      }
      
      public bool HasText_ {
        get { return result.hasText_; }
      }
      public string Text_ {
        get { return result.Text_; }
        set { SetText_(value); }
      }
      public Builder SetText_(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText_ = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText_() {
        PrepareBuilder();
        result.hasText_ = false;
        result.text_ = "";
        return this;
      }
      
      public bool HasFormat {
        get { return result.hasFormat; }
      }
      public string Format {
        get { return result.Format; }
        set { SetFormat(value); }
      }
      public Builder SetFormat(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFormat = true;
        result.format_ = value;
        return this;
      }
      public Builder ClearFormat() {
        PrepareBuilder();
        result.hasFormat = false;
        result.format_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> ParamList {
        get { return PrepareBuilder().param_; }
      }
      public int ParamCount {
        get { return result.ParamCount; }
      }
      public string GetParam(int index) {
        return result.GetParam(index);
      }
      public Builder SetParam(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.param_[index] = value;
        return this;
      }
      public Builder AddParam(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.param_.Add(value);
        return this;
      }
      public Builder AddRangeParam(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.param_.Add(values);
        return this;
      }
      public Builder ClearParam() {
        PrepareBuilder();
        result.param_.Clear();
        return this;
      }
    }
    static Text() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserMessage : pb::GeneratedMessage<UserMessage, UserMessage.Builder> {
    private UserMessage() { }
    private static readonly UserMessage defaultInstance = new UserMessage().MakeReadOnly();
    private static readonly string[] _userMessageFieldNames = new string[] { "expiration_utc_time", "message_type", "source", "subject", "text" };
    private static readonly uint[] _userMessageFieldTags = new uint[] { 40, 8, 18, 26, 34 };
    public static UserMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UserMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserMessage, UserMessage.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UserMessage__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum MessageType {
        CRITICAL_ERROR = 1,
        WARNING = 2,
        INFO = 3,
        LOG = 4,
      }
      
    }
    #endregion
    
    public const int MessageTypeFieldNumber = 1;
    private bool hasMessageType;
    private uint messageType_;
    public bool HasMessageType {
      get { return hasMessageType; }
    }
    [global::System.CLSCompliant(false)]
    public uint MessageType {
      get { return messageType_; }
    }
    
    public const int SourceFieldNumber = 2;
    private bool hasSource;
    private string source_ = "";
    public bool HasSource {
      get { return hasSource; }
    }
    public string Source {
      get { return source_; }
    }
    
    public const int SubjectFieldNumber = 3;
    private bool hasSubject;
    private string subject_ = "";
    public bool HasSubject {
      get { return hasSubject; }
    }
    public string Subject {
      get { return subject_; }
    }
    
    public const int TextFieldNumber = 4;
    private bool hasText;
    private global::CmsApiSamples.Protocol.CMSApi.Text text_;
    public bool HasText {
      get { return hasText; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Text {
      get { return text_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public const int ExpirationUtcTimeFieldNumber = 5;
    private bool hasExpirationUtcTime;
    private long expirationUtcTime_;
    public bool HasExpirationUtcTime {
      get { return hasExpirationUtcTime; }
    }
    public long ExpirationUtcTime {
      get { return expirationUtcTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessageType) return false;
        if (!hasText) return false;
        if (!Text.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userMessageFieldNames;
      if (hasMessageType) {
        output.WriteUInt32(1, field_names[1], MessageType);
      }
      if (hasSource) {
        output.WriteString(2, field_names[2], Source);
      }
      if (hasSubject) {
        output.WriteString(3, field_names[3], Subject);
      }
      if (hasText) {
        output.WriteMessage(4, field_names[4], Text);
      }
      if (hasExpirationUtcTime) {
        output.WriteSInt64(5, field_names[0], ExpirationUtcTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMessageType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, MessageType);
      }
      if (hasSource) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Source);
      }
      if (hasSubject) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Subject);
      }
      if (hasText) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, Text);
      }
      if (hasExpirationUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(5, ExpirationUtcTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserMessage result;
      
      private UserMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          UserMessage original = result;
          result = new UserMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UserMessage.Descriptor; }
      }
      
      public override UserMessage DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UserMessage.DefaultInstance; }
      }
      
      public override UserMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserMessage) {
          return MergeFrom((UserMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserMessage other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UserMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageType) {
          MessageType = other.MessageType;
        }
        if (other.HasSource) {
          Source = other.Source;
        }
        if (other.HasSubject) {
          Subject = other.Subject;
        }
        if (other.HasText) {
          MergeText(other.Text);
        }
        if (other.HasExpirationUtcTime) {
          ExpirationUtcTime = other.ExpirationUtcTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMessageType = input.ReadUInt32(ref result.messageType_);
              break;
            }
            case 18: {
              result.hasSource = input.ReadString(ref result.source_);
              break;
            }
            case 26: {
              result.hasSubject = input.ReadString(ref result.subject_);
              break;
            }
            case 34: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasText) {
                subBuilder.MergeFrom(Text);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Text = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasExpirationUtcTime = input.ReadSInt64(ref result.expirationUtcTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageType {
        get { return result.hasMessageType; }
      }
      [global::System.CLSCompliant(false)]
      public uint MessageType {
        get { return result.MessageType; }
        set { SetMessageType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMessageType(uint value) {
        PrepareBuilder();
        result.hasMessageType = true;
        result.messageType_ = value;
        return this;
      }
      public Builder ClearMessageType() {
        PrepareBuilder();
        result.hasMessageType = false;
        result.messageType_ = 0;
        return this;
      }
      
      public bool HasSource {
        get { return result.hasSource; }
      }
      public string Source {
        get { return result.Source; }
        set { SetSource(value); }
      }
      public Builder SetSource(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder ClearSource() {
        PrepareBuilder();
        result.hasSource = false;
        result.source_ = "";
        return this;
      }
      
      public bool HasSubject {
        get { return result.hasSubject; }
      }
      public string Subject {
        get { return result.Subject; }
        set { SetSubject(value); }
      }
      public Builder SetSubject(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSubject = true;
        result.subject_ = value;
        return this;
      }
      public Builder ClearSubject() {
        PrepareBuilder();
        result.hasSubject = false;
        result.subject_ = "";
        return this;
      }
      
      public bool HasText {
       get { return result.hasText; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder SetText(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = builderForValue.Build();
        return this;
      }
      public Builder MergeText(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasText &&
            result.text_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.text_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.text_).MergeFrom(value).BuildPartial();
        } else {
          result.text_ = value;
        }
        result.hasText = true;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = null;
        return this;
      }
      
      public bool HasExpirationUtcTime {
        get { return result.hasExpirationUtcTime; }
      }
      public long ExpirationUtcTime {
        get { return result.ExpirationUtcTime; }
        set { SetExpirationUtcTime(value); }
      }
      public Builder SetExpirationUtcTime(long value) {
        PrepareBuilder();
        result.hasExpirationUtcTime = true;
        result.expirationUtcTime_ = value;
        return this;
      }
      public Builder ClearExpirationUtcTime() {
        PrepareBuilder();
        result.hasExpirationUtcTime = false;
        result.expirationUtcTime_ = 0;
        return this;
      }
    }
    static UserMessage() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Logon : pb::GeneratedMessage<Logon, Logon.Builder> {
    private Logon() { }
    private static readonly Logon defaultInstance = new Logon().MakeReadOnly();
    private static readonly string[] _logonFieldNames = new string[] { "client_app_id", "client_version", "drop_concurrent_session", "password", "private_label", "protocol_version_major", "protocol_version_minor", "session_settings", "user_name" };
    private static readonly uint[] _logonFieldTags = new uint[] { 42, 50, 64, 34, 74, 16, 8, 56, 26 };
    public static Logon DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Logon DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Logon ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Logon__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Logon, Logon.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Logon__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum SessionSetting {
        ALLOW_SESSION_RESTORE = 1,
        ALLOW_SESSION_JOIN = 2,
      }
      
    }
    #endregion
    
    public const int ProtocolVersionMinorFieldNumber = 1;
    private bool hasProtocolVersionMinor;
    private uint protocolVersionMinor_;
    public bool HasProtocolVersionMinor {
      get { return hasProtocolVersionMinor; }
    }
    [global::System.CLSCompliant(false)]
    public uint ProtocolVersionMinor {
      get { return protocolVersionMinor_; }
    }
    
    public const int ProtocolVersionMajorFieldNumber = 2;
    private bool hasProtocolVersionMajor;
    private uint protocolVersionMajor_;
    public bool HasProtocolVersionMajor {
      get { return hasProtocolVersionMajor; }
    }
    [global::System.CLSCompliant(false)]
    public uint ProtocolVersionMajor {
      get { return protocolVersionMajor_; }
    }
    
    public const int UserNameFieldNumber = 3;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int PasswordFieldNumber = 4;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public const int ClientAppIdFieldNumber = 5;
    private bool hasClientAppId;
    private string clientAppId_ = "";
    public bool HasClientAppId {
      get { return hasClientAppId; }
    }
    public string ClientAppId {
      get { return clientAppId_; }
    }
    
    public const int ClientVersionFieldNumber = 6;
    private bool hasClientVersion;
    private string clientVersion_ = "";
    public bool HasClientVersion {
      get { return hasClientVersion; }
    }
    public string ClientVersion {
      get { return clientVersion_; }
    }
    
    public const int SessionSettingsFieldNumber = 7;
    private pbc::PopsicleList<uint> sessionSettings_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> SessionSettingsList {
      get { return pbc::Lists.AsReadOnly(sessionSettings_); }
    }
    public int SessionSettingsCount {
      get { return sessionSettings_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetSessionSettings(int index) {
      return sessionSettings_[index];
    }
    
    public const int DropConcurrentSessionFieldNumber = 8;
    private bool hasDropConcurrentSession;
    private bool dropConcurrentSession_;
    public bool HasDropConcurrentSession {
      get { return hasDropConcurrentSession; }
    }
    public bool DropConcurrentSession {
      get { return dropConcurrentSession_; }
    }
    
    public const int PrivateLabelFieldNumber = 9;
    private bool hasPrivateLabel;
    private string privateLabel_ = "";
    public bool HasPrivateLabel {
      get { return hasPrivateLabel; }
    }
    public string PrivateLabel {
      get { return privateLabel_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProtocolVersionMinor) return false;
        if (!hasProtocolVersionMajor) return false;
        if (!hasUserName) return false;
        if (!hasPassword) return false;
        if (!hasClientAppId) return false;
        if (!hasClientVersion) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _logonFieldNames;
      if (hasProtocolVersionMinor) {
        output.WriteUInt32(1, field_names[6], ProtocolVersionMinor);
      }
      if (hasProtocolVersionMajor) {
        output.WriteUInt32(2, field_names[5], ProtocolVersionMajor);
      }
      if (hasUserName) {
        output.WriteString(3, field_names[8], UserName);
      }
      if (hasPassword) {
        output.WriteString(4, field_names[3], Password);
      }
      if (hasClientAppId) {
        output.WriteString(5, field_names[0], ClientAppId);
      }
      if (hasClientVersion) {
        output.WriteString(6, field_names[1], ClientVersion);
      }
      if (sessionSettings_.Count > 0) {
        output.WriteUInt32Array(7, field_names[7], sessionSettings_);
      }
      if (hasDropConcurrentSession) {
        output.WriteBool(8, field_names[2], DropConcurrentSession);
      }
      if (hasPrivateLabel) {
        output.WriteString(9, field_names[4], PrivateLabel);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasProtocolVersionMinor) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, ProtocolVersionMinor);
      }
      if (hasProtocolVersionMajor) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, ProtocolVersionMajor);
      }
      if (hasUserName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, UserName);
      }
      if (hasPassword) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Password);
      }
      if (hasClientAppId) {
        size += pb::CodedOutputStream.ComputeStringSize(5, ClientAppId);
      }
      if (hasClientVersion) {
        size += pb::CodedOutputStream.ComputeStringSize(6, ClientVersion);
      }
      {
        int dataSize = 0;
        foreach (uint element in SessionSettingsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * sessionSettings_.Count;
      }
      if (hasDropConcurrentSession) {
        size += pb::CodedOutputStream.ComputeBoolSize(8, DropConcurrentSession);
      }
      if (hasPrivateLabel) {
        size += pb::CodedOutputStream.ComputeStringSize(9, PrivateLabel);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Logon ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Logon ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Logon ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Logon ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Logon ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Logon ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Logon ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Logon ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Logon ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Logon ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Logon MakeReadOnly() {
      sessionSettings_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Logon prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Logon, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Logon cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Logon result;
      
      private Logon PrepareBuilder() {
        if (resultIsReadOnly) {
          Logon original = result;
          result = new Logon();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Logon MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Logon.Descriptor; }
      }
      
      public override Logon DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Logon.DefaultInstance; }
      }
      
      public override Logon BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Logon) {
          return MergeFrom((Logon) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Logon other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Logon.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProtocolVersionMinor) {
          ProtocolVersionMinor = other.ProtocolVersionMinor;
        }
        if (other.HasProtocolVersionMajor) {
          ProtocolVersionMajor = other.ProtocolVersionMajor;
        }
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        if (other.HasClientAppId) {
          ClientAppId = other.ClientAppId;
        }
        if (other.HasClientVersion) {
          ClientVersion = other.ClientVersion;
        }
        if (other.sessionSettings_.Count != 0) {
          result.sessionSettings_.Add(other.sessionSettings_);
        }
        if (other.HasDropConcurrentSession) {
          DropConcurrentSession = other.DropConcurrentSession;
        }
        if (other.HasPrivateLabel) {
          PrivateLabel = other.PrivateLabel;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logonFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logonFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasProtocolVersionMinor = input.ReadUInt32(ref result.protocolVersionMinor_);
              break;
            }
            case 16: {
              result.hasProtocolVersionMajor = input.ReadUInt32(ref result.protocolVersionMajor_);
              break;
            }
            case 26: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 34: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
            case 42: {
              result.hasClientAppId = input.ReadString(ref result.clientAppId_);
              break;
            }
            case 50: {
              result.hasClientVersion = input.ReadString(ref result.clientVersion_);
              break;
            }
            case 58:
            case 56: {
              input.ReadUInt32Array(tag, field_name, result.sessionSettings_);
              break;
            }
            case 64: {
              result.hasDropConcurrentSession = input.ReadBool(ref result.dropConcurrentSession_);
              break;
            }
            case 74: {
              result.hasPrivateLabel = input.ReadString(ref result.privateLabel_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProtocolVersionMinor {
        get { return result.hasProtocolVersionMinor; }
      }
      [global::System.CLSCompliant(false)]
      public uint ProtocolVersionMinor {
        get { return result.ProtocolVersionMinor; }
        set { SetProtocolVersionMinor(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetProtocolVersionMinor(uint value) {
        PrepareBuilder();
        result.hasProtocolVersionMinor = true;
        result.protocolVersionMinor_ = value;
        return this;
      }
      public Builder ClearProtocolVersionMinor() {
        PrepareBuilder();
        result.hasProtocolVersionMinor = false;
        result.protocolVersionMinor_ = 0;
        return this;
      }
      
      public bool HasProtocolVersionMajor {
        get { return result.hasProtocolVersionMajor; }
      }
      [global::System.CLSCompliant(false)]
      public uint ProtocolVersionMajor {
        get { return result.ProtocolVersionMajor; }
        set { SetProtocolVersionMajor(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetProtocolVersionMajor(uint value) {
        PrepareBuilder();
        result.hasProtocolVersionMajor = true;
        result.protocolVersionMajor_ = value;
        return this;
      }
      public Builder ClearProtocolVersionMajor() {
        PrepareBuilder();
        result.hasProtocolVersionMajor = false;
        result.protocolVersionMajor_ = 0;
        return this;
      }
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
      
      public bool HasClientAppId {
        get { return result.hasClientAppId; }
      }
      public string ClientAppId {
        get { return result.ClientAppId; }
        set { SetClientAppId(value); }
      }
      public Builder SetClientAppId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientAppId = true;
        result.clientAppId_ = value;
        return this;
      }
      public Builder ClearClientAppId() {
        PrepareBuilder();
        result.hasClientAppId = false;
        result.clientAppId_ = "";
        return this;
      }
      
      public bool HasClientVersion {
        get { return result.hasClientVersion; }
      }
      public string ClientVersion {
        get { return result.ClientVersion; }
        set { SetClientVersion(value); }
      }
      public Builder SetClientVersion(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientVersion = true;
        result.clientVersion_ = value;
        return this;
      }
      public Builder ClearClientVersion() {
        PrepareBuilder();
        result.hasClientVersion = false;
        result.clientVersion_ = "";
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> SessionSettingsList {
        get { return PrepareBuilder().sessionSettings_; }
      }
      public int SessionSettingsCount {
        get { return result.SessionSettingsCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetSessionSettings(int index) {
        return result.GetSessionSettings(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSessionSettings(int index, uint value) {
        PrepareBuilder();
        result.sessionSettings_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddSessionSettings(uint value) {
        PrepareBuilder();
        result.sessionSettings_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeSessionSettings(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.sessionSettings_.Add(values);
        return this;
      }
      public Builder ClearSessionSettings() {
        PrepareBuilder();
        result.sessionSettings_.Clear();
        return this;
      }
      
      public bool HasDropConcurrentSession {
        get { return result.hasDropConcurrentSession; }
      }
      public bool DropConcurrentSession {
        get { return result.DropConcurrentSession; }
        set { SetDropConcurrentSession(value); }
      }
      public Builder SetDropConcurrentSession(bool value) {
        PrepareBuilder();
        result.hasDropConcurrentSession = true;
        result.dropConcurrentSession_ = value;
        return this;
      }
      public Builder ClearDropConcurrentSession() {
        PrepareBuilder();
        result.hasDropConcurrentSession = false;
        result.dropConcurrentSession_ = false;
        return this;
      }
      
      public bool HasPrivateLabel {
        get { return result.hasPrivateLabel; }
      }
      public string PrivateLabel {
        get { return result.PrivateLabel; }
        set { SetPrivateLabel(value); }
      }
      public Builder SetPrivateLabel(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPrivateLabel = true;
        result.privateLabel_ = value;
        return this;
      }
      public Builder ClearPrivateLabel() {
        PrepareBuilder();
        result.hasPrivateLabel = false;
        result.privateLabel_ = "";
        return this;
      }
    }
    static Logon() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RestoreOrJoinSession : pb::GeneratedMessage<RestoreOrJoinSession, RestoreOrJoinSession.Builder> {
    private RestoreOrJoinSession() { }
    private static readonly RestoreOrJoinSession defaultInstance = new RestoreOrJoinSession().MakeReadOnly();
    private static readonly string[] _restoreOrJoinSessionFieldNames = new string[] { "client_app_id", "client_ip_address", "session_token" };
    private static readonly uint[] _restoreOrJoinSessionFieldTags = new uint[] { 18, 26, 10 };
    public static RestoreOrJoinSession DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RestoreOrJoinSession DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RestoreOrJoinSession ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestoreOrJoinSession__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RestoreOrJoinSession, RestoreOrJoinSession.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestoreOrJoinSession__FieldAccessorTable; }
    }
    
    public const int SessionTokenFieldNumber = 1;
    private bool hasSessionToken;
    private string sessionToken_ = "";
    public bool HasSessionToken {
      get { return hasSessionToken; }
    }
    public string SessionToken {
      get { return sessionToken_; }
    }
    
    public const int ClientAppIdFieldNumber = 2;
    private bool hasClientAppId;
    private string clientAppId_ = "";
    public bool HasClientAppId {
      get { return hasClientAppId; }
    }
    public string ClientAppId {
      get { return clientAppId_; }
    }
    
    public const int ClientIpAddressFieldNumber = 3;
    private bool hasClientIpAddress;
    private string clientIpAddress_ = "";
    public bool HasClientIpAddress {
      get { return hasClientIpAddress; }
    }
    public string ClientIpAddress {
      get { return clientIpAddress_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSessionToken) return false;
        if (!hasClientAppId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _restoreOrJoinSessionFieldNames;
      if (hasSessionToken) {
        output.WriteString(1, field_names[2], SessionToken);
      }
      if (hasClientAppId) {
        output.WriteString(2, field_names[0], ClientAppId);
      }
      if (hasClientIpAddress) {
        output.WriteString(3, field_names[1], ClientIpAddress);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSessionToken) {
        size += pb::CodedOutputStream.ComputeStringSize(1, SessionToken);
      }
      if (hasClientAppId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ClientAppId);
      }
      if (hasClientIpAddress) {
        size += pb::CodedOutputStream.ComputeStringSize(3, ClientIpAddress);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RestoreOrJoinSession ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreOrJoinSession ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreOrJoinSession ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreOrJoinSession ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreOrJoinSession ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreOrJoinSession ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RestoreOrJoinSession ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RestoreOrJoinSession ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RestoreOrJoinSession ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreOrJoinSession ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RestoreOrJoinSession MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RestoreOrJoinSession prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RestoreOrJoinSession, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RestoreOrJoinSession cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RestoreOrJoinSession result;
      
      private RestoreOrJoinSession PrepareBuilder() {
        if (resultIsReadOnly) {
          RestoreOrJoinSession original = result;
          result = new RestoreOrJoinSession();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RestoreOrJoinSession MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSession.Descriptor; }
      }
      
      public override RestoreOrJoinSession DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSession.DefaultInstance; }
      }
      
      public override RestoreOrJoinSession BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RestoreOrJoinSession) {
          return MergeFrom((RestoreOrJoinSession) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RestoreOrJoinSession other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSession.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSessionToken) {
          SessionToken = other.SessionToken;
        }
        if (other.HasClientAppId) {
          ClientAppId = other.ClientAppId;
        }
        if (other.HasClientIpAddress) {
          ClientIpAddress = other.ClientIpAddress;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_restoreOrJoinSessionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _restoreOrJoinSessionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasSessionToken = input.ReadString(ref result.sessionToken_);
              break;
            }
            case 18: {
              result.hasClientAppId = input.ReadString(ref result.clientAppId_);
              break;
            }
            case 26: {
              result.hasClientIpAddress = input.ReadString(ref result.clientIpAddress_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSessionToken {
        get { return result.hasSessionToken; }
      }
      public string SessionToken {
        get { return result.SessionToken; }
        set { SetSessionToken(value); }
      }
      public Builder SetSessionToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSessionToken = true;
        result.sessionToken_ = value;
        return this;
      }
      public Builder ClearSessionToken() {
        PrepareBuilder();
        result.hasSessionToken = false;
        result.sessionToken_ = "";
        return this;
      }
      
      public bool HasClientAppId {
        get { return result.hasClientAppId; }
      }
      public string ClientAppId {
        get { return result.ClientAppId; }
        set { SetClientAppId(value); }
      }
      public Builder SetClientAppId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientAppId = true;
        result.clientAppId_ = value;
        return this;
      }
      public Builder ClearClientAppId() {
        PrepareBuilder();
        result.hasClientAppId = false;
        result.clientAppId_ = "";
        return this;
      }
      
      public bool HasClientIpAddress {
        get { return result.hasClientIpAddress; }
      }
      public string ClientIpAddress {
        get { return result.ClientIpAddress; }
        set { SetClientIpAddress(value); }
      }
      public Builder SetClientIpAddress(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientIpAddress = true;
        result.clientIpAddress_ = value;
        return this;
      }
      public Builder ClearClientIpAddress() {
        PrepareBuilder();
        result.hasClientIpAddress = false;
        result.clientIpAddress_ = "";
        return this;
      }
    }
    static RestoreOrJoinSession() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Logoff : pb::GeneratedMessage<Logoff, Logoff.Builder> {
    private Logoff() { }
    private static readonly Logoff defaultInstance = new Logoff().MakeReadOnly();
    private static readonly string[] _logoffFieldNames = new string[] {  };
    private static readonly uint[] _logoffFieldTags = new uint[] {  };
    public static Logoff DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Logoff DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Logoff ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Logoff__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Logoff, Logoff.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Logoff__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _logoffFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Logoff ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Logoff ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Logoff ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Logoff ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Logoff ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Logoff ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Logoff ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Logoff ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Logoff ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Logoff ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Logoff MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Logoff prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Logoff, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Logoff cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Logoff result;
      
      private Logoff PrepareBuilder() {
        if (resultIsReadOnly) {
          Logoff original = result;
          result = new Logoff();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Logoff MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Logoff.Descriptor; }
      }
      
      public override Logoff DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Logoff.DefaultInstance; }
      }
      
      public override Logoff BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Logoff) {
          return MergeFrom((Logoff) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Logoff other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Logoff.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logoffFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logoffFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static Logoff() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ObtainDemoAccess : pb::GeneratedMessage<ObtainDemoAccess, ObtainDemoAccess.Builder> {
    private ObtainDemoAccess() { }
    private static readonly ObtainDemoAccess defaultInstance = new ObtainDemoAccess().MakeReadOnly();
    private static readonly string[] _obtainDemoAccessFieldNames = new string[] { "client_app_id", "email", "email_bcc", "first_name", "id", "last_name", "phone", "private_label", "source" };
    private static readonly uint[] _obtainDemoAccessFieldTags = new uint[] { 18, 50, 66, 34, 8, 42, 58, 26, 74 };
    public static ObtainDemoAccess DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ObtainDemoAccess DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ObtainDemoAccess ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ObtainDemoAccess__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ObtainDemoAccess, ObtainDemoAccess.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ObtainDemoAccess__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private uint id_;
    public bool HasId {
      get { return hasId; }
    }
    [global::System.CLSCompliant(false)]
    public uint Id {
      get { return id_; }
    }
    
    public const int ClientAppIdFieldNumber = 2;
    private bool hasClientAppId;
    private string clientAppId_ = "";
    public bool HasClientAppId {
      get { return hasClientAppId; }
    }
    public string ClientAppId {
      get { return clientAppId_; }
    }
    
    public const int PrivateLabelFieldNumber = 3;
    private bool hasPrivateLabel;
    private string privateLabel_ = "";
    public bool HasPrivateLabel {
      get { return hasPrivateLabel; }
    }
    public string PrivateLabel {
      get { return privateLabel_; }
    }
    
    public const int FirstNameFieldNumber = 4;
    private bool hasFirstName;
    private string firstName_ = "";
    public bool HasFirstName {
      get { return hasFirstName; }
    }
    public string FirstName {
      get { return firstName_; }
    }
    
    public const int LastNameFieldNumber = 5;
    private bool hasLastName;
    private string lastName_ = "";
    public bool HasLastName {
      get { return hasLastName; }
    }
    public string LastName {
      get { return lastName_; }
    }
    
    public const int EmailFieldNumber = 6;
    private bool hasEmail;
    private global::CmsApiSamples.Protocol.CMSApi.Email email_;
    public bool HasEmail {
      get { return hasEmail; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Email Email {
      get { return email_ ?? global::CmsApiSamples.Protocol.CMSApi.Email.DefaultInstance; }
    }
    
    public const int PhoneFieldNumber = 7;
    private bool hasPhone;
    private global::CmsApiSamples.Protocol.CMSApi.Phone phone_;
    public bool HasPhone {
      get { return hasPhone; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Phone Phone {
      get { return phone_ ?? global::CmsApiSamples.Protocol.CMSApi.Phone.DefaultInstance; }
    }
    
    public const int EmailBccFieldNumber = 8;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Email> emailBcc_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Email>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Email> EmailBccList {
      get { return emailBcc_; }
    }
    public int EmailBccCount {
      get { return emailBcc_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Email GetEmailBcc(int index) {
      return emailBcc_[index];
    }
    
    public const int SourceFieldNumber = 9;
    private bool hasSource;
    private string source_ = "";
    public bool HasSource {
      get { return hasSource; }
    }
    public string Source {
      get { return source_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasClientAppId) return false;
        if (!hasFirstName) return false;
        if (!hasLastName) return false;
        if (!hasEmail) return false;
        if (!hasPhone) return false;
        if (!Email.IsInitialized) return false;
        if (!Phone.IsInitialized) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.Email element in EmailBccList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _obtainDemoAccessFieldNames;
      if (hasId) {
        output.WriteUInt32(1, field_names[4], Id);
      }
      if (hasClientAppId) {
        output.WriteString(2, field_names[0], ClientAppId);
      }
      if (hasPrivateLabel) {
        output.WriteString(3, field_names[7], PrivateLabel);
      }
      if (hasFirstName) {
        output.WriteString(4, field_names[3], FirstName);
      }
      if (hasLastName) {
        output.WriteString(5, field_names[5], LastName);
      }
      if (hasEmail) {
        output.WriteMessage(6, field_names[1], Email);
      }
      if (hasPhone) {
        output.WriteMessage(7, field_names[6], Phone);
      }
      if (emailBcc_.Count > 0) {
        output.WriteMessageArray(8, field_names[2], emailBcc_);
      }
      if (hasSource) {
        output.WriteString(9, field_names[8], Source);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Id);
      }
      if (hasClientAppId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ClientAppId);
      }
      if (hasPrivateLabel) {
        size += pb::CodedOutputStream.ComputeStringSize(3, PrivateLabel);
      }
      if (hasFirstName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, FirstName);
      }
      if (hasLastName) {
        size += pb::CodedOutputStream.ComputeStringSize(5, LastName);
      }
      if (hasEmail) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, Email);
      }
      if (hasPhone) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, Phone);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.Email element in EmailBccList) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, element);
      }
      if (hasSource) {
        size += pb::CodedOutputStream.ComputeStringSize(9, Source);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ObtainDemoAccess ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ObtainDemoAccess ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ObtainDemoAccess ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ObtainDemoAccess ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ObtainDemoAccess ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ObtainDemoAccess ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ObtainDemoAccess ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ObtainDemoAccess ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ObtainDemoAccess ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ObtainDemoAccess ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ObtainDemoAccess MakeReadOnly() {
      emailBcc_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ObtainDemoAccess prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ObtainDemoAccess, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ObtainDemoAccess cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ObtainDemoAccess result;
      
      private ObtainDemoAccess PrepareBuilder() {
        if (resultIsReadOnly) {
          ObtainDemoAccess original = result;
          result = new ObtainDemoAccess();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ObtainDemoAccess MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccess.Descriptor; }
      }
      
      public override ObtainDemoAccess DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccess.DefaultInstance; }
      }
      
      public override ObtainDemoAccess BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ObtainDemoAccess) {
          return MergeFrom((ObtainDemoAccess) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ObtainDemoAccess other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccess.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasClientAppId) {
          ClientAppId = other.ClientAppId;
        }
        if (other.HasPrivateLabel) {
          PrivateLabel = other.PrivateLabel;
        }
        if (other.HasFirstName) {
          FirstName = other.FirstName;
        }
        if (other.HasLastName) {
          LastName = other.LastName;
        }
        if (other.HasEmail) {
          MergeEmail(other.Email);
        }
        if (other.HasPhone) {
          MergePhone(other.Phone);
        }
        if (other.emailBcc_.Count != 0) {
          result.emailBcc_.Add(other.emailBcc_);
        }
        if (other.HasSource) {
          Source = other.Source;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_obtainDemoAccessFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _obtainDemoAccessFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt32(ref result.id_);
              break;
            }
            case 18: {
              result.hasClientAppId = input.ReadString(ref result.clientAppId_);
              break;
            }
            case 26: {
              result.hasPrivateLabel = input.ReadString(ref result.privateLabel_);
              break;
            }
            case 34: {
              result.hasFirstName = input.ReadString(ref result.firstName_);
              break;
            }
            case 42: {
              result.hasLastName = input.ReadString(ref result.lastName_);
              break;
            }
            case 50: {
              global::CmsApiSamples.Protocol.CMSApi.Email.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Email.CreateBuilder();
              if (result.hasEmail) {
                subBuilder.MergeFrom(Email);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Email = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::CmsApiSamples.Protocol.CMSApi.Phone.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Phone.CreateBuilder();
              if (result.hasPhone) {
                subBuilder.MergeFrom(Phone);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Phone = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              input.ReadMessageArray(tag, field_name, result.emailBcc_, global::CmsApiSamples.Protocol.CMSApi.Email.DefaultInstance, extensionRegistry);
              break;
            }
            case 74: {
              result.hasSource = input.ReadString(ref result.source_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      [global::System.CLSCompliant(false)]
      public uint Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetId(uint value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasClientAppId {
        get { return result.hasClientAppId; }
      }
      public string ClientAppId {
        get { return result.ClientAppId; }
        set { SetClientAppId(value); }
      }
      public Builder SetClientAppId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientAppId = true;
        result.clientAppId_ = value;
        return this;
      }
      public Builder ClearClientAppId() {
        PrepareBuilder();
        result.hasClientAppId = false;
        result.clientAppId_ = "";
        return this;
      }
      
      public bool HasPrivateLabel {
        get { return result.hasPrivateLabel; }
      }
      public string PrivateLabel {
        get { return result.PrivateLabel; }
        set { SetPrivateLabel(value); }
      }
      public Builder SetPrivateLabel(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPrivateLabel = true;
        result.privateLabel_ = value;
        return this;
      }
      public Builder ClearPrivateLabel() {
        PrepareBuilder();
        result.hasPrivateLabel = false;
        result.privateLabel_ = "";
        return this;
      }
      
      public bool HasFirstName {
        get { return result.hasFirstName; }
      }
      public string FirstName {
        get { return result.FirstName; }
        set { SetFirstName(value); }
      }
      public Builder SetFirstName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFirstName = true;
        result.firstName_ = value;
        return this;
      }
      public Builder ClearFirstName() {
        PrepareBuilder();
        result.hasFirstName = false;
        result.firstName_ = "";
        return this;
      }
      
      public bool HasLastName {
        get { return result.hasLastName; }
      }
      public string LastName {
        get { return result.LastName; }
        set { SetLastName(value); }
      }
      public Builder SetLastName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastName = true;
        result.lastName_ = value;
        return this;
      }
      public Builder ClearLastName() {
        PrepareBuilder();
        result.hasLastName = false;
        result.lastName_ = "";
        return this;
      }
      
      public bool HasEmail {
       get { return result.hasEmail; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Email Email {
        get { return result.Email; }
        set { SetEmail(value); }
      }
      public Builder SetEmail(global::CmsApiSamples.Protocol.CMSApi.Email value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder SetEmail(global::CmsApiSamples.Protocol.CMSApi.Email.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEmail = true;
        result.email_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEmail(global::CmsApiSamples.Protocol.CMSApi.Email value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEmail &&
            result.email_ != global::CmsApiSamples.Protocol.CMSApi.Email.DefaultInstance) {
            result.email_ = global::CmsApiSamples.Protocol.CMSApi.Email.CreateBuilder(result.email_).MergeFrom(value).BuildPartial();
        } else {
          result.email_ = value;
        }
        result.hasEmail = true;
        return this;
      }
      public Builder ClearEmail() {
        PrepareBuilder();
        result.hasEmail = false;
        result.email_ = null;
        return this;
      }
      
      public bool HasPhone {
       get { return result.hasPhone; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Phone Phone {
        get { return result.Phone; }
        set { SetPhone(value); }
      }
      public Builder SetPhone(global::CmsApiSamples.Protocol.CMSApi.Phone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPhone = true;
        result.phone_ = value;
        return this;
      }
      public Builder SetPhone(global::CmsApiSamples.Protocol.CMSApi.Phone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPhone = true;
        result.phone_ = builderForValue.Build();
        return this;
      }
      public Builder MergePhone(global::CmsApiSamples.Protocol.CMSApi.Phone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPhone &&
            result.phone_ != global::CmsApiSamples.Protocol.CMSApi.Phone.DefaultInstance) {
            result.phone_ = global::CmsApiSamples.Protocol.CMSApi.Phone.CreateBuilder(result.phone_).MergeFrom(value).BuildPartial();
        } else {
          result.phone_ = value;
        }
        result.hasPhone = true;
        return this;
      }
      public Builder ClearPhone() {
        PrepareBuilder();
        result.hasPhone = false;
        result.phone_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Email> EmailBccList {
        get { return PrepareBuilder().emailBcc_; }
      }
      public int EmailBccCount {
        get { return result.EmailBccCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Email GetEmailBcc(int index) {
        return result.GetEmailBcc(index);
      }
      public Builder SetEmailBcc(int index, global::CmsApiSamples.Protocol.CMSApi.Email value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.emailBcc_[index] = value;
        return this;
      }
      public Builder SetEmailBcc(int index, global::CmsApiSamples.Protocol.CMSApi.Email.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.emailBcc_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEmailBcc(global::CmsApiSamples.Protocol.CMSApi.Email value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.emailBcc_.Add(value);
        return this;
      }
      public Builder AddEmailBcc(global::CmsApiSamples.Protocol.CMSApi.Email.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.emailBcc_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEmailBcc(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Email> values) {
        PrepareBuilder();
        result.emailBcc_.Add(values);
        return this;
      }
      public Builder ClearEmailBcc() {
        PrepareBuilder();
        result.emailBcc_.Clear();
        return this;
      }
      
      public bool HasSource {
        get { return result.hasSource; }
      }
      public string Source {
        get { return result.Source; }
        set { SetSource(value); }
      }
      public Builder SetSource(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder ClearSource() {
        PrepareBuilder();
        result.hasSource = false;
        result.source_ = "";
        return this;
      }
    }
    static ObtainDemoAccess() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Credentials : pb::GeneratedMessage<Credentials, Credentials.Builder> {
    private Credentials() { }
    private static readonly Credentials defaultInstance = new Credentials().MakeReadOnly();
    private static readonly string[] _credentialsFieldNames = new string[] { "password", "user_name" };
    private static readonly uint[] _credentialsFieldTags = new uint[] { 18, 10 };
    public static Credentials DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Credentials DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Credentials ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Credentials__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Credentials, Credentials.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Credentials__FieldAccessorTable; }
    }
    
    public const int UserNameFieldNumber = 1;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int PasswordFieldNumber = 2;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _credentialsFieldNames;
      if (hasUserName) {
        output.WriteString(1, field_names[1], UserName);
      }
      if (hasPassword) {
        output.WriteString(2, field_names[0], Password);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserName);
      }
      if (hasPassword) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Password);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Credentials ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Credentials ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Credentials ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Credentials ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Credentials ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Credentials ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Credentials ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Credentials ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Credentials ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Credentials ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Credentials MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Credentials prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Credentials, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Credentials cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Credentials result;
      
      private Credentials PrepareBuilder() {
        if (resultIsReadOnly) {
          Credentials original = result;
          result = new Credentials();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Credentials MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Credentials.Descriptor; }
      }
      
      public override Credentials DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Credentials.DefaultInstance; }
      }
      
      public override Credentials BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Credentials) {
          return MergeFrom((Credentials) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Credentials other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Credentials.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_credentialsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _credentialsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 18: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
    }
    static Credentials() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ObtainDemoAccessResult : pb::GeneratedMessage<ObtainDemoAccessResult, ObtainDemoAccessResult.Builder> {
    private ObtainDemoAccessResult() { }
    private static readonly ObtainDemoAccessResult defaultInstance = new ObtainDemoAccessResult().MakeReadOnly();
    private static readonly string[] _obtainDemoAccessResultFieldNames = new string[] { "credentials", "error_message", "expiration_utc_time", "operation_status", "request_id" };
    private static readonly uint[] _obtainDemoAccessResultFieldTags = new uint[] { 18, 42, 24, 32, 8 };
    public static ObtainDemoAccessResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ObtainDemoAccessResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ObtainDemoAccessResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ObtainDemoAccessResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ObtainDemoAccessResult, ObtainDemoAccessResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ObtainDemoAccessResult__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private uint requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    [global::System.CLSCompliant(false)]
    public uint RequestId {
      get { return requestId_; }
    }
    
    public const int CredentialsFieldNumber = 2;
    private bool hasCredentials;
    private global::CmsApiSamples.Protocol.CMSApi.Credentials credentials_;
    public bool HasCredentials {
      get { return hasCredentials; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Credentials Credentials {
      get { return credentials_ ?? global::CmsApiSamples.Protocol.CMSApi.Credentials.DefaultInstance; }
    }
    
    public const int ExpirationUtcTimeFieldNumber = 3;
    private bool hasExpirationUtcTime;
    private long expirationUtcTime_;
    public bool HasExpirationUtcTime {
      get { return hasExpirationUtcTime; }
    }
    public long ExpirationUtcTime {
      get { return expirationUtcTime_; }
    }
    
    public const int OperationStatusFieldNumber = 4;
    private bool hasOperationStatus;
    private uint operationStatus_;
    public bool HasOperationStatus {
      get { return hasOperationStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint OperationStatus {
      get { return operationStatus_; }
    }
    
    public const int ErrorMessageFieldNumber = 5;
    private bool hasErrorMessage;
    private global::CmsApiSamples.Protocol.CMSApi.Text errorMessage_;
    public bool HasErrorMessage {
      get { return hasErrorMessage; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text ErrorMessage {
      get { return errorMessage_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestId) return false;
        if (!hasOperationStatus) return false;
        if (HasCredentials) {
          if (!Credentials.IsInitialized) return false;
        }
        if (HasErrorMessage) {
          if (!ErrorMessage.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _obtainDemoAccessResultFieldNames;
      if (hasRequestId) {
        output.WriteUInt32(1, field_names[4], RequestId);
      }
      if (hasCredentials) {
        output.WriteMessage(2, field_names[0], Credentials);
      }
      if (hasExpirationUtcTime) {
        output.WriteSInt64(3, field_names[2], ExpirationUtcTime);
      }
      if (hasOperationStatus) {
        output.WriteUInt32(4, field_names[3], OperationStatus);
      }
      if (hasErrorMessage) {
        output.WriteMessage(5, field_names[1], ErrorMessage);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, RequestId);
      }
      if (hasCredentials) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Credentials);
      }
      if (hasExpirationUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(3, ExpirationUtcTime);
      }
      if (hasOperationStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, OperationStatus);
      }
      if (hasErrorMessage) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, ErrorMessage);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ObtainDemoAccessResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ObtainDemoAccessResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ObtainDemoAccessResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ObtainDemoAccessResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ObtainDemoAccessResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ObtainDemoAccessResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ObtainDemoAccessResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ObtainDemoAccessResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ObtainDemoAccessResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ObtainDemoAccessResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ObtainDemoAccessResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ObtainDemoAccessResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ObtainDemoAccessResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ObtainDemoAccessResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ObtainDemoAccessResult result;
      
      private ObtainDemoAccessResult PrepareBuilder() {
        if (resultIsReadOnly) {
          ObtainDemoAccessResult original = result;
          result = new ObtainDemoAccessResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ObtainDemoAccessResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccessResult.Descriptor; }
      }
      
      public override ObtainDemoAccessResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccessResult.DefaultInstance; }
      }
      
      public override ObtainDemoAccessResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ObtainDemoAccessResult) {
          return MergeFrom((ObtainDemoAccessResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ObtainDemoAccessResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ObtainDemoAccessResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestId) {
          RequestId = other.RequestId;
        }
        if (other.HasCredentials) {
          MergeCredentials(other.Credentials);
        }
        if (other.HasExpirationUtcTime) {
          ExpirationUtcTime = other.ExpirationUtcTime;
        }
        if (other.HasOperationStatus) {
          OperationStatus = other.OperationStatus;
        }
        if (other.HasErrorMessage) {
          MergeErrorMessage(other.ErrorMessage);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_obtainDemoAccessResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _obtainDemoAccessResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRequestId = input.ReadUInt32(ref result.requestId_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.Credentials.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Credentials.CreateBuilder();
              if (result.hasCredentials) {
                subBuilder.MergeFrom(Credentials);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Credentials = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasExpirationUtcTime = input.ReadSInt64(ref result.expirationUtcTime_);
              break;
            }
            case 32: {
              result.hasOperationStatus = input.ReadUInt32(ref result.operationStatus_);
              break;
            }
            case 42: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasErrorMessage) {
                subBuilder.MergeFrom(ErrorMessage);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ErrorMessage = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestId {
        get { return result.hasRequestId; }
      }
      [global::System.CLSCompliant(false)]
      public uint RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRequestId(uint value) {
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = 0;
        return this;
      }
      
      public bool HasCredentials {
       get { return result.hasCredentials; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Credentials Credentials {
        get { return result.Credentials; }
        set { SetCredentials(value); }
      }
      public Builder SetCredentials(global::CmsApiSamples.Protocol.CMSApi.Credentials value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCredentials = true;
        result.credentials_ = value;
        return this;
      }
      public Builder SetCredentials(global::CmsApiSamples.Protocol.CMSApi.Credentials.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCredentials = true;
        result.credentials_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCredentials(global::CmsApiSamples.Protocol.CMSApi.Credentials value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCredentials &&
            result.credentials_ != global::CmsApiSamples.Protocol.CMSApi.Credentials.DefaultInstance) {
            result.credentials_ = global::CmsApiSamples.Protocol.CMSApi.Credentials.CreateBuilder(result.credentials_).MergeFrom(value).BuildPartial();
        } else {
          result.credentials_ = value;
        }
        result.hasCredentials = true;
        return this;
      }
      public Builder ClearCredentials() {
        PrepareBuilder();
        result.hasCredentials = false;
        result.credentials_ = null;
        return this;
      }
      
      public bool HasExpirationUtcTime {
        get { return result.hasExpirationUtcTime; }
      }
      public long ExpirationUtcTime {
        get { return result.ExpirationUtcTime; }
        set { SetExpirationUtcTime(value); }
      }
      public Builder SetExpirationUtcTime(long value) {
        PrepareBuilder();
        result.hasExpirationUtcTime = true;
        result.expirationUtcTime_ = value;
        return this;
      }
      public Builder ClearExpirationUtcTime() {
        PrepareBuilder();
        result.hasExpirationUtcTime = false;
        result.expirationUtcTime_ = 0;
        return this;
      }
      
      public bool HasOperationStatus {
        get { return result.hasOperationStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint OperationStatus {
        get { return result.OperationStatus; }
        set { SetOperationStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOperationStatus(uint value) {
        PrepareBuilder();
        result.hasOperationStatus = true;
        result.operationStatus_ = value;
        return this;
      }
      public Builder ClearOperationStatus() {
        PrepareBuilder();
        result.hasOperationStatus = false;
        result.operationStatus_ = 0;
        return this;
      }
      
      public bool HasErrorMessage {
       get { return result.hasErrorMessage; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text ErrorMessage {
        get { return result.ErrorMessage; }
        set { SetErrorMessage(value); }
      }
      public Builder SetErrorMessage(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder SetErrorMessage(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = builderForValue.Build();
        return this;
      }
      public Builder MergeErrorMessage(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasErrorMessage &&
            result.errorMessage_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.errorMessage_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.errorMessage_).MergeFrom(value).BuildPartial();
        } else {
          result.errorMessage_ = value;
        }
        result.hasErrorMessage = true;
        return this;
      }
      public Builder ClearErrorMessage() {
        PrepareBuilder();
        result.hasErrorMessage = false;
        result.errorMessage_ = null;
        return this;
      }
    }
    static ObtainDemoAccessResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LogonResult : pb::GeneratedMessage<LogonResult, LogonResult.Builder> {
    private LogonResult() { }
    private static readonly LogonResult defaultInstance = new LogonResult().MakeReadOnly();
    private static readonly string[] _logonResultFieldNames = new string[] { "error_message", "operation_status", "protocol_version_major", "protocol_version_minor", "session_token" };
    private static readonly uint[] _logonResultFieldTags = new uint[] { 34, 24, 16, 8, 42 };
    public static LogonResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogonResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LogonResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LogonResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogonResult, LogonResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LogonResult__FieldAccessorTable; }
    }
    
    public const int ProtocolVersionMinorFieldNumber = 1;
    private bool hasProtocolVersionMinor;
    private uint protocolVersionMinor_;
    public bool HasProtocolVersionMinor {
      get { return hasProtocolVersionMinor; }
    }
    [global::System.CLSCompliant(false)]
    public uint ProtocolVersionMinor {
      get { return protocolVersionMinor_; }
    }
    
    public const int ProtocolVersionMajorFieldNumber = 2;
    private bool hasProtocolVersionMajor;
    private uint protocolVersionMajor_;
    public bool HasProtocolVersionMajor {
      get { return hasProtocolVersionMajor; }
    }
    [global::System.CLSCompliant(false)]
    public uint ProtocolVersionMajor {
      get { return protocolVersionMajor_; }
    }
    
    public const int OperationStatusFieldNumber = 3;
    private bool hasOperationStatus;
    private uint operationStatus_;
    public bool HasOperationStatus {
      get { return hasOperationStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint OperationStatus {
      get { return operationStatus_; }
    }
    
    public const int ErrorMessageFieldNumber = 4;
    private bool hasErrorMessage;
    private global::CmsApiSamples.Protocol.CMSApi.Text errorMessage_;
    public bool HasErrorMessage {
      get { return hasErrorMessage; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text ErrorMessage {
      get { return errorMessage_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public const int SessionTokenFieldNumber = 5;
    private bool hasSessionToken;
    private string sessionToken_ = "";
    public bool HasSessionToken {
      get { return hasSessionToken; }
    }
    public string SessionToken {
      get { return sessionToken_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProtocolVersionMinor) return false;
        if (!hasProtocolVersionMajor) return false;
        if (!hasOperationStatus) return false;
        if (HasErrorMessage) {
          if (!ErrorMessage.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _logonResultFieldNames;
      if (hasProtocolVersionMinor) {
        output.WriteUInt32(1, field_names[3], ProtocolVersionMinor);
      }
      if (hasProtocolVersionMajor) {
        output.WriteUInt32(2, field_names[2], ProtocolVersionMajor);
      }
      if (hasOperationStatus) {
        output.WriteUInt32(3, field_names[1], OperationStatus);
      }
      if (hasErrorMessage) {
        output.WriteMessage(4, field_names[0], ErrorMessage);
      }
      if (hasSessionToken) {
        output.WriteString(5, field_names[4], SessionToken);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasProtocolVersionMinor) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, ProtocolVersionMinor);
      }
      if (hasProtocolVersionMajor) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, ProtocolVersionMajor);
      }
      if (hasOperationStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, OperationStatus);
      }
      if (hasErrorMessage) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, ErrorMessage);
      }
      if (hasSessionToken) {
        size += pb::CodedOutputStream.ComputeStringSize(5, SessionToken);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LogonResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogonResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogonResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogonResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LogonResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogonResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LogonResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LogonResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LogonResult result;
      
      private LogonResult PrepareBuilder() {
        if (resultIsReadOnly) {
          LogonResult original = result;
          result = new LogonResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LogonResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LogonResult.Descriptor; }
      }
      
      public override LogonResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LogonResult.DefaultInstance; }
      }
      
      public override LogonResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogonResult) {
          return MergeFrom((LogonResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogonResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LogonResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProtocolVersionMinor) {
          ProtocolVersionMinor = other.ProtocolVersionMinor;
        }
        if (other.HasProtocolVersionMajor) {
          ProtocolVersionMajor = other.ProtocolVersionMajor;
        }
        if (other.HasOperationStatus) {
          OperationStatus = other.OperationStatus;
        }
        if (other.HasErrorMessage) {
          MergeErrorMessage(other.ErrorMessage);
        }
        if (other.HasSessionToken) {
          SessionToken = other.SessionToken;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logonResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logonResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasProtocolVersionMinor = input.ReadUInt32(ref result.protocolVersionMinor_);
              break;
            }
            case 16: {
              result.hasProtocolVersionMajor = input.ReadUInt32(ref result.protocolVersionMajor_);
              break;
            }
            case 24: {
              result.hasOperationStatus = input.ReadUInt32(ref result.operationStatus_);
              break;
            }
            case 34: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasErrorMessage) {
                subBuilder.MergeFrom(ErrorMessage);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ErrorMessage = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              result.hasSessionToken = input.ReadString(ref result.sessionToken_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProtocolVersionMinor {
        get { return result.hasProtocolVersionMinor; }
      }
      [global::System.CLSCompliant(false)]
      public uint ProtocolVersionMinor {
        get { return result.ProtocolVersionMinor; }
        set { SetProtocolVersionMinor(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetProtocolVersionMinor(uint value) {
        PrepareBuilder();
        result.hasProtocolVersionMinor = true;
        result.protocolVersionMinor_ = value;
        return this;
      }
      public Builder ClearProtocolVersionMinor() {
        PrepareBuilder();
        result.hasProtocolVersionMinor = false;
        result.protocolVersionMinor_ = 0;
        return this;
      }
      
      public bool HasProtocolVersionMajor {
        get { return result.hasProtocolVersionMajor; }
      }
      [global::System.CLSCompliant(false)]
      public uint ProtocolVersionMajor {
        get { return result.ProtocolVersionMajor; }
        set { SetProtocolVersionMajor(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetProtocolVersionMajor(uint value) {
        PrepareBuilder();
        result.hasProtocolVersionMajor = true;
        result.protocolVersionMajor_ = value;
        return this;
      }
      public Builder ClearProtocolVersionMajor() {
        PrepareBuilder();
        result.hasProtocolVersionMajor = false;
        result.protocolVersionMajor_ = 0;
        return this;
      }
      
      public bool HasOperationStatus {
        get { return result.hasOperationStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint OperationStatus {
        get { return result.OperationStatus; }
        set { SetOperationStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOperationStatus(uint value) {
        PrepareBuilder();
        result.hasOperationStatus = true;
        result.operationStatus_ = value;
        return this;
      }
      public Builder ClearOperationStatus() {
        PrepareBuilder();
        result.hasOperationStatus = false;
        result.operationStatus_ = 0;
        return this;
      }
      
      public bool HasErrorMessage {
       get { return result.hasErrorMessage; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text ErrorMessage {
        get { return result.ErrorMessage; }
        set { SetErrorMessage(value); }
      }
      public Builder SetErrorMessage(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder SetErrorMessage(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = builderForValue.Build();
        return this;
      }
      public Builder MergeErrorMessage(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasErrorMessage &&
            result.errorMessage_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.errorMessage_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.errorMessage_).MergeFrom(value).BuildPartial();
        } else {
          result.errorMessage_ = value;
        }
        result.hasErrorMessage = true;
        return this;
      }
      public Builder ClearErrorMessage() {
        PrepareBuilder();
        result.hasErrorMessage = false;
        result.errorMessage_ = null;
        return this;
      }
      
      public bool HasSessionToken {
        get { return result.hasSessionToken; }
      }
      public string SessionToken {
        get { return result.SessionToken; }
        set { SetSessionToken(value); }
      }
      public Builder SetSessionToken(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSessionToken = true;
        result.sessionToken_ = value;
        return this;
      }
      public Builder ClearSessionToken() {
        PrepareBuilder();
        result.hasSessionToken = false;
        result.sessionToken_ = "";
        return this;
      }
    }
    static LogonResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RestoreOrJoinSessionResult : pb::GeneratedMessage<RestoreOrJoinSessionResult, RestoreOrJoinSessionResult.Builder> {
    private RestoreOrJoinSessionResult() { }
    private static readonly RestoreOrJoinSessionResult defaultInstance = new RestoreOrJoinSessionResult().MakeReadOnly();
    private static readonly string[] _restoreOrJoinSessionResultFieldNames = new string[] { "error_message", "operation_status" };
    private static readonly uint[] _restoreOrJoinSessionResultFieldTags = new uint[] { 18, 8 };
    public static RestoreOrJoinSessionResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RestoreOrJoinSessionResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RestoreOrJoinSessionResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestoreOrJoinSessionResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RestoreOrJoinSessionResult, RestoreOrJoinSessionResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestoreOrJoinSessionResult__FieldAccessorTable; }
    }
    
    public const int OperationStatusFieldNumber = 1;
    private bool hasOperationStatus;
    private uint operationStatus_;
    public bool HasOperationStatus {
      get { return hasOperationStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint OperationStatus {
      get { return operationStatus_; }
    }
    
    public const int ErrorMessageFieldNumber = 2;
    private bool hasErrorMessage;
    private global::CmsApiSamples.Protocol.CMSApi.Text errorMessage_;
    public bool HasErrorMessage {
      get { return hasErrorMessage; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text ErrorMessage {
      get { return errorMessage_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOperationStatus) return false;
        if (HasErrorMessage) {
          if (!ErrorMessage.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _restoreOrJoinSessionResultFieldNames;
      if (hasOperationStatus) {
        output.WriteUInt32(1, field_names[1], OperationStatus);
      }
      if (hasErrorMessage) {
        output.WriteMessage(2, field_names[0], ErrorMessage);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOperationStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, OperationStatus);
      }
      if (hasErrorMessage) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, ErrorMessage);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RestoreOrJoinSessionResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreOrJoinSessionResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreOrJoinSessionResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreOrJoinSessionResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreOrJoinSessionResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreOrJoinSessionResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RestoreOrJoinSessionResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RestoreOrJoinSessionResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RestoreOrJoinSessionResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreOrJoinSessionResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RestoreOrJoinSessionResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RestoreOrJoinSessionResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RestoreOrJoinSessionResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RestoreOrJoinSessionResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RestoreOrJoinSessionResult result;
      
      private RestoreOrJoinSessionResult PrepareBuilder() {
        if (resultIsReadOnly) {
          RestoreOrJoinSessionResult original = result;
          result = new RestoreOrJoinSessionResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RestoreOrJoinSessionResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSessionResult.Descriptor; }
      }
      
      public override RestoreOrJoinSessionResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSessionResult.DefaultInstance; }
      }
      
      public override RestoreOrJoinSessionResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RestoreOrJoinSessionResult) {
          return MergeFrom((RestoreOrJoinSessionResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RestoreOrJoinSessionResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RestoreOrJoinSessionResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOperationStatus) {
          OperationStatus = other.OperationStatus;
        }
        if (other.HasErrorMessage) {
          MergeErrorMessage(other.ErrorMessage);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_restoreOrJoinSessionResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _restoreOrJoinSessionResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOperationStatus = input.ReadUInt32(ref result.operationStatus_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasErrorMessage) {
                subBuilder.MergeFrom(ErrorMessage);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ErrorMessage = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOperationStatus {
        get { return result.hasOperationStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint OperationStatus {
        get { return result.OperationStatus; }
        set { SetOperationStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOperationStatus(uint value) {
        PrepareBuilder();
        result.hasOperationStatus = true;
        result.operationStatus_ = value;
        return this;
      }
      public Builder ClearOperationStatus() {
        PrepareBuilder();
        result.hasOperationStatus = false;
        result.operationStatus_ = 0;
        return this;
      }
      
      public bool HasErrorMessage {
       get { return result.hasErrorMessage; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text ErrorMessage {
        get { return result.ErrorMessage; }
        set { SetErrorMessage(value); }
      }
      public Builder SetErrorMessage(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder SetErrorMessage(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = builderForValue.Build();
        return this;
      }
      public Builder MergeErrorMessage(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasErrorMessage &&
            result.errorMessage_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.errorMessage_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.errorMessage_).MergeFrom(value).BuildPartial();
        } else {
          result.errorMessage_ = value;
        }
        result.hasErrorMessage = true;
        return this;
      }
      public Builder ClearErrorMessage() {
        PrepareBuilder();
        result.hasErrorMessage = false;
        result.errorMessage_ = null;
        return this;
      }
    }
    static RestoreOrJoinSessionResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoggedOff : pb::GeneratedMessage<LoggedOff, LoggedOff.Builder> {
    private LoggedOff() { }
    private static readonly LoggedOff defaultInstance = new LoggedOff().MakeReadOnly();
    private static readonly string[] _loggedOffFieldNames = new string[] { "reason" };
    private static readonly uint[] _loggedOffFieldTags = new uint[] { 18 };
    public static LoggedOff DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoggedOff DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoggedOff ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoggedOff__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoggedOff, LoggedOff.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoggedOff__FieldAccessorTable; }
    }
    
    public const int ReasonFieldNumber = 2;
    private bool hasReason;
    private global::CmsApiSamples.Protocol.CMSApi.Text reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Reason {
      get { return reason_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasReason) {
          if (!Reason.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loggedOffFieldNames;
      if (hasReason) {
        output.WriteMessage(2, field_names[0], Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasReason) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Reason);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoggedOff ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoggedOff ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoggedOff ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoggedOff ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoggedOff ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoggedOff ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoggedOff ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoggedOff ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoggedOff ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoggedOff ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoggedOff MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoggedOff prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoggedOff, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoggedOff cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoggedOff result;
      
      private LoggedOff PrepareBuilder() {
        if (resultIsReadOnly) {
          LoggedOff original = result;
          result = new LoggedOff();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoggedOff MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoggedOff.Descriptor; }
      }
      
      public override LoggedOff DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoggedOff.DefaultInstance; }
      }
      
      public override LoggedOff BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoggedOff) {
          return MergeFrom((LoggedOff) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoggedOff other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LoggedOff.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasReason) {
          MergeReason(other.Reason);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loggedOffFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loggedOffFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasReason) {
                subBuilder.MergeFrom(Reason);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Reason = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasReason {
       get { return result.hasReason; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder SetReason(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReason(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReason &&
            result.reason_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.reason_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.reason_).MergeFrom(value).BuildPartial();
        } else {
          result.reason_ = value;
        }
        result.hasReason = true;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = null;
        return this;
      }
    }
    static LoggedOff() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserEntitlementServiceRequest : pb::GeneratedMessage<UserEntitlementServiceRequest, UserEntitlementServiceRequest.Builder> {
    private UserEntitlementServiceRequest() { }
    private static readonly UserEntitlementServiceRequest defaultInstance = new UserEntitlementServiceRequest().MakeReadOnly();
    private static readonly string[] _userEntitlementServiceRequestFieldNames = new string[] { "user_id" };
    private static readonly uint[] _userEntitlementServiceRequestFieldTags = new uint[] { 10 };
    public static UserEntitlementServiceRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserEntitlementServiceRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserEntitlementServiceRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UserEntitlementServiceRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserEntitlementServiceRequest, UserEntitlementServiceRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UserEntitlementServiceRequest__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userEntitlementServiceRequestFieldNames;
      if (hasUserId) {
        output.WriteString(1, field_names[0], UserId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserEntitlementServiceRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserEntitlementServiceRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserEntitlementServiceRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserEntitlementServiceRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserEntitlementServiceRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserEntitlementServiceRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserEntitlementServiceRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserEntitlementServiceRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserEntitlementServiceRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserEntitlementServiceRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserEntitlementServiceRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserEntitlementServiceRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserEntitlementServiceRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserEntitlementServiceRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserEntitlementServiceRequest result;
      
      private UserEntitlementServiceRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UserEntitlementServiceRequest original = result;
          result = new UserEntitlementServiceRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserEntitlementServiceRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UserEntitlementServiceRequest.Descriptor; }
      }
      
      public override UserEntitlementServiceRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UserEntitlementServiceRequest.DefaultInstance; }
      }
      
      public override UserEntitlementServiceRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserEntitlementServiceRequest) {
          return MergeFrom((UserEntitlementServiceRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserEntitlementServiceRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UserEntitlementServiceRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userEntitlementServiceRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userEntitlementServiceRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
    }
    static UserEntitlementServiceRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EntitlementCategoryListRequest : pb::GeneratedMessage<EntitlementCategoryListRequest, EntitlementCategoryListRequest.Builder> {
    private EntitlementCategoryListRequest() { }
    private static readonly EntitlementCategoryListRequest defaultInstance = new EntitlementCategoryListRequest().MakeReadOnly();
    private static readonly string[] _entitlementCategoryListRequestFieldNames = new string[] {  };
    private static readonly uint[] _entitlementCategoryListRequestFieldTags = new uint[] {  };
    public static EntitlementCategoryListRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EntitlementCategoryListRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EntitlementCategoryListRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementCategoryListRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EntitlementCategoryListRequest, EntitlementCategoryListRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementCategoryListRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _entitlementCategoryListRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EntitlementCategoryListRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementCategoryListRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementCategoryListRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementCategoryListRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementCategoryListRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementCategoryListRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EntitlementCategoryListRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EntitlementCategoryListRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EntitlementCategoryListRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementCategoryListRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EntitlementCategoryListRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EntitlementCategoryListRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EntitlementCategoryListRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EntitlementCategoryListRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EntitlementCategoryListRequest result;
      
      private EntitlementCategoryListRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          EntitlementCategoryListRequest original = result;
          result = new EntitlementCategoryListRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EntitlementCategoryListRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementCategoryListRequest.Descriptor; }
      }
      
      public override EntitlementCategoryListRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementCategoryListRequest.DefaultInstance; }
      }
      
      public override EntitlementCategoryListRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EntitlementCategoryListRequest) {
          return MergeFrom((EntitlementCategoryListRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EntitlementCategoryListRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.EntitlementCategoryListRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_entitlementCategoryListRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _entitlementCategoryListRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static EntitlementCategoryListRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EntitlementServiceRequest : pb::GeneratedMessage<EntitlementServiceRequest, EntitlementServiceRequest.Builder> {
    private EntitlementServiceRequest() { }
    private static readonly EntitlementServiceRequest defaultInstance = new EntitlementServiceRequest().MakeReadOnly();
    private static readonly string[] _entitlementServiceRequestFieldNames = new string[] { "entitlement_service_id" };
    private static readonly uint[] _entitlementServiceRequestFieldTags = new uint[] { 8 };
    public static EntitlementServiceRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EntitlementServiceRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EntitlementServiceRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementServiceRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EntitlementServiceRequest, EntitlementServiceRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementServiceRequest__FieldAccessorTable; }
    }
    
    public const int EntitlementServiceIdFieldNumber = 1;
    private bool hasEntitlementServiceId;
    private uint entitlementServiceId_;
    public bool HasEntitlementServiceId {
      get { return hasEntitlementServiceId; }
    }
    [global::System.CLSCompliant(false)]
    public uint EntitlementServiceId {
      get { return entitlementServiceId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntitlementServiceId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _entitlementServiceRequestFieldNames;
      if (hasEntitlementServiceId) {
        output.WriteUInt32(1, field_names[0], EntitlementServiceId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEntitlementServiceId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, EntitlementServiceId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EntitlementServiceRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementServiceRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementServiceRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementServiceRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementServiceRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementServiceRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EntitlementServiceRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EntitlementServiceRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EntitlementServiceRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementServiceRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EntitlementServiceRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EntitlementServiceRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EntitlementServiceRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EntitlementServiceRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EntitlementServiceRequest result;
      
      private EntitlementServiceRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          EntitlementServiceRequest original = result;
          result = new EntitlementServiceRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EntitlementServiceRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceRequest.Descriptor; }
      }
      
      public override EntitlementServiceRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceRequest.DefaultInstance; }
      }
      
      public override EntitlementServiceRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EntitlementServiceRequest) {
          return MergeFrom((EntitlementServiceRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EntitlementServiceRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntitlementServiceId) {
          EntitlementServiceId = other.EntitlementServiceId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_entitlementServiceRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _entitlementServiceRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasEntitlementServiceId = input.ReadUInt32(ref result.entitlementServiceId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntitlementServiceId {
        get { return result.hasEntitlementServiceId; }
      }
      [global::System.CLSCompliant(false)]
      public uint EntitlementServiceId {
        get { return result.EntitlementServiceId; }
        set { SetEntitlementServiceId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetEntitlementServiceId(uint value) {
        PrepareBuilder();
        result.hasEntitlementServiceId = true;
        result.entitlementServiceId_ = value;
        return this;
      }
      public Builder ClearEntitlementServiceId() {
        PrepareBuilder();
        result.hasEntitlementServiceId = false;
        result.entitlementServiceId_ = 0;
        return this;
      }
    }
    static EntitlementServiceRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EntitlementServiceListRequest : pb::GeneratedMessage<EntitlementServiceListRequest, EntitlementServiceListRequest.Builder> {
    private EntitlementServiceListRequest() { }
    private static readonly EntitlementServiceListRequest defaultInstance = new EntitlementServiceListRequest().MakeReadOnly();
    private static readonly string[] _entitlementServiceListRequestFieldNames = new string[] { "brokerage_id" };
    private static readonly uint[] _entitlementServiceListRequestFieldTags = new uint[] { 10 };
    public static EntitlementServiceListRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EntitlementServiceListRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EntitlementServiceListRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementServiceListRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EntitlementServiceListRequest, EntitlementServiceListRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementServiceListRequest__FieldAccessorTable; }
    }
    
    public const int BrokerageIdFieldNumber = 1;
    private pbc::PopsicleList<string> brokerageId_ = new pbc::PopsicleList<string>();
    public scg::IList<string> BrokerageIdList {
      get { return pbc::Lists.AsReadOnly(brokerageId_); }
    }
    public int BrokerageIdCount {
      get { return brokerageId_.Count; }
    }
    public string GetBrokerageId(int index) {
      return brokerageId_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _entitlementServiceListRequestFieldNames;
      if (brokerageId_.Count > 0) {
        output.WriteStringArray(1, field_names[0], brokerageId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (string element in BrokerageIdList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * brokerageId_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EntitlementServiceListRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementServiceListRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementServiceListRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementServiceListRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementServiceListRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementServiceListRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EntitlementServiceListRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EntitlementServiceListRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EntitlementServiceListRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementServiceListRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EntitlementServiceListRequest MakeReadOnly() {
      brokerageId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EntitlementServiceListRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EntitlementServiceListRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EntitlementServiceListRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EntitlementServiceListRequest result;
      
      private EntitlementServiceListRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          EntitlementServiceListRequest original = result;
          result = new EntitlementServiceListRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EntitlementServiceListRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceListRequest.Descriptor; }
      }
      
      public override EntitlementServiceListRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceListRequest.DefaultInstance; }
      }
      
      public override EntitlementServiceListRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EntitlementServiceListRequest) {
          return MergeFrom((EntitlementServiceListRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EntitlementServiceListRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceListRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.brokerageId_.Count != 0) {
          result.brokerageId_.Add(other.brokerageId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_entitlementServiceListRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _entitlementServiceListRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadStringArray(tag, field_name, result.brokerageId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<string> BrokerageIdList {
        get { return PrepareBuilder().brokerageId_; }
      }
      public int BrokerageIdCount {
        get { return result.BrokerageIdCount; }
      }
      public string GetBrokerageId(int index) {
        return result.GetBrokerageId(index);
      }
      public Builder SetBrokerageId(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.brokerageId_[index] = value;
        return this;
      }
      public Builder AddBrokerageId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.brokerageId_.Add(value);
        return this;
      }
      public Builder AddRangeBrokerageId(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.brokerageId_.Add(values);
        return this;
      }
      public Builder ClearBrokerageId() {
        PrepareBuilder();
        result.brokerageId_.Clear();
        return this;
      }
    }
    static EntitlementServiceListRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EntitlementService : pb::GeneratedMessage<EntitlementService, EntitlementService.Builder> {
    private EntitlementService() { }
    private static readonly EntitlementService defaultInstance = new EntitlementService().MakeReadOnly();
    private static readonly string[] _entitlementServiceFieldNames = new string[] { "agreement", "agreement_required", "authorization_type", "billing_brokerage_required", "brokerage_assignable", "brokerage_authorization_required", "category_id", "constraint", "description", "id", "items", "login_domains", "name", "options", "price", "subscriber_type" };
    private static readonly uint[] _entitlementServiceFieldTags = new uint[] { 74, 64, 48, 88, 120, 128, 24, 58, 42, 8, 114, 96, 18, 104, 34, 80 };
    public static EntitlementService DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EntitlementService DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EntitlementService ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementService__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EntitlementService, EntitlementService.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementService__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum AuthorizationType {
        DISABLE_ONLY = 1,
        VIEW_ONLY = 2,
        ENABLE_ONLY = 3,
        FULL_CONTROL = 4,
      }
      
      public enum ServiceOption {
        ONLY_FOR_TRADERS = 1,
        FREE_FOR_TRADERS = 2,
      }
      
    }
    #endregion
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private uint id_;
    public bool HasId {
      get { return hasId; }
    }
    [global::System.CLSCompliant(false)]
    public uint Id {
      get { return id_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private global::CmsApiSamples.Protocol.CMSApi.Text name_;
    public bool HasName {
      get { return hasName; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Name {
      get { return name_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public const int CategoryIdFieldNumber = 3;
    private pbc::PopsicleList<uint> categoryId_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> CategoryIdList {
      get { return pbc::Lists.AsReadOnly(categoryId_); }
    }
    public int CategoryIdCount {
      get { return categoryId_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetCategoryId(int index) {
      return categoryId_[index];
    }
    
    public const int PriceFieldNumber = 4;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Price> price_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Price>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Price> PriceList {
      get { return price_; }
    }
    public int PriceCount {
      get { return price_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Price GetPrice(int index) {
      return price_[index];
    }
    
    public const int DescriptionFieldNumber = 5;
    private bool hasDescription;
    private global::CmsApiSamples.Protocol.CMSApi.Text description_;
    public bool HasDescription {
      get { return hasDescription; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Description {
      get { return description_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public const int AuthorizationTypeFieldNumber = 6;
    private bool hasAuthorizationType;
    private uint authorizationType_;
    public bool HasAuthorizationType {
      get { return hasAuthorizationType; }
    }
    [global::System.CLSCompliant(false)]
    public uint AuthorizationType {
      get { return authorizationType_; }
    }
    
    public const int ConstraintFieldNumber = 7;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint> constraint_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint> ConstraintList {
      get { return constraint_; }
    }
    public int ConstraintCount {
      get { return constraint_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint GetConstraint(int index) {
      return constraint_[index];
    }
    
    public const int AgreementRequiredFieldNumber = 8;
    private bool hasAgreementRequired;
    private bool agreementRequired_;
    public bool HasAgreementRequired {
      get { return hasAgreementRequired; }
    }
    public bool AgreementRequired {
      get { return agreementRequired_; }
    }
    
    public const int AgreementFieldNumber = 9;
    private bool hasAgreement;
    private global::CmsApiSamples.Protocol.CMSApi.Text agreement_;
    public bool HasAgreement {
      get { return hasAgreement; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Agreement {
      get { return agreement_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public const int SubscriberTypeFieldNumber = 10;
    private bool hasSubscriberType;
    private uint subscriberType_;
    public bool HasSubscriberType {
      get { return hasSubscriberType; }
    }
    [global::System.CLSCompliant(false)]
    public uint SubscriberType {
      get { return subscriberType_; }
    }
    
    public const int BillingBrokerageRequiredFieldNumber = 11;
    private bool hasBillingBrokerageRequired;
    private bool billingBrokerageRequired_;
    public bool HasBillingBrokerageRequired {
      get { return hasBillingBrokerageRequired; }
    }
    public bool BillingBrokerageRequired {
      get { return billingBrokerageRequired_; }
    }
    
    public const int LoginDomainsFieldNumber = 12;
    private pbc::PopsicleList<uint> loginDomains_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> LoginDomainsList {
      get { return pbc::Lists.AsReadOnly(loginDomains_); }
    }
    public int LoginDomainsCount {
      get { return loginDomains_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetLoginDomains(int index) {
      return loginDomains_[index];
    }
    
    public const int OptionsFieldNumber = 13;
    private pbc::PopsicleList<uint> options_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> OptionsList {
      get { return pbc::Lists.AsReadOnly(options_); }
    }
    public int OptionsCount {
      get { return options_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetOptions(int index) {
      return options_[index];
    }
    
    public const int ItemsFieldNumber = 14;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem> items_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem> ItemsList {
      get { return items_; }
    }
    public int ItemsCount {
      get { return items_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem GetItems(int index) {
      return items_[index];
    }
    
    public const int BrokerageAssignableFieldNumber = 15;
    private bool hasBrokerageAssignable;
    private bool brokerageAssignable_;
    public bool HasBrokerageAssignable {
      get { return hasBrokerageAssignable; }
    }
    public bool BrokerageAssignable {
      get { return brokerageAssignable_; }
    }
    
    public const int BrokerageAuthorizationRequiredFieldNumber = 16;
    private bool hasBrokerageAuthorizationRequired;
    private bool brokerageAuthorizationRequired_;
    public bool HasBrokerageAuthorizationRequired {
      get { return hasBrokerageAuthorizationRequired; }
    }
    public bool BrokerageAuthorizationRequired {
      get { return brokerageAuthorizationRequired_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasName) return false;
        if (!hasDescription) return false;
        if (!hasAuthorizationType) return false;
        if (!Name.IsInitialized) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.Price element in PriceList) {
          if (!element.IsInitialized) return false;
        }
        if (!Description.IsInitialized) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint element in ConstraintList) {
          if (!element.IsInitialized) return false;
        }
        if (HasAgreement) {
          if (!Agreement.IsInitialized) return false;
        }
        foreach (global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem element in ItemsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _entitlementServiceFieldNames;
      if (hasId) {
        output.WriteUInt32(1, field_names[9], Id);
      }
      if (hasName) {
        output.WriteMessage(2, field_names[12], Name);
      }
      if (categoryId_.Count > 0) {
        output.WriteUInt32Array(3, field_names[6], categoryId_);
      }
      if (price_.Count > 0) {
        output.WriteMessageArray(4, field_names[14], price_);
      }
      if (hasDescription) {
        output.WriteMessage(5, field_names[8], Description);
      }
      if (hasAuthorizationType) {
        output.WriteUInt32(6, field_names[2], AuthorizationType);
      }
      if (constraint_.Count > 0) {
        output.WriteMessageArray(7, field_names[7], constraint_);
      }
      if (hasAgreementRequired) {
        output.WriteBool(8, field_names[1], AgreementRequired);
      }
      if (hasAgreement) {
        output.WriteMessage(9, field_names[0], Agreement);
      }
      if (hasSubscriberType) {
        output.WriteUInt32(10, field_names[15], SubscriberType);
      }
      if (hasBillingBrokerageRequired) {
        output.WriteBool(11, field_names[3], BillingBrokerageRequired);
      }
      if (loginDomains_.Count > 0) {
        output.WriteUInt32Array(12, field_names[11], loginDomains_);
      }
      if (options_.Count > 0) {
        output.WriteUInt32Array(13, field_names[13], options_);
      }
      if (items_.Count > 0) {
        output.WriteMessageArray(14, field_names[10], items_);
      }
      if (hasBrokerageAssignable) {
        output.WriteBool(15, field_names[4], BrokerageAssignable);
      }
      if (hasBrokerageAuthorizationRequired) {
        output.WriteBool(16, field_names[5], BrokerageAuthorizationRequired);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Id);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Name);
      }
      {
        int dataSize = 0;
        foreach (uint element in CategoryIdList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * categoryId_.Count;
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.Price element in PriceList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, Description);
      }
      if (hasAuthorizationType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, AuthorizationType);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint element in ConstraintList) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, element);
      }
      if (hasAgreementRequired) {
        size += pb::CodedOutputStream.ComputeBoolSize(8, AgreementRequired);
      }
      if (hasAgreement) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, Agreement);
      }
      if (hasSubscriberType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(10, SubscriberType);
      }
      if (hasBillingBrokerageRequired) {
        size += pb::CodedOutputStream.ComputeBoolSize(11, BillingBrokerageRequired);
      }
      {
        int dataSize = 0;
        foreach (uint element in LoginDomainsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * loginDomains_.Count;
      }
      {
        int dataSize = 0;
        foreach (uint element in OptionsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * options_.Count;
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem element in ItemsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(14, element);
      }
      if (hasBrokerageAssignable) {
        size += pb::CodedOutputStream.ComputeBoolSize(15, BrokerageAssignable);
      }
      if (hasBrokerageAuthorizationRequired) {
        size += pb::CodedOutputStream.ComputeBoolSize(16, BrokerageAuthorizationRequired);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EntitlementService ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementService ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementService ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementService ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementService ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementService ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EntitlementService ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EntitlementService ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EntitlementService ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementService ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EntitlementService MakeReadOnly() {
      categoryId_.MakeReadOnly();
      price_.MakeReadOnly();
      constraint_.MakeReadOnly();
      loginDomains_.MakeReadOnly();
      options_.MakeReadOnly();
      items_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EntitlementService prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EntitlementService, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EntitlementService cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EntitlementService result;
      
      private EntitlementService PrepareBuilder() {
        if (resultIsReadOnly) {
          EntitlementService original = result;
          result = new EntitlementService();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EntitlementService MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementService.Descriptor; }
      }
      
      public override EntitlementService DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementService.DefaultInstance; }
      }
      
      public override EntitlementService BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EntitlementService) {
          return MergeFrom((EntitlementService) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EntitlementService other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.EntitlementService.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasName) {
          MergeName(other.Name);
        }
        if (other.categoryId_.Count != 0) {
          result.categoryId_.Add(other.categoryId_);
        }
        if (other.price_.Count != 0) {
          result.price_.Add(other.price_);
        }
        if (other.HasDescription) {
          MergeDescription(other.Description);
        }
        if (other.HasAuthorizationType) {
          AuthorizationType = other.AuthorizationType;
        }
        if (other.constraint_.Count != 0) {
          result.constraint_.Add(other.constraint_);
        }
        if (other.HasAgreementRequired) {
          AgreementRequired = other.AgreementRequired;
        }
        if (other.HasAgreement) {
          MergeAgreement(other.Agreement);
        }
        if (other.HasSubscriberType) {
          SubscriberType = other.SubscriberType;
        }
        if (other.HasBillingBrokerageRequired) {
          BillingBrokerageRequired = other.BillingBrokerageRequired;
        }
        if (other.loginDomains_.Count != 0) {
          result.loginDomains_.Add(other.loginDomains_);
        }
        if (other.options_.Count != 0) {
          result.options_.Add(other.options_);
        }
        if (other.items_.Count != 0) {
          result.items_.Add(other.items_);
        }
        if (other.HasBrokerageAssignable) {
          BrokerageAssignable = other.BrokerageAssignable;
        }
        if (other.HasBrokerageAuthorizationRequired) {
          BrokerageAuthorizationRequired = other.BrokerageAuthorizationRequired;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_entitlementServiceFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _entitlementServiceFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt32(ref result.id_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasName) {
                subBuilder.MergeFrom(Name);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Name = subBuilder.BuildPartial();
              break;
            }
            case 26:
            case 24: {
              input.ReadUInt32Array(tag, field_name, result.categoryId_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.price_, global::CmsApiSamples.Protocol.CMSApi.Price.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasDescription) {
                subBuilder.MergeFrom(Description);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Description = subBuilder.BuildPartial();
              break;
            }
            case 48: {
              result.hasAuthorizationType = input.ReadUInt32(ref result.authorizationType_);
              break;
            }
            case 58: {
              input.ReadMessageArray(tag, field_name, result.constraint_, global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint.DefaultInstance, extensionRegistry);
              break;
            }
            case 64: {
              result.hasAgreementRequired = input.ReadBool(ref result.agreementRequired_);
              break;
            }
            case 74: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasAgreement) {
                subBuilder.MergeFrom(Agreement);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Agreement = subBuilder.BuildPartial();
              break;
            }
            case 80: {
              result.hasSubscriberType = input.ReadUInt32(ref result.subscriberType_);
              break;
            }
            case 88: {
              result.hasBillingBrokerageRequired = input.ReadBool(ref result.billingBrokerageRequired_);
              break;
            }
            case 98:
            case 96: {
              input.ReadUInt32Array(tag, field_name, result.loginDomains_);
              break;
            }
            case 106:
            case 104: {
              input.ReadUInt32Array(tag, field_name, result.options_);
              break;
            }
            case 114: {
              input.ReadMessageArray(tag, field_name, result.items_, global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem.DefaultInstance, extensionRegistry);
              break;
            }
            case 120: {
              result.hasBrokerageAssignable = input.ReadBool(ref result.brokerageAssignable_);
              break;
            }
            case 128: {
              result.hasBrokerageAuthorizationRequired = input.ReadBool(ref result.brokerageAuthorizationRequired_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      [global::System.CLSCompliant(false)]
      public uint Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetId(uint value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasName {
       get { return result.hasName; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = builderForValue.Build();
        return this;
      }
      public Builder MergeName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasName &&
            result.name_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.name_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.name_).MergeFrom(value).BuildPartial();
        } else {
          result.name_ = value;
        }
        result.hasName = true;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = null;
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> CategoryIdList {
        get { return PrepareBuilder().categoryId_; }
      }
      public int CategoryIdCount {
        get { return result.CategoryIdCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetCategoryId(int index) {
        return result.GetCategoryId(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCategoryId(int index, uint value) {
        PrepareBuilder();
        result.categoryId_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddCategoryId(uint value) {
        PrepareBuilder();
        result.categoryId_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeCategoryId(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.categoryId_.Add(values);
        return this;
      }
      public Builder ClearCategoryId() {
        PrepareBuilder();
        result.categoryId_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Price> PriceList {
        get { return PrepareBuilder().price_; }
      }
      public int PriceCount {
        get { return result.PriceCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Price GetPrice(int index) {
        return result.GetPrice(index);
      }
      public Builder SetPrice(int index, global::CmsApiSamples.Protocol.CMSApi.Price value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.price_[index] = value;
        return this;
      }
      public Builder SetPrice(int index, global::CmsApiSamples.Protocol.CMSApi.Price.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.price_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPrice(global::CmsApiSamples.Protocol.CMSApi.Price value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.price_.Add(value);
        return this;
      }
      public Builder AddPrice(global::CmsApiSamples.Protocol.CMSApi.Price.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.price_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePrice(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Price> values) {
        PrepareBuilder();
        result.price_.Add(values);
        return this;
      }
      public Builder ClearPrice() {
        PrepareBuilder();
        result.price_.Clear();
        return this;
      }
      
      public bool HasDescription {
       get { return result.hasDescription; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder SetDescription(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDescription(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDescription &&
            result.description_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.description_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.description_).MergeFrom(value).BuildPartial();
        } else {
          result.description_ = value;
        }
        result.hasDescription = true;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = null;
        return this;
      }
      
      public bool HasAuthorizationType {
        get { return result.hasAuthorizationType; }
      }
      [global::System.CLSCompliant(false)]
      public uint AuthorizationType {
        get { return result.AuthorizationType; }
        set { SetAuthorizationType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAuthorizationType(uint value) {
        PrepareBuilder();
        result.hasAuthorizationType = true;
        result.authorizationType_ = value;
        return this;
      }
      public Builder ClearAuthorizationType() {
        PrepareBuilder();
        result.hasAuthorizationType = false;
        result.authorizationType_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint> ConstraintList {
        get { return PrepareBuilder().constraint_; }
      }
      public int ConstraintCount {
        get { return result.ConstraintCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint GetConstraint(int index) {
        return result.GetConstraint(index);
      }
      public Builder SetConstraint(int index, global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.constraint_[index] = value;
        return this;
      }
      public Builder SetConstraint(int index, global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.constraint_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddConstraint(global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.constraint_.Add(value);
        return this;
      }
      public Builder AddConstraint(global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.constraint_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeConstraint(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint> values) {
        PrepareBuilder();
        result.constraint_.Add(values);
        return this;
      }
      public Builder ClearConstraint() {
        PrepareBuilder();
        result.constraint_.Clear();
        return this;
      }
      
      public bool HasAgreementRequired {
        get { return result.hasAgreementRequired; }
      }
      public bool AgreementRequired {
        get { return result.AgreementRequired; }
        set { SetAgreementRequired(value); }
      }
      public Builder SetAgreementRequired(bool value) {
        PrepareBuilder();
        result.hasAgreementRequired = true;
        result.agreementRequired_ = value;
        return this;
      }
      public Builder ClearAgreementRequired() {
        PrepareBuilder();
        result.hasAgreementRequired = false;
        result.agreementRequired_ = false;
        return this;
      }
      
      public bool HasAgreement {
       get { return result.hasAgreement; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Agreement {
        get { return result.Agreement; }
        set { SetAgreement(value); }
      }
      public Builder SetAgreement(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgreement = true;
        result.agreement_ = value;
        return this;
      }
      public Builder SetAgreement(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgreement = true;
        result.agreement_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgreement(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgreement &&
            result.agreement_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.agreement_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.agreement_).MergeFrom(value).BuildPartial();
        } else {
          result.agreement_ = value;
        }
        result.hasAgreement = true;
        return this;
      }
      public Builder ClearAgreement() {
        PrepareBuilder();
        result.hasAgreement = false;
        result.agreement_ = null;
        return this;
      }
      
      public bool HasSubscriberType {
        get { return result.hasSubscriberType; }
      }
      [global::System.CLSCompliant(false)]
      public uint SubscriberType {
        get { return result.SubscriberType; }
        set { SetSubscriberType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSubscriberType(uint value) {
        PrepareBuilder();
        result.hasSubscriberType = true;
        result.subscriberType_ = value;
        return this;
      }
      public Builder ClearSubscriberType() {
        PrepareBuilder();
        result.hasSubscriberType = false;
        result.subscriberType_ = 0;
        return this;
      }
      
      public bool HasBillingBrokerageRequired {
        get { return result.hasBillingBrokerageRequired; }
      }
      public bool BillingBrokerageRequired {
        get { return result.BillingBrokerageRequired; }
        set { SetBillingBrokerageRequired(value); }
      }
      public Builder SetBillingBrokerageRequired(bool value) {
        PrepareBuilder();
        result.hasBillingBrokerageRequired = true;
        result.billingBrokerageRequired_ = value;
        return this;
      }
      public Builder ClearBillingBrokerageRequired() {
        PrepareBuilder();
        result.hasBillingBrokerageRequired = false;
        result.billingBrokerageRequired_ = false;
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> LoginDomainsList {
        get { return PrepareBuilder().loginDomains_; }
      }
      public int LoginDomainsCount {
        get { return result.LoginDomainsCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetLoginDomains(int index) {
        return result.GetLoginDomains(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetLoginDomains(int index, uint value) {
        PrepareBuilder();
        result.loginDomains_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddLoginDomains(uint value) {
        PrepareBuilder();
        result.loginDomains_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeLoginDomains(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.loginDomains_.Add(values);
        return this;
      }
      public Builder ClearLoginDomains() {
        PrepareBuilder();
        result.loginDomains_.Clear();
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> OptionsList {
        get { return PrepareBuilder().options_; }
      }
      public int OptionsCount {
        get { return result.OptionsCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetOptions(int index) {
        return result.GetOptions(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOptions(int index, uint value) {
        PrepareBuilder();
        result.options_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddOptions(uint value) {
        PrepareBuilder();
        result.options_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeOptions(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.options_.Add(values);
        return this;
      }
      public Builder ClearOptions() {
        PrepareBuilder();
        result.options_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem> ItemsList {
        get { return PrepareBuilder().items_; }
      }
      public int ItemsCount {
        get { return result.ItemsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem GetItems(int index) {
        return result.GetItems(index);
      }
      public Builder SetItems(int index, global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_[index] = value;
        return this;
      }
      public Builder SetItems(int index, global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddItems(global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_.Add(value);
        return this;
      }
      public Builder AddItems(global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeItems(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem> values) {
        PrepareBuilder();
        result.items_.Add(values);
        return this;
      }
      public Builder ClearItems() {
        PrepareBuilder();
        result.items_.Clear();
        return this;
      }
      
      public bool HasBrokerageAssignable {
        get { return result.hasBrokerageAssignable; }
      }
      public bool BrokerageAssignable {
        get { return result.BrokerageAssignable; }
        set { SetBrokerageAssignable(value); }
      }
      public Builder SetBrokerageAssignable(bool value) {
        PrepareBuilder();
        result.hasBrokerageAssignable = true;
        result.brokerageAssignable_ = value;
        return this;
      }
      public Builder ClearBrokerageAssignable() {
        PrepareBuilder();
        result.hasBrokerageAssignable = false;
        result.brokerageAssignable_ = false;
        return this;
      }
      
      public bool HasBrokerageAuthorizationRequired {
        get { return result.hasBrokerageAuthorizationRequired; }
      }
      public bool BrokerageAuthorizationRequired {
        get { return result.BrokerageAuthorizationRequired; }
        set { SetBrokerageAuthorizationRequired(value); }
      }
      public Builder SetBrokerageAuthorizationRequired(bool value) {
        PrepareBuilder();
        result.hasBrokerageAuthorizationRequired = true;
        result.brokerageAuthorizationRequired_ = value;
        return this;
      }
      public Builder ClearBrokerageAuthorizationRequired() {
        PrepareBuilder();
        result.hasBrokerageAuthorizationRequired = false;
        result.brokerageAuthorizationRequired_ = false;
        return this;
      }
    }
    static EntitlementService() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EntitlementServiceItem : pb::GeneratedMessage<EntitlementServiceItem, EntitlementServiceItem.Builder> {
    private EntitlementServiceItem() { }
    private static readonly EntitlementServiceItem defaultInstance = new EntitlementServiceItem().MakeReadOnly();
    private static readonly string[] _entitlementServiceItemFieldNames = new string[] { "id", "name", "type" };
    private static readonly uint[] _entitlementServiceItemFieldTags = new uint[] { 10, 26, 18 };
    public static EntitlementServiceItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EntitlementServiceItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EntitlementServiceItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementServiceItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EntitlementServiceItem, EntitlementServiceItem.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementServiceItem__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType type_;
    public bool HasType {
      get { return hasType; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType Type {
      get { return type_ ?? global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType.DefaultInstance; }
    }
    
    public const int NameFieldNumber = 3;
    private bool hasName;
    private global::CmsApiSamples.Protocol.CMSApi.Text name_;
    public bool HasName {
      get { return hasName; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Name {
      get { return name_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasType) {
          if (!Type.IsInitialized) return false;
        }
        if (HasName) {
          if (!Name.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _entitlementServiceItemFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      if (hasType) {
        output.WriteMessage(2, field_names[2], Type);
      }
      if (hasName) {
        output.WriteMessage(3, field_names[1], Name);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Type);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Name);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EntitlementServiceItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementServiceItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementServiceItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementServiceItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementServiceItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementServiceItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EntitlementServiceItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EntitlementServiceItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EntitlementServiceItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementServiceItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EntitlementServiceItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EntitlementServiceItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EntitlementServiceItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EntitlementServiceItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EntitlementServiceItem result;
      
      private EntitlementServiceItem PrepareBuilder() {
        if (resultIsReadOnly) {
          EntitlementServiceItem original = result;
          result = new EntitlementServiceItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EntitlementServiceItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem.Descriptor; }
      }
      
      public override EntitlementServiceItem DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem.DefaultInstance; }
      }
      
      public override EntitlementServiceItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EntitlementServiceItem) {
          return MergeFrom((EntitlementServiceItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EntitlementServiceItem other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasType) {
          MergeType(other.Type);
        }
        if (other.HasName) {
          MergeName(other.Name);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_entitlementServiceItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _entitlementServiceItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType.CreateBuilder();
              if (result.hasType) {
                subBuilder.MergeFrom(Type);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Type = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasName) {
                subBuilder.MergeFrom(Name);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Name = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder SetType(global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = builderForValue.Build();
        return this;
      }
      public Builder MergeType(global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasType &&
            result.type_ != global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType.DefaultInstance) {
            result.type_ = global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType.CreateBuilder(result.type_).MergeFrom(value).BuildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = null;
        return this;
      }
      
      public bool HasName {
       get { return result.hasName; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = builderForValue.Build();
        return this;
      }
      public Builder MergeName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasName &&
            result.name_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.name_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.name_).MergeFrom(value).BuildPartial();
        } else {
          result.name_ = value;
        }
        result.hasName = true;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = null;
        return this;
      }
    }
    static EntitlementServiceItem() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EntitlementServiceItemType : pb::GeneratedMessage<EntitlementServiceItemType, EntitlementServiceItemType.Builder> {
    private EntitlementServiceItemType() { }
    private static readonly EntitlementServiceItemType defaultInstance = new EntitlementServiceItemType().MakeReadOnly();
    private static readonly string[] _entitlementServiceItemTypeFieldNames = new string[] { "description", "id", "name" };
    private static readonly uint[] _entitlementServiceItemTypeFieldTags = new uint[] { 26, 10, 18 };
    public static EntitlementServiceItemType DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EntitlementServiceItemType DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EntitlementServiceItemType ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementServiceItemType__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EntitlementServiceItemType, EntitlementServiceItemType.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementServiceItemType__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private global::CmsApiSamples.Protocol.CMSApi.Text name_;
    public bool HasName {
      get { return hasName; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Name {
      get { return name_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public const int DescriptionFieldNumber = 3;
    private bool hasDescription;
    private global::CmsApiSamples.Protocol.CMSApi.Text description_;
    public bool HasDescription {
      get { return hasDescription; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Description {
      get { return description_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasName) {
          if (!Name.IsInitialized) return false;
        }
        if (HasDescription) {
          if (!Description.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _entitlementServiceItemTypeFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[1], Id);
      }
      if (hasName) {
        output.WriteMessage(2, field_names[2], Name);
      }
      if (hasDescription) {
        output.WriteMessage(3, field_names[0], Description);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Name);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Description);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EntitlementServiceItemType ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementServiceItemType ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementServiceItemType ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementServiceItemType ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementServiceItemType ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementServiceItemType ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EntitlementServiceItemType ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EntitlementServiceItemType ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EntitlementServiceItemType ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementServiceItemType ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EntitlementServiceItemType MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EntitlementServiceItemType prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EntitlementServiceItemType, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EntitlementServiceItemType cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EntitlementServiceItemType result;
      
      private EntitlementServiceItemType PrepareBuilder() {
        if (resultIsReadOnly) {
          EntitlementServiceItemType original = result;
          result = new EntitlementServiceItemType();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EntitlementServiceItemType MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType.Descriptor; }
      }
      
      public override EntitlementServiceItemType DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType.DefaultInstance; }
      }
      
      public override EntitlementServiceItemType BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EntitlementServiceItemType) {
          return MergeFrom((EntitlementServiceItemType) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EntitlementServiceItemType other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.EntitlementServiceItemType.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasName) {
          MergeName(other.Name);
        }
        if (other.HasDescription) {
          MergeDescription(other.Description);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_entitlementServiceItemTypeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _entitlementServiceItemTypeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasName) {
                subBuilder.MergeFrom(Name);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Name = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasDescription) {
                subBuilder.MergeFrom(Description);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Description = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasName {
       get { return result.hasName; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = builderForValue.Build();
        return this;
      }
      public Builder MergeName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasName &&
            result.name_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.name_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.name_).MergeFrom(value).BuildPartial();
        } else {
          result.name_ = value;
        }
        result.hasName = true;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = null;
        return this;
      }
      
      public bool HasDescription {
       get { return result.hasDescription; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder SetDescription(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDescription(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDescription &&
            result.description_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.description_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.description_).MergeFrom(value).BuildPartial();
        } else {
          result.description_ = value;
        }
        result.hasDescription = true;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = null;
        return this;
      }
    }
    static EntitlementServiceItemType() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Price : pb::GeneratedMessage<Price, Price.Builder> {
    private Price() { }
    private static readonly Price defaultInstance = new Price().MakeReadOnly();
    private static readonly string[] _priceFieldNames = new string[] { "currency", "value" };
    private static readonly uint[] _priceFieldTags = new uint[] { 10, 17 };
    public static Price DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Price DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Price ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Price__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Price, Price.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Price__FieldAccessorTable; }
    }
    
    public const int CurrencyFieldNumber = 1;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private double value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public double Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCurrency) return false;
        if (!hasValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _priceFieldNames;
      if (hasCurrency) {
        output.WriteString(1, field_names[0], Currency);
      }
      if (hasValue) {
        output.WriteDouble(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCurrency) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Currency);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeDoubleSize(2, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Price ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Price ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Price ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Price ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Price ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Price ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Price ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Price ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Price ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Price ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Price MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Price prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Price, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Price cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Price result;
      
      private Price PrepareBuilder() {
        if (resultIsReadOnly) {
          Price original = result;
          result = new Price();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Price MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Price.Descriptor; }
      }
      
      public override Price DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Price.DefaultInstance; }
      }
      
      public override Price BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Price) {
          return MergeFrom((Price) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Price other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Price.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_priceFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _priceFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 17: {
              result.hasValue = input.ReadDouble(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public double Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(double value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0D;
        return this;
      }
    }
    static Price() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EntitlementCategory : pb::GeneratedMessage<EntitlementCategory, EntitlementCategory.Builder> {
    private EntitlementCategory() { }
    private static readonly EntitlementCategory defaultInstance = new EntitlementCategory().MakeReadOnly();
    private static readonly string[] _entitlementCategoryFieldNames = new string[] { "brokerage_assignable", "id", "name", "sub_category" };
    private static readonly uint[] _entitlementCategoryFieldTags = new uint[] { 32, 8, 18, 26 };
    public static EntitlementCategory DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EntitlementCategory DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EntitlementCategory ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementCategory__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EntitlementCategory, EntitlementCategory.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementCategory__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private uint id_;
    public bool HasId {
      get { return hasId; }
    }
    [global::System.CLSCompliant(false)]
    public uint Id {
      get { return id_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private global::CmsApiSamples.Protocol.CMSApi.Text name_;
    public bool HasName {
      get { return hasName; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Name {
      get { return name_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public const int SubCategoryFieldNumber = 3;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory> subCategory_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory> SubCategoryList {
      get { return subCategory_; }
    }
    public int SubCategoryCount {
      get { return subCategory_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory GetSubCategory(int index) {
      return subCategory_[index];
    }
    
    public const int BrokerageAssignableFieldNumber = 4;
    private bool hasBrokerageAssignable;
    private bool brokerageAssignable_;
    public bool HasBrokerageAssignable {
      get { return hasBrokerageAssignable; }
    }
    public bool BrokerageAssignable {
      get { return brokerageAssignable_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasName) return false;
        if (!Name.IsInitialized) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory element in SubCategoryList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _entitlementCategoryFieldNames;
      if (hasId) {
        output.WriteUInt32(1, field_names[1], Id);
      }
      if (hasName) {
        output.WriteMessage(2, field_names[2], Name);
      }
      if (subCategory_.Count > 0) {
        output.WriteMessageArray(3, field_names[3], subCategory_);
      }
      if (hasBrokerageAssignable) {
        output.WriteBool(4, field_names[0], BrokerageAssignable);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Id);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Name);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory element in SubCategoryList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasBrokerageAssignable) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, BrokerageAssignable);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EntitlementCategory ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementCategory ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementCategory ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementCategory ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementCategory ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementCategory ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EntitlementCategory ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EntitlementCategory ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EntitlementCategory ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementCategory ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EntitlementCategory MakeReadOnly() {
      subCategory_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EntitlementCategory prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EntitlementCategory, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EntitlementCategory cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EntitlementCategory result;
      
      private EntitlementCategory PrepareBuilder() {
        if (resultIsReadOnly) {
          EntitlementCategory original = result;
          result = new EntitlementCategory();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EntitlementCategory MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory.Descriptor; }
      }
      
      public override EntitlementCategory DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory.DefaultInstance; }
      }
      
      public override EntitlementCategory BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EntitlementCategory) {
          return MergeFrom((EntitlementCategory) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EntitlementCategory other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasName) {
          MergeName(other.Name);
        }
        if (other.subCategory_.Count != 0) {
          result.subCategory_.Add(other.subCategory_);
        }
        if (other.HasBrokerageAssignable) {
          BrokerageAssignable = other.BrokerageAssignable;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_entitlementCategoryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _entitlementCategoryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt32(ref result.id_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasName) {
                subBuilder.MergeFrom(Name);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Name = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.subCategory_, global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasBrokerageAssignable = input.ReadBool(ref result.brokerageAssignable_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      [global::System.CLSCompliant(false)]
      public uint Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetId(uint value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasName {
       get { return result.hasName; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = builderForValue.Build();
        return this;
      }
      public Builder MergeName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasName &&
            result.name_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.name_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.name_).MergeFrom(value).BuildPartial();
        } else {
          result.name_ = value;
        }
        result.hasName = true;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory> SubCategoryList {
        get { return PrepareBuilder().subCategory_; }
      }
      public int SubCategoryCount {
        get { return result.SubCategoryCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory GetSubCategory(int index) {
        return result.GetSubCategory(index);
      }
      public Builder SetSubCategory(int index, global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.subCategory_[index] = value;
        return this;
      }
      public Builder SetSubCategory(int index, global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.subCategory_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSubCategory(global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.subCategory_.Add(value);
        return this;
      }
      public Builder AddSubCategory(global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.subCategory_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSubCategory(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.EntitlementCategory> values) {
        PrepareBuilder();
        result.subCategory_.Add(values);
        return this;
      }
      public Builder ClearSubCategory() {
        PrepareBuilder();
        result.subCategory_.Clear();
        return this;
      }
      
      public bool HasBrokerageAssignable {
        get { return result.hasBrokerageAssignable; }
      }
      public bool BrokerageAssignable {
        get { return result.BrokerageAssignable; }
        set { SetBrokerageAssignable(value); }
      }
      public Builder SetBrokerageAssignable(bool value) {
        PrepareBuilder();
        result.hasBrokerageAssignable = true;
        result.brokerageAssignable_ = value;
        return this;
      }
      public Builder ClearBrokerageAssignable() {
        PrepareBuilder();
        result.hasBrokerageAssignable = false;
        result.brokerageAssignable_ = false;
        return this;
      }
    }
    static EntitlementCategory() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EntitlementConstraint : pb::GeneratedMessage<EntitlementConstraint, EntitlementConstraint.Builder> {
    private EntitlementConstraint() { }
    private static readonly EntitlementConstraint defaultInstance = new EntitlementConstraint().MakeReadOnly();
    private static readonly string[] _entitlementConstraintFieldNames = new string[] { "constraint_group", "constraint_type", "ref_service_id" };
    private static readonly uint[] _entitlementConstraintFieldTags = new uint[] { 26, 8, 16 };
    public static EntitlementConstraint DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EntitlementConstraint DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EntitlementConstraint ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementConstraint__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EntitlementConstraint, EntitlementConstraint.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EntitlementConstraint__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Type {
        EXCLUDE = 1,
        WARNING = 2,
        MANDATORY_ONLY_ONE = 3,
        PICK_ONE = 4,
      }
      
    }
    #endregion
    
    public const int ConstraintTypeFieldNumber = 1;
    private bool hasConstraintType;
    private uint constraintType_;
    public bool HasConstraintType {
      get { return hasConstraintType; }
    }
    [global::System.CLSCompliant(false)]
    public uint ConstraintType {
      get { return constraintType_; }
    }
    
    public const int RefServiceIdFieldNumber = 2;
    private bool hasRefServiceId;
    private uint refServiceId_;
    public bool HasRefServiceId {
      get { return hasRefServiceId; }
    }
    [global::System.CLSCompliant(false)]
    public uint RefServiceId {
      get { return refServiceId_; }
    }
    
    public const int ConstraintGroupFieldNumber = 3;
    private bool hasConstraintGroup;
    private string constraintGroup_ = "";
    public bool HasConstraintGroup {
      get { return hasConstraintGroup; }
    }
    public string ConstraintGroup {
      get { return constraintGroup_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasConstraintType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _entitlementConstraintFieldNames;
      if (hasConstraintType) {
        output.WriteUInt32(1, field_names[1], ConstraintType);
      }
      if (hasRefServiceId) {
        output.WriteUInt32(2, field_names[2], RefServiceId);
      }
      if (hasConstraintGroup) {
        output.WriteString(3, field_names[0], ConstraintGroup);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConstraintType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, ConstraintType);
      }
      if (hasRefServiceId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, RefServiceId);
      }
      if (hasConstraintGroup) {
        size += pb::CodedOutputStream.ComputeStringSize(3, ConstraintGroup);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EntitlementConstraint ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementConstraint ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementConstraint ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EntitlementConstraint ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EntitlementConstraint ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementConstraint ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EntitlementConstraint ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EntitlementConstraint ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EntitlementConstraint ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EntitlementConstraint ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EntitlementConstraint MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EntitlementConstraint prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EntitlementConstraint, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EntitlementConstraint cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EntitlementConstraint result;
      
      private EntitlementConstraint PrepareBuilder() {
        if (resultIsReadOnly) {
          EntitlementConstraint original = result;
          result = new EntitlementConstraint();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EntitlementConstraint MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint.Descriptor; }
      }
      
      public override EntitlementConstraint DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint.DefaultInstance; }
      }
      
      public override EntitlementConstraint BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EntitlementConstraint) {
          return MergeFrom((EntitlementConstraint) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EntitlementConstraint other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.EntitlementConstraint.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasConstraintType) {
          ConstraintType = other.ConstraintType;
        }
        if (other.HasRefServiceId) {
          RefServiceId = other.RefServiceId;
        }
        if (other.HasConstraintGroup) {
          ConstraintGroup = other.ConstraintGroup;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_entitlementConstraintFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _entitlementConstraintFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasConstraintType = input.ReadUInt32(ref result.constraintType_);
              break;
            }
            case 16: {
              result.hasRefServiceId = input.ReadUInt32(ref result.refServiceId_);
              break;
            }
            case 26: {
              result.hasConstraintGroup = input.ReadString(ref result.constraintGroup_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasConstraintType {
        get { return result.hasConstraintType; }
      }
      [global::System.CLSCompliant(false)]
      public uint ConstraintType {
        get { return result.ConstraintType; }
        set { SetConstraintType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetConstraintType(uint value) {
        PrepareBuilder();
        result.hasConstraintType = true;
        result.constraintType_ = value;
        return this;
      }
      public Builder ClearConstraintType() {
        PrepareBuilder();
        result.hasConstraintType = false;
        result.constraintType_ = 0;
        return this;
      }
      
      public bool HasRefServiceId {
        get { return result.hasRefServiceId; }
      }
      [global::System.CLSCompliant(false)]
      public uint RefServiceId {
        get { return result.RefServiceId; }
        set { SetRefServiceId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRefServiceId(uint value) {
        PrepareBuilder();
        result.hasRefServiceId = true;
        result.refServiceId_ = value;
        return this;
      }
      public Builder ClearRefServiceId() {
        PrepareBuilder();
        result.hasRefServiceId = false;
        result.refServiceId_ = 0;
        return this;
      }
      
      public bool HasConstraintGroup {
        get { return result.hasConstraintGroup; }
      }
      public string ConstraintGroup {
        get { return result.ConstraintGroup; }
        set { SetConstraintGroup(value); }
      }
      public Builder SetConstraintGroup(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasConstraintGroup = true;
        result.constraintGroup_ = value;
        return this;
      }
      public Builder ClearConstraintGroup() {
        PrepareBuilder();
        result.hasConstraintGroup = false;
        result.constraintGroup_ = "";
        return this;
      }
    }
    static EntitlementConstraint() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserInfoRequest : pb::GeneratedMessage<UserInfoRequest, UserInfoRequest.Builder> {
    private UserInfoRequest() { }
    private static readonly UserInfoRequest defaultInstance = new UserInfoRequest().MakeReadOnly();
    private static readonly string[] _userInfoRequestFieldNames = new string[] { "user_id" };
    private static readonly uint[] _userInfoRequestFieldTags = new uint[] { 34 };
    public static UserInfoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserInfoRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserInfoRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UserInfoRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserInfoRequest, UserInfoRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UserInfoRequest__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 4;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userInfoRequestFieldNames;
      if (hasUserId) {
        output.WriteString(4, field_names[0], UserId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(4, UserId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserInfoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserInfoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserInfoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserInfoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserInfoRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserInfoRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserInfoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserInfoRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserInfoRequest result;
      
      private UserInfoRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UserInfoRequest original = result;
          result = new UserInfoRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserInfoRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UserInfoRequest.Descriptor; }
      }
      
      public override UserInfoRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UserInfoRequest.DefaultInstance; }
      }
      
      public override UserInfoRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserInfoRequest) {
          return MergeFrom((UserInfoRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserInfoRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UserInfoRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userInfoRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userInfoRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 34: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
    }
    static UserInfoRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class User : pb::GeneratedMessage<User, User.Builder> {
    private User() { }
    private static readonly User defaultInstance = new User().MakeReadOnly();
    private static readonly string[] _userFieldNames = new string[] { "cast_user_id", "class", "currency", "customer_id", "domain", "email", "enforced_constraint_group", "expiration_time", "first_name", "id", "is_active", "is_temporary", "last_name", "removal_date", "removed", "scope", "subscriber_type", "system_id", "trader_id", "user_name" };
    private static readonly uint[] _userFieldTags = new uint[] { 154, 120, 98, 50, 104, 42, 90, 144, 26, 10, 136, 128, 34, 64, 112, 160, 56, 74, 82, 18 };
    public static User DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override User DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override User ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_User__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<User, User.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_User__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum SubscriberType {
        PRO = 0,
        NON_PRO = 1,
      }
      
      public enum LoginClass {
        REGULAR = 1,
        FIX_DIRECT = 2,
        ORDER_HANDLER = 3,
        TEMPLATE = 4,
      }
      
    }
    #endregion
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int UserNameFieldNumber = 2;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int FirstNameFieldNumber = 3;
    private bool hasFirstName;
    private string firstName_ = "";
    public bool HasFirstName {
      get { return hasFirstName; }
    }
    public string FirstName {
      get { return firstName_; }
    }
    
    public const int LastNameFieldNumber = 4;
    private bool hasLastName;
    private string lastName_ = "";
    public bool HasLastName {
      get { return hasLastName; }
    }
    public string LastName {
      get { return lastName_; }
    }
    
    public const int EmailFieldNumber = 5;
    private bool hasEmail;
    private string email_ = "";
    public bool HasEmail {
      get { return hasEmail; }
    }
    public string Email {
      get { return email_; }
    }
    
    public const int CustomerIdFieldNumber = 6;
    private bool hasCustomerId;
    private string customerId_ = "";
    public bool HasCustomerId {
      get { return hasCustomerId; }
    }
    public string CustomerId {
      get { return customerId_; }
    }
    
    public const int SubscriberTypeFieldNumber = 7;
    private bool hasSubscriberType;
    private uint subscriberType_;
    public bool HasSubscriberType {
      get { return hasSubscriberType; }
    }
    [global::System.CLSCompliant(false)]
    public uint SubscriberType {
      get { return subscriberType_; }
    }
    
    public const int RemovalDateFieldNumber = 8;
    private bool hasRemovalDate;
    private long removalDate_;
    public bool HasRemovalDate {
      get { return hasRemovalDate; }
    }
    public long RemovalDate {
      get { return removalDate_; }
    }
    
    public const int SystemIdFieldNumber = 9;
    private bool hasSystemId;
    private string systemId_ = "";
    public bool HasSystemId {
      get { return hasSystemId; }
    }
    public string SystemId {
      get { return systemId_; }
    }
    
    public const int TraderIdFieldNumber = 10;
    private bool hasTraderId;
    private string traderId_ = "";
    public bool HasTraderId {
      get { return hasTraderId; }
    }
    public string TraderId {
      get { return traderId_; }
    }
    
    public const int EnforcedConstraintGroupFieldNumber = 11;
    private pbc::PopsicleList<string> enforcedConstraintGroup_ = new pbc::PopsicleList<string>();
    public scg::IList<string> EnforcedConstraintGroupList {
      get { return pbc::Lists.AsReadOnly(enforcedConstraintGroup_); }
    }
    public int EnforcedConstraintGroupCount {
      get { return enforcedConstraintGroup_.Count; }
    }
    public string GetEnforcedConstraintGroup(int index) {
      return enforcedConstraintGroup_[index];
    }
    
    public const int CurrencyFieldNumber = 12;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int DomainFieldNumber = 13;
    private bool hasDomain;
    private uint domain_;
    public bool HasDomain {
      get { return hasDomain; }
    }
    [global::System.CLSCompliant(false)]
    public uint Domain {
      get { return domain_; }
    }
    
    public const int RemovedFieldNumber = 14;
    private bool hasRemoved;
    private bool removed_;
    public bool HasRemoved {
      get { return hasRemoved; }
    }
    public bool Removed {
      get { return removed_; }
    }
    
    public const int ClassFieldNumber = 15;
    private bool hasClass;
    private uint class_;
    public bool HasClass {
      get { return hasClass; }
    }
    [global::System.CLSCompliant(false)]
    public uint Class {
      get { return class_; }
    }
    
    public const int IsTemporaryFieldNumber = 16;
    private bool hasIsTemporary;
    private bool isTemporary_;
    public bool HasIsTemporary {
      get { return hasIsTemporary; }
    }
    public bool IsTemporary {
      get { return isTemporary_; }
    }
    
    public const int IsActiveFieldNumber = 17;
    private bool hasIsActive;
    private bool isActive_;
    public bool HasIsActive {
      get { return hasIsActive; }
    }
    public bool IsActive {
      get { return isActive_; }
    }
    
    public const int ExpirationTimeFieldNumber = 18;
    private bool hasExpirationTime;
    private long expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public long ExpirationTime {
      get { return expirationTime_; }
    }
    
    public const int CastUserIdFieldNumber = 19;
    private bool hasCastUserId;
    private string castUserId_ = "";
    public bool HasCastUserId {
      get { return hasCastUserId; }
    }
    public string CastUserId {
      get { return castUserId_; }
    }
    
    public const int ScopeFieldNumber = 20;
    private bool hasScope;
    private uint scope_;
    public bool HasScope {
      get { return hasScope; }
    }
    [global::System.CLSCompliant(false)]
    public uint Scope {
      get { return scope_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[9], Id);
      }
      if (hasUserName) {
        output.WriteString(2, field_names[19], UserName);
      }
      if (hasFirstName) {
        output.WriteString(3, field_names[8], FirstName);
      }
      if (hasLastName) {
        output.WriteString(4, field_names[12], LastName);
      }
      if (hasEmail) {
        output.WriteString(5, field_names[5], Email);
      }
      if (hasCustomerId) {
        output.WriteString(6, field_names[3], CustomerId);
      }
      if (hasSubscriberType) {
        output.WriteUInt32(7, field_names[16], SubscriberType);
      }
      if (hasRemovalDate) {
        output.WriteSInt64(8, field_names[13], RemovalDate);
      }
      if (hasSystemId) {
        output.WriteString(9, field_names[17], SystemId);
      }
      if (hasTraderId) {
        output.WriteString(10, field_names[18], TraderId);
      }
      if (enforcedConstraintGroup_.Count > 0) {
        output.WriteStringArray(11, field_names[6], enforcedConstraintGroup_);
      }
      if (hasCurrency) {
        output.WriteString(12, field_names[2], Currency);
      }
      if (hasDomain) {
        output.WriteUInt32(13, field_names[4], Domain);
      }
      if (hasRemoved) {
        output.WriteBool(14, field_names[14], Removed);
      }
      if (hasClass) {
        output.WriteUInt32(15, field_names[1], Class);
      }
      if (hasIsTemporary) {
        output.WriteBool(16, field_names[11], IsTemporary);
      }
      if (hasIsActive) {
        output.WriteBool(17, field_names[10], IsActive);
      }
      if (hasExpirationTime) {
        output.WriteSInt64(18, field_names[7], ExpirationTime);
      }
      if (hasCastUserId) {
        output.WriteString(19, field_names[0], CastUserId);
      }
      if (hasScope) {
        output.WriteUInt32(20, field_names[15], Scope);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      if (hasUserName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, UserName);
      }
      if (hasFirstName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, FirstName);
      }
      if (hasLastName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, LastName);
      }
      if (hasEmail) {
        size += pb::CodedOutputStream.ComputeStringSize(5, Email);
      }
      if (hasCustomerId) {
        size += pb::CodedOutputStream.ComputeStringSize(6, CustomerId);
      }
      if (hasSubscriberType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(7, SubscriberType);
      }
      if (hasRemovalDate) {
        size += pb::CodedOutputStream.ComputeSInt64Size(8, RemovalDate);
      }
      if (hasSystemId) {
        size += pb::CodedOutputStream.ComputeStringSize(9, SystemId);
      }
      if (hasTraderId) {
        size += pb::CodedOutputStream.ComputeStringSize(10, TraderId);
      }
      {
        int dataSize = 0;
        foreach (string element in EnforcedConstraintGroupList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * enforcedConstraintGroup_.Count;
      }
      if (hasCurrency) {
        size += pb::CodedOutputStream.ComputeStringSize(12, Currency);
      }
      if (hasDomain) {
        size += pb::CodedOutputStream.ComputeUInt32Size(13, Domain);
      }
      if (hasRemoved) {
        size += pb::CodedOutputStream.ComputeBoolSize(14, Removed);
      }
      if (hasClass) {
        size += pb::CodedOutputStream.ComputeUInt32Size(15, Class);
      }
      if (hasIsTemporary) {
        size += pb::CodedOutputStream.ComputeBoolSize(16, IsTemporary);
      }
      if (hasIsActive) {
        size += pb::CodedOutputStream.ComputeBoolSize(17, IsActive);
      }
      if (hasExpirationTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(18, ExpirationTime);
      }
      if (hasCastUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(19, CastUserId);
      }
      if (hasScope) {
        size += pb::CodedOutputStream.ComputeUInt32Size(20, Scope);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static User ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static User ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static User ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static User ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static User ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static User ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static User ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static User ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static User ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static User ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private User MakeReadOnly() {
      enforcedConstraintGroup_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(User prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<User, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(User cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private User result;
      
      private User PrepareBuilder() {
        if (resultIsReadOnly) {
          User original = result;
          result = new User();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override User MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.User.Descriptor; }
      }
      
      public override User DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.User.DefaultInstance; }
      }
      
      public override User BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is User) {
          return MergeFrom((User) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(User other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.User.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasFirstName) {
          FirstName = other.FirstName;
        }
        if (other.HasLastName) {
          LastName = other.LastName;
        }
        if (other.HasEmail) {
          Email = other.Email;
        }
        if (other.HasCustomerId) {
          CustomerId = other.CustomerId;
        }
        if (other.HasSubscriberType) {
          SubscriberType = other.SubscriberType;
        }
        if (other.HasRemovalDate) {
          RemovalDate = other.RemovalDate;
        }
        if (other.HasSystemId) {
          SystemId = other.SystemId;
        }
        if (other.HasTraderId) {
          TraderId = other.TraderId;
        }
        if (other.enforcedConstraintGroup_.Count != 0) {
          result.enforcedConstraintGroup_.Add(other.enforcedConstraintGroup_);
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasDomain) {
          Domain = other.Domain;
        }
        if (other.HasRemoved) {
          Removed = other.Removed;
        }
        if (other.HasClass) {
          Class = other.Class;
        }
        if (other.HasIsTemporary) {
          IsTemporary = other.IsTemporary;
        }
        if (other.HasIsActive) {
          IsActive = other.IsActive;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        if (other.HasCastUserId) {
          CastUserId = other.CastUserId;
        }
        if (other.HasScope) {
          Scope = other.Scope;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 18: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 26: {
              result.hasFirstName = input.ReadString(ref result.firstName_);
              break;
            }
            case 34: {
              result.hasLastName = input.ReadString(ref result.lastName_);
              break;
            }
            case 42: {
              result.hasEmail = input.ReadString(ref result.email_);
              break;
            }
            case 50: {
              result.hasCustomerId = input.ReadString(ref result.customerId_);
              break;
            }
            case 56: {
              result.hasSubscriberType = input.ReadUInt32(ref result.subscriberType_);
              break;
            }
            case 64: {
              result.hasRemovalDate = input.ReadSInt64(ref result.removalDate_);
              break;
            }
            case 74: {
              result.hasSystemId = input.ReadString(ref result.systemId_);
              break;
            }
            case 82: {
              result.hasTraderId = input.ReadString(ref result.traderId_);
              break;
            }
            case 90: {
              input.ReadStringArray(tag, field_name, result.enforcedConstraintGroup_);
              break;
            }
            case 98: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 104: {
              result.hasDomain = input.ReadUInt32(ref result.domain_);
              break;
            }
            case 112: {
              result.hasRemoved = input.ReadBool(ref result.removed_);
              break;
            }
            case 120: {
              result.hasClass = input.ReadUInt32(ref result.class_);
              break;
            }
            case 128: {
              result.hasIsTemporary = input.ReadBool(ref result.isTemporary_);
              break;
            }
            case 136: {
              result.hasIsActive = input.ReadBool(ref result.isActive_);
              break;
            }
            case 144: {
              result.hasExpirationTime = input.ReadSInt64(ref result.expirationTime_);
              break;
            }
            case 154: {
              result.hasCastUserId = input.ReadString(ref result.castUserId_);
              break;
            }
            case 160: {
              result.hasScope = input.ReadUInt32(ref result.scope_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasFirstName {
        get { return result.hasFirstName; }
      }
      public string FirstName {
        get { return result.FirstName; }
        set { SetFirstName(value); }
      }
      public Builder SetFirstName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFirstName = true;
        result.firstName_ = value;
        return this;
      }
      public Builder ClearFirstName() {
        PrepareBuilder();
        result.hasFirstName = false;
        result.firstName_ = "";
        return this;
      }
      
      public bool HasLastName {
        get { return result.hasLastName; }
      }
      public string LastName {
        get { return result.LastName; }
        set { SetLastName(value); }
      }
      public Builder SetLastName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastName = true;
        result.lastName_ = value;
        return this;
      }
      public Builder ClearLastName() {
        PrepareBuilder();
        result.hasLastName = false;
        result.lastName_ = "";
        return this;
      }
      
      public bool HasEmail {
        get { return result.hasEmail; }
      }
      public string Email {
        get { return result.Email; }
        set { SetEmail(value); }
      }
      public Builder SetEmail(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder ClearEmail() {
        PrepareBuilder();
        result.hasEmail = false;
        result.email_ = "";
        return this;
      }
      
      public bool HasCustomerId {
        get { return result.hasCustomerId; }
      }
      public string CustomerId {
        get { return result.CustomerId; }
        set { SetCustomerId(value); }
      }
      public Builder SetCustomerId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomerId = true;
        result.customerId_ = value;
        return this;
      }
      public Builder ClearCustomerId() {
        PrepareBuilder();
        result.hasCustomerId = false;
        result.customerId_ = "";
        return this;
      }
      
      public bool HasSubscriberType {
        get { return result.hasSubscriberType; }
      }
      [global::System.CLSCompliant(false)]
      public uint SubscriberType {
        get { return result.SubscriberType; }
        set { SetSubscriberType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSubscriberType(uint value) {
        PrepareBuilder();
        result.hasSubscriberType = true;
        result.subscriberType_ = value;
        return this;
      }
      public Builder ClearSubscriberType() {
        PrepareBuilder();
        result.hasSubscriberType = false;
        result.subscriberType_ = 0;
        return this;
      }
      
      public bool HasRemovalDate {
        get { return result.hasRemovalDate; }
      }
      public long RemovalDate {
        get { return result.RemovalDate; }
        set { SetRemovalDate(value); }
      }
      public Builder SetRemovalDate(long value) {
        PrepareBuilder();
        result.hasRemovalDate = true;
        result.removalDate_ = value;
        return this;
      }
      public Builder ClearRemovalDate() {
        PrepareBuilder();
        result.hasRemovalDate = false;
        result.removalDate_ = 0;
        return this;
      }
      
      public bool HasSystemId {
        get { return result.hasSystemId; }
      }
      public string SystemId {
        get { return result.SystemId; }
        set { SetSystemId(value); }
      }
      public Builder SetSystemId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSystemId = true;
        result.systemId_ = value;
        return this;
      }
      public Builder ClearSystemId() {
        PrepareBuilder();
        result.hasSystemId = false;
        result.systemId_ = "";
        return this;
      }
      
      public bool HasTraderId {
        get { return result.hasTraderId; }
      }
      public string TraderId {
        get { return result.TraderId; }
        set { SetTraderId(value); }
      }
      public Builder SetTraderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTraderId = true;
        result.traderId_ = value;
        return this;
      }
      public Builder ClearTraderId() {
        PrepareBuilder();
        result.hasTraderId = false;
        result.traderId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> EnforcedConstraintGroupList {
        get { return PrepareBuilder().enforcedConstraintGroup_; }
      }
      public int EnforcedConstraintGroupCount {
        get { return result.EnforcedConstraintGroupCount; }
      }
      public string GetEnforcedConstraintGroup(int index) {
        return result.GetEnforcedConstraintGroup(index);
      }
      public Builder SetEnforcedConstraintGroup(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.enforcedConstraintGroup_[index] = value;
        return this;
      }
      public Builder AddEnforcedConstraintGroup(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.enforcedConstraintGroup_.Add(value);
        return this;
      }
      public Builder AddRangeEnforcedConstraintGroup(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.enforcedConstraintGroup_.Add(values);
        return this;
      }
      public Builder ClearEnforcedConstraintGroup() {
        PrepareBuilder();
        result.enforcedConstraintGroup_.Clear();
        return this;
      }
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasDomain {
        get { return result.hasDomain; }
      }
      [global::System.CLSCompliant(false)]
      public uint Domain {
        get { return result.Domain; }
        set { SetDomain(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetDomain(uint value) {
        PrepareBuilder();
        result.hasDomain = true;
        result.domain_ = value;
        return this;
      }
      public Builder ClearDomain() {
        PrepareBuilder();
        result.hasDomain = false;
        result.domain_ = 0;
        return this;
      }
      
      public bool HasRemoved {
        get { return result.hasRemoved; }
      }
      public bool Removed {
        get { return result.Removed; }
        set { SetRemoved(value); }
      }
      public Builder SetRemoved(bool value) {
        PrepareBuilder();
        result.hasRemoved = true;
        result.removed_ = value;
        return this;
      }
      public Builder ClearRemoved() {
        PrepareBuilder();
        result.hasRemoved = false;
        result.removed_ = false;
        return this;
      }
      
      public bool HasClass {
        get { return result.hasClass; }
      }
      [global::System.CLSCompliant(false)]
      public uint Class {
        get { return result.Class; }
        set { SetClass(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetClass(uint value) {
        PrepareBuilder();
        result.hasClass = true;
        result.class_ = value;
        return this;
      }
      public Builder ClearClass() {
        PrepareBuilder();
        result.hasClass = false;
        result.class_ = 0;
        return this;
      }
      
      public bool HasIsTemporary {
        get { return result.hasIsTemporary; }
      }
      public bool IsTemporary {
        get { return result.IsTemporary; }
        set { SetIsTemporary(value); }
      }
      public Builder SetIsTemporary(bool value) {
        PrepareBuilder();
        result.hasIsTemporary = true;
        result.isTemporary_ = value;
        return this;
      }
      public Builder ClearIsTemporary() {
        PrepareBuilder();
        result.hasIsTemporary = false;
        result.isTemporary_ = false;
        return this;
      }
      
      public bool HasIsActive {
        get { return result.hasIsActive; }
      }
      public bool IsActive {
        get { return result.IsActive; }
        set { SetIsActive(value); }
      }
      public Builder SetIsActive(bool value) {
        PrepareBuilder();
        result.hasIsActive = true;
        result.isActive_ = value;
        return this;
      }
      public Builder ClearIsActive() {
        PrepareBuilder();
        result.hasIsActive = false;
        result.isActive_ = false;
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public long ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(long value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0;
        return this;
      }
      
      public bool HasCastUserId {
        get { return result.hasCastUserId; }
      }
      public string CastUserId {
        get { return result.CastUserId; }
        set { SetCastUserId(value); }
      }
      public Builder SetCastUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCastUserId = true;
        result.castUserId_ = value;
        return this;
      }
      public Builder ClearCastUserId() {
        PrepareBuilder();
        result.hasCastUserId = false;
        result.castUserId_ = "";
        return this;
      }
      
      public bool HasScope {
        get { return result.hasScope; }
      }
      [global::System.CLSCompliant(false)]
      public uint Scope {
        get { return result.Scope; }
        set { SetScope(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetScope(uint value) {
        PrepareBuilder();
        result.hasScope = true;
        result.scope_ = value;
        return this;
      }
      public Builder ClearScope() {
        PrepareBuilder();
        result.hasScope = false;
        result.scope_ = 0;
        return this;
      }
    }
    static User() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoginSettings : pb::GeneratedMessage<LoginSettings, LoginSettings.Builder> {
    private LoginSettings() { }
    private static readonly LoginSettings defaultInstance = new LoginSettings().MakeReadOnly();
    private static readonly string[] _loginSettingsFieldNames = new string[] { "cleared_fields", "concurrent_sessions_number", "is_strategy_runner", "linked_login_id", "login_id", "password_never_expires", "preferred_connection_point_id", "preferred_connection_point_name" };
    private static readonly uint[] _loginSettingsFieldTags = new uint[] { 56, 24, 40, 66, 10, 32, 18, 50 };
    public static LoginSettings DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginSettings DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginSettings ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoginSettings__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginSettings, LoginSettings.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoginSettings__FieldAccessorTable; }
    }
    
    public const int ClearedFieldsFieldNumber = 7;
    private pbc::PopsicleList<uint> clearedFields_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> ClearedFieldsList {
      get { return pbc::Lists.AsReadOnly(clearedFields_); }
    }
    public int ClearedFieldsCount {
      get { return clearedFields_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetClearedFields(int index) {
      return clearedFields_[index];
    }
    
    public const int LoginIdFieldNumber = 1;
    private bool hasLoginId;
    private string loginId_ = "";
    public bool HasLoginId {
      get { return hasLoginId; }
    }
    public string LoginId {
      get { return loginId_; }
    }
    
    public const int PreferredConnectionPointIdFieldNumber = 2;
    private bool hasPreferredConnectionPointId;
    private string preferredConnectionPointId_ = "";
    public bool HasPreferredConnectionPointId {
      get { return hasPreferredConnectionPointId; }
    }
    public string PreferredConnectionPointId {
      get { return preferredConnectionPointId_; }
    }
    
    public const int ConcurrentSessionsNumberFieldNumber = 3;
    private bool hasConcurrentSessionsNumber;
    private uint concurrentSessionsNumber_;
    public bool HasConcurrentSessionsNumber {
      get { return hasConcurrentSessionsNumber; }
    }
    [global::System.CLSCompliant(false)]
    public uint ConcurrentSessionsNumber {
      get { return concurrentSessionsNumber_; }
    }
    
    public const int PasswordNeverExpiresFieldNumber = 4;
    private bool hasPasswordNeverExpires;
    private bool passwordNeverExpires_;
    public bool HasPasswordNeverExpires {
      get { return hasPasswordNeverExpires; }
    }
    public bool PasswordNeverExpires {
      get { return passwordNeverExpires_; }
    }
    
    public const int IsStrategyRunnerFieldNumber = 5;
    private bool hasIsStrategyRunner;
    private bool isStrategyRunner_;
    public bool HasIsStrategyRunner {
      get { return hasIsStrategyRunner; }
    }
    public bool IsStrategyRunner {
      get { return isStrategyRunner_; }
    }
    
    public const int PreferredConnectionPointNameFieldNumber = 6;
    private bool hasPreferredConnectionPointName;
    private string preferredConnectionPointName_ = "";
    public bool HasPreferredConnectionPointName {
      get { return hasPreferredConnectionPointName; }
    }
    public string PreferredConnectionPointName {
      get { return preferredConnectionPointName_; }
    }
    
    public const int LinkedLoginIdFieldNumber = 8;
    private bool hasLinkedLoginId;
    private string linkedLoginId_ = "";
    public bool HasLinkedLoginId {
      get { return hasLinkedLoginId; }
    }
    public string LinkedLoginId {
      get { return linkedLoginId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginSettingsFieldNames;
      if (hasLoginId) {
        output.WriteString(1, field_names[4], LoginId);
      }
      if (hasPreferredConnectionPointId) {
        output.WriteString(2, field_names[6], PreferredConnectionPointId);
      }
      if (hasConcurrentSessionsNumber) {
        output.WriteUInt32(3, field_names[1], ConcurrentSessionsNumber);
      }
      if (hasPasswordNeverExpires) {
        output.WriteBool(4, field_names[5], PasswordNeverExpires);
      }
      if (hasIsStrategyRunner) {
        output.WriteBool(5, field_names[2], IsStrategyRunner);
      }
      if (hasPreferredConnectionPointName) {
        output.WriteString(6, field_names[7], PreferredConnectionPointName);
      }
      if (clearedFields_.Count > 0) {
        output.WriteUInt32Array(7, field_names[0], clearedFields_);
      }
      if (hasLinkedLoginId) {
        output.WriteString(8, field_names[3], LinkedLoginId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (uint element in ClearedFieldsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * clearedFields_.Count;
      }
      if (hasLoginId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LoginId);
      }
      if (hasPreferredConnectionPointId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, PreferredConnectionPointId);
      }
      if (hasConcurrentSessionsNumber) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, ConcurrentSessionsNumber);
      }
      if (hasPasswordNeverExpires) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, PasswordNeverExpires);
      }
      if (hasIsStrategyRunner) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, IsStrategyRunner);
      }
      if (hasPreferredConnectionPointName) {
        size += pb::CodedOutputStream.ComputeStringSize(6, PreferredConnectionPointName);
      }
      if (hasLinkedLoginId) {
        size += pb::CodedOutputStream.ComputeStringSize(8, LinkedLoginId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoginSettings ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginSettings ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginSettings ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginSettings ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginSettings ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginSettings ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginSettings ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginSettings ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginSettings ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginSettings ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginSettings MakeReadOnly() {
      clearedFields_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginSettings prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginSettings, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginSettings cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginSettings result;
      
      private LoginSettings PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginSettings original = result;
          result = new LoginSettings();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginSettings MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoginSettings.Descriptor; }
      }
      
      public override LoginSettings DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoginSettings.DefaultInstance; }
      }
      
      public override LoginSettings BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginSettings) {
          return MergeFrom((LoginSettings) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginSettings other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LoginSettings.DefaultInstance) return this;
        PrepareBuilder();
        if (other.clearedFields_.Count != 0) {
          result.clearedFields_.Add(other.clearedFields_);
        }
        if (other.HasLoginId) {
          LoginId = other.LoginId;
        }
        if (other.HasPreferredConnectionPointId) {
          PreferredConnectionPointId = other.PreferredConnectionPointId;
        }
        if (other.HasConcurrentSessionsNumber) {
          ConcurrentSessionsNumber = other.ConcurrentSessionsNumber;
        }
        if (other.HasPasswordNeverExpires) {
          PasswordNeverExpires = other.PasswordNeverExpires;
        }
        if (other.HasIsStrategyRunner) {
          IsStrategyRunner = other.IsStrategyRunner;
        }
        if (other.HasPreferredConnectionPointName) {
          PreferredConnectionPointName = other.PreferredConnectionPointName;
        }
        if (other.HasLinkedLoginId) {
          LinkedLoginId = other.LinkedLoginId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginSettingsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginSettingsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLoginId = input.ReadString(ref result.loginId_);
              break;
            }
            case 18: {
              result.hasPreferredConnectionPointId = input.ReadString(ref result.preferredConnectionPointId_);
              break;
            }
            case 24: {
              result.hasConcurrentSessionsNumber = input.ReadUInt32(ref result.concurrentSessionsNumber_);
              break;
            }
            case 32: {
              result.hasPasswordNeverExpires = input.ReadBool(ref result.passwordNeverExpires_);
              break;
            }
            case 40: {
              result.hasIsStrategyRunner = input.ReadBool(ref result.isStrategyRunner_);
              break;
            }
            case 50: {
              result.hasPreferredConnectionPointName = input.ReadString(ref result.preferredConnectionPointName_);
              break;
            }
            case 58:
            case 56: {
              input.ReadUInt32Array(tag, field_name, result.clearedFields_);
              break;
            }
            case 66: {
              result.hasLinkedLoginId = input.ReadString(ref result.linkedLoginId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> ClearedFieldsList {
        get { return PrepareBuilder().clearedFields_; }
      }
      public int ClearedFieldsCount {
        get { return result.ClearedFieldsCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetClearedFields(int index) {
        return result.GetClearedFields(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetClearedFields(int index, uint value) {
        PrepareBuilder();
        result.clearedFields_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddClearedFields(uint value) {
        PrepareBuilder();
        result.clearedFields_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeClearedFields(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.clearedFields_.Add(values);
        return this;
      }
      public Builder ClearClearedFields() {
        PrepareBuilder();
        result.clearedFields_.Clear();
        return this;
      }
      
      public bool HasLoginId {
        get { return result.hasLoginId; }
      }
      public string LoginId {
        get { return result.LoginId; }
        set { SetLoginId(value); }
      }
      public Builder SetLoginId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginId = true;
        result.loginId_ = value;
        return this;
      }
      public Builder ClearLoginId() {
        PrepareBuilder();
        result.hasLoginId = false;
        result.loginId_ = "";
        return this;
      }
      
      public bool HasPreferredConnectionPointId {
        get { return result.hasPreferredConnectionPointId; }
      }
      public string PreferredConnectionPointId {
        get { return result.PreferredConnectionPointId; }
        set { SetPreferredConnectionPointId(value); }
      }
      public Builder SetPreferredConnectionPointId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPreferredConnectionPointId = true;
        result.preferredConnectionPointId_ = value;
        return this;
      }
      public Builder ClearPreferredConnectionPointId() {
        PrepareBuilder();
        result.hasPreferredConnectionPointId = false;
        result.preferredConnectionPointId_ = "";
        return this;
      }
      
      public bool HasConcurrentSessionsNumber {
        get { return result.hasConcurrentSessionsNumber; }
      }
      [global::System.CLSCompliant(false)]
      public uint ConcurrentSessionsNumber {
        get { return result.ConcurrentSessionsNumber; }
        set { SetConcurrentSessionsNumber(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetConcurrentSessionsNumber(uint value) {
        PrepareBuilder();
        result.hasConcurrentSessionsNumber = true;
        result.concurrentSessionsNumber_ = value;
        return this;
      }
      public Builder ClearConcurrentSessionsNumber() {
        PrepareBuilder();
        result.hasConcurrentSessionsNumber = false;
        result.concurrentSessionsNumber_ = 0;
        return this;
      }
      
      public bool HasPasswordNeverExpires {
        get { return result.hasPasswordNeverExpires; }
      }
      public bool PasswordNeverExpires {
        get { return result.PasswordNeverExpires; }
        set { SetPasswordNeverExpires(value); }
      }
      public Builder SetPasswordNeverExpires(bool value) {
        PrepareBuilder();
        result.hasPasswordNeverExpires = true;
        result.passwordNeverExpires_ = value;
        return this;
      }
      public Builder ClearPasswordNeverExpires() {
        PrepareBuilder();
        result.hasPasswordNeverExpires = false;
        result.passwordNeverExpires_ = false;
        return this;
      }
      
      public bool HasIsStrategyRunner {
        get { return result.hasIsStrategyRunner; }
      }
      public bool IsStrategyRunner {
        get { return result.IsStrategyRunner; }
        set { SetIsStrategyRunner(value); }
      }
      public Builder SetIsStrategyRunner(bool value) {
        PrepareBuilder();
        result.hasIsStrategyRunner = true;
        result.isStrategyRunner_ = value;
        return this;
      }
      public Builder ClearIsStrategyRunner() {
        PrepareBuilder();
        result.hasIsStrategyRunner = false;
        result.isStrategyRunner_ = false;
        return this;
      }
      
      public bool HasPreferredConnectionPointName {
        get { return result.hasPreferredConnectionPointName; }
      }
      public string PreferredConnectionPointName {
        get { return result.PreferredConnectionPointName; }
        set { SetPreferredConnectionPointName(value); }
      }
      public Builder SetPreferredConnectionPointName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPreferredConnectionPointName = true;
        result.preferredConnectionPointName_ = value;
        return this;
      }
      public Builder ClearPreferredConnectionPointName() {
        PrepareBuilder();
        result.hasPreferredConnectionPointName = false;
        result.preferredConnectionPointName_ = "";
        return this;
      }
      
      public bool HasLinkedLoginId {
        get { return result.hasLinkedLoginId; }
      }
      public string LinkedLoginId {
        get { return result.LinkedLoginId; }
        set { SetLinkedLoginId(value); }
      }
      public Builder SetLinkedLoginId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLinkedLoginId = true;
        result.linkedLoginId_ = value;
        return this;
      }
      public Builder ClearLinkedLoginId() {
        PrepareBuilder();
        result.hasLinkedLoginId = false;
        result.linkedLoginId_ = "";
        return this;
      }
    }
    static LoginSettings() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserEntitlementService : pb::GeneratedMessage<UserEntitlementService, UserEntitlementService.Builder> {
    private UserEntitlementService() { }
    private static readonly UserEntitlementService defaultInstance = new UserEntitlementService().MakeReadOnly();
    private static readonly string[] _userEntitlementServiceFieldNames = new string[] { "assigned_brokerages", "billing_brokerage_id", "entitlement_service_id", "from_utc_time", "to_utc_time", "user_id" };
    private static readonly uint[] _userEntitlementServiceFieldTags = new uint[] { 50, 42, 16, 24, 32, 10 };
    public static UserEntitlementService DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserEntitlementService DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserEntitlementService ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UserEntitlementService__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserEntitlementService, UserEntitlementService.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UserEntitlementService__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int EntitlementServiceIdFieldNumber = 2;
    private bool hasEntitlementServiceId;
    private uint entitlementServiceId_;
    public bool HasEntitlementServiceId {
      get { return hasEntitlementServiceId; }
    }
    [global::System.CLSCompliant(false)]
    public uint EntitlementServiceId {
      get { return entitlementServiceId_; }
    }
    
    public const int FromUtcTimeFieldNumber = 3;
    private bool hasFromUtcTime;
    private long fromUtcTime_;
    public bool HasFromUtcTime {
      get { return hasFromUtcTime; }
    }
    public long FromUtcTime {
      get { return fromUtcTime_; }
    }
    
    public const int ToUtcTimeFieldNumber = 4;
    private bool hasToUtcTime;
    private long toUtcTime_;
    public bool HasToUtcTime {
      get { return hasToUtcTime; }
    }
    public long ToUtcTime {
      get { return toUtcTime_; }
    }
    
    public const int BillingBrokerageIdFieldNumber = 5;
    private bool hasBillingBrokerageId;
    private string billingBrokerageId_ = "";
    public bool HasBillingBrokerageId {
      get { return hasBillingBrokerageId; }
    }
    public string BillingBrokerageId {
      get { return billingBrokerageId_; }
    }
    
    public const int AssignedBrokeragesFieldNumber = 6;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage> assignedBrokerages_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage> AssignedBrokeragesList {
      get { return assignedBrokerages_; }
    }
    public int AssignedBrokeragesCount {
      get { return assignedBrokerages_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage GetAssignedBrokerages(int index) {
      return assignedBrokerages_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserId) return false;
        if (!hasEntitlementServiceId) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage element in AssignedBrokeragesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userEntitlementServiceFieldNames;
      if (hasUserId) {
        output.WriteString(1, field_names[5], UserId);
      }
      if (hasEntitlementServiceId) {
        output.WriteUInt32(2, field_names[2], EntitlementServiceId);
      }
      if (hasFromUtcTime) {
        output.WriteSInt64(3, field_names[3], FromUtcTime);
      }
      if (hasToUtcTime) {
        output.WriteSInt64(4, field_names[4], ToUtcTime);
      }
      if (hasBillingBrokerageId) {
        output.WriteString(5, field_names[1], BillingBrokerageId);
      }
      if (assignedBrokerages_.Count > 0) {
        output.WriteMessageArray(6, field_names[0], assignedBrokerages_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserId);
      }
      if (hasEntitlementServiceId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, EntitlementServiceId);
      }
      if (hasFromUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(3, FromUtcTime);
      }
      if (hasToUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(4, ToUtcTime);
      }
      if (hasBillingBrokerageId) {
        size += pb::CodedOutputStream.ComputeStringSize(5, BillingBrokerageId);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage element in AssignedBrokeragesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserEntitlementService ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserEntitlementService ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserEntitlementService ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserEntitlementService ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserEntitlementService ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserEntitlementService ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserEntitlementService ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserEntitlementService ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserEntitlementService ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserEntitlementService ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserEntitlementService MakeReadOnly() {
      assignedBrokerages_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserEntitlementService prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserEntitlementService, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserEntitlementService cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserEntitlementService result;
      
      private UserEntitlementService PrepareBuilder() {
        if (resultIsReadOnly) {
          UserEntitlementService original = result;
          result = new UserEntitlementService();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserEntitlementService MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UserEntitlementService.Descriptor; }
      }
      
      public override UserEntitlementService DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UserEntitlementService.DefaultInstance; }
      }
      
      public override UserEntitlementService BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserEntitlementService) {
          return MergeFrom((UserEntitlementService) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserEntitlementService other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UserEntitlementService.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasEntitlementServiceId) {
          EntitlementServiceId = other.EntitlementServiceId;
        }
        if (other.HasFromUtcTime) {
          FromUtcTime = other.FromUtcTime;
        }
        if (other.HasToUtcTime) {
          ToUtcTime = other.ToUtcTime;
        }
        if (other.HasBillingBrokerageId) {
          BillingBrokerageId = other.BillingBrokerageId;
        }
        if (other.assignedBrokerages_.Count != 0) {
          result.assignedBrokerages_.Add(other.assignedBrokerages_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userEntitlementServiceFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userEntitlementServiceFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 16: {
              result.hasEntitlementServiceId = input.ReadUInt32(ref result.entitlementServiceId_);
              break;
            }
            case 24: {
              result.hasFromUtcTime = input.ReadSInt64(ref result.fromUtcTime_);
              break;
            }
            case 32: {
              result.hasToUtcTime = input.ReadSInt64(ref result.toUtcTime_);
              break;
            }
            case 42: {
              result.hasBillingBrokerageId = input.ReadString(ref result.billingBrokerageId_);
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.assignedBrokerages_, global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasEntitlementServiceId {
        get { return result.hasEntitlementServiceId; }
      }
      [global::System.CLSCompliant(false)]
      public uint EntitlementServiceId {
        get { return result.EntitlementServiceId; }
        set { SetEntitlementServiceId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetEntitlementServiceId(uint value) {
        PrepareBuilder();
        result.hasEntitlementServiceId = true;
        result.entitlementServiceId_ = value;
        return this;
      }
      public Builder ClearEntitlementServiceId() {
        PrepareBuilder();
        result.hasEntitlementServiceId = false;
        result.entitlementServiceId_ = 0;
        return this;
      }
      
      public bool HasFromUtcTime {
        get { return result.hasFromUtcTime; }
      }
      public long FromUtcTime {
        get { return result.FromUtcTime; }
        set { SetFromUtcTime(value); }
      }
      public Builder SetFromUtcTime(long value) {
        PrepareBuilder();
        result.hasFromUtcTime = true;
        result.fromUtcTime_ = value;
        return this;
      }
      public Builder ClearFromUtcTime() {
        PrepareBuilder();
        result.hasFromUtcTime = false;
        result.fromUtcTime_ = 0;
        return this;
      }
      
      public bool HasToUtcTime {
        get { return result.hasToUtcTime; }
      }
      public long ToUtcTime {
        get { return result.ToUtcTime; }
        set { SetToUtcTime(value); }
      }
      public Builder SetToUtcTime(long value) {
        PrepareBuilder();
        result.hasToUtcTime = true;
        result.toUtcTime_ = value;
        return this;
      }
      public Builder ClearToUtcTime() {
        PrepareBuilder();
        result.hasToUtcTime = false;
        result.toUtcTime_ = 0;
        return this;
      }
      
      public bool HasBillingBrokerageId {
        get { return result.hasBillingBrokerageId; }
      }
      public string BillingBrokerageId {
        get { return result.BillingBrokerageId; }
        set { SetBillingBrokerageId(value); }
      }
      public Builder SetBillingBrokerageId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBillingBrokerageId = true;
        result.billingBrokerageId_ = value;
        return this;
      }
      public Builder ClearBillingBrokerageId() {
        PrepareBuilder();
        result.hasBillingBrokerageId = false;
        result.billingBrokerageId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage> AssignedBrokeragesList {
        get { return PrepareBuilder().assignedBrokerages_; }
      }
      public int AssignedBrokeragesCount {
        get { return result.AssignedBrokeragesCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage GetAssignedBrokerages(int index) {
        return result.GetAssignedBrokerages(index);
      }
      public Builder SetAssignedBrokerages(int index, global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignedBrokerages_[index] = value;
        return this;
      }
      public Builder SetAssignedBrokerages(int index, global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignedBrokerages_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAssignedBrokerages(global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignedBrokerages_.Add(value);
        return this;
      }
      public Builder AddAssignedBrokerages(global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignedBrokerages_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAssignedBrokerages(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage> values) {
        PrepareBuilder();
        result.assignedBrokerages_.Add(values);
        return this;
      }
      public Builder ClearAssignedBrokerages() {
        PrepareBuilder();
        result.assignedBrokerages_.Clear();
        return this;
      }
    }
    static UserEntitlementService() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AssignedBrokerage : pb::GeneratedMessage<AssignedBrokerage, AssignedBrokerage.Builder> {
    private AssignedBrokerage() { }
    private static readonly AssignedBrokerage defaultInstance = new AssignedBrokerage().MakeReadOnly();
    private static readonly string[] _assignedBrokerageFieldNames = new string[] { "brokerage_id", "waive_base_charge" };
    private static readonly uint[] _assignedBrokerageFieldTags = new uint[] { 10, 16 };
    public static AssignedBrokerage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AssignedBrokerage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AssignedBrokerage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_AssignedBrokerage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AssignedBrokerage, AssignedBrokerage.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_AssignedBrokerage__FieldAccessorTable; }
    }
    
    public const int BrokerageIdFieldNumber = 1;
    private bool hasBrokerageId;
    private string brokerageId_ = "";
    public bool HasBrokerageId {
      get { return hasBrokerageId; }
    }
    public string BrokerageId {
      get { return brokerageId_; }
    }
    
    public const int WaiveBaseChargeFieldNumber = 2;
    private bool hasWaiveBaseCharge;
    private bool waiveBaseCharge_;
    public bool HasWaiveBaseCharge {
      get { return hasWaiveBaseCharge; }
    }
    public bool WaiveBaseCharge {
      get { return waiveBaseCharge_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBrokerageId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _assignedBrokerageFieldNames;
      if (hasBrokerageId) {
        output.WriteString(1, field_names[0], BrokerageId);
      }
      if (hasWaiveBaseCharge) {
        output.WriteBool(2, field_names[1], WaiveBaseCharge);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBrokerageId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, BrokerageId);
      }
      if (hasWaiveBaseCharge) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, WaiveBaseCharge);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AssignedBrokerage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AssignedBrokerage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AssignedBrokerage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AssignedBrokerage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AssignedBrokerage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AssignedBrokerage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AssignedBrokerage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AssignedBrokerage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AssignedBrokerage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AssignedBrokerage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AssignedBrokerage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AssignedBrokerage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AssignedBrokerage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AssignedBrokerage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AssignedBrokerage result;
      
      private AssignedBrokerage PrepareBuilder() {
        if (resultIsReadOnly) {
          AssignedBrokerage original = result;
          result = new AssignedBrokerage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AssignedBrokerage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage.Descriptor; }
      }
      
      public override AssignedBrokerage DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage.DefaultInstance; }
      }
      
      public override AssignedBrokerage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AssignedBrokerage) {
          return MergeFrom((AssignedBrokerage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AssignedBrokerage other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBrokerageId) {
          BrokerageId = other.BrokerageId;
        }
        if (other.HasWaiveBaseCharge) {
          WaiveBaseCharge = other.WaiveBaseCharge;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_assignedBrokerageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _assignedBrokerageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasBrokerageId = input.ReadString(ref result.brokerageId_);
              break;
            }
            case 16: {
              result.hasWaiveBaseCharge = input.ReadBool(ref result.waiveBaseCharge_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBrokerageId {
        get { return result.hasBrokerageId; }
      }
      public string BrokerageId {
        get { return result.BrokerageId; }
        set { SetBrokerageId(value); }
      }
      public Builder SetBrokerageId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageId = true;
        result.brokerageId_ = value;
        return this;
      }
      public Builder ClearBrokerageId() {
        PrepareBuilder();
        result.hasBrokerageId = false;
        result.brokerageId_ = "";
        return this;
      }
      
      public bool HasWaiveBaseCharge {
        get { return result.hasWaiveBaseCharge; }
      }
      public bool WaiveBaseCharge {
        get { return result.WaiveBaseCharge; }
        set { SetWaiveBaseCharge(value); }
      }
      public Builder SetWaiveBaseCharge(bool value) {
        PrepareBuilder();
        result.hasWaiveBaseCharge = true;
        result.waiveBaseCharge_ = value;
        return this;
      }
      public Builder ClearWaiveBaseCharge() {
        PrepareBuilder();
        result.hasWaiveBaseCharge = false;
        result.waiveBaseCharge_ = false;
        return this;
      }
    }
    static AssignedBrokerage() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserSearchRequest : pb::GeneratedMessage<UserSearchRequest, UserSearchRequest.Builder> {
    private UserSearchRequest() { }
    private static readonly UserSearchRequest defaultInstance = new UserSearchRequest().MakeReadOnly();
    private static readonly string[] _userSearchRequestFieldNames = new string[] { "all_match_mode", "search_criteria", "search_options", "text" };
    private static readonly uint[] _userSearchRequestFieldTags = new uint[] { 32, 16, 26, 10 };
    public static UserSearchRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserSearchRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserSearchRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UserSearchRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserSearchRequest, UserSearchRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UserSearchRequest__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum SearchCriteria {
        USER_ID = 1,
        USER_NAME = 4,
        SALES_SERIES_NUMBER = 5,
        SALES_SERIES_NAME = 6,
        SALES_SERIES_ID = 7,
        CUSTOMER_ID = 8,
        BROKERAGE_ID = 9,
        BROKERAGE_NAME = 10,
        CLASS = 11,
        LOGIN_DOMAIN = 12,
      }
      
    }
    #endregion
    
    public const int TextFieldNumber = 1;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int SearchCriteriaFieldNumber = 2;
    private pbc::PopsicleList<uint> searchCriteria_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> SearchCriteriaList {
      get { return pbc::Lists.AsReadOnly(searchCriteria_); }
    }
    public int SearchCriteriaCount {
      get { return searchCriteria_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetSearchCriteria(int index) {
      return searchCriteria_[index];
    }
    
    public const int SearchOptionsFieldNumber = 3;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> searchOptions_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> SearchOptionsList {
      get { return searchOptions_; }
    }
    public int SearchOptionsCount {
      get { return searchOptions_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.SearchOption GetSearchOptions(int index) {
      return searchOptions_[index];
    }
    
    public const int AllMatchModeFieldNumber = 4;
    private bool hasAllMatchMode;
    private bool allMatchMode_;
    public bool HasAllMatchMode {
      get { return hasAllMatchMode; }
    }
    public bool AllMatchMode {
      get { return allMatchMode_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userSearchRequestFieldNames;
      if (hasText) {
        output.WriteString(1, field_names[3], Text);
      }
      if (searchCriteria_.Count > 0) {
        output.WriteUInt32Array(2, field_names[1], searchCriteria_);
      }
      if (searchOptions_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], searchOptions_);
      }
      if (hasAllMatchMode) {
        output.WriteBool(4, field_names[0], AllMatchMode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Text);
      }
      {
        int dataSize = 0;
        foreach (uint element in SearchCriteriaList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * searchCriteria_.Count;
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.SearchOption element in SearchOptionsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasAllMatchMode) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, AllMatchMode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserSearchRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserSearchRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserSearchRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserSearchRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserSearchRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserSearchRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserSearchRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserSearchRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserSearchRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserSearchRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserSearchRequest MakeReadOnly() {
      searchCriteria_.MakeReadOnly();
      searchOptions_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserSearchRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserSearchRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserSearchRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserSearchRequest result;
      
      private UserSearchRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UserSearchRequest original = result;
          result = new UserSearchRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserSearchRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UserSearchRequest.Descriptor; }
      }
      
      public override UserSearchRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UserSearchRequest.DefaultInstance; }
      }
      
      public override UserSearchRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserSearchRequest) {
          return MergeFrom((UserSearchRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserSearchRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UserSearchRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.searchCriteria_.Count != 0) {
          result.searchCriteria_.Add(other.searchCriteria_);
        }
        if (other.searchOptions_.Count != 0) {
          result.searchOptions_.Add(other.searchOptions_);
        }
        if (other.HasAllMatchMode) {
          AllMatchMode = other.AllMatchMode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userSearchRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userSearchRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt32Array(tag, field_name, result.searchCriteria_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.searchOptions_, global::CmsApiSamples.Protocol.CMSApi.SearchOption.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasAllMatchMode = input.ReadBool(ref result.allMatchMode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> SearchCriteriaList {
        get { return PrepareBuilder().searchCriteria_; }
      }
      public int SearchCriteriaCount {
        get { return result.SearchCriteriaCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetSearchCriteria(int index) {
        return result.GetSearchCriteria(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSearchCriteria(int index, uint value) {
        PrepareBuilder();
        result.searchCriteria_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddSearchCriteria(uint value) {
        PrepareBuilder();
        result.searchCriteria_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeSearchCriteria(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.searchCriteria_.Add(values);
        return this;
      }
      public Builder ClearSearchCriteria() {
        PrepareBuilder();
        result.searchCriteria_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> SearchOptionsList {
        get { return PrepareBuilder().searchOptions_; }
      }
      public int SearchOptionsCount {
        get { return result.SearchOptionsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.SearchOption GetSearchOptions(int index) {
        return result.GetSearchOptions(index);
      }
      public Builder SetSearchOptions(int index, global::CmsApiSamples.Protocol.CMSApi.SearchOption value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.searchOptions_[index] = value;
        return this;
      }
      public Builder SetSearchOptions(int index, global::CmsApiSamples.Protocol.CMSApi.SearchOption.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.searchOptions_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSearchOptions(global::CmsApiSamples.Protocol.CMSApi.SearchOption value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.searchOptions_.Add(value);
        return this;
      }
      public Builder AddSearchOptions(global::CmsApiSamples.Protocol.CMSApi.SearchOption.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.searchOptions_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSearchOptions(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.SearchOption> values) {
        PrepareBuilder();
        result.searchOptions_.Add(values);
        return this;
      }
      public Builder ClearSearchOptions() {
        PrepareBuilder();
        result.searchOptions_.Clear();
        return this;
      }
      
      public bool HasAllMatchMode {
        get { return result.hasAllMatchMode; }
      }
      public bool AllMatchMode {
        get { return result.AllMatchMode; }
        set { SetAllMatchMode(value); }
      }
      public Builder SetAllMatchMode(bool value) {
        PrepareBuilder();
        result.hasAllMatchMode = true;
        result.allMatchMode_ = value;
        return this;
      }
      public Builder ClearAllMatchMode() {
        PrepareBuilder();
        result.hasAllMatchMode = false;
        result.allMatchMode_ = false;
        return this;
      }
    }
    static UserSearchRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UserSearchResultRecord : pb::GeneratedMessage<UserSearchResultRecord, UserSearchResultRecord.Builder> {
    private UserSearchResultRecord() { }
    private static readonly UserSearchResultRecord defaultInstance = new UserSearchResultRecord().MakeReadOnly();
    private static readonly string[] _userSearchResultRecordFieldNames = new string[] { "class", "customer_brokerage_name", "customer_id", "customer_name", "first_name", "is_temporary", "last_name", "removed", "user_id", "user_name" };
    private static readonly uint[] _userSearchResultRecordFieldTags = new uint[] { 72, 58, 42, 50, 26, 80, 34, 64, 10, 18 };
    public static UserSearchResultRecord DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UserSearchResultRecord DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserSearchResultRecord ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UserSearchResultRecord__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UserSearchResultRecord, UserSearchResultRecord.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UserSearchResultRecord__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int UserNameFieldNumber = 2;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int FirstNameFieldNumber = 3;
    private bool hasFirstName;
    private string firstName_ = "";
    public bool HasFirstName {
      get { return hasFirstName; }
    }
    public string FirstName {
      get { return firstName_; }
    }
    
    public const int LastNameFieldNumber = 4;
    private bool hasLastName;
    private string lastName_ = "";
    public bool HasLastName {
      get { return hasLastName; }
    }
    public string LastName {
      get { return lastName_; }
    }
    
    public const int CustomerIdFieldNumber = 5;
    private bool hasCustomerId;
    private string customerId_ = "";
    public bool HasCustomerId {
      get { return hasCustomerId; }
    }
    public string CustomerId {
      get { return customerId_; }
    }
    
    public const int CustomerNameFieldNumber = 6;
    private bool hasCustomerName;
    private string customerName_ = "";
    public bool HasCustomerName {
      get { return hasCustomerName; }
    }
    public string CustomerName {
      get { return customerName_; }
    }
    
    public const int CustomerBrokerageNameFieldNumber = 7;
    private bool hasCustomerBrokerageName;
    private string customerBrokerageName_ = "";
    public bool HasCustomerBrokerageName {
      get { return hasCustomerBrokerageName; }
    }
    public string CustomerBrokerageName {
      get { return customerBrokerageName_; }
    }
    
    public const int RemovedFieldNumber = 8;
    private bool hasRemoved;
    private bool removed_;
    public bool HasRemoved {
      get { return hasRemoved; }
    }
    public bool Removed {
      get { return removed_; }
    }
    
    public const int ClassFieldNumber = 9;
    private bool hasClass;
    private uint class_;
    public bool HasClass {
      get { return hasClass; }
    }
    [global::System.CLSCompliant(false)]
    public uint Class {
      get { return class_; }
    }
    
    public const int IsTemporaryFieldNumber = 10;
    private bool hasIsTemporary;
    private bool isTemporary_;
    public bool HasIsTemporary {
      get { return hasIsTemporary; }
    }
    public bool IsTemporary {
      get { return isTemporary_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserId) return false;
        if (!hasUserName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _userSearchResultRecordFieldNames;
      if (hasUserId) {
        output.WriteString(1, field_names[8], UserId);
      }
      if (hasUserName) {
        output.WriteString(2, field_names[9], UserName);
      }
      if (hasFirstName) {
        output.WriteString(3, field_names[4], FirstName);
      }
      if (hasLastName) {
        output.WriteString(4, field_names[6], LastName);
      }
      if (hasCustomerId) {
        output.WriteString(5, field_names[2], CustomerId);
      }
      if (hasCustomerName) {
        output.WriteString(6, field_names[3], CustomerName);
      }
      if (hasCustomerBrokerageName) {
        output.WriteString(7, field_names[1], CustomerBrokerageName);
      }
      if (hasRemoved) {
        output.WriteBool(8, field_names[7], Removed);
      }
      if (hasClass) {
        output.WriteUInt32(9, field_names[0], Class);
      }
      if (hasIsTemporary) {
        output.WriteBool(10, field_names[5], IsTemporary);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserId);
      }
      if (hasUserName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, UserName);
      }
      if (hasFirstName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, FirstName);
      }
      if (hasLastName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, LastName);
      }
      if (hasCustomerId) {
        size += pb::CodedOutputStream.ComputeStringSize(5, CustomerId);
      }
      if (hasCustomerName) {
        size += pb::CodedOutputStream.ComputeStringSize(6, CustomerName);
      }
      if (hasCustomerBrokerageName) {
        size += pb::CodedOutputStream.ComputeStringSize(7, CustomerBrokerageName);
      }
      if (hasRemoved) {
        size += pb::CodedOutputStream.ComputeBoolSize(8, Removed);
      }
      if (hasClass) {
        size += pb::CodedOutputStream.ComputeUInt32Size(9, Class);
      }
      if (hasIsTemporary) {
        size += pb::CodedOutputStream.ComputeBoolSize(10, IsTemporary);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UserSearchResultRecord ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserSearchResultRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserSearchResultRecord ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UserSearchResultRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UserSearchResultRecord ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserSearchResultRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UserSearchResultRecord ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UserSearchResultRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UserSearchResultRecord ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UserSearchResultRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserSearchResultRecord MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UserSearchResultRecord prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UserSearchResultRecord, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserSearchResultRecord cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserSearchResultRecord result;
      
      private UserSearchResultRecord PrepareBuilder() {
        if (resultIsReadOnly) {
          UserSearchResultRecord original = result;
          result = new UserSearchResultRecord();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserSearchResultRecord MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UserSearchResultRecord.Descriptor; }
      }
      
      public override UserSearchResultRecord DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UserSearchResultRecord.DefaultInstance; }
      }
      
      public override UserSearchResultRecord BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UserSearchResultRecord) {
          return MergeFrom((UserSearchResultRecord) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserSearchResultRecord other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UserSearchResultRecord.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasFirstName) {
          FirstName = other.FirstName;
        }
        if (other.HasLastName) {
          LastName = other.LastName;
        }
        if (other.HasCustomerId) {
          CustomerId = other.CustomerId;
        }
        if (other.HasCustomerName) {
          CustomerName = other.CustomerName;
        }
        if (other.HasCustomerBrokerageName) {
          CustomerBrokerageName = other.CustomerBrokerageName;
        }
        if (other.HasRemoved) {
          Removed = other.Removed;
        }
        if (other.HasClass) {
          Class = other.Class;
        }
        if (other.HasIsTemporary) {
          IsTemporary = other.IsTemporary;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userSearchResultRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userSearchResultRecordFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 18: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 26: {
              result.hasFirstName = input.ReadString(ref result.firstName_);
              break;
            }
            case 34: {
              result.hasLastName = input.ReadString(ref result.lastName_);
              break;
            }
            case 42: {
              result.hasCustomerId = input.ReadString(ref result.customerId_);
              break;
            }
            case 50: {
              result.hasCustomerName = input.ReadString(ref result.customerName_);
              break;
            }
            case 58: {
              result.hasCustomerBrokerageName = input.ReadString(ref result.customerBrokerageName_);
              break;
            }
            case 64: {
              result.hasRemoved = input.ReadBool(ref result.removed_);
              break;
            }
            case 72: {
              result.hasClass = input.ReadUInt32(ref result.class_);
              break;
            }
            case 80: {
              result.hasIsTemporary = input.ReadBool(ref result.isTemporary_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasFirstName {
        get { return result.hasFirstName; }
      }
      public string FirstName {
        get { return result.FirstName; }
        set { SetFirstName(value); }
      }
      public Builder SetFirstName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFirstName = true;
        result.firstName_ = value;
        return this;
      }
      public Builder ClearFirstName() {
        PrepareBuilder();
        result.hasFirstName = false;
        result.firstName_ = "";
        return this;
      }
      
      public bool HasLastName {
        get { return result.hasLastName; }
      }
      public string LastName {
        get { return result.LastName; }
        set { SetLastName(value); }
      }
      public Builder SetLastName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastName = true;
        result.lastName_ = value;
        return this;
      }
      public Builder ClearLastName() {
        PrepareBuilder();
        result.hasLastName = false;
        result.lastName_ = "";
        return this;
      }
      
      public bool HasCustomerId {
        get { return result.hasCustomerId; }
      }
      public string CustomerId {
        get { return result.CustomerId; }
        set { SetCustomerId(value); }
      }
      public Builder SetCustomerId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomerId = true;
        result.customerId_ = value;
        return this;
      }
      public Builder ClearCustomerId() {
        PrepareBuilder();
        result.hasCustomerId = false;
        result.customerId_ = "";
        return this;
      }
      
      public bool HasCustomerName {
        get { return result.hasCustomerName; }
      }
      public string CustomerName {
        get { return result.CustomerName; }
        set { SetCustomerName(value); }
      }
      public Builder SetCustomerName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomerName = true;
        result.customerName_ = value;
        return this;
      }
      public Builder ClearCustomerName() {
        PrepareBuilder();
        result.hasCustomerName = false;
        result.customerName_ = "";
        return this;
      }
      
      public bool HasCustomerBrokerageName {
        get { return result.hasCustomerBrokerageName; }
      }
      public string CustomerBrokerageName {
        get { return result.CustomerBrokerageName; }
        set { SetCustomerBrokerageName(value); }
      }
      public Builder SetCustomerBrokerageName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomerBrokerageName = true;
        result.customerBrokerageName_ = value;
        return this;
      }
      public Builder ClearCustomerBrokerageName() {
        PrepareBuilder();
        result.hasCustomerBrokerageName = false;
        result.customerBrokerageName_ = "";
        return this;
      }
      
      public bool HasRemoved {
        get { return result.hasRemoved; }
      }
      public bool Removed {
        get { return result.Removed; }
        set { SetRemoved(value); }
      }
      public Builder SetRemoved(bool value) {
        PrepareBuilder();
        result.hasRemoved = true;
        result.removed_ = value;
        return this;
      }
      public Builder ClearRemoved() {
        PrepareBuilder();
        result.hasRemoved = false;
        result.removed_ = false;
        return this;
      }
      
      public bool HasClass {
        get { return result.hasClass; }
      }
      [global::System.CLSCompliant(false)]
      public uint Class {
        get { return result.Class; }
        set { SetClass(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetClass(uint value) {
        PrepareBuilder();
        result.hasClass = true;
        result.class_ = value;
        return this;
      }
      public Builder ClearClass() {
        PrepareBuilder();
        result.hasClass = false;
        result.class_ = 0;
        return this;
      }
      
      public bool HasIsTemporary {
        get { return result.hasIsTemporary; }
      }
      public bool IsTemporary {
        get { return result.IsTemporary; }
        set { SetIsTemporary(value); }
      }
      public Builder SetIsTemporary(bool value) {
        PrepareBuilder();
        result.hasIsTemporary = true;
        result.isTemporary_ = value;
        return this;
      }
      public Builder ClearIsTemporary() {
        PrepareBuilder();
        result.hasIsTemporary = false;
        result.isTemporary_ = false;
        return this;
      }
    }
    static UserSearchResultRecord() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CloneUser : pb::GeneratedMessage<CloneUser, CloneUser.Builder> {
    private CloneUser() { }
    private static readonly CloneUser defaultInstance = new CloneUser().MakeReadOnly();
    private static readonly string[] _cloneUserFieldNames = new string[] { "new_user_address", "new_user_contact_information", "new_user_first_name", "new_user_last_name", "new_user_middle_initial", "new_user_username", "source_user_id" };
    private static readonly uint[] _cloneUserFieldTags = new uint[] { 42, 50, 26, 34, 58, 18, 10 };
    public static CloneUser DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CloneUser DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CloneUser ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CloneUser__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CloneUser, CloneUser.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CloneUser__FieldAccessorTable; }
    }
    
    public const int SourceUserIdFieldNumber = 1;
    private bool hasSourceUserId;
    private string sourceUserId_ = "";
    public bool HasSourceUserId {
      get { return hasSourceUserId; }
    }
    public string SourceUserId {
      get { return sourceUserId_; }
    }
    
    public const int NewUserUsernameFieldNumber = 2;
    private bool hasNewUserUsername;
    private string newUserUsername_ = "";
    public bool HasNewUserUsername {
      get { return hasNewUserUsername; }
    }
    public string NewUserUsername {
      get { return newUserUsername_; }
    }
    
    public const int NewUserFirstNameFieldNumber = 3;
    private bool hasNewUserFirstName;
    private string newUserFirstName_ = "";
    public bool HasNewUserFirstName {
      get { return hasNewUserFirstName; }
    }
    public string NewUserFirstName {
      get { return newUserFirstName_; }
    }
    
    public const int NewUserLastNameFieldNumber = 4;
    private bool hasNewUserLastName;
    private string newUserLastName_ = "";
    public bool HasNewUserLastName {
      get { return hasNewUserLastName; }
    }
    public string NewUserLastName {
      get { return newUserLastName_; }
    }
    
    public const int NewUserAddressFieldNumber = 5;
    private bool hasNewUserAddress;
    private global::CmsApiSamples.Protocol.CMSApi.Address newUserAddress_;
    public bool HasNewUserAddress {
      get { return hasNewUserAddress; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Address NewUserAddress {
      get { return newUserAddress_ ?? global::CmsApiSamples.Protocol.CMSApi.Address.DefaultInstance; }
    }
    
    public const int NewUserContactInformationFieldNumber = 6;
    private bool hasNewUserContactInformation;
    private global::CmsApiSamples.Protocol.CMSApi.ContactInformation newUserContactInformation_;
    public bool HasNewUserContactInformation {
      get { return hasNewUserContactInformation; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.ContactInformation NewUserContactInformation {
      get { return newUserContactInformation_ ?? global::CmsApiSamples.Protocol.CMSApi.ContactInformation.DefaultInstance; }
    }
    
    public const int NewUserMiddleInitialFieldNumber = 7;
    private bool hasNewUserMiddleInitial;
    private string newUserMiddleInitial_ = "";
    public bool HasNewUserMiddleInitial {
      get { return hasNewUserMiddleInitial; }
    }
    public string NewUserMiddleInitial {
      get { return newUserMiddleInitial_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSourceUserId) return false;
        if (!hasNewUserUsername) return false;
        if (!hasNewUserAddress) return false;
        if (!hasNewUserContactInformation) return false;
        if (!NewUserAddress.IsInitialized) return false;
        if (!NewUserContactInformation.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _cloneUserFieldNames;
      if (hasSourceUserId) {
        output.WriteString(1, field_names[6], SourceUserId);
      }
      if (hasNewUserUsername) {
        output.WriteString(2, field_names[5], NewUserUsername);
      }
      if (hasNewUserFirstName) {
        output.WriteString(3, field_names[2], NewUserFirstName);
      }
      if (hasNewUserLastName) {
        output.WriteString(4, field_names[3], NewUserLastName);
      }
      if (hasNewUserAddress) {
        output.WriteMessage(5, field_names[0], NewUserAddress);
      }
      if (hasNewUserContactInformation) {
        output.WriteMessage(6, field_names[1], NewUserContactInformation);
      }
      if (hasNewUserMiddleInitial) {
        output.WriteString(7, field_names[4], NewUserMiddleInitial);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSourceUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, SourceUserId);
      }
      if (hasNewUserUsername) {
        size += pb::CodedOutputStream.ComputeStringSize(2, NewUserUsername);
      }
      if (hasNewUserFirstName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, NewUserFirstName);
      }
      if (hasNewUserLastName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, NewUserLastName);
      }
      if (hasNewUserAddress) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, NewUserAddress);
      }
      if (hasNewUserContactInformation) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, NewUserContactInformation);
      }
      if (hasNewUserMiddleInitial) {
        size += pb::CodedOutputStream.ComputeStringSize(7, NewUserMiddleInitial);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CloneUser ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CloneUser ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CloneUser ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CloneUser ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CloneUser ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CloneUser ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CloneUser ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CloneUser ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CloneUser ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CloneUser ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CloneUser MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CloneUser prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CloneUser, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CloneUser cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CloneUser result;
      
      private CloneUser PrepareBuilder() {
        if (resultIsReadOnly) {
          CloneUser original = result;
          result = new CloneUser();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CloneUser MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CloneUser.Descriptor; }
      }
      
      public override CloneUser DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CloneUser.DefaultInstance; }
      }
      
      public override CloneUser BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CloneUser) {
          return MergeFrom((CloneUser) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CloneUser other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CloneUser.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSourceUserId) {
          SourceUserId = other.SourceUserId;
        }
        if (other.HasNewUserUsername) {
          NewUserUsername = other.NewUserUsername;
        }
        if (other.HasNewUserFirstName) {
          NewUserFirstName = other.NewUserFirstName;
        }
        if (other.HasNewUserLastName) {
          NewUserLastName = other.NewUserLastName;
        }
        if (other.HasNewUserAddress) {
          MergeNewUserAddress(other.NewUserAddress);
        }
        if (other.HasNewUserContactInformation) {
          MergeNewUserContactInformation(other.NewUserContactInformation);
        }
        if (other.HasNewUserMiddleInitial) {
          NewUserMiddleInitial = other.NewUserMiddleInitial;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cloneUserFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cloneUserFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasSourceUserId = input.ReadString(ref result.sourceUserId_);
              break;
            }
            case 18: {
              result.hasNewUserUsername = input.ReadString(ref result.newUserUsername_);
              break;
            }
            case 26: {
              result.hasNewUserFirstName = input.ReadString(ref result.newUserFirstName_);
              break;
            }
            case 34: {
              result.hasNewUserLastName = input.ReadString(ref result.newUserLastName_);
              break;
            }
            case 42: {
              global::CmsApiSamples.Protocol.CMSApi.Address.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Address.CreateBuilder();
              if (result.hasNewUserAddress) {
                subBuilder.MergeFrom(NewUserAddress);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NewUserAddress = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::CmsApiSamples.Protocol.CMSApi.ContactInformation.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.ContactInformation.CreateBuilder();
              if (result.hasNewUserContactInformation) {
                subBuilder.MergeFrom(NewUserContactInformation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NewUserContactInformation = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              result.hasNewUserMiddleInitial = input.ReadString(ref result.newUserMiddleInitial_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSourceUserId {
        get { return result.hasSourceUserId; }
      }
      public string SourceUserId {
        get { return result.SourceUserId; }
        set { SetSourceUserId(value); }
      }
      public Builder SetSourceUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSourceUserId = true;
        result.sourceUserId_ = value;
        return this;
      }
      public Builder ClearSourceUserId() {
        PrepareBuilder();
        result.hasSourceUserId = false;
        result.sourceUserId_ = "";
        return this;
      }
      
      public bool HasNewUserUsername {
        get { return result.hasNewUserUsername; }
      }
      public string NewUserUsername {
        get { return result.NewUserUsername; }
        set { SetNewUserUsername(value); }
      }
      public Builder SetNewUserUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewUserUsername = true;
        result.newUserUsername_ = value;
        return this;
      }
      public Builder ClearNewUserUsername() {
        PrepareBuilder();
        result.hasNewUserUsername = false;
        result.newUserUsername_ = "";
        return this;
      }
      
      public bool HasNewUserFirstName {
        get { return result.hasNewUserFirstName; }
      }
      public string NewUserFirstName {
        get { return result.NewUserFirstName; }
        set { SetNewUserFirstName(value); }
      }
      public Builder SetNewUserFirstName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewUserFirstName = true;
        result.newUserFirstName_ = value;
        return this;
      }
      public Builder ClearNewUserFirstName() {
        PrepareBuilder();
        result.hasNewUserFirstName = false;
        result.newUserFirstName_ = "";
        return this;
      }
      
      public bool HasNewUserLastName {
        get { return result.hasNewUserLastName; }
      }
      public string NewUserLastName {
        get { return result.NewUserLastName; }
        set { SetNewUserLastName(value); }
      }
      public Builder SetNewUserLastName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewUserLastName = true;
        result.newUserLastName_ = value;
        return this;
      }
      public Builder ClearNewUserLastName() {
        PrepareBuilder();
        result.hasNewUserLastName = false;
        result.newUserLastName_ = "";
        return this;
      }
      
      public bool HasNewUserAddress {
       get { return result.hasNewUserAddress; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Address NewUserAddress {
        get { return result.NewUserAddress; }
        set { SetNewUserAddress(value); }
      }
      public Builder SetNewUserAddress(global::CmsApiSamples.Protocol.CMSApi.Address value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewUserAddress = true;
        result.newUserAddress_ = value;
        return this;
      }
      public Builder SetNewUserAddress(global::CmsApiSamples.Protocol.CMSApi.Address.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNewUserAddress = true;
        result.newUserAddress_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNewUserAddress(global::CmsApiSamples.Protocol.CMSApi.Address value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNewUserAddress &&
            result.newUserAddress_ != global::CmsApiSamples.Protocol.CMSApi.Address.DefaultInstance) {
            result.newUserAddress_ = global::CmsApiSamples.Protocol.CMSApi.Address.CreateBuilder(result.newUserAddress_).MergeFrom(value).BuildPartial();
        } else {
          result.newUserAddress_ = value;
        }
        result.hasNewUserAddress = true;
        return this;
      }
      public Builder ClearNewUserAddress() {
        PrepareBuilder();
        result.hasNewUserAddress = false;
        result.newUserAddress_ = null;
        return this;
      }
      
      public bool HasNewUserContactInformation {
       get { return result.hasNewUserContactInformation; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.ContactInformation NewUserContactInformation {
        get { return result.NewUserContactInformation; }
        set { SetNewUserContactInformation(value); }
      }
      public Builder SetNewUserContactInformation(global::CmsApiSamples.Protocol.CMSApi.ContactInformation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewUserContactInformation = true;
        result.newUserContactInformation_ = value;
        return this;
      }
      public Builder SetNewUserContactInformation(global::CmsApiSamples.Protocol.CMSApi.ContactInformation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNewUserContactInformation = true;
        result.newUserContactInformation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNewUserContactInformation(global::CmsApiSamples.Protocol.CMSApi.ContactInformation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNewUserContactInformation &&
            result.newUserContactInformation_ != global::CmsApiSamples.Protocol.CMSApi.ContactInformation.DefaultInstance) {
            result.newUserContactInformation_ = global::CmsApiSamples.Protocol.CMSApi.ContactInformation.CreateBuilder(result.newUserContactInformation_).MergeFrom(value).BuildPartial();
        } else {
          result.newUserContactInformation_ = value;
        }
        result.hasNewUserContactInformation = true;
        return this;
      }
      public Builder ClearNewUserContactInformation() {
        PrepareBuilder();
        result.hasNewUserContactInformation = false;
        result.newUserContactInformation_ = null;
        return this;
      }
      
      public bool HasNewUserMiddleInitial {
        get { return result.hasNewUserMiddleInitial; }
      }
      public string NewUserMiddleInitial {
        get { return result.NewUserMiddleInitial; }
        set { SetNewUserMiddleInitial(value); }
      }
      public Builder SetNewUserMiddleInitial(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewUserMiddleInitial = true;
        result.newUserMiddleInitial_ = value;
        return this;
      }
      public Builder ClearNewUserMiddleInitial() {
        PrepareBuilder();
        result.hasNewUserMiddleInitial = false;
        result.newUserMiddleInitial_ = "";
        return this;
      }
    }
    static CloneUser() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CloneUserResult : pb::GeneratedMessage<CloneUserResult, CloneUserResult.Builder> {
    private CloneUserResult() { }
    private static readonly CloneUserResult defaultInstance = new CloneUserResult().MakeReadOnly();
    private static readonly string[] _cloneUserResultFieldNames = new string[] { "new_user_id" };
    private static readonly uint[] _cloneUserResultFieldTags = new uint[] { 10 };
    public static CloneUserResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CloneUserResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CloneUserResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CloneUserResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CloneUserResult, CloneUserResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CloneUserResult__FieldAccessorTable; }
    }
    
    public const int NewUserIdFieldNumber = 1;
    private bool hasNewUserId;
    private string newUserId_ = "";
    public bool HasNewUserId {
      get { return hasNewUserId; }
    }
    public string NewUserId {
      get { return newUserId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasNewUserId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _cloneUserResultFieldNames;
      if (hasNewUserId) {
        output.WriteString(1, field_names[0], NewUserId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNewUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, NewUserId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CloneUserResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CloneUserResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CloneUserResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CloneUserResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CloneUserResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CloneUserResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CloneUserResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CloneUserResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CloneUserResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CloneUserResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CloneUserResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CloneUserResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CloneUserResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CloneUserResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CloneUserResult result;
      
      private CloneUserResult PrepareBuilder() {
        if (resultIsReadOnly) {
          CloneUserResult original = result;
          result = new CloneUserResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CloneUserResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CloneUserResult.Descriptor; }
      }
      
      public override CloneUserResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CloneUserResult.DefaultInstance; }
      }
      
      public override CloneUserResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CloneUserResult) {
          return MergeFrom((CloneUserResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CloneUserResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CloneUserResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNewUserId) {
          NewUserId = other.NewUserId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cloneUserResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cloneUserResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasNewUserId = input.ReadString(ref result.newUserId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNewUserId {
        get { return result.hasNewUserId; }
      }
      public string NewUserId {
        get { return result.NewUserId; }
        set { SetNewUserId(value); }
      }
      public Builder SetNewUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewUserId = true;
        result.newUserId_ = value;
        return this;
      }
      public Builder ClearNewUserId() {
        PrepareBuilder();
        result.hasNewUserId = false;
        result.newUserId_ = "";
        return this;
      }
    }
    static CloneUserResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Address : pb::GeneratedMessage<Address, Address.Builder> {
    private Address() { }
    private static readonly Address defaultInstance = new Address().MakeReadOnly();
    private static readonly string[] _addressFieldNames = new string[] { "address", "address_2", "address_status", "city", "country", "name", "state", "zip" };
    private static readonly uint[] _addressFieldTags = new uint[] { 42, 50, 64, 26, 10, 58, 18, 34 };
    public static Address DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Address DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Address ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Address__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Address, Address.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Address__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum AddressStatus {
        INVALID = 0,
        VALID = 1,
        NO_VALIDATION = 2,
        NEW = 3,
      }
      
    }
    #endregion
    
    public const int CountryFieldNumber = 1;
    private bool hasCountry;
    private string country_ = "";
    public bool HasCountry {
      get { return hasCountry; }
    }
    public string Country {
      get { return country_; }
    }
    
    public const int StateFieldNumber = 2;
    private bool hasState;
    private string state_ = "";
    public bool HasState {
      get { return hasState; }
    }
    public string State {
      get { return state_; }
    }
    
    public const int CityFieldNumber = 3;
    private bool hasCity;
    private string city_ = "";
    public bool HasCity {
      get { return hasCity; }
    }
    public string City {
      get { return city_; }
    }
    
    public const int ZipFieldNumber = 4;
    private bool hasZip;
    private string zip_ = "";
    public bool HasZip {
      get { return hasZip; }
    }
    public string Zip {
      get { return zip_; }
    }
    
    public const int Address_FieldNumber = 5;
    private bool hasAddress_;
    private string address_ = "";
    public bool HasAddress_ {
      get { return hasAddress_; }
    }
    public string Address_ {
      get { return address_; }
    }
    
    public const int Address2FieldNumber = 6;
    private bool hasAddress2;
    private string address2_ = "";
    public bool HasAddress2 {
      get { return hasAddress2; }
    }
    public string Address2 {
      get { return address2_; }
    }
    
    public const int NameFieldNumber = 7;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int AddressStatusFieldNumber = 8;
    private bool hasAddressStatus;
    private uint addressStatus_;
    public bool HasAddressStatus {
      get { return hasAddressStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint AddressStatus {
      get { return addressStatus_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCountry) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _addressFieldNames;
      if (hasCountry) {
        output.WriteString(1, field_names[4], Country);
      }
      if (hasState) {
        output.WriteString(2, field_names[6], State);
      }
      if (hasCity) {
        output.WriteString(3, field_names[3], City);
      }
      if (hasZip) {
        output.WriteString(4, field_names[7], Zip);
      }
      if (hasAddress_) {
        output.WriteString(5, field_names[0], Address_);
      }
      if (hasAddress2) {
        output.WriteString(6, field_names[1], Address2);
      }
      if (hasName) {
        output.WriteString(7, field_names[5], Name);
      }
      if (hasAddressStatus) {
        output.WriteUInt32(8, field_names[2], AddressStatus);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCountry) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Country);
      }
      if (hasState) {
        size += pb::CodedOutputStream.ComputeStringSize(2, State);
      }
      if (hasCity) {
        size += pb::CodedOutputStream.ComputeStringSize(3, City);
      }
      if (hasZip) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Zip);
      }
      if (hasAddress_) {
        size += pb::CodedOutputStream.ComputeStringSize(5, Address_);
      }
      if (hasAddress2) {
        size += pb::CodedOutputStream.ComputeStringSize(6, Address2);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(7, Name);
      }
      if (hasAddressStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, AddressStatus);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Address ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Address ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Address ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Address ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Address ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Address ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Address ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Address ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Address ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Address ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Address MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Address prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Address, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Address cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Address result;
      
      private Address PrepareBuilder() {
        if (resultIsReadOnly) {
          Address original = result;
          result = new Address();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Address MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Address.Descriptor; }
      }
      
      public override Address DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Address.DefaultInstance; }
      }
      
      public override Address BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Address) {
          return MergeFrom((Address) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Address other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Address.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCountry) {
          Country = other.Country;
        }
        if (other.HasState) {
          State = other.State;
        }
        if (other.HasCity) {
          City = other.City;
        }
        if (other.HasZip) {
          Zip = other.Zip;
        }
        if (other.HasAddress_) {
          Address_ = other.Address_;
        }
        if (other.HasAddress2) {
          Address2 = other.Address2;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasAddressStatus) {
          AddressStatus = other.AddressStatus;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addressFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addressFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCountry = input.ReadString(ref result.country_);
              break;
            }
            case 18: {
              result.hasState = input.ReadString(ref result.state_);
              break;
            }
            case 26: {
              result.hasCity = input.ReadString(ref result.city_);
              break;
            }
            case 34: {
              result.hasZip = input.ReadString(ref result.zip_);
              break;
            }
            case 42: {
              result.hasAddress_ = input.ReadString(ref result.address_);
              break;
            }
            case 50: {
              result.hasAddress2 = input.ReadString(ref result.address2_);
              break;
            }
            case 58: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 64: {
              result.hasAddressStatus = input.ReadUInt32(ref result.addressStatus_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCountry {
        get { return result.hasCountry; }
      }
      public string Country {
        get { return result.Country; }
        set { SetCountry(value); }
      }
      public Builder SetCountry(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCountry = true;
        result.country_ = value;
        return this;
      }
      public Builder ClearCountry() {
        PrepareBuilder();
        result.hasCountry = false;
        result.country_ = "";
        return this;
      }
      
      public bool HasState {
        get { return result.hasState; }
      }
      public string State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = "";
        return this;
      }
      
      public bool HasCity {
        get { return result.hasCity; }
      }
      public string City {
        get { return result.City; }
        set { SetCity(value); }
      }
      public Builder SetCity(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCity = true;
        result.city_ = value;
        return this;
      }
      public Builder ClearCity() {
        PrepareBuilder();
        result.hasCity = false;
        result.city_ = "";
        return this;
      }
      
      public bool HasZip {
        get { return result.hasZip; }
      }
      public string Zip {
        get { return result.Zip; }
        set { SetZip(value); }
      }
      public Builder SetZip(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasZip = true;
        result.zip_ = value;
        return this;
      }
      public Builder ClearZip() {
        PrepareBuilder();
        result.hasZip = false;
        result.zip_ = "";
        return this;
      }
      
      public bool HasAddress_ {
        get { return result.hasAddress_; }
      }
      public string Address_ {
        get { return result.Address_; }
        set { SetAddress_(value); }
      }
      public Builder SetAddress_(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddress_ = true;
        result.address_ = value;
        return this;
      }
      public Builder ClearAddress_() {
        PrepareBuilder();
        result.hasAddress_ = false;
        result.address_ = "";
        return this;
      }
      
      public bool HasAddress2 {
        get { return result.hasAddress2; }
      }
      public string Address2 {
        get { return result.Address2; }
        set { SetAddress2(value); }
      }
      public Builder SetAddress2(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddress2 = true;
        result.address2_ = value;
        return this;
      }
      public Builder ClearAddress2() {
        PrepareBuilder();
        result.hasAddress2 = false;
        result.address2_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasAddressStatus {
        get { return result.hasAddressStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint AddressStatus {
        get { return result.AddressStatus; }
        set { SetAddressStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAddressStatus(uint value) {
        PrepareBuilder();
        result.hasAddressStatus = true;
        result.addressStatus_ = value;
        return this;
      }
      public Builder ClearAddressStatus() {
        PrepareBuilder();
        result.hasAddressStatus = false;
        result.addressStatus_ = 0;
        return this;
      }
    }
    static Address() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ContactInformation : pb::GeneratedMessage<ContactInformation, ContactInformation.Builder> {
    private ContactInformation() { }
    private static readonly ContactInformation defaultInstance = new ContactInformation().MakeReadOnly();
    private static readonly string[] _contactInformationFieldNames = new string[] { "address", "email", "fax", "first_name", "last_name", "phone" };
    private static readonly uint[] _contactInformationFieldTags = new uint[] { 50, 10, 26, 34, 42, 18 };
    public static ContactInformation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ContactInformation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ContactInformation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ContactInformation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ContactInformation, ContactInformation.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ContactInformation__FieldAccessorTable; }
    }
    
    public const int EmailFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Email> email_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Email>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Email> EmailList {
      get { return email_; }
    }
    public int EmailCount {
      get { return email_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Email GetEmail(int index) {
      return email_[index];
    }
    
    public const int PhoneFieldNumber = 2;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Phone> phone_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Phone>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Phone> PhoneList {
      get { return phone_; }
    }
    public int PhoneCount {
      get { return phone_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Phone GetPhone(int index) {
      return phone_[index];
    }
    
    public const int FaxFieldNumber = 3;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Phone> fax_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Phone>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Phone> FaxList {
      get { return fax_; }
    }
    public int FaxCount {
      get { return fax_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Phone GetFax(int index) {
      return fax_[index];
    }
    
    public const int FirstNameFieldNumber = 4;
    private bool hasFirstName;
    private string firstName_ = "";
    public bool HasFirstName {
      get { return hasFirstName; }
    }
    public string FirstName {
      get { return firstName_; }
    }
    
    public const int LastNameFieldNumber = 5;
    private bool hasLastName;
    private string lastName_ = "";
    public bool HasLastName {
      get { return hasLastName; }
    }
    public string LastName {
      get { return lastName_; }
    }
    
    public const int AddressFieldNumber = 6;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Address> address_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Address>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Address> AddressList {
      get { return address_; }
    }
    public int AddressCount {
      get { return address_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Address GetAddress(int index) {
      return address_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.Email element in EmailList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::CmsApiSamples.Protocol.CMSApi.Phone element in PhoneList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::CmsApiSamples.Protocol.CMSApi.Phone element in FaxList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::CmsApiSamples.Protocol.CMSApi.Address element in AddressList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _contactInformationFieldNames;
      if (email_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], email_);
      }
      if (phone_.Count > 0) {
        output.WriteMessageArray(2, field_names[5], phone_);
      }
      if (fax_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], fax_);
      }
      if (hasFirstName) {
        output.WriteString(4, field_names[3], FirstName);
      }
      if (hasLastName) {
        output.WriteString(5, field_names[4], LastName);
      }
      if (address_.Count > 0) {
        output.WriteMessageArray(6, field_names[0], address_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.Email element in EmailList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.Phone element in PhoneList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.Phone element in FaxList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasFirstName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, FirstName);
      }
      if (hasLastName) {
        size += pb::CodedOutputStream.ComputeStringSize(5, LastName);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.Address element in AddressList) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ContactInformation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ContactInformation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ContactInformation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ContactInformation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ContactInformation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ContactInformation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ContactInformation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ContactInformation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ContactInformation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ContactInformation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ContactInformation MakeReadOnly() {
      email_.MakeReadOnly();
      phone_.MakeReadOnly();
      fax_.MakeReadOnly();
      address_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ContactInformation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ContactInformation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ContactInformation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ContactInformation result;
      
      private ContactInformation PrepareBuilder() {
        if (resultIsReadOnly) {
          ContactInformation original = result;
          result = new ContactInformation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ContactInformation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ContactInformation.Descriptor; }
      }
      
      public override ContactInformation DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ContactInformation.DefaultInstance; }
      }
      
      public override ContactInformation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ContactInformation) {
          return MergeFrom((ContactInformation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ContactInformation other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ContactInformation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.email_.Count != 0) {
          result.email_.Add(other.email_);
        }
        if (other.phone_.Count != 0) {
          result.phone_.Add(other.phone_);
        }
        if (other.fax_.Count != 0) {
          result.fax_.Add(other.fax_);
        }
        if (other.HasFirstName) {
          FirstName = other.FirstName;
        }
        if (other.HasLastName) {
          LastName = other.LastName;
        }
        if (other.address_.Count != 0) {
          result.address_.Add(other.address_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_contactInformationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _contactInformationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.email_, global::CmsApiSamples.Protocol.CMSApi.Email.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.phone_, global::CmsApiSamples.Protocol.CMSApi.Phone.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.fax_, global::CmsApiSamples.Protocol.CMSApi.Phone.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              result.hasFirstName = input.ReadString(ref result.firstName_);
              break;
            }
            case 42: {
              result.hasLastName = input.ReadString(ref result.lastName_);
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.address_, global::CmsApiSamples.Protocol.CMSApi.Address.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Email> EmailList {
        get { return PrepareBuilder().email_; }
      }
      public int EmailCount {
        get { return result.EmailCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Email GetEmail(int index) {
        return result.GetEmail(index);
      }
      public Builder SetEmail(int index, global::CmsApiSamples.Protocol.CMSApi.Email value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.email_[index] = value;
        return this;
      }
      public Builder SetEmail(int index, global::CmsApiSamples.Protocol.CMSApi.Email.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.email_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEmail(global::CmsApiSamples.Protocol.CMSApi.Email value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.email_.Add(value);
        return this;
      }
      public Builder AddEmail(global::CmsApiSamples.Protocol.CMSApi.Email.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.email_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEmail(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Email> values) {
        PrepareBuilder();
        result.email_.Add(values);
        return this;
      }
      public Builder ClearEmail() {
        PrepareBuilder();
        result.email_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Phone> PhoneList {
        get { return PrepareBuilder().phone_; }
      }
      public int PhoneCount {
        get { return result.PhoneCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Phone GetPhone(int index) {
        return result.GetPhone(index);
      }
      public Builder SetPhone(int index, global::CmsApiSamples.Protocol.CMSApi.Phone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.phone_[index] = value;
        return this;
      }
      public Builder SetPhone(int index, global::CmsApiSamples.Protocol.CMSApi.Phone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.phone_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPhone(global::CmsApiSamples.Protocol.CMSApi.Phone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.phone_.Add(value);
        return this;
      }
      public Builder AddPhone(global::CmsApiSamples.Protocol.CMSApi.Phone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.phone_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePhone(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Phone> values) {
        PrepareBuilder();
        result.phone_.Add(values);
        return this;
      }
      public Builder ClearPhone() {
        PrepareBuilder();
        result.phone_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Phone> FaxList {
        get { return PrepareBuilder().fax_; }
      }
      public int FaxCount {
        get { return result.FaxCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Phone GetFax(int index) {
        return result.GetFax(index);
      }
      public Builder SetFax(int index, global::CmsApiSamples.Protocol.CMSApi.Phone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fax_[index] = value;
        return this;
      }
      public Builder SetFax(int index, global::CmsApiSamples.Protocol.CMSApi.Phone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fax_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFax(global::CmsApiSamples.Protocol.CMSApi.Phone value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fax_.Add(value);
        return this;
      }
      public Builder AddFax(global::CmsApiSamples.Protocol.CMSApi.Phone.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fax_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFax(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Phone> values) {
        PrepareBuilder();
        result.fax_.Add(values);
        return this;
      }
      public Builder ClearFax() {
        PrepareBuilder();
        result.fax_.Clear();
        return this;
      }
      
      public bool HasFirstName {
        get { return result.hasFirstName; }
      }
      public string FirstName {
        get { return result.FirstName; }
        set { SetFirstName(value); }
      }
      public Builder SetFirstName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFirstName = true;
        result.firstName_ = value;
        return this;
      }
      public Builder ClearFirstName() {
        PrepareBuilder();
        result.hasFirstName = false;
        result.firstName_ = "";
        return this;
      }
      
      public bool HasLastName {
        get { return result.hasLastName; }
      }
      public string LastName {
        get { return result.LastName; }
        set { SetLastName(value); }
      }
      public Builder SetLastName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastName = true;
        result.lastName_ = value;
        return this;
      }
      public Builder ClearLastName() {
        PrepareBuilder();
        result.hasLastName = false;
        result.lastName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Address> AddressList {
        get { return PrepareBuilder().address_; }
      }
      public int AddressCount {
        get { return result.AddressCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Address GetAddress(int index) {
        return result.GetAddress(index);
      }
      public Builder SetAddress(int index, global::CmsApiSamples.Protocol.CMSApi.Address value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.address_[index] = value;
        return this;
      }
      public Builder SetAddress(int index, global::CmsApiSamples.Protocol.CMSApi.Address.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.address_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAddress(global::CmsApiSamples.Protocol.CMSApi.Address value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.address_.Add(value);
        return this;
      }
      public Builder AddAddress(global::CmsApiSamples.Protocol.CMSApi.Address.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.address_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAddress(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Address> values) {
        PrepareBuilder();
        result.address_.Add(values);
        return this;
      }
      public Builder ClearAddress() {
        PrepareBuilder();
        result.address_.Clear();
        return this;
      }
    }
    static ContactInformation() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Email : pb::GeneratedMessage<Email, Email.Builder> {
    private Email() { }
    private static readonly Email defaultInstance = new Email().MakeReadOnly();
    private static readonly string[] _emailFieldNames = new string[] { "email" };
    private static readonly uint[] _emailFieldTags = new uint[] { 10 };
    public static Email DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Email DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Email ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Email__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Email, Email.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Email__FieldAccessorTable; }
    }
    
    public const int Email_FieldNumber = 1;
    private bool hasEmail_;
    private string email_ = "";
    public bool HasEmail_ {
      get { return hasEmail_; }
    }
    public string Email_ {
      get { return email_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEmail_) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _emailFieldNames;
      if (hasEmail_) {
        output.WriteString(1, field_names[0], Email_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEmail_) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Email_);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Email ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Email ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Email ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Email ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Email ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Email ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Email ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Email ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Email ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Email ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Email MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Email prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Email, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Email cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Email result;
      
      private Email PrepareBuilder() {
        if (resultIsReadOnly) {
          Email original = result;
          result = new Email();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Email MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Email.Descriptor; }
      }
      
      public override Email DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Email.DefaultInstance; }
      }
      
      public override Email BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Email) {
          return MergeFrom((Email) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Email other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Email.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEmail_) {
          Email_ = other.Email_;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_emailFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _emailFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasEmail_ = input.ReadString(ref result.email_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEmail_ {
        get { return result.hasEmail_; }
      }
      public string Email_ {
        get { return result.Email_; }
        set { SetEmail_(value); }
      }
      public Builder SetEmail_(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEmail_ = true;
        result.email_ = value;
        return this;
      }
      public Builder ClearEmail_() {
        PrepareBuilder();
        result.hasEmail_ = false;
        result.email_ = "";
        return this;
      }
    }
    static Email() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Phone : pb::GeneratedMessage<Phone, Phone.Builder> {
    private Phone() { }
    private static readonly Phone defaultInstance = new Phone().MakeReadOnly();
    private static readonly string[] _phoneFieldNames = new string[] { "number" };
    private static readonly uint[] _phoneFieldTags = new uint[] { 10 };
    public static Phone DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Phone DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Phone ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Phone__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Phone, Phone.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Phone__FieldAccessorTable; }
    }
    
    public const int NumberFieldNumber = 1;
    private bool hasNumber;
    private string number_ = "";
    public bool HasNumber {
      get { return hasNumber; }
    }
    public string Number {
      get { return number_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasNumber) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _phoneFieldNames;
      if (hasNumber) {
        output.WriteString(1, field_names[0], Number);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Number);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Phone ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Phone ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Phone ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Phone ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Phone ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Phone ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Phone ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Phone ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Phone ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Phone ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Phone MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Phone prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Phone, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Phone cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Phone result;
      
      private Phone PrepareBuilder() {
        if (resultIsReadOnly) {
          Phone original = result;
          result = new Phone();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Phone MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Phone.Descriptor; }
      }
      
      public override Phone DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Phone.DefaultInstance; }
      }
      
      public override Phone BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Phone) {
          return MergeFrom((Phone) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Phone other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Phone.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNumber) {
          Number = other.Number;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_phoneFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _phoneFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasNumber = input.ReadString(ref result.number_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNumber {
        get { return result.hasNumber; }
      }
      public string Number {
        get { return result.Number; }
        set { SetNumber(value); }
      }
      public Builder SetNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNumber = true;
        result.number_ = value;
        return this;
      }
      public Builder ClearNumber() {
        PrepareBuilder();
        result.hasNumber = false;
        result.number_ = "";
        return this;
      }
    }
    static Phone() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CustomerRequest : pb::GeneratedMessage<CustomerRequest, CustomerRequest.Builder> {
    private CustomerRequest() { }
    private static readonly CustomerRequest defaultInstance = new CustomerRequest().MakeReadOnly();
    private static readonly string[] _customerRequestFieldNames = new string[] { "id" };
    private static readonly uint[] _customerRequestFieldTags = new uint[] { 10 };
    public static CustomerRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CustomerRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CustomerRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CustomerRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CustomerRequest, CustomerRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CustomerRequest__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _customerRequestFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CustomerRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomerRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomerRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomerRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomerRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomerRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CustomerRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CustomerRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CustomerRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomerRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CustomerRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CustomerRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CustomerRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CustomerRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CustomerRequest result;
      
      private CustomerRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CustomerRequest original = result;
          result = new CustomerRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CustomerRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CustomerRequest.Descriptor; }
      }
      
      public override CustomerRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CustomerRequest.DefaultInstance; }
      }
      
      public override CustomerRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CustomerRequest) {
          return MergeFrom((CustomerRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CustomerRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CustomerRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_customerRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _customerRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
    }
    static CustomerRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Customer : pb::GeneratedMessage<Customer, Customer.Builder> {
    private Customer() { }
    private static readonly Customer defaultInstance = new Customer().MakeReadOnly();
    private static readonly string[] _customerFieldNames = new string[] { "authentication_system", "brokerage_id", "cleared_fields", "contact_information", "id", "legal_type", "name", "profile_type", "removed" };
    private static readonly uint[] _customerFieldTags = new uint[] { 58, 42, 72, 34, 10, 16, 26, 64, 48 };
    public static Customer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Customer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Customer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Customer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Customer, Customer.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Customer__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum LegalType {
        INDIVIDUAL = 1,
        JOINT = 2,
        LIMITED = 3,
        TRUST = 4,
        CORPORATE = 5,
        PARTNERSHIP = 6,
      }
      
      public enum ProfileType {
        CUSTOMER = 1,
        ADMIN = 2,
        BROKERAGE = 3,
        SUBSCRIBER = 4,
      }
      
    }
    #endregion
    
    public const int ClearedFieldsFieldNumber = 9;
    private pbc::PopsicleList<uint> clearedFields_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> ClearedFieldsList {
      get { return pbc::Lists.AsReadOnly(clearedFields_); }
    }
    public int ClearedFieldsCount {
      get { return clearedFields_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetClearedFields(int index) {
      return clearedFields_[index];
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int LegalTypeFieldNumber = 2;
    private bool hasLegalType;
    private uint legalType_;
    public bool HasLegalType {
      get { return hasLegalType; }
    }
    [global::System.CLSCompliant(false)]
    public uint LegalType {
      get { return legalType_; }
    }
    
    public const int NameFieldNumber = 3;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int ContactInformationFieldNumber = 4;
    private bool hasContactInformation;
    private global::CmsApiSamples.Protocol.CMSApi.ContactInformation contactInformation_;
    public bool HasContactInformation {
      get { return hasContactInformation; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.ContactInformation ContactInformation {
      get { return contactInformation_ ?? global::CmsApiSamples.Protocol.CMSApi.ContactInformation.DefaultInstance; }
    }
    
    public const int BrokerageIdFieldNumber = 5;
    private bool hasBrokerageId;
    private string brokerageId_ = "";
    public bool HasBrokerageId {
      get { return hasBrokerageId; }
    }
    public string BrokerageId {
      get { return brokerageId_; }
    }
    
    public const int RemovedFieldNumber = 6;
    private bool hasRemoved;
    private bool removed_;
    public bool HasRemoved {
      get { return hasRemoved; }
    }
    public bool Removed {
      get { return removed_; }
    }
    
    public const int AuthenticationSystemFieldNumber = 7;
    private bool hasAuthenticationSystem;
    private string authenticationSystem_ = "";
    public bool HasAuthenticationSystem {
      get { return hasAuthenticationSystem; }
    }
    public string AuthenticationSystem {
      get { return authenticationSystem_; }
    }
    
    public const int ProfileTypeFieldNumber = 8;
    private bool hasProfileType;
    private uint profileType_ = 1;
    public bool HasProfileType {
      get { return hasProfileType; }
    }
    [global::System.CLSCompliant(false)]
    public uint ProfileType {
      get { return profileType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasContactInformation) {
          if (!ContactInformation.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _customerFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[4], Id);
      }
      if (hasLegalType) {
        output.WriteUInt32(2, field_names[5], LegalType);
      }
      if (hasName) {
        output.WriteString(3, field_names[6], Name);
      }
      if (hasContactInformation) {
        output.WriteMessage(4, field_names[3], ContactInformation);
      }
      if (hasBrokerageId) {
        output.WriteString(5, field_names[1], BrokerageId);
      }
      if (hasRemoved) {
        output.WriteBool(6, field_names[8], Removed);
      }
      if (hasAuthenticationSystem) {
        output.WriteString(7, field_names[0], AuthenticationSystem);
      }
      if (hasProfileType) {
        output.WriteUInt32(8, field_names[7], ProfileType);
      }
      if (clearedFields_.Count > 0) {
        output.WriteUInt32Array(9, field_names[2], clearedFields_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (uint element in ClearedFieldsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * clearedFields_.Count;
      }
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      if (hasLegalType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, LegalType);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Name);
      }
      if (hasContactInformation) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, ContactInformation);
      }
      if (hasBrokerageId) {
        size += pb::CodedOutputStream.ComputeStringSize(5, BrokerageId);
      }
      if (hasRemoved) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, Removed);
      }
      if (hasAuthenticationSystem) {
        size += pb::CodedOutputStream.ComputeStringSize(7, AuthenticationSystem);
      }
      if (hasProfileType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, ProfileType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Customer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Customer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Customer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Customer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Customer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Customer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Customer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Customer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Customer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Customer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Customer MakeReadOnly() {
      clearedFields_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Customer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Customer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Customer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Customer result;
      
      private Customer PrepareBuilder() {
        if (resultIsReadOnly) {
          Customer original = result;
          result = new Customer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Customer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Customer.Descriptor; }
      }
      
      public override Customer DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Customer.DefaultInstance; }
      }
      
      public override Customer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Customer) {
          return MergeFrom((Customer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Customer other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Customer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.clearedFields_.Count != 0) {
          result.clearedFields_.Add(other.clearedFields_);
        }
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasLegalType) {
          LegalType = other.LegalType;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasContactInformation) {
          MergeContactInformation(other.ContactInformation);
        }
        if (other.HasBrokerageId) {
          BrokerageId = other.BrokerageId;
        }
        if (other.HasRemoved) {
          Removed = other.Removed;
        }
        if (other.HasAuthenticationSystem) {
          AuthenticationSystem = other.AuthenticationSystem;
        }
        if (other.HasProfileType) {
          ProfileType = other.ProfileType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_customerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _customerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 16: {
              result.hasLegalType = input.ReadUInt32(ref result.legalType_);
              break;
            }
            case 26: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 34: {
              global::CmsApiSamples.Protocol.CMSApi.ContactInformation.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.ContactInformation.CreateBuilder();
              if (result.hasContactInformation) {
                subBuilder.MergeFrom(ContactInformation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ContactInformation = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              result.hasBrokerageId = input.ReadString(ref result.brokerageId_);
              break;
            }
            case 48: {
              result.hasRemoved = input.ReadBool(ref result.removed_);
              break;
            }
            case 58: {
              result.hasAuthenticationSystem = input.ReadString(ref result.authenticationSystem_);
              break;
            }
            case 64: {
              result.hasProfileType = input.ReadUInt32(ref result.profileType_);
              break;
            }
            case 74:
            case 72: {
              input.ReadUInt32Array(tag, field_name, result.clearedFields_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> ClearedFieldsList {
        get { return PrepareBuilder().clearedFields_; }
      }
      public int ClearedFieldsCount {
        get { return result.ClearedFieldsCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetClearedFields(int index) {
        return result.GetClearedFields(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetClearedFields(int index, uint value) {
        PrepareBuilder();
        result.clearedFields_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddClearedFields(uint value) {
        PrepareBuilder();
        result.clearedFields_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeClearedFields(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.clearedFields_.Add(values);
        return this;
      }
      public Builder ClearClearedFields() {
        PrepareBuilder();
        result.clearedFields_.Clear();
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasLegalType {
        get { return result.hasLegalType; }
      }
      [global::System.CLSCompliant(false)]
      public uint LegalType {
        get { return result.LegalType; }
        set { SetLegalType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetLegalType(uint value) {
        PrepareBuilder();
        result.hasLegalType = true;
        result.legalType_ = value;
        return this;
      }
      public Builder ClearLegalType() {
        PrepareBuilder();
        result.hasLegalType = false;
        result.legalType_ = 0;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasContactInformation {
       get { return result.hasContactInformation; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.ContactInformation ContactInformation {
        get { return result.ContactInformation; }
        set { SetContactInformation(value); }
      }
      public Builder SetContactInformation(global::CmsApiSamples.Protocol.CMSApi.ContactInformation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContactInformation = true;
        result.contactInformation_ = value;
        return this;
      }
      public Builder SetContactInformation(global::CmsApiSamples.Protocol.CMSApi.ContactInformation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasContactInformation = true;
        result.contactInformation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeContactInformation(global::CmsApiSamples.Protocol.CMSApi.ContactInformation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasContactInformation &&
            result.contactInformation_ != global::CmsApiSamples.Protocol.CMSApi.ContactInformation.DefaultInstance) {
            result.contactInformation_ = global::CmsApiSamples.Protocol.CMSApi.ContactInformation.CreateBuilder(result.contactInformation_).MergeFrom(value).BuildPartial();
        } else {
          result.contactInformation_ = value;
        }
        result.hasContactInformation = true;
        return this;
      }
      public Builder ClearContactInformation() {
        PrepareBuilder();
        result.hasContactInformation = false;
        result.contactInformation_ = null;
        return this;
      }
      
      public bool HasBrokerageId {
        get { return result.hasBrokerageId; }
      }
      public string BrokerageId {
        get { return result.BrokerageId; }
        set { SetBrokerageId(value); }
      }
      public Builder SetBrokerageId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageId = true;
        result.brokerageId_ = value;
        return this;
      }
      public Builder ClearBrokerageId() {
        PrepareBuilder();
        result.hasBrokerageId = false;
        result.brokerageId_ = "";
        return this;
      }
      
      public bool HasRemoved {
        get { return result.hasRemoved; }
      }
      public bool Removed {
        get { return result.Removed; }
        set { SetRemoved(value); }
      }
      public Builder SetRemoved(bool value) {
        PrepareBuilder();
        result.hasRemoved = true;
        result.removed_ = value;
        return this;
      }
      public Builder ClearRemoved() {
        PrepareBuilder();
        result.hasRemoved = false;
        result.removed_ = false;
        return this;
      }
      
      public bool HasAuthenticationSystem {
        get { return result.hasAuthenticationSystem; }
      }
      public string AuthenticationSystem {
        get { return result.AuthenticationSystem; }
        set { SetAuthenticationSystem(value); }
      }
      public Builder SetAuthenticationSystem(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthenticationSystem = true;
        result.authenticationSystem_ = value;
        return this;
      }
      public Builder ClearAuthenticationSystem() {
        PrepareBuilder();
        result.hasAuthenticationSystem = false;
        result.authenticationSystem_ = "";
        return this;
      }
      
      public bool HasProfileType {
        get { return result.hasProfileType; }
      }
      [global::System.CLSCompliant(false)]
      public uint ProfileType {
        get { return result.ProfileType; }
        set { SetProfileType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetProfileType(uint value) {
        PrepareBuilder();
        result.hasProfileType = true;
        result.profileType_ = value;
        return this;
      }
      public Builder ClearProfileType() {
        PrepareBuilder();
        result.hasProfileType = false;
        result.profileType_ = 1;
        return this;
      }
    }
    static Customer() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CustomerSearchRequest : pb::GeneratedMessage<CustomerSearchRequest, CustomerSearchRequest.Builder> {
    private CustomerSearchRequest() { }
    private static readonly CustomerSearchRequest defaultInstance = new CustomerSearchRequest().MakeReadOnly();
    private static readonly string[] _customerSearchRequestFieldNames = new string[] { "all_match_mode", "search_criteria", "search_options", "text" };
    private static readonly uint[] _customerSearchRequestFieldTags = new uint[] { 32, 16, 26, 10 };
    public static CustomerSearchRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CustomerSearchRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CustomerSearchRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CustomerSearchRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CustomerSearchRequest, CustomerSearchRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CustomerSearchRequest__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum SearchCriteria {
        ID = 1,
        NAME = 2,
        FIRST_NAME = 3,
        LAST_NAME = 4,
        BROKERAGE_ID = 5,
      }
      
    }
    #endregion
    
    public const int TextFieldNumber = 1;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int SearchCriteriaFieldNumber = 2;
    private pbc::PopsicleList<uint> searchCriteria_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> SearchCriteriaList {
      get { return pbc::Lists.AsReadOnly(searchCriteria_); }
    }
    public int SearchCriteriaCount {
      get { return searchCriteria_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetSearchCriteria(int index) {
      return searchCriteria_[index];
    }
    
    public const int SearchOptionsFieldNumber = 3;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> searchOptions_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> SearchOptionsList {
      get { return searchOptions_; }
    }
    public int SearchOptionsCount {
      get { return searchOptions_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.SearchOption GetSearchOptions(int index) {
      return searchOptions_[index];
    }
    
    public const int AllMatchModeFieldNumber = 4;
    private bool hasAllMatchMode;
    private bool allMatchMode_;
    public bool HasAllMatchMode {
      get { return hasAllMatchMode; }
    }
    public bool AllMatchMode {
      get { return allMatchMode_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _customerSearchRequestFieldNames;
      if (hasText) {
        output.WriteString(1, field_names[3], Text);
      }
      if (searchCriteria_.Count > 0) {
        output.WriteUInt32Array(2, field_names[1], searchCriteria_);
      }
      if (searchOptions_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], searchOptions_);
      }
      if (hasAllMatchMode) {
        output.WriteBool(4, field_names[0], AllMatchMode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Text);
      }
      {
        int dataSize = 0;
        foreach (uint element in SearchCriteriaList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * searchCriteria_.Count;
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.SearchOption element in SearchOptionsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasAllMatchMode) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, AllMatchMode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CustomerSearchRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomerSearchRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomerSearchRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomerSearchRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomerSearchRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomerSearchRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CustomerSearchRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CustomerSearchRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CustomerSearchRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomerSearchRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CustomerSearchRequest MakeReadOnly() {
      searchCriteria_.MakeReadOnly();
      searchOptions_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CustomerSearchRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CustomerSearchRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CustomerSearchRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CustomerSearchRequest result;
      
      private CustomerSearchRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CustomerSearchRequest original = result;
          result = new CustomerSearchRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CustomerSearchRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CustomerSearchRequest.Descriptor; }
      }
      
      public override CustomerSearchRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CustomerSearchRequest.DefaultInstance; }
      }
      
      public override CustomerSearchRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CustomerSearchRequest) {
          return MergeFrom((CustomerSearchRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CustomerSearchRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CustomerSearchRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.searchCriteria_.Count != 0) {
          result.searchCriteria_.Add(other.searchCriteria_);
        }
        if (other.searchOptions_.Count != 0) {
          result.searchOptions_.Add(other.searchOptions_);
        }
        if (other.HasAllMatchMode) {
          AllMatchMode = other.AllMatchMode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_customerSearchRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _customerSearchRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt32Array(tag, field_name, result.searchCriteria_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.searchOptions_, global::CmsApiSamples.Protocol.CMSApi.SearchOption.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasAllMatchMode = input.ReadBool(ref result.allMatchMode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> SearchCriteriaList {
        get { return PrepareBuilder().searchCriteria_; }
      }
      public int SearchCriteriaCount {
        get { return result.SearchCriteriaCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetSearchCriteria(int index) {
        return result.GetSearchCriteria(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSearchCriteria(int index, uint value) {
        PrepareBuilder();
        result.searchCriteria_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddSearchCriteria(uint value) {
        PrepareBuilder();
        result.searchCriteria_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeSearchCriteria(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.searchCriteria_.Add(values);
        return this;
      }
      public Builder ClearSearchCriteria() {
        PrepareBuilder();
        result.searchCriteria_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> SearchOptionsList {
        get { return PrepareBuilder().searchOptions_; }
      }
      public int SearchOptionsCount {
        get { return result.SearchOptionsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.SearchOption GetSearchOptions(int index) {
        return result.GetSearchOptions(index);
      }
      public Builder SetSearchOptions(int index, global::CmsApiSamples.Protocol.CMSApi.SearchOption value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.searchOptions_[index] = value;
        return this;
      }
      public Builder SetSearchOptions(int index, global::CmsApiSamples.Protocol.CMSApi.SearchOption.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.searchOptions_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSearchOptions(global::CmsApiSamples.Protocol.CMSApi.SearchOption value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.searchOptions_.Add(value);
        return this;
      }
      public Builder AddSearchOptions(global::CmsApiSamples.Protocol.CMSApi.SearchOption.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.searchOptions_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSearchOptions(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.SearchOption> values) {
        PrepareBuilder();
        result.searchOptions_.Add(values);
        return this;
      }
      public Builder ClearSearchOptions() {
        PrepareBuilder();
        result.searchOptions_.Clear();
        return this;
      }
      
      public bool HasAllMatchMode {
        get { return result.hasAllMatchMode; }
      }
      public bool AllMatchMode {
        get { return result.AllMatchMode; }
        set { SetAllMatchMode(value); }
      }
      public Builder SetAllMatchMode(bool value) {
        PrepareBuilder();
        result.hasAllMatchMode = true;
        result.allMatchMode_ = value;
        return this;
      }
      public Builder ClearAllMatchMode() {
        PrepareBuilder();
        result.hasAllMatchMode = false;
        result.allMatchMode_ = false;
        return this;
      }
    }
    static CustomerSearchRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CustomerSearchResultRecord : pb::GeneratedMessage<CustomerSearchResultRecord, CustomerSearchResultRecord.Builder> {
    private CustomerSearchResultRecord() { }
    private static readonly CustomerSearchResultRecord defaultInstance = new CustomerSearchResultRecord().MakeReadOnly();
    private static readonly string[] _customerSearchResultRecordFieldNames = new string[] { "authentication_system", "brokerage_id", "brokerage_name", "first_name", "id", "last_name", "name", "profile_type", "removed" };
    private static readonly uint[] _customerSearchResultRecordFieldTags = new uint[] { 66, 50, 26, 34, 10, 42, 18, 72, 56 };
    public static CustomerSearchResultRecord DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CustomerSearchResultRecord DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CustomerSearchResultRecord ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CustomerSearchResultRecord__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CustomerSearchResultRecord, CustomerSearchResultRecord.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CustomerSearchResultRecord__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int BrokerageNameFieldNumber = 3;
    private bool hasBrokerageName;
    private string brokerageName_ = "";
    public bool HasBrokerageName {
      get { return hasBrokerageName; }
    }
    public string BrokerageName {
      get { return brokerageName_; }
    }
    
    public const int FirstNameFieldNumber = 4;
    private bool hasFirstName;
    private string firstName_ = "";
    public bool HasFirstName {
      get { return hasFirstName; }
    }
    public string FirstName {
      get { return firstName_; }
    }
    
    public const int LastNameFieldNumber = 5;
    private bool hasLastName;
    private string lastName_ = "";
    public bool HasLastName {
      get { return hasLastName; }
    }
    public string LastName {
      get { return lastName_; }
    }
    
    public const int BrokerageIdFieldNumber = 6;
    private bool hasBrokerageId;
    private string brokerageId_ = "";
    public bool HasBrokerageId {
      get { return hasBrokerageId; }
    }
    public string BrokerageId {
      get { return brokerageId_; }
    }
    
    public const int RemovedFieldNumber = 7;
    private bool hasRemoved;
    private bool removed_;
    public bool HasRemoved {
      get { return hasRemoved; }
    }
    public bool Removed {
      get { return removed_; }
    }
    
    public const int AuthenticationSystemFieldNumber = 8;
    private bool hasAuthenticationSystem;
    private string authenticationSystem_ = "";
    public bool HasAuthenticationSystem {
      get { return hasAuthenticationSystem; }
    }
    public string AuthenticationSystem {
      get { return authenticationSystem_; }
    }
    
    public const int ProfileTypeFieldNumber = 9;
    private bool hasProfileType;
    private uint profileType_;
    public bool HasProfileType {
      get { return hasProfileType; }
    }
    [global::System.CLSCompliant(false)]
    public uint ProfileType {
      get { return profileType_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _customerSearchResultRecordFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[4], Id);
      }
      if (hasName) {
        output.WriteString(2, field_names[6], Name);
      }
      if (hasBrokerageName) {
        output.WriteString(3, field_names[2], BrokerageName);
      }
      if (hasFirstName) {
        output.WriteString(4, field_names[3], FirstName);
      }
      if (hasLastName) {
        output.WriteString(5, field_names[5], LastName);
      }
      if (hasBrokerageId) {
        output.WriteString(6, field_names[1], BrokerageId);
      }
      if (hasRemoved) {
        output.WriteBool(7, field_names[8], Removed);
      }
      if (hasAuthenticationSystem) {
        output.WriteString(8, field_names[0], AuthenticationSystem);
      }
      if (hasProfileType) {
        output.WriteUInt32(9, field_names[7], ProfileType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Name);
      }
      if (hasBrokerageName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, BrokerageName);
      }
      if (hasFirstName) {
        size += pb::CodedOutputStream.ComputeStringSize(4, FirstName);
      }
      if (hasLastName) {
        size += pb::CodedOutputStream.ComputeStringSize(5, LastName);
      }
      if (hasBrokerageId) {
        size += pb::CodedOutputStream.ComputeStringSize(6, BrokerageId);
      }
      if (hasRemoved) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, Removed);
      }
      if (hasAuthenticationSystem) {
        size += pb::CodedOutputStream.ComputeStringSize(8, AuthenticationSystem);
      }
      if (hasProfileType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(9, ProfileType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CustomerSearchResultRecord ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomerSearchResultRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomerSearchResultRecord ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomerSearchResultRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomerSearchResultRecord ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomerSearchResultRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CustomerSearchResultRecord ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CustomerSearchResultRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CustomerSearchResultRecord ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomerSearchResultRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CustomerSearchResultRecord MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CustomerSearchResultRecord prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CustomerSearchResultRecord, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CustomerSearchResultRecord cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CustomerSearchResultRecord result;
      
      private CustomerSearchResultRecord PrepareBuilder() {
        if (resultIsReadOnly) {
          CustomerSearchResultRecord original = result;
          result = new CustomerSearchResultRecord();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CustomerSearchResultRecord MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CustomerSearchResultRecord.Descriptor; }
      }
      
      public override CustomerSearchResultRecord DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CustomerSearchResultRecord.DefaultInstance; }
      }
      
      public override CustomerSearchResultRecord BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CustomerSearchResultRecord) {
          return MergeFrom((CustomerSearchResultRecord) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CustomerSearchResultRecord other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CustomerSearchResultRecord.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasBrokerageName) {
          BrokerageName = other.BrokerageName;
        }
        if (other.HasFirstName) {
          FirstName = other.FirstName;
        }
        if (other.HasLastName) {
          LastName = other.LastName;
        }
        if (other.HasBrokerageId) {
          BrokerageId = other.BrokerageId;
        }
        if (other.HasRemoved) {
          Removed = other.Removed;
        }
        if (other.HasAuthenticationSystem) {
          AuthenticationSystem = other.AuthenticationSystem;
        }
        if (other.HasProfileType) {
          ProfileType = other.ProfileType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_customerSearchResultRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _customerSearchResultRecordFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 18: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 26: {
              result.hasBrokerageName = input.ReadString(ref result.brokerageName_);
              break;
            }
            case 34: {
              result.hasFirstName = input.ReadString(ref result.firstName_);
              break;
            }
            case 42: {
              result.hasLastName = input.ReadString(ref result.lastName_);
              break;
            }
            case 50: {
              result.hasBrokerageId = input.ReadString(ref result.brokerageId_);
              break;
            }
            case 56: {
              result.hasRemoved = input.ReadBool(ref result.removed_);
              break;
            }
            case 66: {
              result.hasAuthenticationSystem = input.ReadString(ref result.authenticationSystem_);
              break;
            }
            case 72: {
              result.hasProfileType = input.ReadUInt32(ref result.profileType_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasBrokerageName {
        get { return result.hasBrokerageName; }
      }
      public string BrokerageName {
        get { return result.BrokerageName; }
        set { SetBrokerageName(value); }
      }
      public Builder SetBrokerageName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageName = true;
        result.brokerageName_ = value;
        return this;
      }
      public Builder ClearBrokerageName() {
        PrepareBuilder();
        result.hasBrokerageName = false;
        result.brokerageName_ = "";
        return this;
      }
      
      public bool HasFirstName {
        get { return result.hasFirstName; }
      }
      public string FirstName {
        get { return result.FirstName; }
        set { SetFirstName(value); }
      }
      public Builder SetFirstName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFirstName = true;
        result.firstName_ = value;
        return this;
      }
      public Builder ClearFirstName() {
        PrepareBuilder();
        result.hasFirstName = false;
        result.firstName_ = "";
        return this;
      }
      
      public bool HasLastName {
        get { return result.hasLastName; }
      }
      public string LastName {
        get { return result.LastName; }
        set { SetLastName(value); }
      }
      public Builder SetLastName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastName = true;
        result.lastName_ = value;
        return this;
      }
      public Builder ClearLastName() {
        PrepareBuilder();
        result.hasLastName = false;
        result.lastName_ = "";
        return this;
      }
      
      public bool HasBrokerageId {
        get { return result.hasBrokerageId; }
      }
      public string BrokerageId {
        get { return result.BrokerageId; }
        set { SetBrokerageId(value); }
      }
      public Builder SetBrokerageId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageId = true;
        result.brokerageId_ = value;
        return this;
      }
      public Builder ClearBrokerageId() {
        PrepareBuilder();
        result.hasBrokerageId = false;
        result.brokerageId_ = "";
        return this;
      }
      
      public bool HasRemoved {
        get { return result.hasRemoved; }
      }
      public bool Removed {
        get { return result.Removed; }
        set { SetRemoved(value); }
      }
      public Builder SetRemoved(bool value) {
        PrepareBuilder();
        result.hasRemoved = true;
        result.removed_ = value;
        return this;
      }
      public Builder ClearRemoved() {
        PrepareBuilder();
        result.hasRemoved = false;
        result.removed_ = false;
        return this;
      }
      
      public bool HasAuthenticationSystem {
        get { return result.hasAuthenticationSystem; }
      }
      public string AuthenticationSystem {
        get { return result.AuthenticationSystem; }
        set { SetAuthenticationSystem(value); }
      }
      public Builder SetAuthenticationSystem(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthenticationSystem = true;
        result.authenticationSystem_ = value;
        return this;
      }
      public Builder ClearAuthenticationSystem() {
        PrepareBuilder();
        result.hasAuthenticationSystem = false;
        result.authenticationSystem_ = "";
        return this;
      }
      
      public bool HasProfileType {
        get { return result.hasProfileType; }
      }
      [global::System.CLSCompliant(false)]
      public uint ProfileType {
        get { return result.ProfileType; }
        set { SetProfileType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetProfileType(uint value) {
        PrepareBuilder();
        result.hasProfileType = true;
        result.profileType_ = value;
        return this;
      }
      public Builder ClearProfileType() {
        PrepareBuilder();
        result.hasProfileType = false;
        result.profileType_ = 0;
        return this;
      }
    }
    static CustomerSearchResultRecord() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateCustomer : pb::GeneratedMessage<CreateCustomer, CreateCustomer.Builder> {
    private CreateCustomer() { }
    private static readonly CreateCustomer defaultInstance = new CreateCustomer().MakeReadOnly();
    private static readonly string[] _createCustomerFieldNames = new string[] { "customer" };
    private static readonly uint[] _createCustomerFieldTags = new uint[] { 10 };
    public static CreateCustomer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateCustomer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateCustomer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CreateCustomer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateCustomer, CreateCustomer.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CreateCustomer__FieldAccessorTable; }
    }
    
    public const int CustomerFieldNumber = 1;
    private bool hasCustomer;
    private global::CmsApiSamples.Protocol.CMSApi.Customer customer_;
    public bool HasCustomer {
      get { return hasCustomer; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Customer Customer {
      get { return customer_ ?? global::CmsApiSamples.Protocol.CMSApi.Customer.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCustomer) return false;
        if (!Customer.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createCustomerFieldNames;
      if (hasCustomer) {
        output.WriteMessage(1, field_names[0], Customer);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCustomer) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Customer);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateCustomer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateCustomer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateCustomer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateCustomer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateCustomer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateCustomer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateCustomer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateCustomer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateCustomer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateCustomer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateCustomer MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateCustomer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateCustomer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateCustomer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateCustomer result;
      
      private CreateCustomer PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateCustomer original = result;
          result = new CreateCustomer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateCustomer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateCustomer.Descriptor; }
      }
      
      public override CreateCustomer DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateCustomer.DefaultInstance; }
      }
      
      public override CreateCustomer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateCustomer) {
          return MergeFrom((CreateCustomer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateCustomer other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CreateCustomer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCustomer) {
          MergeCustomer(other.Customer);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createCustomerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createCustomerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.Customer.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Customer.CreateBuilder();
              if (result.hasCustomer) {
                subBuilder.MergeFrom(Customer);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Customer = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCustomer {
       get { return result.hasCustomer; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Customer Customer {
        get { return result.Customer; }
        set { SetCustomer(value); }
      }
      public Builder SetCustomer(global::CmsApiSamples.Protocol.CMSApi.Customer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomer = true;
        result.customer_ = value;
        return this;
      }
      public Builder SetCustomer(global::CmsApiSamples.Protocol.CMSApi.Customer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCustomer = true;
        result.customer_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCustomer(global::CmsApiSamples.Protocol.CMSApi.Customer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCustomer &&
            result.customer_ != global::CmsApiSamples.Protocol.CMSApi.Customer.DefaultInstance) {
            result.customer_ = global::CmsApiSamples.Protocol.CMSApi.Customer.CreateBuilder(result.customer_).MergeFrom(value).BuildPartial();
        } else {
          result.customer_ = value;
        }
        result.hasCustomer = true;
        return this;
      }
      public Builder ClearCustomer() {
        PrepareBuilder();
        result.hasCustomer = false;
        result.customer_ = null;
        return this;
      }
    }
    static CreateCustomer() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateCustomer : pb::GeneratedMessage<UpdateCustomer, UpdateCustomer.Builder> {
    private UpdateCustomer() { }
    private static readonly UpdateCustomer defaultInstance = new UpdateCustomer().MakeReadOnly();
    private static readonly string[] _updateCustomerFieldNames = new string[] { "customer", "original_customer" };
    private static readonly uint[] _updateCustomerFieldTags = new uint[] { 10, 18 };
    public static UpdateCustomer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateCustomer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateCustomer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateCustomer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateCustomer, UpdateCustomer.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateCustomer__FieldAccessorTable; }
    }
    
    public const int CustomerFieldNumber = 1;
    private bool hasCustomer;
    private global::CmsApiSamples.Protocol.CMSApi.Customer customer_;
    public bool HasCustomer {
      get { return hasCustomer; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Customer Customer {
      get { return customer_ ?? global::CmsApiSamples.Protocol.CMSApi.Customer.DefaultInstance; }
    }
    
    public const int OriginalCustomerFieldNumber = 2;
    private bool hasOriginalCustomer;
    private global::CmsApiSamples.Protocol.CMSApi.Customer originalCustomer_;
    public bool HasOriginalCustomer {
      get { return hasOriginalCustomer; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Customer OriginalCustomer {
      get { return originalCustomer_ ?? global::CmsApiSamples.Protocol.CMSApi.Customer.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCustomer) return false;
        if (!Customer.IsInitialized) return false;
        if (HasOriginalCustomer) {
          if (!OriginalCustomer.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateCustomerFieldNames;
      if (hasCustomer) {
        output.WriteMessage(1, field_names[0], Customer);
      }
      if (hasOriginalCustomer) {
        output.WriteMessage(2, field_names[1], OriginalCustomer);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCustomer) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Customer);
      }
      if (hasOriginalCustomer) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, OriginalCustomer);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateCustomer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateCustomer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateCustomer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateCustomer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateCustomer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateCustomer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateCustomer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateCustomer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateCustomer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateCustomer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateCustomer MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateCustomer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateCustomer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateCustomer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateCustomer result;
      
      private UpdateCustomer PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateCustomer original = result;
          result = new UpdateCustomer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateCustomer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateCustomer.Descriptor; }
      }
      
      public override UpdateCustomer DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateCustomer.DefaultInstance; }
      }
      
      public override UpdateCustomer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateCustomer) {
          return MergeFrom((UpdateCustomer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateCustomer other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateCustomer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCustomer) {
          MergeCustomer(other.Customer);
        }
        if (other.HasOriginalCustomer) {
          MergeOriginalCustomer(other.OriginalCustomer);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateCustomerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateCustomerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.Customer.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Customer.CreateBuilder();
              if (result.hasCustomer) {
                subBuilder.MergeFrom(Customer);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Customer = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.Customer.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Customer.CreateBuilder();
              if (result.hasOriginalCustomer) {
                subBuilder.MergeFrom(OriginalCustomer);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OriginalCustomer = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCustomer {
       get { return result.hasCustomer; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Customer Customer {
        get { return result.Customer; }
        set { SetCustomer(value); }
      }
      public Builder SetCustomer(global::CmsApiSamples.Protocol.CMSApi.Customer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomer = true;
        result.customer_ = value;
        return this;
      }
      public Builder SetCustomer(global::CmsApiSamples.Protocol.CMSApi.Customer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCustomer = true;
        result.customer_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCustomer(global::CmsApiSamples.Protocol.CMSApi.Customer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCustomer &&
            result.customer_ != global::CmsApiSamples.Protocol.CMSApi.Customer.DefaultInstance) {
            result.customer_ = global::CmsApiSamples.Protocol.CMSApi.Customer.CreateBuilder(result.customer_).MergeFrom(value).BuildPartial();
        } else {
          result.customer_ = value;
        }
        result.hasCustomer = true;
        return this;
      }
      public Builder ClearCustomer() {
        PrepareBuilder();
        result.hasCustomer = false;
        result.customer_ = null;
        return this;
      }
      
      public bool HasOriginalCustomer {
       get { return result.hasOriginalCustomer; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Customer OriginalCustomer {
        get { return result.OriginalCustomer; }
        set { SetOriginalCustomer(value); }
      }
      public Builder SetOriginalCustomer(global::CmsApiSamples.Protocol.CMSApi.Customer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOriginalCustomer = true;
        result.originalCustomer_ = value;
        return this;
      }
      public Builder SetOriginalCustomer(global::CmsApiSamples.Protocol.CMSApi.Customer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOriginalCustomer = true;
        result.originalCustomer_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOriginalCustomer(global::CmsApiSamples.Protocol.CMSApi.Customer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOriginalCustomer &&
            result.originalCustomer_ != global::CmsApiSamples.Protocol.CMSApi.Customer.DefaultInstance) {
            result.originalCustomer_ = global::CmsApiSamples.Protocol.CMSApi.Customer.CreateBuilder(result.originalCustomer_).MergeFrom(value).BuildPartial();
        } else {
          result.originalCustomer_ = value;
        }
        result.hasOriginalCustomer = true;
        return this;
      }
      public Builder ClearOriginalCustomer() {
        PrepareBuilder();
        result.hasOriginalCustomer = false;
        result.originalCustomer_ = null;
        return this;
      }
    }
    static UpdateCustomer() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RemoveCustomer : pb::GeneratedMessage<RemoveCustomer, RemoveCustomer.Builder> {
    private RemoveCustomer() { }
    private static readonly RemoveCustomer defaultInstance = new RemoveCustomer().MakeReadOnly();
    private static readonly string[] _removeCustomerFieldNames = new string[] { "id" };
    private static readonly uint[] _removeCustomerFieldTags = new uint[] { 10 };
    public static RemoveCustomer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveCustomer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveCustomer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RemoveCustomer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveCustomer, RemoveCustomer.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RemoveCustomer__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _removeCustomerFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RemoveCustomer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveCustomer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveCustomer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveCustomer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveCustomer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveCustomer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveCustomer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveCustomer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveCustomer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveCustomer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveCustomer MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveCustomer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveCustomer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveCustomer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveCustomer result;
      
      private RemoveCustomer PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveCustomer original = result;
          result = new RemoveCustomer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveCustomer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RemoveCustomer.Descriptor; }
      }
      
      public override RemoveCustomer DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RemoveCustomer.DefaultInstance; }
      }
      
      public override RemoveCustomer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveCustomer) {
          return MergeFrom((RemoveCustomer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveCustomer other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RemoveCustomer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeCustomerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeCustomerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
    }
    static RemoveCustomer() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RestoreCustomer : pb::GeneratedMessage<RestoreCustomer, RestoreCustomer.Builder> {
    private RestoreCustomer() { }
    private static readonly RestoreCustomer defaultInstance = new RestoreCustomer().MakeReadOnly();
    private static readonly string[] _restoreCustomerFieldNames = new string[] { "id" };
    private static readonly uint[] _restoreCustomerFieldTags = new uint[] { 10 };
    public static RestoreCustomer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RestoreCustomer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RestoreCustomer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestoreCustomer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RestoreCustomer, RestoreCustomer.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestoreCustomer__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _restoreCustomerFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RestoreCustomer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreCustomer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreCustomer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreCustomer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreCustomer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreCustomer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RestoreCustomer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RestoreCustomer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RestoreCustomer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreCustomer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RestoreCustomer MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RestoreCustomer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RestoreCustomer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RestoreCustomer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RestoreCustomer result;
      
      private RestoreCustomer PrepareBuilder() {
        if (resultIsReadOnly) {
          RestoreCustomer original = result;
          result = new RestoreCustomer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RestoreCustomer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreCustomer.Descriptor; }
      }
      
      public override RestoreCustomer DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreCustomer.DefaultInstance; }
      }
      
      public override RestoreCustomer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RestoreCustomer) {
          return MergeFrom((RestoreCustomer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RestoreCustomer other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RestoreCustomer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_restoreCustomerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _restoreCustomerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
    }
    static RestoreCustomer() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateCustomerResult : pb::GeneratedMessage<CreateCustomerResult, CreateCustomerResult.Builder> {
    private CreateCustomerResult() { }
    private static readonly CreateCustomerResult defaultInstance = new CreateCustomerResult().MakeReadOnly();
    private static readonly string[] _createCustomerResultFieldNames = new string[] { "id" };
    private static readonly uint[] _createCustomerResultFieldTags = new uint[] { 10 };
    public static CreateCustomerResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateCustomerResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateCustomerResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CreateCustomerResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateCustomerResult, CreateCustomerResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CreateCustomerResult__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createCustomerResultFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateCustomerResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateCustomerResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateCustomerResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateCustomerResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateCustomerResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateCustomerResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateCustomerResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateCustomerResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateCustomerResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateCustomerResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateCustomerResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateCustomerResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateCustomerResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateCustomerResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateCustomerResult result;
      
      private CreateCustomerResult PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateCustomerResult original = result;
          result = new CreateCustomerResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateCustomerResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateCustomerResult.Descriptor; }
      }
      
      public override CreateCustomerResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateCustomerResult.DefaultInstance; }
      }
      
      public override CreateCustomerResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateCustomerResult) {
          return MergeFrom((CreateCustomerResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateCustomerResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CreateCustomerResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createCustomerResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createCustomerResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
    }
    static CreateCustomerResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateCustomerResult : pb::GeneratedMessage<UpdateCustomerResult, UpdateCustomerResult.Builder> {
    private UpdateCustomerResult() { }
    private static readonly UpdateCustomerResult defaultInstance = new UpdateCustomerResult().MakeReadOnly();
    private static readonly string[] _updateCustomerResultFieldNames = new string[] {  };
    private static readonly uint[] _updateCustomerResultFieldTags = new uint[] {  };
    public static UpdateCustomerResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateCustomerResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateCustomerResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateCustomerResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateCustomerResult, UpdateCustomerResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateCustomerResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateCustomerResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateCustomerResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateCustomerResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateCustomerResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateCustomerResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateCustomerResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateCustomerResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateCustomerResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateCustomerResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateCustomerResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateCustomerResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateCustomerResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateCustomerResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateCustomerResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateCustomerResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateCustomerResult result;
      
      private UpdateCustomerResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateCustomerResult original = result;
          result = new UpdateCustomerResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateCustomerResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerResult.Descriptor; }
      }
      
      public override UpdateCustomerResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerResult.DefaultInstance; }
      }
      
      public override UpdateCustomerResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateCustomerResult) {
          return MergeFrom((UpdateCustomerResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateCustomerResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateCustomerResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateCustomerResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateCustomerResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RemoveCustomerResult : pb::GeneratedMessage<RemoveCustomerResult, RemoveCustomerResult.Builder> {
    private RemoveCustomerResult() { }
    private static readonly RemoveCustomerResult defaultInstance = new RemoveCustomerResult().MakeReadOnly();
    private static readonly string[] _removeCustomerResultFieldNames = new string[] {  };
    private static readonly uint[] _removeCustomerResultFieldTags = new uint[] {  };
    public static RemoveCustomerResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveCustomerResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveCustomerResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RemoveCustomerResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveCustomerResult, RemoveCustomerResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RemoveCustomerResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _removeCustomerResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RemoveCustomerResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveCustomerResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveCustomerResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveCustomerResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveCustomerResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveCustomerResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveCustomerResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveCustomerResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveCustomerResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveCustomerResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveCustomerResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveCustomerResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveCustomerResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveCustomerResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveCustomerResult result;
      
      private RemoveCustomerResult PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveCustomerResult original = result;
          result = new RemoveCustomerResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveCustomerResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RemoveCustomerResult.Descriptor; }
      }
      
      public override RemoveCustomerResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RemoveCustomerResult.DefaultInstance; }
      }
      
      public override RemoveCustomerResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveCustomerResult) {
          return MergeFrom((RemoveCustomerResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveCustomerResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RemoveCustomerResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeCustomerResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeCustomerResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static RemoveCustomerResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RestoreCustomerResult : pb::GeneratedMessage<RestoreCustomerResult, RestoreCustomerResult.Builder> {
    private RestoreCustomerResult() { }
    private static readonly RestoreCustomerResult defaultInstance = new RestoreCustomerResult().MakeReadOnly();
    private static readonly string[] _restoreCustomerResultFieldNames = new string[] {  };
    private static readonly uint[] _restoreCustomerResultFieldTags = new uint[] {  };
    public static RestoreCustomerResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RestoreCustomerResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RestoreCustomerResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestoreCustomerResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RestoreCustomerResult, RestoreCustomerResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestoreCustomerResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _restoreCustomerResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RestoreCustomerResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreCustomerResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreCustomerResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreCustomerResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreCustomerResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreCustomerResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RestoreCustomerResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RestoreCustomerResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RestoreCustomerResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreCustomerResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RestoreCustomerResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RestoreCustomerResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RestoreCustomerResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RestoreCustomerResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RestoreCustomerResult result;
      
      private RestoreCustomerResult PrepareBuilder() {
        if (resultIsReadOnly) {
          RestoreCustomerResult original = result;
          result = new RestoreCustomerResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RestoreCustomerResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreCustomerResult.Descriptor; }
      }
      
      public override RestoreCustomerResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreCustomerResult.DefaultInstance; }
      }
      
      public override RestoreCustomerResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RestoreCustomerResult) {
          return MergeFrom((RestoreCustomerResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RestoreCustomerResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RestoreCustomerResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_restoreCustomerResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _restoreCustomerResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static RestoreCustomerResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateUser : pb::GeneratedMessage<CreateUser, CreateUser.Builder> {
    private CreateUser() { }
    private static readonly CreateUser defaultInstance = new CreateUser().MakeReadOnly();
    private static readonly string[] _createUserFieldNames = new string[] { "user" };
    private static readonly uint[] _createUserFieldTags = new uint[] { 10 };
    public static CreateUser DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateUser DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateUser ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CreateUser__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateUser, CreateUser.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CreateUser__FieldAccessorTable; }
    }
    
    public const int UserFieldNumber = 1;
    private bool hasUser;
    private global::CmsApiSamples.Protocol.CMSApi.User user_;
    public bool HasUser {
      get { return hasUser; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.User User {
      get { return user_ ?? global::CmsApiSamples.Protocol.CMSApi.User.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUser) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createUserFieldNames;
      if (hasUser) {
        output.WriteMessage(1, field_names[0], User);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUser) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, User);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateUser ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateUser ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateUser ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateUser ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateUser ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateUser ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateUser ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateUser ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateUser ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateUser ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateUser MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateUser prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateUser, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateUser cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateUser result;
      
      private CreateUser PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateUser original = result;
          result = new CreateUser();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateUser MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateUser.Descriptor; }
      }
      
      public override CreateUser DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateUser.DefaultInstance; }
      }
      
      public override CreateUser BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateUser) {
          return MergeFrom((CreateUser) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateUser other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CreateUser.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUser) {
          MergeUser(other.User);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createUserFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createUserFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.User.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.User.CreateBuilder();
              if (result.hasUser) {
                subBuilder.MergeFrom(User);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              User = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUser {
       get { return result.hasUser; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.User User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(global::CmsApiSamples.Protocol.CMSApi.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder SetUser(global::CmsApiSamples.Protocol.CMSApi.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUser(global::CmsApiSamples.Protocol.CMSApi.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUser &&
            result.user_ != global::CmsApiSamples.Protocol.CMSApi.User.DefaultInstance) {
            result.user_ = global::CmsApiSamples.Protocol.CMSApi.User.CreateBuilder(result.user_).MergeFrom(value).BuildPartial();
        } else {
          result.user_ = value;
        }
        result.hasUser = true;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = null;
        return this;
      }
    }
    static CreateUser() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateUser : pb::GeneratedMessage<UpdateUser, UpdateUser.Builder> {
    private UpdateUser() { }
    private static readonly UpdateUser defaultInstance = new UpdateUser().MakeReadOnly();
    private static readonly string[] _updateUserFieldNames = new string[] { "original_user", "user" };
    private static readonly uint[] _updateUserFieldTags = new uint[] { 18, 10 };
    public static UpdateUser DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateUser DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateUser ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateUser__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateUser, UpdateUser.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateUser__FieldAccessorTable; }
    }
    
    public const int UserFieldNumber = 1;
    private bool hasUser;
    private global::CmsApiSamples.Protocol.CMSApi.User user_;
    public bool HasUser {
      get { return hasUser; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.User User {
      get { return user_ ?? global::CmsApiSamples.Protocol.CMSApi.User.DefaultInstance; }
    }
    
    public const int OriginalUserFieldNumber = 2;
    private bool hasOriginalUser;
    private global::CmsApiSamples.Protocol.CMSApi.User originalUser_;
    public bool HasOriginalUser {
      get { return hasOriginalUser; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.User OriginalUser {
      get { return originalUser_ ?? global::CmsApiSamples.Protocol.CMSApi.User.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUser) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateUserFieldNames;
      if (hasUser) {
        output.WriteMessage(1, field_names[1], User);
      }
      if (hasOriginalUser) {
        output.WriteMessage(2, field_names[0], OriginalUser);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUser) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, User);
      }
      if (hasOriginalUser) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, OriginalUser);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateUser ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateUser ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateUser ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateUser ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateUser ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateUser ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateUser ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateUser ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateUser ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateUser ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateUser MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateUser prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateUser, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateUser cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateUser result;
      
      private UpdateUser PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateUser original = result;
          result = new UpdateUser();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateUser MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateUser.Descriptor; }
      }
      
      public override UpdateUser DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateUser.DefaultInstance; }
      }
      
      public override UpdateUser BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateUser) {
          return MergeFrom((UpdateUser) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateUser other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateUser.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUser) {
          MergeUser(other.User);
        }
        if (other.HasOriginalUser) {
          MergeOriginalUser(other.OriginalUser);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateUserFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateUserFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.User.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.User.CreateBuilder();
              if (result.hasUser) {
                subBuilder.MergeFrom(User);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              User = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.User.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.User.CreateBuilder();
              if (result.hasOriginalUser) {
                subBuilder.MergeFrom(OriginalUser);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OriginalUser = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUser {
       get { return result.hasUser; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.User User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(global::CmsApiSamples.Protocol.CMSApi.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder SetUser(global::CmsApiSamples.Protocol.CMSApi.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUser(global::CmsApiSamples.Protocol.CMSApi.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUser &&
            result.user_ != global::CmsApiSamples.Protocol.CMSApi.User.DefaultInstance) {
            result.user_ = global::CmsApiSamples.Protocol.CMSApi.User.CreateBuilder(result.user_).MergeFrom(value).BuildPartial();
        } else {
          result.user_ = value;
        }
        result.hasUser = true;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = null;
        return this;
      }
      
      public bool HasOriginalUser {
       get { return result.hasOriginalUser; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.User OriginalUser {
        get { return result.OriginalUser; }
        set { SetOriginalUser(value); }
      }
      public Builder SetOriginalUser(global::CmsApiSamples.Protocol.CMSApi.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOriginalUser = true;
        result.originalUser_ = value;
        return this;
      }
      public Builder SetOriginalUser(global::CmsApiSamples.Protocol.CMSApi.User.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOriginalUser = true;
        result.originalUser_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOriginalUser(global::CmsApiSamples.Protocol.CMSApi.User value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOriginalUser &&
            result.originalUser_ != global::CmsApiSamples.Protocol.CMSApi.User.DefaultInstance) {
            result.originalUser_ = global::CmsApiSamples.Protocol.CMSApi.User.CreateBuilder(result.originalUser_).MergeFrom(value).BuildPartial();
        } else {
          result.originalUser_ = value;
        }
        result.hasOriginalUser = true;
        return this;
      }
      public Builder ClearOriginalUser() {
        PrepareBuilder();
        result.hasOriginalUser = false;
        result.originalUser_ = null;
        return this;
      }
    }
    static UpdateUser() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RemoveUser : pb::GeneratedMessage<RemoveUser, RemoveUser.Builder> {
    private RemoveUser() { }
    private static readonly RemoveUser defaultInstance = new RemoveUser().MakeReadOnly();
    private static readonly string[] _removeUserFieldNames = new string[] { "id" };
    private static readonly uint[] _removeUserFieldTags = new uint[] { 10 };
    public static RemoveUser DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveUser DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveUser ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RemoveUser__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveUser, RemoveUser.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RemoveUser__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _removeUserFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RemoveUser ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveUser ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveUser ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveUser ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveUser ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveUser ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveUser ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveUser ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveUser ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveUser ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveUser MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveUser prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveUser, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveUser cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveUser result;
      
      private RemoveUser PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveUser original = result;
          result = new RemoveUser();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveUser MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RemoveUser.Descriptor; }
      }
      
      public override RemoveUser DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RemoveUser.DefaultInstance; }
      }
      
      public override RemoveUser BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveUser) {
          return MergeFrom((RemoveUser) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveUser other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RemoveUser.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeUserFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeUserFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
    }
    static RemoveUser() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RestoreUser : pb::GeneratedMessage<RestoreUser, RestoreUser.Builder> {
    private RestoreUser() { }
    private static readonly RestoreUser defaultInstance = new RestoreUser().MakeReadOnly();
    private static readonly string[] _restoreUserFieldNames = new string[] { "id" };
    private static readonly uint[] _restoreUserFieldTags = new uint[] { 10 };
    public static RestoreUser DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RestoreUser DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RestoreUser ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestoreUser__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RestoreUser, RestoreUser.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestoreUser__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _restoreUserFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RestoreUser ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreUser ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreUser ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreUser ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreUser ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreUser ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RestoreUser ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RestoreUser ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RestoreUser ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreUser ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RestoreUser MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RestoreUser prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RestoreUser, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RestoreUser cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RestoreUser result;
      
      private RestoreUser PrepareBuilder() {
        if (resultIsReadOnly) {
          RestoreUser original = result;
          result = new RestoreUser();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RestoreUser MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreUser.Descriptor; }
      }
      
      public override RestoreUser DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreUser.DefaultInstance; }
      }
      
      public override RestoreUser BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RestoreUser) {
          return MergeFrom((RestoreUser) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RestoreUser other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RestoreUser.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_restoreUserFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _restoreUserFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
    }
    static RestoreUser() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateUserResult : pb::GeneratedMessage<CreateUserResult, CreateUserResult.Builder> {
    private CreateUserResult() { }
    private static readonly CreateUserResult defaultInstance = new CreateUserResult().MakeReadOnly();
    private static readonly string[] _createUserResultFieldNames = new string[] { "id" };
    private static readonly uint[] _createUserResultFieldTags = new uint[] { 10 };
    public static CreateUserResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateUserResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateUserResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CreateUserResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateUserResult, CreateUserResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CreateUserResult__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createUserResultFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateUserResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateUserResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateUserResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateUserResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateUserResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateUserResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateUserResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateUserResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateUserResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateUserResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateUserResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateUserResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateUserResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateUserResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateUserResult result;
      
      private CreateUserResult PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateUserResult original = result;
          result = new CreateUserResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateUserResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateUserResult.Descriptor; }
      }
      
      public override CreateUserResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateUserResult.DefaultInstance; }
      }
      
      public override CreateUserResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateUserResult) {
          return MergeFrom((CreateUserResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateUserResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CreateUserResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createUserResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createUserResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
    }
    static CreateUserResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateUserResult : pb::GeneratedMessage<UpdateUserResult, UpdateUserResult.Builder> {
    private UpdateUserResult() { }
    private static readonly UpdateUserResult defaultInstance = new UpdateUserResult().MakeReadOnly();
    private static readonly string[] _updateUserResultFieldNames = new string[] {  };
    private static readonly uint[] _updateUserResultFieldTags = new uint[] {  };
    public static UpdateUserResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateUserResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateUserResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateUserResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateUserResult, UpdateUserResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateUserResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateUserResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateUserResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateUserResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateUserResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateUserResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateUserResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateUserResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateUserResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateUserResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateUserResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateUserResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateUserResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateUserResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateUserResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateUserResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateUserResult result;
      
      private UpdateUserResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateUserResult original = result;
          result = new UpdateUserResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateUserResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateUserResult.Descriptor; }
      }
      
      public override UpdateUserResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateUserResult.DefaultInstance; }
      }
      
      public override UpdateUserResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateUserResult) {
          return MergeFrom((UpdateUserResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateUserResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateUserResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateUserResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateUserResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateUserResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RestoreUserResult : pb::GeneratedMessage<RestoreUserResult, RestoreUserResult.Builder> {
    private RestoreUserResult() { }
    private static readonly RestoreUserResult defaultInstance = new RestoreUserResult().MakeReadOnly();
    private static readonly string[] _restoreUserResultFieldNames = new string[] {  };
    private static readonly uint[] _restoreUserResultFieldTags = new uint[] {  };
    public static RestoreUserResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RestoreUserResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RestoreUserResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestoreUserResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RestoreUserResult, RestoreUserResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestoreUserResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _restoreUserResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RestoreUserResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreUserResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreUserResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreUserResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreUserResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreUserResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RestoreUserResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RestoreUserResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RestoreUserResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreUserResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RestoreUserResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RestoreUserResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RestoreUserResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RestoreUserResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RestoreUserResult result;
      
      private RestoreUserResult PrepareBuilder() {
        if (resultIsReadOnly) {
          RestoreUserResult original = result;
          result = new RestoreUserResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RestoreUserResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreUserResult.Descriptor; }
      }
      
      public override RestoreUserResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreUserResult.DefaultInstance; }
      }
      
      public override RestoreUserResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RestoreUserResult) {
          return MergeFrom((RestoreUserResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RestoreUserResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RestoreUserResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_restoreUserResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _restoreUserResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static RestoreUserResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RemoveUserResult : pb::GeneratedMessage<RemoveUserResult, RemoveUserResult.Builder> {
    private RemoveUserResult() { }
    private static readonly RemoveUserResult defaultInstance = new RemoveUserResult().MakeReadOnly();
    private static readonly string[] _removeUserResultFieldNames = new string[] {  };
    private static readonly uint[] _removeUserResultFieldTags = new uint[] {  };
    public static RemoveUserResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveUserResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveUserResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RemoveUserResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveUserResult, RemoveUserResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RemoveUserResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _removeUserResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RemoveUserResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveUserResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveUserResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveUserResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveUserResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveUserResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveUserResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveUserResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveUserResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveUserResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveUserResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveUserResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveUserResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveUserResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveUserResult result;
      
      private RemoveUserResult PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveUserResult original = result;
          result = new RemoveUserResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveUserResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RemoveUserResult.Descriptor; }
      }
      
      public override RemoveUserResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RemoveUserResult.DefaultInstance; }
      }
      
      public override RemoveUserResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveUserResult) {
          return MergeFrom((RemoveUserResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveUserResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RemoveUserResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeUserResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeUserResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static RemoveUserResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LinkUserToCustomer : pb::GeneratedMessage<LinkUserToCustomer, LinkUserToCustomer.Builder> {
    private LinkUserToCustomer() { }
    private static readonly LinkUserToCustomer defaultInstance = new LinkUserToCustomer().MakeReadOnly();
    private static readonly string[] _linkUserToCustomerFieldNames = new string[] { "customer_id", "user_id" };
    private static readonly uint[] _linkUserToCustomerFieldTags = new uint[] { 18, 10 };
    public static LinkUserToCustomer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LinkUserToCustomer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LinkUserToCustomer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LinkUserToCustomer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LinkUserToCustomer, LinkUserToCustomer.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LinkUserToCustomer__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int CustomerIdFieldNumber = 2;
    private bool hasCustomerId;
    private string customerId_ = "";
    public bool HasCustomerId {
      get { return hasCustomerId; }
    }
    public string CustomerId {
      get { return customerId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserId) return false;
        if (!hasCustomerId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _linkUserToCustomerFieldNames;
      if (hasUserId) {
        output.WriteString(1, field_names[1], UserId);
      }
      if (hasCustomerId) {
        output.WriteString(2, field_names[0], CustomerId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserId);
      }
      if (hasCustomerId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, CustomerId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LinkUserToCustomer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LinkUserToCustomer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LinkUserToCustomer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LinkUserToCustomer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LinkUserToCustomer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LinkUserToCustomer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LinkUserToCustomer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LinkUserToCustomer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LinkUserToCustomer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LinkUserToCustomer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LinkUserToCustomer MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LinkUserToCustomer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LinkUserToCustomer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LinkUserToCustomer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LinkUserToCustomer result;
      
      private LinkUserToCustomer PrepareBuilder() {
        if (resultIsReadOnly) {
          LinkUserToCustomer original = result;
          result = new LinkUserToCustomer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LinkUserToCustomer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomer.Descriptor; }
      }
      
      public override LinkUserToCustomer DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomer.DefaultInstance; }
      }
      
      public override LinkUserToCustomer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LinkUserToCustomer) {
          return MergeFrom((LinkUserToCustomer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LinkUserToCustomer other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasCustomerId) {
          CustomerId = other.CustomerId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_linkUserToCustomerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _linkUserToCustomerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 18: {
              result.hasCustomerId = input.ReadString(ref result.customerId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasCustomerId {
        get { return result.hasCustomerId; }
      }
      public string CustomerId {
        get { return result.CustomerId; }
        set { SetCustomerId(value); }
      }
      public Builder SetCustomerId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomerId = true;
        result.customerId_ = value;
        return this;
      }
      public Builder ClearCustomerId() {
        PrepareBuilder();
        result.hasCustomerId = false;
        result.customerId_ = "";
        return this;
      }
    }
    static LinkUserToCustomer() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LinkUserToCustomerResult : pb::GeneratedMessage<LinkUserToCustomerResult, LinkUserToCustomerResult.Builder> {
    private LinkUserToCustomerResult() { }
    private static readonly LinkUserToCustomerResult defaultInstance = new LinkUserToCustomerResult().MakeReadOnly();
    private static readonly string[] _linkUserToCustomerResultFieldNames = new string[] {  };
    private static readonly uint[] _linkUserToCustomerResultFieldTags = new uint[] {  };
    public static LinkUserToCustomerResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LinkUserToCustomerResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LinkUserToCustomerResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LinkUserToCustomerResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LinkUserToCustomerResult, LinkUserToCustomerResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LinkUserToCustomerResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _linkUserToCustomerResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LinkUserToCustomerResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LinkUserToCustomerResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LinkUserToCustomerResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LinkUserToCustomerResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LinkUserToCustomerResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LinkUserToCustomerResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LinkUserToCustomerResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LinkUserToCustomerResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LinkUserToCustomerResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LinkUserToCustomerResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LinkUserToCustomerResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LinkUserToCustomerResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LinkUserToCustomerResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LinkUserToCustomerResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LinkUserToCustomerResult result;
      
      private LinkUserToCustomerResult PrepareBuilder() {
        if (resultIsReadOnly) {
          LinkUserToCustomerResult original = result;
          result = new LinkUserToCustomerResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LinkUserToCustomerResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomerResult.Descriptor; }
      }
      
      public override LinkUserToCustomerResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomerResult.DefaultInstance; }
      }
      
      public override LinkUserToCustomerResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LinkUserToCustomerResult) {
          return MergeFrom((LinkUserToCustomerResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LinkUserToCustomerResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LinkUserToCustomerResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_linkUserToCustomerResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _linkUserToCustomerResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static LinkUserToCustomerResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RestrictedEntitlementService : pb::GeneratedMessage<RestrictedEntitlementService, RestrictedEntitlementService.Builder> {
    private RestrictedEntitlementService() { }
    private static readonly RestrictedEntitlementService defaultInstance = new RestrictedEntitlementService().MakeReadOnly();
    private static readonly string[] _restrictedEntitlementServiceFieldNames = new string[] { "assigned_brokerages", "billing_brokerage_id", "entitlement_service_id", "from_utc_time", "to_utc_time" };
    private static readonly uint[] _restrictedEntitlementServiceFieldTags = new uint[] { 42, 34, 8, 16, 24 };
    public static RestrictedEntitlementService DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RestrictedEntitlementService DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RestrictedEntitlementService ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestrictedEntitlementService__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RestrictedEntitlementService, RestrictedEntitlementService.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_RestrictedEntitlementService__FieldAccessorTable; }
    }
    
    public const int EntitlementServiceIdFieldNumber = 1;
    private bool hasEntitlementServiceId;
    private uint entitlementServiceId_;
    public bool HasEntitlementServiceId {
      get { return hasEntitlementServiceId; }
    }
    [global::System.CLSCompliant(false)]
    public uint EntitlementServiceId {
      get { return entitlementServiceId_; }
    }
    
    public const int FromUtcTimeFieldNumber = 2;
    private bool hasFromUtcTime;
    private long fromUtcTime_;
    public bool HasFromUtcTime {
      get { return hasFromUtcTime; }
    }
    public long FromUtcTime {
      get { return fromUtcTime_; }
    }
    
    public const int ToUtcTimeFieldNumber = 3;
    private bool hasToUtcTime;
    private long toUtcTime_;
    public bool HasToUtcTime {
      get { return hasToUtcTime; }
    }
    public long ToUtcTime {
      get { return toUtcTime_; }
    }
    
    public const int BillingBrokerageIdFieldNumber = 4;
    private bool hasBillingBrokerageId;
    private string billingBrokerageId_ = "";
    public bool HasBillingBrokerageId {
      get { return hasBillingBrokerageId; }
    }
    public string BillingBrokerageId {
      get { return billingBrokerageId_; }
    }
    
    public const int AssignedBrokeragesFieldNumber = 5;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage> assignedBrokerages_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage> AssignedBrokeragesList {
      get { return assignedBrokerages_; }
    }
    public int AssignedBrokeragesCount {
      get { return assignedBrokerages_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage GetAssignedBrokerages(int index) {
      return assignedBrokerages_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntitlementServiceId) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage element in AssignedBrokeragesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _restrictedEntitlementServiceFieldNames;
      if (hasEntitlementServiceId) {
        output.WriteUInt32(1, field_names[2], EntitlementServiceId);
      }
      if (hasFromUtcTime) {
        output.WriteSInt64(2, field_names[3], FromUtcTime);
      }
      if (hasToUtcTime) {
        output.WriteSInt64(3, field_names[4], ToUtcTime);
      }
      if (hasBillingBrokerageId) {
        output.WriteString(4, field_names[1], BillingBrokerageId);
      }
      if (assignedBrokerages_.Count > 0) {
        output.WriteMessageArray(5, field_names[0], assignedBrokerages_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEntitlementServiceId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, EntitlementServiceId);
      }
      if (hasFromUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(2, FromUtcTime);
      }
      if (hasToUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(3, ToUtcTime);
      }
      if (hasBillingBrokerageId) {
        size += pb::CodedOutputStream.ComputeStringSize(4, BillingBrokerageId);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage element in AssignedBrokeragesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RestrictedEntitlementService ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestrictedEntitlementService ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestrictedEntitlementService ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestrictedEntitlementService ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestrictedEntitlementService ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestrictedEntitlementService ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RestrictedEntitlementService ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RestrictedEntitlementService ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RestrictedEntitlementService ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestrictedEntitlementService ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RestrictedEntitlementService MakeReadOnly() {
      assignedBrokerages_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RestrictedEntitlementService prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RestrictedEntitlementService, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RestrictedEntitlementService cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RestrictedEntitlementService result;
      
      private RestrictedEntitlementService PrepareBuilder() {
        if (resultIsReadOnly) {
          RestrictedEntitlementService original = result;
          result = new RestrictedEntitlementService();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RestrictedEntitlementService MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService.Descriptor; }
      }
      
      public override RestrictedEntitlementService DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService.DefaultInstance; }
      }
      
      public override RestrictedEntitlementService BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RestrictedEntitlementService) {
          return MergeFrom((RestrictedEntitlementService) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RestrictedEntitlementService other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntitlementServiceId) {
          EntitlementServiceId = other.EntitlementServiceId;
        }
        if (other.HasFromUtcTime) {
          FromUtcTime = other.FromUtcTime;
        }
        if (other.HasToUtcTime) {
          ToUtcTime = other.ToUtcTime;
        }
        if (other.HasBillingBrokerageId) {
          BillingBrokerageId = other.BillingBrokerageId;
        }
        if (other.assignedBrokerages_.Count != 0) {
          result.assignedBrokerages_.Add(other.assignedBrokerages_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_restrictedEntitlementServiceFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _restrictedEntitlementServiceFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasEntitlementServiceId = input.ReadUInt32(ref result.entitlementServiceId_);
              break;
            }
            case 16: {
              result.hasFromUtcTime = input.ReadSInt64(ref result.fromUtcTime_);
              break;
            }
            case 24: {
              result.hasToUtcTime = input.ReadSInt64(ref result.toUtcTime_);
              break;
            }
            case 34: {
              result.hasBillingBrokerageId = input.ReadString(ref result.billingBrokerageId_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.assignedBrokerages_, global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntitlementServiceId {
        get { return result.hasEntitlementServiceId; }
      }
      [global::System.CLSCompliant(false)]
      public uint EntitlementServiceId {
        get { return result.EntitlementServiceId; }
        set { SetEntitlementServiceId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetEntitlementServiceId(uint value) {
        PrepareBuilder();
        result.hasEntitlementServiceId = true;
        result.entitlementServiceId_ = value;
        return this;
      }
      public Builder ClearEntitlementServiceId() {
        PrepareBuilder();
        result.hasEntitlementServiceId = false;
        result.entitlementServiceId_ = 0;
        return this;
      }
      
      public bool HasFromUtcTime {
        get { return result.hasFromUtcTime; }
      }
      public long FromUtcTime {
        get { return result.FromUtcTime; }
        set { SetFromUtcTime(value); }
      }
      public Builder SetFromUtcTime(long value) {
        PrepareBuilder();
        result.hasFromUtcTime = true;
        result.fromUtcTime_ = value;
        return this;
      }
      public Builder ClearFromUtcTime() {
        PrepareBuilder();
        result.hasFromUtcTime = false;
        result.fromUtcTime_ = 0;
        return this;
      }
      
      public bool HasToUtcTime {
        get { return result.hasToUtcTime; }
      }
      public long ToUtcTime {
        get { return result.ToUtcTime; }
        set { SetToUtcTime(value); }
      }
      public Builder SetToUtcTime(long value) {
        PrepareBuilder();
        result.hasToUtcTime = true;
        result.toUtcTime_ = value;
        return this;
      }
      public Builder ClearToUtcTime() {
        PrepareBuilder();
        result.hasToUtcTime = false;
        result.toUtcTime_ = 0;
        return this;
      }
      
      public bool HasBillingBrokerageId {
        get { return result.hasBillingBrokerageId; }
      }
      public string BillingBrokerageId {
        get { return result.BillingBrokerageId; }
        set { SetBillingBrokerageId(value); }
      }
      public Builder SetBillingBrokerageId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBillingBrokerageId = true;
        result.billingBrokerageId_ = value;
        return this;
      }
      public Builder ClearBillingBrokerageId() {
        PrepareBuilder();
        result.hasBillingBrokerageId = false;
        result.billingBrokerageId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage> AssignedBrokeragesList {
        get { return PrepareBuilder().assignedBrokerages_; }
      }
      public int AssignedBrokeragesCount {
        get { return result.AssignedBrokeragesCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage GetAssignedBrokerages(int index) {
        return result.GetAssignedBrokerages(index);
      }
      public Builder SetAssignedBrokerages(int index, global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignedBrokerages_[index] = value;
        return this;
      }
      public Builder SetAssignedBrokerages(int index, global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignedBrokerages_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAssignedBrokerages(global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.assignedBrokerages_.Add(value);
        return this;
      }
      public Builder AddAssignedBrokerages(global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.assignedBrokerages_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAssignedBrokerages(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AssignedBrokerage> values) {
        PrepareBuilder();
        result.assignedBrokerages_.Add(values);
        return this;
      }
      public Builder ClearAssignedBrokerages() {
        PrepareBuilder();
        result.assignedBrokerages_.Clear();
        return this;
      }
    }
    static RestrictedEntitlementService() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ModifyUserEntitlementService : pb::GeneratedMessage<ModifyUserEntitlementService, ModifyUserEntitlementService.Builder> {
    private ModifyUserEntitlementService() { }
    private static readonly ModifyUserEntitlementService defaultInstance = new ModifyUserEntitlementService().MakeReadOnly();
    private static readonly string[] _modifyUserEntitlementServiceFieldNames = new string[] { "entitlement_service_id_to_remove", "entitlement_service_to_set", "user_id" };
    private static readonly uint[] _modifyUserEntitlementServiceFieldTags = new uint[] { 24, 18, 10 };
    public static ModifyUserEntitlementService DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ModifyUserEntitlementService DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ModifyUserEntitlementService ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ModifyUserEntitlementService__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ModifyUserEntitlementService, ModifyUserEntitlementService.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ModifyUserEntitlementService__FieldAccessorTable; }
    }
    
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int EntitlementServiceToSetFieldNumber = 2;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService> entitlementServiceToSet_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService> EntitlementServiceToSetList {
      get { return entitlementServiceToSet_; }
    }
    public int EntitlementServiceToSetCount {
      get { return entitlementServiceToSet_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService GetEntitlementServiceToSet(int index) {
      return entitlementServiceToSet_[index];
    }
    
    public const int EntitlementServiceIdToRemoveFieldNumber = 3;
    private pbc::PopsicleList<uint> entitlementServiceIdToRemove_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> EntitlementServiceIdToRemoveList {
      get { return pbc::Lists.AsReadOnly(entitlementServiceIdToRemove_); }
    }
    public int EntitlementServiceIdToRemoveCount {
      get { return entitlementServiceIdToRemove_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetEntitlementServiceIdToRemove(int index) {
      return entitlementServiceIdToRemove_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserId) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService element in EntitlementServiceToSetList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _modifyUserEntitlementServiceFieldNames;
      if (hasUserId) {
        output.WriteString(1, field_names[2], UserId);
      }
      if (entitlementServiceToSet_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], entitlementServiceToSet_);
      }
      if (entitlementServiceIdToRemove_.Count > 0) {
        output.WriteUInt32Array(3, field_names[0], entitlementServiceIdToRemove_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UserId);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService element in EntitlementServiceToSetList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      {
        int dataSize = 0;
        foreach (uint element in EntitlementServiceIdToRemoveList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * entitlementServiceIdToRemove_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ModifyUserEntitlementService ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModifyUserEntitlementService ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModifyUserEntitlementService ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModifyUserEntitlementService ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModifyUserEntitlementService ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModifyUserEntitlementService ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ModifyUserEntitlementService ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ModifyUserEntitlementService ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ModifyUserEntitlementService ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModifyUserEntitlementService ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ModifyUserEntitlementService MakeReadOnly() {
      entitlementServiceToSet_.MakeReadOnly();
      entitlementServiceIdToRemove_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ModifyUserEntitlementService prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ModifyUserEntitlementService, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ModifyUserEntitlementService cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ModifyUserEntitlementService result;
      
      private ModifyUserEntitlementService PrepareBuilder() {
        if (resultIsReadOnly) {
          ModifyUserEntitlementService original = result;
          result = new ModifyUserEntitlementService();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ModifyUserEntitlementService MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementService.Descriptor; }
      }
      
      public override ModifyUserEntitlementService DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementService.DefaultInstance; }
      }
      
      public override ModifyUserEntitlementService BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ModifyUserEntitlementService) {
          return MergeFrom((ModifyUserEntitlementService) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ModifyUserEntitlementService other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementService.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.entitlementServiceToSet_.Count != 0) {
          result.entitlementServiceToSet_.Add(other.entitlementServiceToSet_);
        }
        if (other.entitlementServiceIdToRemove_.Count != 0) {
          result.entitlementServiceIdToRemove_.Add(other.entitlementServiceIdToRemove_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_modifyUserEntitlementServiceFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _modifyUserEntitlementServiceFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.entitlementServiceToSet_, global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService.DefaultInstance, extensionRegistry);
              break;
            }
            case 26:
            case 24: {
              input.ReadUInt32Array(tag, field_name, result.entitlementServiceIdToRemove_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService> EntitlementServiceToSetList {
        get { return PrepareBuilder().entitlementServiceToSet_; }
      }
      public int EntitlementServiceToSetCount {
        get { return result.EntitlementServiceToSetCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService GetEntitlementServiceToSet(int index) {
        return result.GetEntitlementServiceToSet(index);
      }
      public Builder SetEntitlementServiceToSet(int index, global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entitlementServiceToSet_[index] = value;
        return this;
      }
      public Builder SetEntitlementServiceToSet(int index, global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entitlementServiceToSet_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEntitlementServiceToSet(global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entitlementServiceToSet_.Add(value);
        return this;
      }
      public Builder AddEntitlementServiceToSet(global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entitlementServiceToSet_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEntitlementServiceToSet(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService> values) {
        PrepareBuilder();
        result.entitlementServiceToSet_.Add(values);
        return this;
      }
      public Builder ClearEntitlementServiceToSet() {
        PrepareBuilder();
        result.entitlementServiceToSet_.Clear();
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> EntitlementServiceIdToRemoveList {
        get { return PrepareBuilder().entitlementServiceIdToRemove_; }
      }
      public int EntitlementServiceIdToRemoveCount {
        get { return result.EntitlementServiceIdToRemoveCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetEntitlementServiceIdToRemove(int index) {
        return result.GetEntitlementServiceIdToRemove(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetEntitlementServiceIdToRemove(int index, uint value) {
        PrepareBuilder();
        result.entitlementServiceIdToRemove_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddEntitlementServiceIdToRemove(uint value) {
        PrepareBuilder();
        result.entitlementServiceIdToRemove_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeEntitlementServiceIdToRemove(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.entitlementServiceIdToRemove_.Add(values);
        return this;
      }
      public Builder ClearEntitlementServiceIdToRemove() {
        PrepareBuilder();
        result.entitlementServiceIdToRemove_.Clear();
        return this;
      }
    }
    static ModifyUserEntitlementService() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ModifyUserEntitlementServiceResult : pb::GeneratedMessage<ModifyUserEntitlementServiceResult, ModifyUserEntitlementServiceResult.Builder> {
    private ModifyUserEntitlementServiceResult() { }
    private static readonly ModifyUserEntitlementServiceResult defaultInstance = new ModifyUserEntitlementServiceResult().MakeReadOnly();
    private static readonly string[] _modifyUserEntitlementServiceResultFieldNames = new string[] { "restricted_entitlement_service" };
    private static readonly uint[] _modifyUserEntitlementServiceResultFieldTags = new uint[] { 10 };
    public static ModifyUserEntitlementServiceResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ModifyUserEntitlementServiceResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ModifyUserEntitlementServiceResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ModifyUserEntitlementServiceResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ModifyUserEntitlementServiceResult, ModifyUserEntitlementServiceResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ModifyUserEntitlementServiceResult__FieldAccessorTable; }
    }
    
    public const int RestrictedEntitlementServiceFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService> restrictedEntitlementService_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService> RestrictedEntitlementServiceList {
      get { return restrictedEntitlementService_; }
    }
    public int RestrictedEntitlementServiceCount {
      get { return restrictedEntitlementService_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService GetRestrictedEntitlementService(int index) {
      return restrictedEntitlementService_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService element in RestrictedEntitlementServiceList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _modifyUserEntitlementServiceResultFieldNames;
      if (restrictedEntitlementService_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], restrictedEntitlementService_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService element in RestrictedEntitlementServiceList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ModifyUserEntitlementServiceResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModifyUserEntitlementServiceResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModifyUserEntitlementServiceResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModifyUserEntitlementServiceResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModifyUserEntitlementServiceResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModifyUserEntitlementServiceResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ModifyUserEntitlementServiceResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ModifyUserEntitlementServiceResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ModifyUserEntitlementServiceResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModifyUserEntitlementServiceResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ModifyUserEntitlementServiceResult MakeReadOnly() {
      restrictedEntitlementService_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ModifyUserEntitlementServiceResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ModifyUserEntitlementServiceResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ModifyUserEntitlementServiceResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ModifyUserEntitlementServiceResult result;
      
      private ModifyUserEntitlementServiceResult PrepareBuilder() {
        if (resultIsReadOnly) {
          ModifyUserEntitlementServiceResult original = result;
          result = new ModifyUserEntitlementServiceResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ModifyUserEntitlementServiceResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementServiceResult.Descriptor; }
      }
      
      public override ModifyUserEntitlementServiceResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementServiceResult.DefaultInstance; }
      }
      
      public override ModifyUserEntitlementServiceResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ModifyUserEntitlementServiceResult) {
          return MergeFrom((ModifyUserEntitlementServiceResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ModifyUserEntitlementServiceResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ModifyUserEntitlementServiceResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.restrictedEntitlementService_.Count != 0) {
          result.restrictedEntitlementService_.Add(other.restrictedEntitlementService_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_modifyUserEntitlementServiceResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _modifyUserEntitlementServiceResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.restrictedEntitlementService_, global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService> RestrictedEntitlementServiceList {
        get { return PrepareBuilder().restrictedEntitlementService_; }
      }
      public int RestrictedEntitlementServiceCount {
        get { return result.RestrictedEntitlementServiceCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService GetRestrictedEntitlementService(int index) {
        return result.GetRestrictedEntitlementService(index);
      }
      public Builder SetRestrictedEntitlementService(int index, global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.restrictedEntitlementService_[index] = value;
        return this;
      }
      public Builder SetRestrictedEntitlementService(int index, global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.restrictedEntitlementService_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRestrictedEntitlementService(global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.restrictedEntitlementService_.Add(value);
        return this;
      }
      public Builder AddRestrictedEntitlementService(global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.restrictedEntitlementService_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRestrictedEntitlementService(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.RestrictedEntitlementService> values) {
        PrepareBuilder();
        result.restrictedEntitlementService_.Add(values);
        return this;
      }
      public Builder ClearRestrictedEntitlementService() {
        PrepareBuilder();
        result.restrictedEntitlementService_.Clear();
        return this;
      }
    }
    static ModifyUserEntitlementServiceResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetUniqueUsernameRequest : pb::GeneratedMessage<GetUniqueUsernameRequest, GetUniqueUsernameRequest.Builder> {
    private GetUniqueUsernameRequest() { }
    private static readonly GetUniqueUsernameRequest defaultInstance = new GetUniqueUsernameRequest().MakeReadOnly();
    private static readonly string[] _getUniqueUsernameRequestFieldNames = new string[] { "customer_id" };
    private static readonly uint[] _getUniqueUsernameRequestFieldTags = new uint[] { 10 };
    public static GetUniqueUsernameRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetUniqueUsernameRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetUniqueUsernameRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_GetUniqueUsernameRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetUniqueUsernameRequest, GetUniqueUsernameRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_GetUniqueUsernameRequest__FieldAccessorTable; }
    }
    
    public const int CustomerIdFieldNumber = 1;
    private bool hasCustomerId;
    private string customerId_ = "";
    public bool HasCustomerId {
      get { return hasCustomerId; }
    }
    public string CustomerId {
      get { return customerId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCustomerId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getUniqueUsernameRequestFieldNames;
      if (hasCustomerId) {
        output.WriteString(1, field_names[0], CustomerId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCustomerId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, CustomerId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetUniqueUsernameRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetUniqueUsernameRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetUniqueUsernameRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetUniqueUsernameRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetUniqueUsernameRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetUniqueUsernameRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetUniqueUsernameRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetUniqueUsernameRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetUniqueUsernameRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetUniqueUsernameRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetUniqueUsernameRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetUniqueUsernameRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetUniqueUsernameRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetUniqueUsernameRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetUniqueUsernameRequest result;
      
      private GetUniqueUsernameRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetUniqueUsernameRequest original = result;
          result = new GetUniqueUsernameRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetUniqueUsernameRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.GetUniqueUsernameRequest.Descriptor; }
      }
      
      public override GetUniqueUsernameRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.GetUniqueUsernameRequest.DefaultInstance; }
      }
      
      public override GetUniqueUsernameRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetUniqueUsernameRequest) {
          return MergeFrom((GetUniqueUsernameRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetUniqueUsernameRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.GetUniqueUsernameRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCustomerId) {
          CustomerId = other.CustomerId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getUniqueUsernameRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getUniqueUsernameRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCustomerId = input.ReadString(ref result.customerId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCustomerId {
        get { return result.hasCustomerId; }
      }
      public string CustomerId {
        get { return result.CustomerId; }
        set { SetCustomerId(value); }
      }
      public Builder SetCustomerId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomerId = true;
        result.customerId_ = value;
        return this;
      }
      public Builder ClearCustomerId() {
        PrepareBuilder();
        result.hasCustomerId = false;
        result.customerId_ = "";
        return this;
      }
    }
    static GetUniqueUsernameRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UniqueUsernameResult : pb::GeneratedMessage<UniqueUsernameResult, UniqueUsernameResult.Builder> {
    private UniqueUsernameResult() { }
    private static readonly UniqueUsernameResult defaultInstance = new UniqueUsernameResult().MakeReadOnly();
    private static readonly string[] _uniqueUsernameResultFieldNames = new string[] { "username" };
    private static readonly uint[] _uniqueUsernameResultFieldTags = new uint[] { 10 };
    public static UniqueUsernameResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UniqueUsernameResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UniqueUsernameResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UniqueUsernameResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UniqueUsernameResult, UniqueUsernameResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UniqueUsernameResult__FieldAccessorTable; }
    }
    
    public const int UsernameFieldNumber = 1;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _uniqueUsernameResultFieldNames;
      if (hasUsername) {
        output.WriteString(1, field_names[0], Username);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUsername) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Username);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UniqueUsernameResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UniqueUsernameResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UniqueUsernameResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UniqueUsernameResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UniqueUsernameResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UniqueUsernameResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UniqueUsernameResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UniqueUsernameResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UniqueUsernameResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UniqueUsernameResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UniqueUsernameResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UniqueUsernameResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UniqueUsernameResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UniqueUsernameResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UniqueUsernameResult result;
      
      private UniqueUsernameResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UniqueUsernameResult original = result;
          result = new UniqueUsernameResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UniqueUsernameResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UniqueUsernameResult.Descriptor; }
      }
      
      public override UniqueUsernameResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UniqueUsernameResult.DefaultInstance; }
      }
      
      public override UniqueUsernameResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UniqueUsernameResult) {
          return MergeFrom((UniqueUsernameResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UniqueUsernameResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UniqueUsernameResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUsername) {
          Username = other.Username;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_uniqueUsernameResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _uniqueUsernameResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
    }
    static UniqueUsernameResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LookupProperty : pb::GeneratedMessage<LookupProperty, LookupProperty.Builder> {
    private LookupProperty() { }
    private static readonly LookupProperty defaultInstance = new LookupProperty().MakeReadOnly();
    private static readonly string[] _lookupPropertyFieldNames = new string[] { "description", "name", "type", "value" };
    private static readonly uint[] _lookupPropertyFieldTags = new uint[] { 34, 26, 8, 18 };
    public static LookupProperty DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LookupProperty DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LookupProperty ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LookupProperty__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LookupProperty, LookupProperty.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LookupProperty__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private uint type_;
    public bool HasType {
      get { return hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return type_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private string value_ = "";
    public bool HasValue {
      get { return hasValue; }
    }
    public string Value {
      get { return value_; }
    }
    
    public const int NameFieldNumber = 3;
    private bool hasName;
    private global::CmsApiSamples.Protocol.CMSApi.Text name_;
    public bool HasName {
      get { return hasName; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Name {
      get { return name_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public const int DescriptionFieldNumber = 4;
    private bool hasDescription;
    private global::CmsApiSamples.Protocol.CMSApi.Text description_;
    public bool HasDescription {
      get { return hasDescription; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Description {
      get { return description_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (!hasValue) return false;
        if (!hasName) return false;
        if (!Name.IsInitialized) return false;
        if (HasDescription) {
          if (!Description.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _lookupPropertyFieldNames;
      if (hasType) {
        output.WriteUInt32(1, field_names[2], Type);
      }
      if (hasValue) {
        output.WriteString(2, field_names[3], Value);
      }
      if (hasName) {
        output.WriteMessage(3, field_names[1], Name);
      }
      if (hasDescription) {
        output.WriteMessage(4, field_names[0], Description);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Type);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Value);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Name);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, Description);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LookupProperty ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LookupProperty ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LookupProperty ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LookupProperty ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LookupProperty ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LookupProperty ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LookupProperty ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LookupProperty ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LookupProperty ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LookupProperty ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LookupProperty MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LookupProperty prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LookupProperty, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LookupProperty cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LookupProperty result;
      
      private LookupProperty PrepareBuilder() {
        if (resultIsReadOnly) {
          LookupProperty original = result;
          result = new LookupProperty();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LookupProperty MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LookupProperty.Descriptor; }
      }
      
      public override LookupProperty DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LookupProperty.DefaultInstance; }
      }
      
      public override LookupProperty BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LookupProperty) {
          return MergeFrom((LookupProperty) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LookupProperty other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LookupProperty.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        if (other.HasName) {
          MergeName(other.Name);
        }
        if (other.HasDescription) {
          MergeDescription(other.Description);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_lookupPropertyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _lookupPropertyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasType = input.ReadUInt32(ref result.type_);
              break;
            }
            case 18: {
              result.hasValue = input.ReadString(ref result.value_);
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasName) {
                subBuilder.MergeFrom(Name);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Name = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasDescription) {
                subBuilder.MergeFrom(Description);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Description = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
        get { return result.hasType; }
      }
      [global::System.CLSCompliant(false)]
      public uint Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetType(uint value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public string Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = "";
        return this;
      }
      
      public bool HasName {
       get { return result.hasName; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = builderForValue.Build();
        return this;
      }
      public Builder MergeName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasName &&
            result.name_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.name_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.name_).MergeFrom(value).BuildPartial();
        } else {
          result.name_ = value;
        }
        result.hasName = true;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = null;
        return this;
      }
      
      public bool HasDescription {
       get { return result.hasDescription; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder SetDescription(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDescription(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDescription &&
            result.description_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.description_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.description_).MergeFrom(value).BuildPartial();
        } else {
          result.description_ = value;
        }
        result.hasDescription = true;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = null;
        return this;
      }
    }
    static LookupProperty() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LookupPropertyListRequest : pb::GeneratedMessage<LookupPropertyListRequest, LookupPropertyListRequest.Builder> {
    private LookupPropertyListRequest() { }
    private static readonly LookupPropertyListRequest defaultInstance = new LookupPropertyListRequest().MakeReadOnly();
    private static readonly string[] _lookupPropertyListRequestFieldNames = new string[] { "property_type" };
    private static readonly uint[] _lookupPropertyListRequestFieldTags = new uint[] { 8 };
    public static LookupPropertyListRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LookupPropertyListRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LookupPropertyListRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LookupPropertyListRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LookupPropertyListRequest, LookupPropertyListRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LookupPropertyListRequest__FieldAccessorTable; }
    }
    
    public const int PropertyTypeFieldNumber = 1;
    private pbc::PopsicleList<uint> propertyType_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> PropertyTypeList {
      get { return pbc::Lists.AsReadOnly(propertyType_); }
    }
    public int PropertyTypeCount {
      get { return propertyType_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetPropertyType(int index) {
      return propertyType_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _lookupPropertyListRequestFieldNames;
      if (propertyType_.Count > 0) {
        output.WriteUInt32Array(1, field_names[0], propertyType_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (uint element in PropertyTypeList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * propertyType_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LookupPropertyListRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LookupPropertyListRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LookupPropertyListRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LookupPropertyListRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LookupPropertyListRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LookupPropertyListRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LookupPropertyListRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LookupPropertyListRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LookupPropertyListRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LookupPropertyListRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LookupPropertyListRequest MakeReadOnly() {
      propertyType_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LookupPropertyListRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LookupPropertyListRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LookupPropertyListRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LookupPropertyListRequest result;
      
      private LookupPropertyListRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LookupPropertyListRequest original = result;
          result = new LookupPropertyListRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LookupPropertyListRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest.Descriptor; }
      }
      
      public override LookupPropertyListRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest.DefaultInstance; }
      }
      
      public override LookupPropertyListRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LookupPropertyListRequest) {
          return MergeFrom((LookupPropertyListRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LookupPropertyListRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.propertyType_.Count != 0) {
          result.propertyType_.Add(other.propertyType_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_lookupPropertyListRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _lookupPropertyListRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10:
            case 8: {
              input.ReadUInt32Array(tag, field_name, result.propertyType_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> PropertyTypeList {
        get { return PrepareBuilder().propertyType_; }
      }
      public int PropertyTypeCount {
        get { return result.PropertyTypeCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetPropertyType(int index) {
        return result.GetPropertyType(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetPropertyType(int index, uint value) {
        PrepareBuilder();
        result.propertyType_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddPropertyType(uint value) {
        PrepareBuilder();
        result.propertyType_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangePropertyType(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.propertyType_.Add(values);
        return this;
      }
      public Builder ClearPropertyType() {
        PrepareBuilder();
        result.propertyType_.Clear();
        return this;
      }
    }
    static LookupPropertyListRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LookupPropertyListResult : pb::GeneratedMessage<LookupPropertyListResult, LookupPropertyListResult.Builder> {
    private LookupPropertyListResult() { }
    private static readonly LookupPropertyListResult defaultInstance = new LookupPropertyListResult().MakeReadOnly();
    private static readonly string[] _lookupPropertyListResultFieldNames = new string[] { "lookup_property" };
    private static readonly uint[] _lookupPropertyListResultFieldTags = new uint[] { 10 };
    public static LookupPropertyListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LookupPropertyListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LookupPropertyListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LookupPropertyListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LookupPropertyListResult, LookupPropertyListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LookupPropertyListResult__FieldAccessorTable; }
    }
    
    public const int LookupPropertyFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.LookupProperty> lookupProperty_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.LookupProperty>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.LookupProperty> LookupPropertyList {
      get { return lookupProperty_; }
    }
    public int LookupPropertyCount {
      get { return lookupProperty_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LookupProperty GetLookupProperty(int index) {
      return lookupProperty_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.LookupProperty element in LookupPropertyList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _lookupPropertyListResultFieldNames;
      if (lookupProperty_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], lookupProperty_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.LookupProperty element in LookupPropertyList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LookupPropertyListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LookupPropertyListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LookupPropertyListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LookupPropertyListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LookupPropertyListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LookupPropertyListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LookupPropertyListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LookupPropertyListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LookupPropertyListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LookupPropertyListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LookupPropertyListResult MakeReadOnly() {
      lookupProperty_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LookupPropertyListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LookupPropertyListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LookupPropertyListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LookupPropertyListResult result;
      
      private LookupPropertyListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          LookupPropertyListResult original = result;
          result = new LookupPropertyListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LookupPropertyListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult.Descriptor; }
      }
      
      public override LookupPropertyListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult.DefaultInstance; }
      }
      
      public override LookupPropertyListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LookupPropertyListResult) {
          return MergeFrom((LookupPropertyListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LookupPropertyListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.lookupProperty_.Count != 0) {
          result.lookupProperty_.Add(other.lookupProperty_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_lookupPropertyListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _lookupPropertyListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.lookupProperty_, global::CmsApiSamples.Protocol.CMSApi.LookupProperty.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.LookupProperty> LookupPropertyList {
        get { return PrepareBuilder().lookupProperty_; }
      }
      public int LookupPropertyCount {
        get { return result.LookupPropertyCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LookupProperty GetLookupProperty(int index) {
        return result.GetLookupProperty(index);
      }
      public Builder SetLookupProperty(int index, global::CmsApiSamples.Protocol.CMSApi.LookupProperty value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.lookupProperty_[index] = value;
        return this;
      }
      public Builder SetLookupProperty(int index, global::CmsApiSamples.Protocol.CMSApi.LookupProperty.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.lookupProperty_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLookupProperty(global::CmsApiSamples.Protocol.CMSApi.LookupProperty value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.lookupProperty_.Add(value);
        return this;
      }
      public Builder AddLookupProperty(global::CmsApiSamples.Protocol.CMSApi.LookupProperty.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.lookupProperty_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLookupProperty(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.LookupProperty> values) {
        PrepareBuilder();
        result.lookupProperty_.Add(values);
        return this;
      }
      public Builder ClearLookupProperty() {
        PrepareBuilder();
        result.lookupProperty_.Clear();
        return this;
      }
    }
    static LookupPropertyListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SalesSeriesSearchRequest : pb::GeneratedMessage<SalesSeriesSearchRequest, SalesSeriesSearchRequest.Builder> {
    private SalesSeriesSearchRequest() { }
    private static readonly SalesSeriesSearchRequest defaultInstance = new SalesSeriesSearchRequest().MakeReadOnly();
    private static readonly string[] _salesSeriesSearchRequestFieldNames = new string[] { "all_match_mode", "search_criteria", "search_options", "text" };
    private static readonly uint[] _salesSeriesSearchRequestFieldTags = new uint[] { 32, 16, 26, 10 };
    public static SalesSeriesSearchRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SalesSeriesSearchRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SalesSeriesSearchRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_SalesSeriesSearchRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SalesSeriesSearchRequest, SalesSeriesSearchRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_SalesSeriesSearchRequest__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum SearchCriteria {
        ID = 1,
        NUMBER = 2,
        NAME = 3,
        BROKERAGE_ID = 4,
      }
      
    }
    #endregion
    
    public const int TextFieldNumber = 1;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int SearchCriteriaFieldNumber = 2;
    private pbc::PopsicleList<uint> searchCriteria_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> SearchCriteriaList {
      get { return pbc::Lists.AsReadOnly(searchCriteria_); }
    }
    public int SearchCriteriaCount {
      get { return searchCriteria_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetSearchCriteria(int index) {
      return searchCriteria_[index];
    }
    
    public const int SearchOptionsFieldNumber = 3;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> searchOptions_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> SearchOptionsList {
      get { return searchOptions_; }
    }
    public int SearchOptionsCount {
      get { return searchOptions_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.SearchOption GetSearchOptions(int index) {
      return searchOptions_[index];
    }
    
    public const int AllMatchModeFieldNumber = 4;
    private bool hasAllMatchMode;
    private bool allMatchMode_;
    public bool HasAllMatchMode {
      get { return hasAllMatchMode; }
    }
    public bool AllMatchMode {
      get { return allMatchMode_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _salesSeriesSearchRequestFieldNames;
      if (hasText) {
        output.WriteString(1, field_names[3], Text);
      }
      if (searchCriteria_.Count > 0) {
        output.WriteUInt32Array(2, field_names[1], searchCriteria_);
      }
      if (searchOptions_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], searchOptions_);
      }
      if (hasAllMatchMode) {
        output.WriteBool(4, field_names[0], AllMatchMode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Text);
      }
      {
        int dataSize = 0;
        foreach (uint element in SearchCriteriaList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * searchCriteria_.Count;
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.SearchOption element in SearchOptionsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasAllMatchMode) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, AllMatchMode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SalesSeriesSearchRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SalesSeriesSearchRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SalesSeriesSearchRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SalesSeriesSearchRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SalesSeriesSearchRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SalesSeriesSearchRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SalesSeriesSearchRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SalesSeriesSearchRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SalesSeriesSearchRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SalesSeriesSearchRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SalesSeriesSearchRequest MakeReadOnly() {
      searchCriteria_.MakeReadOnly();
      searchOptions_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SalesSeriesSearchRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SalesSeriesSearchRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SalesSeriesSearchRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SalesSeriesSearchRequest result;
      
      private SalesSeriesSearchRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SalesSeriesSearchRequest original = result;
          result = new SalesSeriesSearchRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SalesSeriesSearchRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchRequest.Descriptor; }
      }
      
      public override SalesSeriesSearchRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchRequest.DefaultInstance; }
      }
      
      public override SalesSeriesSearchRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SalesSeriesSearchRequest) {
          return MergeFrom((SalesSeriesSearchRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SalesSeriesSearchRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.searchCriteria_.Count != 0) {
          result.searchCriteria_.Add(other.searchCriteria_);
        }
        if (other.searchOptions_.Count != 0) {
          result.searchOptions_.Add(other.searchOptions_);
        }
        if (other.HasAllMatchMode) {
          AllMatchMode = other.AllMatchMode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_salesSeriesSearchRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _salesSeriesSearchRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt32Array(tag, field_name, result.searchCriteria_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.searchOptions_, global::CmsApiSamples.Protocol.CMSApi.SearchOption.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasAllMatchMode = input.ReadBool(ref result.allMatchMode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> SearchCriteriaList {
        get { return PrepareBuilder().searchCriteria_; }
      }
      public int SearchCriteriaCount {
        get { return result.SearchCriteriaCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetSearchCriteria(int index) {
        return result.GetSearchCriteria(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSearchCriteria(int index, uint value) {
        PrepareBuilder();
        result.searchCriteria_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddSearchCriteria(uint value) {
        PrepareBuilder();
        result.searchCriteria_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeSearchCriteria(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.searchCriteria_.Add(values);
        return this;
      }
      public Builder ClearSearchCriteria() {
        PrepareBuilder();
        result.searchCriteria_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> SearchOptionsList {
        get { return PrepareBuilder().searchOptions_; }
      }
      public int SearchOptionsCount {
        get { return result.SearchOptionsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.SearchOption GetSearchOptions(int index) {
        return result.GetSearchOptions(index);
      }
      public Builder SetSearchOptions(int index, global::CmsApiSamples.Protocol.CMSApi.SearchOption value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.searchOptions_[index] = value;
        return this;
      }
      public Builder SetSearchOptions(int index, global::CmsApiSamples.Protocol.CMSApi.SearchOption.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.searchOptions_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSearchOptions(global::CmsApiSamples.Protocol.CMSApi.SearchOption value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.searchOptions_.Add(value);
        return this;
      }
      public Builder AddSearchOptions(global::CmsApiSamples.Protocol.CMSApi.SearchOption.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.searchOptions_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSearchOptions(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.SearchOption> values) {
        PrepareBuilder();
        result.searchOptions_.Add(values);
        return this;
      }
      public Builder ClearSearchOptions() {
        PrepareBuilder();
        result.searchOptions_.Clear();
        return this;
      }
      
      public bool HasAllMatchMode {
        get { return result.hasAllMatchMode; }
      }
      public bool AllMatchMode {
        get { return result.AllMatchMode; }
        set { SetAllMatchMode(value); }
      }
      public Builder SetAllMatchMode(bool value) {
        PrepareBuilder();
        result.hasAllMatchMode = true;
        result.allMatchMode_ = value;
        return this;
      }
      public Builder ClearAllMatchMode() {
        PrepareBuilder();
        result.hasAllMatchMode = false;
        result.allMatchMode_ = false;
        return this;
      }
    }
    static SalesSeriesSearchRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SalesSeriesSearchResultRecord : pb::GeneratedMessage<SalesSeriesSearchResultRecord, SalesSeriesSearchResultRecord.Builder> {
    private SalesSeriesSearchResultRecord() { }
    private static readonly SalesSeriesSearchResultRecord defaultInstance = new SalesSeriesSearchResultRecord().MakeReadOnly();
    private static readonly string[] _salesSeriesSearchResultRecordFieldNames = new string[] { "brokerage_id", "brokerage_name", "removed", "sales_series_id", "sales_series_name", "sales_series_number" };
    private static readonly uint[] _salesSeriesSearchResultRecordFieldTags = new uint[] { 34, 42, 48, 10, 18, 26 };
    public static SalesSeriesSearchResultRecord DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SalesSeriesSearchResultRecord DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SalesSeriesSearchResultRecord ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_SalesSeriesSearchResultRecord__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SalesSeriesSearchResultRecord, SalesSeriesSearchResultRecord.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_SalesSeriesSearchResultRecord__FieldAccessorTable; }
    }
    
    public const int SalesSeriesIdFieldNumber = 1;
    private bool hasSalesSeriesId;
    private string salesSeriesId_ = "";
    public bool HasSalesSeriesId {
      get { return hasSalesSeriesId; }
    }
    public string SalesSeriesId {
      get { return salesSeriesId_; }
    }
    
    public const int SalesSeriesNameFieldNumber = 2;
    private bool hasSalesSeriesName;
    private string salesSeriesName_ = "";
    public bool HasSalesSeriesName {
      get { return hasSalesSeriesName; }
    }
    public string SalesSeriesName {
      get { return salesSeriesName_; }
    }
    
    public const int SalesSeriesNumberFieldNumber = 3;
    private bool hasSalesSeriesNumber;
    private string salesSeriesNumber_ = "";
    public bool HasSalesSeriesNumber {
      get { return hasSalesSeriesNumber; }
    }
    public string SalesSeriesNumber {
      get { return salesSeriesNumber_; }
    }
    
    public const int BrokerageIdFieldNumber = 4;
    private bool hasBrokerageId;
    private string brokerageId_ = "";
    public bool HasBrokerageId {
      get { return hasBrokerageId; }
    }
    public string BrokerageId {
      get { return brokerageId_; }
    }
    
    public const int BrokerageNameFieldNumber = 5;
    private bool hasBrokerageName;
    private string brokerageName_ = "";
    public bool HasBrokerageName {
      get { return hasBrokerageName; }
    }
    public string BrokerageName {
      get { return brokerageName_; }
    }
    
    public const int RemovedFieldNumber = 6;
    private bool hasRemoved;
    private bool removed_;
    public bool HasRemoved {
      get { return hasRemoved; }
    }
    public bool Removed {
      get { return removed_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _salesSeriesSearchResultRecordFieldNames;
      if (hasSalesSeriesId) {
        output.WriteString(1, field_names[3], SalesSeriesId);
      }
      if (hasSalesSeriesName) {
        output.WriteString(2, field_names[4], SalesSeriesName);
      }
      if (hasSalesSeriesNumber) {
        output.WriteString(3, field_names[5], SalesSeriesNumber);
      }
      if (hasBrokerageId) {
        output.WriteString(4, field_names[0], BrokerageId);
      }
      if (hasBrokerageName) {
        output.WriteString(5, field_names[1], BrokerageName);
      }
      if (hasRemoved) {
        output.WriteBool(6, field_names[2], Removed);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSalesSeriesId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, SalesSeriesId);
      }
      if (hasSalesSeriesName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, SalesSeriesName);
      }
      if (hasSalesSeriesNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(3, SalesSeriesNumber);
      }
      if (hasBrokerageId) {
        size += pb::CodedOutputStream.ComputeStringSize(4, BrokerageId);
      }
      if (hasBrokerageName) {
        size += pb::CodedOutputStream.ComputeStringSize(5, BrokerageName);
      }
      if (hasRemoved) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, Removed);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SalesSeriesSearchResultRecord ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SalesSeriesSearchResultRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SalesSeriesSearchResultRecord ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SalesSeriesSearchResultRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SalesSeriesSearchResultRecord ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SalesSeriesSearchResultRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SalesSeriesSearchResultRecord ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SalesSeriesSearchResultRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SalesSeriesSearchResultRecord ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SalesSeriesSearchResultRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SalesSeriesSearchResultRecord MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SalesSeriesSearchResultRecord prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SalesSeriesSearchResultRecord, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SalesSeriesSearchResultRecord cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SalesSeriesSearchResultRecord result;
      
      private SalesSeriesSearchResultRecord PrepareBuilder() {
        if (resultIsReadOnly) {
          SalesSeriesSearchResultRecord original = result;
          result = new SalesSeriesSearchResultRecord();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SalesSeriesSearchResultRecord MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchResultRecord.Descriptor; }
      }
      
      public override SalesSeriesSearchResultRecord DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchResultRecord.DefaultInstance; }
      }
      
      public override SalesSeriesSearchResultRecord BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SalesSeriesSearchResultRecord) {
          return MergeFrom((SalesSeriesSearchResultRecord) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SalesSeriesSearchResultRecord other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.SalesSeriesSearchResultRecord.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSalesSeriesId) {
          SalesSeriesId = other.SalesSeriesId;
        }
        if (other.HasSalesSeriesName) {
          SalesSeriesName = other.SalesSeriesName;
        }
        if (other.HasSalesSeriesNumber) {
          SalesSeriesNumber = other.SalesSeriesNumber;
        }
        if (other.HasBrokerageId) {
          BrokerageId = other.BrokerageId;
        }
        if (other.HasBrokerageName) {
          BrokerageName = other.BrokerageName;
        }
        if (other.HasRemoved) {
          Removed = other.Removed;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_salesSeriesSearchResultRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _salesSeriesSearchResultRecordFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasSalesSeriesId = input.ReadString(ref result.salesSeriesId_);
              break;
            }
            case 18: {
              result.hasSalesSeriesName = input.ReadString(ref result.salesSeriesName_);
              break;
            }
            case 26: {
              result.hasSalesSeriesNumber = input.ReadString(ref result.salesSeriesNumber_);
              break;
            }
            case 34: {
              result.hasBrokerageId = input.ReadString(ref result.brokerageId_);
              break;
            }
            case 42: {
              result.hasBrokerageName = input.ReadString(ref result.brokerageName_);
              break;
            }
            case 48: {
              result.hasRemoved = input.ReadBool(ref result.removed_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSalesSeriesId {
        get { return result.hasSalesSeriesId; }
      }
      public string SalesSeriesId {
        get { return result.SalesSeriesId; }
        set { SetSalesSeriesId(value); }
      }
      public Builder SetSalesSeriesId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesId = true;
        result.salesSeriesId_ = value;
        return this;
      }
      public Builder ClearSalesSeriesId() {
        PrepareBuilder();
        result.hasSalesSeriesId = false;
        result.salesSeriesId_ = "";
        return this;
      }
      
      public bool HasSalesSeriesName {
        get { return result.hasSalesSeriesName; }
      }
      public string SalesSeriesName {
        get { return result.SalesSeriesName; }
        set { SetSalesSeriesName(value); }
      }
      public Builder SetSalesSeriesName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesName = true;
        result.salesSeriesName_ = value;
        return this;
      }
      public Builder ClearSalesSeriesName() {
        PrepareBuilder();
        result.hasSalesSeriesName = false;
        result.salesSeriesName_ = "";
        return this;
      }
      
      public bool HasSalesSeriesNumber {
        get { return result.hasSalesSeriesNumber; }
      }
      public string SalesSeriesNumber {
        get { return result.SalesSeriesNumber; }
        set { SetSalesSeriesNumber(value); }
      }
      public Builder SetSalesSeriesNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesNumber = true;
        result.salesSeriesNumber_ = value;
        return this;
      }
      public Builder ClearSalesSeriesNumber() {
        PrepareBuilder();
        result.hasSalesSeriesNumber = false;
        result.salesSeriesNumber_ = "";
        return this;
      }
      
      public bool HasBrokerageId {
        get { return result.hasBrokerageId; }
      }
      public string BrokerageId {
        get { return result.BrokerageId; }
        set { SetBrokerageId(value); }
      }
      public Builder SetBrokerageId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageId = true;
        result.brokerageId_ = value;
        return this;
      }
      public Builder ClearBrokerageId() {
        PrepareBuilder();
        result.hasBrokerageId = false;
        result.brokerageId_ = "";
        return this;
      }
      
      public bool HasBrokerageName {
        get { return result.hasBrokerageName; }
      }
      public string BrokerageName {
        get { return result.BrokerageName; }
        set { SetBrokerageName(value); }
      }
      public Builder SetBrokerageName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageName = true;
        result.brokerageName_ = value;
        return this;
      }
      public Builder ClearBrokerageName() {
        PrepareBuilder();
        result.hasBrokerageName = false;
        result.brokerageName_ = "";
        return this;
      }
      
      public bool HasRemoved {
        get { return result.hasRemoved; }
      }
      public bool Removed {
        get { return result.Removed; }
        set { SetRemoved(value); }
      }
      public Builder SetRemoved(bool value) {
        PrepareBuilder();
        result.hasRemoved = true;
        result.removed_ = value;
        return this;
      }
      public Builder ClearRemoved() {
        PrepareBuilder();
        result.hasRemoved = false;
        result.removed_ = false;
        return this;
      }
    }
    static SalesSeriesSearchResultRecord() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Tuple : pb::GeneratedMessage<Tuple, Tuple.Builder> {
    private Tuple() { }
    private static readonly Tuple defaultInstance = new Tuple().MakeReadOnly();
    private static readonly string[] _tupleFieldNames = new string[] { "first", "second", "third" };
    private static readonly uint[] _tupleFieldTags = new uint[] { 10, 18, 26 };
    public static Tuple DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Tuple DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Tuple ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Tuple__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Tuple, Tuple.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_Tuple__FieldAccessorTable; }
    }
    
    public const int FirstFieldNumber = 1;
    private bool hasFirst;
    private string first_ = "";
    public bool HasFirst {
      get { return hasFirst; }
    }
    public string First {
      get { return first_; }
    }
    
    public const int SecondFieldNumber = 2;
    private bool hasSecond;
    private string second_ = "";
    public bool HasSecond {
      get { return hasSecond; }
    }
    public string Second {
      get { return second_; }
    }
    
    public const int ThirdFieldNumber = 3;
    private bool hasThird;
    private string third_ = "";
    public bool HasThird {
      get { return hasThird; }
    }
    public string Third {
      get { return third_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tupleFieldNames;
      if (hasFirst) {
        output.WriteString(1, field_names[0], First);
      }
      if (hasSecond) {
        output.WriteString(2, field_names[1], Second);
      }
      if (hasThird) {
        output.WriteString(3, field_names[2], Third);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFirst) {
        size += pb::CodedOutputStream.ComputeStringSize(1, First);
      }
      if (hasSecond) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Second);
      }
      if (hasThird) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Third);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Tuple ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Tuple ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Tuple ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Tuple ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Tuple ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Tuple ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Tuple ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Tuple ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Tuple ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Tuple ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Tuple MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Tuple prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Tuple, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Tuple cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Tuple result;
      
      private Tuple PrepareBuilder() {
        if (resultIsReadOnly) {
          Tuple original = result;
          result = new Tuple();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Tuple MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Tuple.Descriptor; }
      }
      
      public override Tuple DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Tuple.DefaultInstance; }
      }
      
      public override Tuple BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Tuple) {
          return MergeFrom((Tuple) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Tuple other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Tuple.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFirst) {
          First = other.First;
        }
        if (other.HasSecond) {
          Second = other.Second;
        }
        if (other.HasThird) {
          Third = other.Third;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tupleFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tupleFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasFirst = input.ReadString(ref result.first_);
              break;
            }
            case 18: {
              result.hasSecond = input.ReadString(ref result.second_);
              break;
            }
            case 26: {
              result.hasThird = input.ReadString(ref result.third_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFirst {
        get { return result.hasFirst; }
      }
      public string First {
        get { return result.First; }
        set { SetFirst(value); }
      }
      public Builder SetFirst(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFirst = true;
        result.first_ = value;
        return this;
      }
      public Builder ClearFirst() {
        PrepareBuilder();
        result.hasFirst = false;
        result.first_ = "";
        return this;
      }
      
      public bool HasSecond {
        get { return result.hasSecond; }
      }
      public string Second {
        get { return result.Second; }
        set { SetSecond(value); }
      }
      public Builder SetSecond(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSecond = true;
        result.second_ = value;
        return this;
      }
      public Builder ClearSecond() {
        PrepareBuilder();
        result.hasSecond = false;
        result.second_ = "";
        return this;
      }
      
      public bool HasThird {
        get { return result.hasThird; }
      }
      public string Third {
        get { return result.Third; }
        set { SetThird(value); }
      }
      public Builder SetThird(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasThird = true;
        result.third_ = value;
        return this;
      }
      public Builder ClearThird() {
        PrepareBuilder();
        result.hasThird = false;
        result.third_ = "";
        return this;
      }
    }
    static Tuple() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CustomerSalesSeriesAuthorizationListRequest : pb::GeneratedMessage<CustomerSalesSeriesAuthorizationListRequest, CustomerSalesSeriesAuthorizationListRequest.Builder> {
    private CustomerSalesSeriesAuthorizationListRequest() { }
    private static readonly CustomerSalesSeriesAuthorizationListRequest defaultInstance = new CustomerSalesSeriesAuthorizationListRequest().MakeReadOnly();
    private static readonly string[] _customerSalesSeriesAuthorizationListRequestFieldNames = new string[] { "customer_id", "sales_series_id", "top" };
    private static readonly uint[] _customerSalesSeriesAuthorizationListRequestFieldTags = new uint[] { 10, 18, 24 };
    public static CustomerSalesSeriesAuthorizationListRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CustomerSalesSeriesAuthorizationListRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CustomerSalesSeriesAuthorizationListRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CustomerSalesSeriesAuthorizationListRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CustomerSalesSeriesAuthorizationListRequest, CustomerSalesSeriesAuthorizationListRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CustomerSalesSeriesAuthorizationListRequest__FieldAccessorTable; }
    }
    
    public const int CustomerIdFieldNumber = 1;
    private bool hasCustomerId;
    private string customerId_ = "";
    public bool HasCustomerId {
      get { return hasCustomerId; }
    }
    public string CustomerId {
      get { return customerId_; }
    }
    
    public const int SalesSeriesIdFieldNumber = 2;
    private bool hasSalesSeriesId;
    private string salesSeriesId_ = "";
    public bool HasSalesSeriesId {
      get { return hasSalesSeriesId; }
    }
    public string SalesSeriesId {
      get { return salesSeriesId_; }
    }
    
    public const int TopFieldNumber = 3;
    private bool hasTop;
    private uint top_;
    public bool HasTop {
      get { return hasTop; }
    }
    [global::System.CLSCompliant(false)]
    public uint Top {
      get { return top_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _customerSalesSeriesAuthorizationListRequestFieldNames;
      if (hasCustomerId) {
        output.WriteString(1, field_names[0], CustomerId);
      }
      if (hasSalesSeriesId) {
        output.WriteString(2, field_names[1], SalesSeriesId);
      }
      if (hasTop) {
        output.WriteUInt32(3, field_names[2], Top);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCustomerId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, CustomerId);
      }
      if (hasSalesSeriesId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, SalesSeriesId);
      }
      if (hasTop) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Top);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CustomerSalesSeriesAuthorizationListRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CustomerSalesSeriesAuthorizationListRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CustomerSalesSeriesAuthorizationListRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CustomerSalesSeriesAuthorizationListRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CustomerSalesSeriesAuthorizationListRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CustomerSalesSeriesAuthorizationListRequest result;
      
      private CustomerSalesSeriesAuthorizationListRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CustomerSalesSeriesAuthorizationListRequest original = result;
          result = new CustomerSalesSeriesAuthorizationListRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CustomerSalesSeriesAuthorizationListRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListRequest.Descriptor; }
      }
      
      public override CustomerSalesSeriesAuthorizationListRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListRequest.DefaultInstance; }
      }
      
      public override CustomerSalesSeriesAuthorizationListRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CustomerSalesSeriesAuthorizationListRequest) {
          return MergeFrom((CustomerSalesSeriesAuthorizationListRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CustomerSalesSeriesAuthorizationListRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCustomerId) {
          CustomerId = other.CustomerId;
        }
        if (other.HasSalesSeriesId) {
          SalesSeriesId = other.SalesSeriesId;
        }
        if (other.HasTop) {
          Top = other.Top;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_customerSalesSeriesAuthorizationListRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _customerSalesSeriesAuthorizationListRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCustomerId = input.ReadString(ref result.customerId_);
              break;
            }
            case 18: {
              result.hasSalesSeriesId = input.ReadString(ref result.salesSeriesId_);
              break;
            }
            case 24: {
              result.hasTop = input.ReadUInt32(ref result.top_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCustomerId {
        get { return result.hasCustomerId; }
      }
      public string CustomerId {
        get { return result.CustomerId; }
        set { SetCustomerId(value); }
      }
      public Builder SetCustomerId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomerId = true;
        result.customerId_ = value;
        return this;
      }
      public Builder ClearCustomerId() {
        PrepareBuilder();
        result.hasCustomerId = false;
        result.customerId_ = "";
        return this;
      }
      
      public bool HasSalesSeriesId {
        get { return result.hasSalesSeriesId; }
      }
      public string SalesSeriesId {
        get { return result.SalesSeriesId; }
        set { SetSalesSeriesId(value); }
      }
      public Builder SetSalesSeriesId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesId = true;
        result.salesSeriesId_ = value;
        return this;
      }
      public Builder ClearSalesSeriesId() {
        PrepareBuilder();
        result.hasSalesSeriesId = false;
        result.salesSeriesId_ = "";
        return this;
      }
      
      public bool HasTop {
        get { return result.hasTop; }
      }
      [global::System.CLSCompliant(false)]
      public uint Top {
        get { return result.Top; }
        set { SetTop(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTop(uint value) {
        PrepareBuilder();
        result.hasTop = true;
        result.top_ = value;
        return this;
      }
      public Builder ClearTop() {
        PrepareBuilder();
        result.hasTop = false;
        result.top_ = 0;
        return this;
      }
    }
    static CustomerSalesSeriesAuthorizationListRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateCustomerSalesSeriesAuthorizationList : pb::GeneratedMessage<UpdateCustomerSalesSeriesAuthorizationList, UpdateCustomerSalesSeriesAuthorizationList.Builder> {
    private UpdateCustomerSalesSeriesAuthorizationList() { }
    private static readonly UpdateCustomerSalesSeriesAuthorizationList defaultInstance = new UpdateCustomerSalesSeriesAuthorizationList().MakeReadOnly();
    private static readonly string[] _updateCustomerSalesSeriesAuthorizationListFieldNames = new string[] { "links_to_remove", "links_to_set" };
    private static readonly uint[] _updateCustomerSalesSeriesAuthorizationListFieldTags = new uint[] { 18, 10 };
    public static UpdateCustomerSalesSeriesAuthorizationList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateCustomerSalesSeriesAuthorizationList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateCustomerSalesSeriesAuthorizationList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateCustomerSalesSeriesAuthorizationList, UpdateCustomerSalesSeriesAuthorizationList.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationList__FieldAccessorTable; }
    }
    
    public const int LinksToSetFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink> linksToSet_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink> LinksToSetList {
      get { return linksToSet_; }
    }
    public int LinksToSetCount {
      get { return linksToSet_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink GetLinksToSet(int index) {
      return linksToSet_[index];
    }
    
    public const int LinksToRemoveFieldNumber = 2;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> linksToRemove_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Tuple> LinksToRemoveList {
      get { return linksToRemove_; }
    }
    public int LinksToRemoveCount {
      get { return linksToRemove_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Tuple GetLinksToRemove(int index) {
      return linksToRemove_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateCustomerSalesSeriesAuthorizationListFieldNames;
      if (linksToSet_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], linksToSet_);
      }
      if (linksToRemove_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], linksToRemove_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink element in LinksToSetList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.Tuple element in LinksToRemoveList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateCustomerSalesSeriesAuthorizationList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateCustomerSalesSeriesAuthorizationList MakeReadOnly() {
      linksToSet_.MakeReadOnly();
      linksToRemove_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateCustomerSalesSeriesAuthorizationList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateCustomerSalesSeriesAuthorizationList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateCustomerSalesSeriesAuthorizationList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateCustomerSalesSeriesAuthorizationList result;
      
      private UpdateCustomerSalesSeriesAuthorizationList PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateCustomerSalesSeriesAuthorizationList original = result;
          result = new UpdateCustomerSalesSeriesAuthorizationList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateCustomerSalesSeriesAuthorizationList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationList.Descriptor; }
      }
      
      public override UpdateCustomerSalesSeriesAuthorizationList DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationList.DefaultInstance; }
      }
      
      public override UpdateCustomerSalesSeriesAuthorizationList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateCustomerSalesSeriesAuthorizationList) {
          return MergeFrom((UpdateCustomerSalesSeriesAuthorizationList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateCustomerSalesSeriesAuthorizationList other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.linksToSet_.Count != 0) {
          result.linksToSet_.Add(other.linksToSet_);
        }
        if (other.linksToRemove_.Count != 0) {
          result.linksToRemove_.Add(other.linksToRemove_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateCustomerSalesSeriesAuthorizationListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateCustomerSalesSeriesAuthorizationListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.linksToSet_, global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.linksToRemove_, global::CmsApiSamples.Protocol.CMSApi.Tuple.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink> LinksToSetList {
        get { return PrepareBuilder().linksToSet_; }
      }
      public int LinksToSetCount {
        get { return result.LinksToSetCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink GetLinksToSet(int index) {
        return result.GetLinksToSet(index);
      }
      public Builder SetLinksToSet(int index, global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.linksToSet_[index] = value;
        return this;
      }
      public Builder SetLinksToSet(int index, global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.linksToSet_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLinksToSet(global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.linksToSet_.Add(value);
        return this;
      }
      public Builder AddLinksToSet(global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.linksToSet_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLinksToSet(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink> values) {
        PrepareBuilder();
        result.linksToSet_.Add(values);
        return this;
      }
      public Builder ClearLinksToSet() {
        PrepareBuilder();
        result.linksToSet_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> LinksToRemoveList {
        get { return PrepareBuilder().linksToRemove_; }
      }
      public int LinksToRemoveCount {
        get { return result.LinksToRemoveCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Tuple GetLinksToRemove(int index) {
        return result.GetLinksToRemove(index);
      }
      public Builder SetLinksToRemove(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.linksToRemove_[index] = value;
        return this;
      }
      public Builder SetLinksToRemove(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.linksToRemove_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLinksToRemove(global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.linksToRemove_.Add(value);
        return this;
      }
      public Builder AddLinksToRemove(global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.linksToRemove_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLinksToRemove(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Tuple> values) {
        PrepareBuilder();
        result.linksToRemove_.Add(values);
        return this;
      }
      public Builder ClearLinksToRemove() {
        PrepareBuilder();
        result.linksToRemove_.Clear();
        return this;
      }
    }
    static UpdateCustomerSalesSeriesAuthorizationList() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CustomerSalesSeriesAuthorizationListResult : pb::GeneratedMessage<CustomerSalesSeriesAuthorizationListResult, CustomerSalesSeriesAuthorizationListResult.Builder> {
    private CustomerSalesSeriesAuthorizationListResult() { }
    private static readonly CustomerSalesSeriesAuthorizationListResult defaultInstance = new CustomerSalesSeriesAuthorizationListResult().MakeReadOnly();
    private static readonly string[] _customerSalesSeriesAuthorizationListResultFieldNames = new string[] { "customer_sales_series_links", "is_complete" };
    private static readonly uint[] _customerSalesSeriesAuthorizationListResultFieldTags = new uint[] { 10, 16 };
    public static CustomerSalesSeriesAuthorizationListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CustomerSalesSeriesAuthorizationListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CustomerSalesSeriesAuthorizationListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CustomerSalesSeriesAuthorizationListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CustomerSalesSeriesAuthorizationListResult, CustomerSalesSeriesAuthorizationListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CustomerSalesSeriesAuthorizationListResult__FieldAccessorTable; }
    }
    
    public const int CustomerSalesSeriesLinksFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink> customerSalesSeriesLinks_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink> CustomerSalesSeriesLinksList {
      get { return customerSalesSeriesLinks_; }
    }
    public int CustomerSalesSeriesLinksCount {
      get { return customerSalesSeriesLinks_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink GetCustomerSalesSeriesLinks(int index) {
      return customerSalesSeriesLinks_[index];
    }
    
    public const int IsCompleteFieldNumber = 2;
    private bool hasIsComplete;
    private bool isComplete_ = true;
    public bool HasIsComplete {
      get { return hasIsComplete; }
    }
    public bool IsComplete {
      get { return isComplete_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _customerSalesSeriesAuthorizationListResultFieldNames;
      if (customerSalesSeriesLinks_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], customerSalesSeriesLinks_);
      }
      if (hasIsComplete) {
        output.WriteBool(2, field_names[1], IsComplete);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink element in CustomerSalesSeriesLinksList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasIsComplete) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsComplete);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CustomerSalesSeriesAuthorizationListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomerSalesSeriesAuthorizationListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CustomerSalesSeriesAuthorizationListResult MakeReadOnly() {
      customerSalesSeriesLinks_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CustomerSalesSeriesAuthorizationListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CustomerSalesSeriesAuthorizationListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CustomerSalesSeriesAuthorizationListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CustomerSalesSeriesAuthorizationListResult result;
      
      private CustomerSalesSeriesAuthorizationListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          CustomerSalesSeriesAuthorizationListResult original = result;
          result = new CustomerSalesSeriesAuthorizationListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CustomerSalesSeriesAuthorizationListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListResult.Descriptor; }
      }
      
      public override CustomerSalesSeriesAuthorizationListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListResult.DefaultInstance; }
      }
      
      public override CustomerSalesSeriesAuthorizationListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CustomerSalesSeriesAuthorizationListResult) {
          return MergeFrom((CustomerSalesSeriesAuthorizationListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CustomerSalesSeriesAuthorizationListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesAuthorizationListResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.customerSalesSeriesLinks_.Count != 0) {
          result.customerSalesSeriesLinks_.Add(other.customerSalesSeriesLinks_);
        }
        if (other.HasIsComplete) {
          IsComplete = other.IsComplete;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_customerSalesSeriesAuthorizationListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _customerSalesSeriesAuthorizationListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.customerSalesSeriesLinks_, global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasIsComplete = input.ReadBool(ref result.isComplete_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink> CustomerSalesSeriesLinksList {
        get { return PrepareBuilder().customerSalesSeriesLinks_; }
      }
      public int CustomerSalesSeriesLinksCount {
        get { return result.CustomerSalesSeriesLinksCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink GetCustomerSalesSeriesLinks(int index) {
        return result.GetCustomerSalesSeriesLinks(index);
      }
      public Builder SetCustomerSalesSeriesLinks(int index, global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.customerSalesSeriesLinks_[index] = value;
        return this;
      }
      public Builder SetCustomerSalesSeriesLinks(int index, global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.customerSalesSeriesLinks_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCustomerSalesSeriesLinks(global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.customerSalesSeriesLinks_.Add(value);
        return this;
      }
      public Builder AddCustomerSalesSeriesLinks(global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.customerSalesSeriesLinks_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCustomerSalesSeriesLinks(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink> values) {
        PrepareBuilder();
        result.customerSalesSeriesLinks_.Add(values);
        return this;
      }
      public Builder ClearCustomerSalesSeriesLinks() {
        PrepareBuilder();
        result.customerSalesSeriesLinks_.Clear();
        return this;
      }
      
      public bool HasIsComplete {
        get { return result.hasIsComplete; }
      }
      public bool IsComplete {
        get { return result.IsComplete; }
        set { SetIsComplete(value); }
      }
      public Builder SetIsComplete(bool value) {
        PrepareBuilder();
        result.hasIsComplete = true;
        result.isComplete_ = value;
        return this;
      }
      public Builder ClearIsComplete() {
        PrepareBuilder();
        result.hasIsComplete = false;
        result.isComplete_ = true;
        return this;
      }
    }
    static CustomerSalesSeriesAuthorizationListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateCustomerSalesSeriesAuthorizationListResult : pb::GeneratedMessage<UpdateCustomerSalesSeriesAuthorizationListResult, UpdateCustomerSalesSeriesAuthorizationListResult.Builder> {
    private UpdateCustomerSalesSeriesAuthorizationListResult() { }
    private static readonly UpdateCustomerSalesSeriesAuthorizationListResult defaultInstance = new UpdateCustomerSalesSeriesAuthorizationListResult().MakeReadOnly();
    private static readonly string[] _updateCustomerSalesSeriesAuthorizationListResultFieldNames = new string[] {  };
    private static readonly uint[] _updateCustomerSalesSeriesAuthorizationListResultFieldTags = new uint[] {  };
    public static UpdateCustomerSalesSeriesAuthorizationListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateCustomerSalesSeriesAuthorizationListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateCustomerSalesSeriesAuthorizationListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateCustomerSalesSeriesAuthorizationListResult, UpdateCustomerSalesSeriesAuthorizationListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateCustomerSalesSeriesAuthorizationListResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateCustomerSalesSeriesAuthorizationListResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateCustomerSalesSeriesAuthorizationListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateCustomerSalesSeriesAuthorizationListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateCustomerSalesSeriesAuthorizationListResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateCustomerSalesSeriesAuthorizationListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateCustomerSalesSeriesAuthorizationListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateCustomerSalesSeriesAuthorizationListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateCustomerSalesSeriesAuthorizationListResult result;
      
      private UpdateCustomerSalesSeriesAuthorizationListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateCustomerSalesSeriesAuthorizationListResult original = result;
          result = new UpdateCustomerSalesSeriesAuthorizationListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateCustomerSalesSeriesAuthorizationListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationListResult.Descriptor; }
      }
      
      public override UpdateCustomerSalesSeriesAuthorizationListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationListResult.DefaultInstance; }
      }
      
      public override UpdateCustomerSalesSeriesAuthorizationListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateCustomerSalesSeriesAuthorizationListResult) {
          return MergeFrom((UpdateCustomerSalesSeriesAuthorizationListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateCustomerSalesSeriesAuthorizationListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateCustomerSalesSeriesAuthorizationListResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateCustomerSalesSeriesAuthorizationListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateCustomerSalesSeriesAuthorizationListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateCustomerSalesSeriesAuthorizationListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CustomerSalesSeriesLink : pb::GeneratedMessage<CustomerSalesSeriesLink, CustomerSalesSeriesLink.Builder> {
    private CustomerSalesSeriesLink() { }
    private static readonly CustomerSalesSeriesLink defaultInstance = new CustomerSalesSeriesLink().MakeReadOnly();
    private static readonly string[] _customerSalesSeriesLinkFieldNames = new string[] { "customer_id", "sales_series_id", "sales_series_name", "sales_series_number" };
    private static readonly uint[] _customerSalesSeriesLinkFieldTags = new uint[] { 10, 18, 26, 34 };
    public static CustomerSalesSeriesLink DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CustomerSalesSeriesLink DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CustomerSalesSeriesLink ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CustomerSalesSeriesLink__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CustomerSalesSeriesLink, CustomerSalesSeriesLink.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_CustomerSalesSeriesLink__FieldAccessorTable; }
    }
    
    public const int CustomerIdFieldNumber = 1;
    private bool hasCustomerId;
    private string customerId_ = "";
    public bool HasCustomerId {
      get { return hasCustomerId; }
    }
    public string CustomerId {
      get { return customerId_; }
    }
    
    public const int SalesSeriesIdFieldNumber = 2;
    private bool hasSalesSeriesId;
    private string salesSeriesId_ = "";
    public bool HasSalesSeriesId {
      get { return hasSalesSeriesId; }
    }
    public string SalesSeriesId {
      get { return salesSeriesId_; }
    }
    
    public const int SalesSeriesNameFieldNumber = 3;
    private bool hasSalesSeriesName;
    private string salesSeriesName_ = "";
    public bool HasSalesSeriesName {
      get { return hasSalesSeriesName; }
    }
    public string SalesSeriesName {
      get { return salesSeriesName_; }
    }
    
    public const int SalesSeriesNumberFieldNumber = 4;
    private bool hasSalesSeriesNumber;
    private string salesSeriesNumber_ = "";
    public bool HasSalesSeriesNumber {
      get { return hasSalesSeriesNumber; }
    }
    public string SalesSeriesNumber {
      get { return salesSeriesNumber_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _customerSalesSeriesLinkFieldNames;
      if (hasCustomerId) {
        output.WriteString(1, field_names[0], CustomerId);
      }
      if (hasSalesSeriesId) {
        output.WriteString(2, field_names[1], SalesSeriesId);
      }
      if (hasSalesSeriesName) {
        output.WriteString(3, field_names[2], SalesSeriesName);
      }
      if (hasSalesSeriesNumber) {
        output.WriteString(4, field_names[3], SalesSeriesNumber);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCustomerId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, CustomerId);
      }
      if (hasSalesSeriesId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, SalesSeriesId);
      }
      if (hasSalesSeriesName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, SalesSeriesName);
      }
      if (hasSalesSeriesNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(4, SalesSeriesNumber);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CustomerSalesSeriesLink ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomerSalesSeriesLink ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomerSalesSeriesLink ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomerSalesSeriesLink ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomerSalesSeriesLink ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomerSalesSeriesLink ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CustomerSalesSeriesLink ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CustomerSalesSeriesLink ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CustomerSalesSeriesLink ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomerSalesSeriesLink ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CustomerSalesSeriesLink MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CustomerSalesSeriesLink prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CustomerSalesSeriesLink, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CustomerSalesSeriesLink cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CustomerSalesSeriesLink result;
      
      private CustomerSalesSeriesLink PrepareBuilder() {
        if (resultIsReadOnly) {
          CustomerSalesSeriesLink original = result;
          result = new CustomerSalesSeriesLink();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CustomerSalesSeriesLink MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink.Descriptor; }
      }
      
      public override CustomerSalesSeriesLink DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink.DefaultInstance; }
      }
      
      public override CustomerSalesSeriesLink BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CustomerSalesSeriesLink) {
          return MergeFrom((CustomerSalesSeriesLink) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CustomerSalesSeriesLink other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CustomerSalesSeriesLink.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCustomerId) {
          CustomerId = other.CustomerId;
        }
        if (other.HasSalesSeriesId) {
          SalesSeriesId = other.SalesSeriesId;
        }
        if (other.HasSalesSeriesName) {
          SalesSeriesName = other.SalesSeriesName;
        }
        if (other.HasSalesSeriesNumber) {
          SalesSeriesNumber = other.SalesSeriesNumber;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_customerSalesSeriesLinkFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _customerSalesSeriesLinkFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCustomerId = input.ReadString(ref result.customerId_);
              break;
            }
            case 18: {
              result.hasSalesSeriesId = input.ReadString(ref result.salesSeriesId_);
              break;
            }
            case 26: {
              result.hasSalesSeriesName = input.ReadString(ref result.salesSeriesName_);
              break;
            }
            case 34: {
              result.hasSalesSeriesNumber = input.ReadString(ref result.salesSeriesNumber_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCustomerId {
        get { return result.hasCustomerId; }
      }
      public string CustomerId {
        get { return result.CustomerId; }
        set { SetCustomerId(value); }
      }
      public Builder SetCustomerId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomerId = true;
        result.customerId_ = value;
        return this;
      }
      public Builder ClearCustomerId() {
        PrepareBuilder();
        result.hasCustomerId = false;
        result.customerId_ = "";
        return this;
      }
      
      public bool HasSalesSeriesId {
        get { return result.hasSalesSeriesId; }
      }
      public string SalesSeriesId {
        get { return result.SalesSeriesId; }
        set { SetSalesSeriesId(value); }
      }
      public Builder SetSalesSeriesId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesId = true;
        result.salesSeriesId_ = value;
        return this;
      }
      public Builder ClearSalesSeriesId() {
        PrepareBuilder();
        result.hasSalesSeriesId = false;
        result.salesSeriesId_ = "";
        return this;
      }
      
      public bool HasSalesSeriesName {
        get { return result.hasSalesSeriesName; }
      }
      public string SalesSeriesName {
        get { return result.SalesSeriesName; }
        set { SetSalesSeriesName(value); }
      }
      public Builder SetSalesSeriesName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesName = true;
        result.salesSeriesName_ = value;
        return this;
      }
      public Builder ClearSalesSeriesName() {
        PrepareBuilder();
        result.hasSalesSeriesName = false;
        result.salesSeriesName_ = "";
        return this;
      }
      
      public bool HasSalesSeriesNumber {
        get { return result.hasSalesSeriesNumber; }
      }
      public string SalesSeriesNumber {
        get { return result.SalesSeriesNumber; }
        set { SetSalesSeriesNumber(value); }
      }
      public Builder SetSalesSeriesNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesNumber = true;
        result.salesSeriesNumber_ = value;
        return this;
      }
      public Builder ClearSalesSeriesNumber() {
        PrepareBuilder();
        result.hasSalesSeriesNumber = false;
        result.salesSeriesNumber_ = "";
        return this;
      }
    }
    static CustomerSalesSeriesLink() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoginSettingsRequest : pb::GeneratedMessage<LoginSettingsRequest, LoginSettingsRequest.Builder> {
    private LoginSettingsRequest() { }
    private static readonly LoginSettingsRequest defaultInstance = new LoginSettingsRequest().MakeReadOnly();
    private static readonly string[] _loginSettingsRequestFieldNames = new string[] { "login_id" };
    private static readonly uint[] _loginSettingsRequestFieldTags = new uint[] { 10 };
    public static LoginSettingsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginSettingsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginSettingsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoginSettingsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginSettingsRequest, LoginSettingsRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoginSettingsRequest__FieldAccessorTable; }
    }
    
    public const int LoginIdFieldNumber = 1;
    private bool hasLoginId;
    private string loginId_ = "";
    public bool HasLoginId {
      get { return hasLoginId; }
    }
    public string LoginId {
      get { return loginId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginSettingsRequestFieldNames;
      if (hasLoginId) {
        output.WriteString(1, field_names[0], LoginId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLoginId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LoginId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoginSettingsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginSettingsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginSettingsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginSettingsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginSettingsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginSettingsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginSettingsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginSettingsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginSettingsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginSettingsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginSettingsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginSettingsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginSettingsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginSettingsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginSettingsRequest result;
      
      private LoginSettingsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginSettingsRequest original = result;
          result = new LoginSettingsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginSettingsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoginSettingsRequest.Descriptor; }
      }
      
      public override LoginSettingsRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoginSettingsRequest.DefaultInstance; }
      }
      
      public override LoginSettingsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginSettingsRequest) {
          return MergeFrom((LoginSettingsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginSettingsRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LoginSettingsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginId) {
          LoginId = other.LoginId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginSettingsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginSettingsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLoginId = input.ReadString(ref result.loginId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginId {
        get { return result.hasLoginId; }
      }
      public string LoginId {
        get { return result.LoginId; }
        set { SetLoginId(value); }
      }
      public Builder SetLoginId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginId = true;
        result.loginId_ = value;
        return this;
      }
      public Builder ClearLoginId() {
        PrepareBuilder();
        result.hasLoginId = false;
        result.loginId_ = "";
        return this;
      }
    }
    static LoginSettingsRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoginSettingsResult : pb::GeneratedMessage<LoginSettingsResult, LoginSettingsResult.Builder> {
    private LoginSettingsResult() { }
    private static readonly LoginSettingsResult defaultInstance = new LoginSettingsResult().MakeReadOnly();
    private static readonly string[] _loginSettingsResultFieldNames = new string[] { "login_settings" };
    private static readonly uint[] _loginSettingsResultFieldTags = new uint[] { 10 };
    public static LoginSettingsResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginSettingsResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginSettingsResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoginSettingsResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginSettingsResult, LoginSettingsResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoginSettingsResult__FieldAccessorTable; }
    }
    
    public const int LoginSettingsFieldNumber = 1;
    private bool hasLoginSettings;
    private global::CmsApiSamples.Protocol.CMSApi.LoginSettings loginSettings_;
    public bool HasLoginSettings {
      get { return hasLoginSettings; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LoginSettings LoginSettings {
      get { return loginSettings_ ?? global::CmsApiSamples.Protocol.CMSApi.LoginSettings.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginSettingsResultFieldNames;
      if (hasLoginSettings) {
        output.WriteMessage(1, field_names[0], LoginSettings);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLoginSettings) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, LoginSettings);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoginSettingsResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginSettingsResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginSettingsResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginSettingsResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginSettingsResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginSettingsResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginSettingsResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginSettingsResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginSettingsResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginSettingsResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginSettingsResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginSettingsResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginSettingsResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginSettingsResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginSettingsResult result;
      
      private LoginSettingsResult PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginSettingsResult original = result;
          result = new LoginSettingsResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginSettingsResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoginSettingsResult.Descriptor; }
      }
      
      public override LoginSettingsResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoginSettingsResult.DefaultInstance; }
      }
      
      public override LoginSettingsResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginSettingsResult) {
          return MergeFrom((LoginSettingsResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginSettingsResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LoginSettingsResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginSettings) {
          MergeLoginSettings(other.LoginSettings);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginSettingsResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginSettingsResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.LoginSettings.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LoginSettings.CreateBuilder();
              if (result.hasLoginSettings) {
                subBuilder.MergeFrom(LoginSettings);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              LoginSettings = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginSettings {
       get { return result.hasLoginSettings; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LoginSettings LoginSettings {
        get { return result.LoginSettings; }
        set { SetLoginSettings(value); }
      }
      public Builder SetLoginSettings(global::CmsApiSamples.Protocol.CMSApi.LoginSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginSettings = true;
        result.loginSettings_ = value;
        return this;
      }
      public Builder SetLoginSettings(global::CmsApiSamples.Protocol.CMSApi.LoginSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLoginSettings = true;
        result.loginSettings_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLoginSettings(global::CmsApiSamples.Protocol.CMSApi.LoginSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLoginSettings &&
            result.loginSettings_ != global::CmsApiSamples.Protocol.CMSApi.LoginSettings.DefaultInstance) {
            result.loginSettings_ = global::CmsApiSamples.Protocol.CMSApi.LoginSettings.CreateBuilder(result.loginSettings_).MergeFrom(value).BuildPartial();
        } else {
          result.loginSettings_ = value;
        }
        result.hasLoginSettings = true;
        return this;
      }
      public Builder ClearLoginSettings() {
        PrepareBuilder();
        result.hasLoginSettings = false;
        result.loginSettings_ = null;
        return this;
      }
    }
    static LoginSettingsResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateLoginSettings : pb::GeneratedMessage<UpdateLoginSettings, UpdateLoginSettings.Builder> {
    private UpdateLoginSettings() { }
    private static readonly UpdateLoginSettings defaultInstance = new UpdateLoginSettings().MakeReadOnly();
    private static readonly string[] _updateLoginSettingsFieldNames = new string[] { "login_settings" };
    private static readonly uint[] _updateLoginSettingsFieldTags = new uint[] { 10 };
    public static UpdateLoginSettings DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateLoginSettings DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateLoginSettings ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateLoginSettings__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateLoginSettings, UpdateLoginSettings.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateLoginSettings__FieldAccessorTable; }
    }
    
    public const int LoginSettingsFieldNumber = 1;
    private bool hasLoginSettings;
    private global::CmsApiSamples.Protocol.CMSApi.LoginSettings loginSettings_;
    public bool HasLoginSettings {
      get { return hasLoginSettings; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LoginSettings LoginSettings {
      get { return loginSettings_ ?? global::CmsApiSamples.Protocol.CMSApi.LoginSettings.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateLoginSettingsFieldNames;
      if (hasLoginSettings) {
        output.WriteMessage(1, field_names[0], LoginSettings);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLoginSettings) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, LoginSettings);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateLoginSettings ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateLoginSettings ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateLoginSettings ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateLoginSettings ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateLoginSettings ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateLoginSettings ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateLoginSettings ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateLoginSettings ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateLoginSettings ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateLoginSettings ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateLoginSettings MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateLoginSettings prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateLoginSettings, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateLoginSettings cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateLoginSettings result;
      
      private UpdateLoginSettings PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateLoginSettings original = result;
          result = new UpdateLoginSettings();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateLoginSettings MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettings.Descriptor; }
      }
      
      public override UpdateLoginSettings DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettings.DefaultInstance; }
      }
      
      public override UpdateLoginSettings BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateLoginSettings) {
          return MergeFrom((UpdateLoginSettings) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateLoginSettings other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettings.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginSettings) {
          MergeLoginSettings(other.LoginSettings);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateLoginSettingsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateLoginSettingsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.LoginSettings.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LoginSettings.CreateBuilder();
              if (result.hasLoginSettings) {
                subBuilder.MergeFrom(LoginSettings);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              LoginSettings = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginSettings {
       get { return result.hasLoginSettings; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LoginSettings LoginSettings {
        get { return result.LoginSettings; }
        set { SetLoginSettings(value); }
      }
      public Builder SetLoginSettings(global::CmsApiSamples.Protocol.CMSApi.LoginSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginSettings = true;
        result.loginSettings_ = value;
        return this;
      }
      public Builder SetLoginSettings(global::CmsApiSamples.Protocol.CMSApi.LoginSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLoginSettings = true;
        result.loginSettings_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLoginSettings(global::CmsApiSamples.Protocol.CMSApi.LoginSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLoginSettings &&
            result.loginSettings_ != global::CmsApiSamples.Protocol.CMSApi.LoginSettings.DefaultInstance) {
            result.loginSettings_ = global::CmsApiSamples.Protocol.CMSApi.LoginSettings.CreateBuilder(result.loginSettings_).MergeFrom(value).BuildPartial();
        } else {
          result.loginSettings_ = value;
        }
        result.hasLoginSettings = true;
        return this;
      }
      public Builder ClearLoginSettings() {
        PrepareBuilder();
        result.hasLoginSettings = false;
        result.loginSettings_ = null;
        return this;
      }
    }
    static UpdateLoginSettings() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateLoginSettingsResult : pb::GeneratedMessage<UpdateLoginSettingsResult, UpdateLoginSettingsResult.Builder> {
    private UpdateLoginSettingsResult() { }
    private static readonly UpdateLoginSettingsResult defaultInstance = new UpdateLoginSettingsResult().MakeReadOnly();
    private static readonly string[] _updateLoginSettingsResultFieldNames = new string[] {  };
    private static readonly uint[] _updateLoginSettingsResultFieldTags = new uint[] {  };
    public static UpdateLoginSettingsResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateLoginSettingsResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateLoginSettingsResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateLoginSettingsResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateLoginSettingsResult, UpdateLoginSettingsResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateLoginSettingsResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateLoginSettingsResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateLoginSettingsResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateLoginSettingsResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateLoginSettingsResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateLoginSettingsResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateLoginSettingsResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateLoginSettingsResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateLoginSettingsResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateLoginSettingsResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateLoginSettingsResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateLoginSettingsResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateLoginSettingsResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateLoginSettingsResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateLoginSettingsResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateLoginSettingsResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateLoginSettingsResult result;
      
      private UpdateLoginSettingsResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateLoginSettingsResult original = result;
          result = new UpdateLoginSettingsResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateLoginSettingsResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettingsResult.Descriptor; }
      }
      
      public override UpdateLoginSettingsResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettingsResult.DefaultInstance; }
      }
      
      public override UpdateLoginSettingsResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateLoginSettingsResult) {
          return MergeFrom((UpdateLoginSettingsResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateLoginSettingsResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateLoginSettingsResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateLoginSettingsResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateLoginSettingsResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateLoginSettingsResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoginExchangeMemberIdListRequest : pb::GeneratedMessage<LoginExchangeMemberIdListRequest, LoginExchangeMemberIdListRequest.Builder> {
    private LoginExchangeMemberIdListRequest() { }
    private static readonly LoginExchangeMemberIdListRequest defaultInstance = new LoginExchangeMemberIdListRequest().MakeReadOnly();
    private static readonly string[] _loginExchangeMemberIdListRequestFieldNames = new string[] { "login_id" };
    private static readonly uint[] _loginExchangeMemberIdListRequestFieldTags = new uint[] { 10 };
    public static LoginExchangeMemberIdListRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginExchangeMemberIdListRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginExchangeMemberIdListRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoginExchangeMemberIdListRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginExchangeMemberIdListRequest, LoginExchangeMemberIdListRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoginExchangeMemberIdListRequest__FieldAccessorTable; }
    }
    
    public const int LoginIdFieldNumber = 1;
    private bool hasLoginId;
    private string loginId_ = "";
    public bool HasLoginId {
      get { return hasLoginId; }
    }
    public string LoginId {
      get { return loginId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginExchangeMemberIdListRequestFieldNames;
      if (hasLoginId) {
        output.WriteString(1, field_names[0], LoginId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLoginId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LoginId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoginExchangeMemberIdListRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginExchangeMemberIdListRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginExchangeMemberIdListRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginExchangeMemberIdListRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginExchangeMemberIdListRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginExchangeMemberIdListRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginExchangeMemberIdListRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginExchangeMemberIdListRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginExchangeMemberIdListRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginExchangeMemberIdListRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginExchangeMemberIdListRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginExchangeMemberIdListRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginExchangeMemberIdListRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginExchangeMemberIdListRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginExchangeMemberIdListRequest result;
      
      private LoginExchangeMemberIdListRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginExchangeMemberIdListRequest original = result;
          result = new LoginExchangeMemberIdListRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginExchangeMemberIdListRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListRequest.Descriptor; }
      }
      
      public override LoginExchangeMemberIdListRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListRequest.DefaultInstance; }
      }
      
      public override LoginExchangeMemberIdListRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginExchangeMemberIdListRequest) {
          return MergeFrom((LoginExchangeMemberIdListRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginExchangeMemberIdListRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginId) {
          LoginId = other.LoginId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginExchangeMemberIdListRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginExchangeMemberIdListRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLoginId = input.ReadString(ref result.loginId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginId {
        get { return result.hasLoginId; }
      }
      public string LoginId {
        get { return result.LoginId; }
        set { SetLoginId(value); }
      }
      public Builder SetLoginId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginId = true;
        result.loginId_ = value;
        return this;
      }
      public Builder ClearLoginId() {
        PrepareBuilder();
        result.hasLoginId = false;
        result.loginId_ = "";
        return this;
      }
    }
    static LoginExchangeMemberIdListRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoginExchangeMemberIdListResult : pb::GeneratedMessage<LoginExchangeMemberIdListResult, LoginExchangeMemberIdListResult.Builder> {
    private LoginExchangeMemberIdListResult() { }
    private static readonly LoginExchangeMemberIdListResult defaultInstance = new LoginExchangeMemberIdListResult().MakeReadOnly();
    private static readonly string[] _loginExchangeMemberIdListResultFieldNames = new string[] { "login_member_ids" };
    private static readonly uint[] _loginExchangeMemberIdListResultFieldTags = new uint[] { 10 };
    public static LoginExchangeMemberIdListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginExchangeMemberIdListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginExchangeMemberIdListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoginExchangeMemberIdListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginExchangeMemberIdListResult, LoginExchangeMemberIdListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoginExchangeMemberIdListResult__FieldAccessorTable; }
    }
    
    public const int LoginMemberIdsFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId> loginMemberIds_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId> LoginMemberIdsList {
      get { return loginMemberIds_; }
    }
    public int LoginMemberIdsCount {
      get { return loginMemberIds_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId GetLoginMemberIds(int index) {
      return loginMemberIds_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginExchangeMemberIdListResultFieldNames;
      if (loginMemberIds_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], loginMemberIds_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId element in LoginMemberIdsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoginExchangeMemberIdListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginExchangeMemberIdListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginExchangeMemberIdListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginExchangeMemberIdListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginExchangeMemberIdListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginExchangeMemberIdListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginExchangeMemberIdListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginExchangeMemberIdListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginExchangeMemberIdListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginExchangeMemberIdListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginExchangeMemberIdListResult MakeReadOnly() {
      loginMemberIds_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginExchangeMemberIdListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginExchangeMemberIdListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginExchangeMemberIdListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginExchangeMemberIdListResult result;
      
      private LoginExchangeMemberIdListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginExchangeMemberIdListResult original = result;
          result = new LoginExchangeMemberIdListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginExchangeMemberIdListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListResult.Descriptor; }
      }
      
      public override LoginExchangeMemberIdListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListResult.DefaultInstance; }
      }
      
      public override LoginExchangeMemberIdListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginExchangeMemberIdListResult) {
          return MergeFrom((LoginExchangeMemberIdListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginExchangeMemberIdListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberIdListResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.loginMemberIds_.Count != 0) {
          result.loginMemberIds_.Add(other.loginMemberIds_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginExchangeMemberIdListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginExchangeMemberIdListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.loginMemberIds_, global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId> LoginMemberIdsList {
        get { return PrepareBuilder().loginMemberIds_; }
      }
      public int LoginMemberIdsCount {
        get { return result.LoginMemberIdsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId GetLoginMemberIds(int index) {
        return result.GetLoginMemberIds(index);
      }
      public Builder SetLoginMemberIds(int index, global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.loginMemberIds_[index] = value;
        return this;
      }
      public Builder SetLoginMemberIds(int index, global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.loginMemberIds_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLoginMemberIds(global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.loginMemberIds_.Add(value);
        return this;
      }
      public Builder AddLoginMemberIds(global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.loginMemberIds_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLoginMemberIds(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId> values) {
        PrepareBuilder();
        result.loginMemberIds_.Add(values);
        return this;
      }
      public Builder ClearLoginMemberIds() {
        PrepareBuilder();
        result.loginMemberIds_.Clear();
        return this;
      }
    }
    static LoginExchangeMemberIdListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LoginExchangeMemberId : pb::GeneratedMessage<LoginExchangeMemberId, LoginExchangeMemberId.Builder> {
    private LoginExchangeMemberId() { }
    private static readonly LoginExchangeMemberId defaultInstance = new LoginExchangeMemberId().MakeReadOnly();
    private static readonly string[] _loginExchangeMemberIdFieldNames = new string[] { "exchange_key", "login_id", "member_id" };
    private static readonly uint[] _loginExchangeMemberIdFieldTags = new uint[] { 18, 10, 26 };
    public static LoginExchangeMemberId DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginExchangeMemberId DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginExchangeMemberId ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoginExchangeMemberId__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginExchangeMemberId, LoginExchangeMemberId.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LoginExchangeMemberId__FieldAccessorTable; }
    }
    
    public const int LoginIdFieldNumber = 1;
    private bool hasLoginId;
    private string loginId_ = "";
    public bool HasLoginId {
      get { return hasLoginId; }
    }
    public string LoginId {
      get { return loginId_; }
    }
    
    public const int ExchangeKeyFieldNumber = 2;
    private bool hasExchangeKey;
    private string exchangeKey_ = "";
    public bool HasExchangeKey {
      get { return hasExchangeKey; }
    }
    public string ExchangeKey {
      get { return exchangeKey_; }
    }
    
    public const int MemberIdFieldNumber = 3;
    private bool hasMemberId;
    private string memberId_ = "";
    public bool HasMemberId {
      get { return hasMemberId; }
    }
    public string MemberId {
      get { return memberId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _loginExchangeMemberIdFieldNames;
      if (hasLoginId) {
        output.WriteString(1, field_names[1], LoginId);
      }
      if (hasExchangeKey) {
        output.WriteString(2, field_names[0], ExchangeKey);
      }
      if (hasMemberId) {
        output.WriteString(3, field_names[2], MemberId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLoginId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LoginId);
      }
      if (hasExchangeKey) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ExchangeKey);
      }
      if (hasMemberId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, MemberId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LoginExchangeMemberId ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginExchangeMemberId ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginExchangeMemberId ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginExchangeMemberId ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginExchangeMemberId ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginExchangeMemberId ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginExchangeMemberId ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginExchangeMemberId ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginExchangeMemberId ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginExchangeMemberId ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginExchangeMemberId MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginExchangeMemberId prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginExchangeMemberId, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginExchangeMemberId cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginExchangeMemberId result;
      
      private LoginExchangeMemberId PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginExchangeMemberId original = result;
          result = new LoginExchangeMemberId();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginExchangeMemberId MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId.Descriptor; }
      }
      
      public override LoginExchangeMemberId DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId.DefaultInstance; }
      }
      
      public override LoginExchangeMemberId BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginExchangeMemberId) {
          return MergeFrom((LoginExchangeMemberId) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginExchangeMemberId other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginId) {
          LoginId = other.LoginId;
        }
        if (other.HasExchangeKey) {
          ExchangeKey = other.ExchangeKey;
        }
        if (other.HasMemberId) {
          MemberId = other.MemberId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginExchangeMemberIdFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginExchangeMemberIdFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLoginId = input.ReadString(ref result.loginId_);
              break;
            }
            case 18: {
              result.hasExchangeKey = input.ReadString(ref result.exchangeKey_);
              break;
            }
            case 26: {
              result.hasMemberId = input.ReadString(ref result.memberId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginId {
        get { return result.hasLoginId; }
      }
      public string LoginId {
        get { return result.LoginId; }
        set { SetLoginId(value); }
      }
      public Builder SetLoginId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginId = true;
        result.loginId_ = value;
        return this;
      }
      public Builder ClearLoginId() {
        PrepareBuilder();
        result.hasLoginId = false;
        result.loginId_ = "";
        return this;
      }
      
      public bool HasExchangeKey {
        get { return result.hasExchangeKey; }
      }
      public string ExchangeKey {
        get { return result.ExchangeKey; }
        set { SetExchangeKey(value); }
      }
      public Builder SetExchangeKey(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExchangeKey = true;
        result.exchangeKey_ = value;
        return this;
      }
      public Builder ClearExchangeKey() {
        PrepareBuilder();
        result.hasExchangeKey = false;
        result.exchangeKey_ = "";
        return this;
      }
      
      public bool HasMemberId {
        get { return result.hasMemberId; }
      }
      public string MemberId {
        get { return result.MemberId; }
        set { SetMemberId(value); }
      }
      public Builder SetMemberId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberId = true;
        result.memberId_ = value;
        return this;
      }
      public Builder ClearMemberId() {
        PrepareBuilder();
        result.hasMemberId = false;
        result.memberId_ = "";
        return this;
      }
    }
    static LoginExchangeMemberId() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateLoginExchangeMemberIdList : pb::GeneratedMessage<UpdateLoginExchangeMemberIdList, UpdateLoginExchangeMemberIdList.Builder> {
    private UpdateLoginExchangeMemberIdList() { }
    private static readonly UpdateLoginExchangeMemberIdList defaultInstance = new UpdateLoginExchangeMemberIdList().MakeReadOnly();
    private static readonly string[] _updateLoginExchangeMemberIdListFieldNames = new string[] { "login_id", "member_ids_to_remove", "member_ids_to_set" };
    private static readonly uint[] _updateLoginExchangeMemberIdListFieldTags = new uint[] { 10, 26, 18 };
    public static UpdateLoginExchangeMemberIdList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateLoginExchangeMemberIdList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateLoginExchangeMemberIdList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateLoginExchangeMemberIdList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateLoginExchangeMemberIdList, UpdateLoginExchangeMemberIdList.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateLoginExchangeMemberIdList__FieldAccessorTable; }
    }
    
    public const int LoginIdFieldNumber = 1;
    private bool hasLoginId;
    private string loginId_ = "";
    public bool HasLoginId {
      get { return hasLoginId; }
    }
    public string LoginId {
      get { return loginId_; }
    }
    
    public const int MemberIdsToSetFieldNumber = 2;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId> memberIdsToSet_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId> MemberIdsToSetList {
      get { return memberIdsToSet_; }
    }
    public int MemberIdsToSetCount {
      get { return memberIdsToSet_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId GetMemberIdsToSet(int index) {
      return memberIdsToSet_[index];
    }
    
    public const int MemberIdsToRemoveFieldNumber = 3;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> memberIdsToRemove_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Tuple> MemberIdsToRemoveList {
      get { return memberIdsToRemove_; }
    }
    public int MemberIdsToRemoveCount {
      get { return memberIdsToRemove_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Tuple GetMemberIdsToRemove(int index) {
      return memberIdsToRemove_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateLoginExchangeMemberIdListFieldNames;
      if (hasLoginId) {
        output.WriteString(1, field_names[0], LoginId);
      }
      if (memberIdsToSet_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], memberIdsToSet_);
      }
      if (memberIdsToRemove_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], memberIdsToRemove_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLoginId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LoginId);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId element in MemberIdsToSetList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.Tuple element in MemberIdsToRemoveList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateLoginExchangeMemberIdList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateLoginExchangeMemberIdList MakeReadOnly() {
      memberIdsToSet_.MakeReadOnly();
      memberIdsToRemove_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateLoginExchangeMemberIdList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateLoginExchangeMemberIdList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateLoginExchangeMemberIdList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateLoginExchangeMemberIdList result;
      
      private UpdateLoginExchangeMemberIdList PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateLoginExchangeMemberIdList original = result;
          result = new UpdateLoginExchangeMemberIdList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateLoginExchangeMemberIdList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdList.Descriptor; }
      }
      
      public override UpdateLoginExchangeMemberIdList DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdList.DefaultInstance; }
      }
      
      public override UpdateLoginExchangeMemberIdList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateLoginExchangeMemberIdList) {
          return MergeFrom((UpdateLoginExchangeMemberIdList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateLoginExchangeMemberIdList other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginId) {
          LoginId = other.LoginId;
        }
        if (other.memberIdsToSet_.Count != 0) {
          result.memberIdsToSet_.Add(other.memberIdsToSet_);
        }
        if (other.memberIdsToRemove_.Count != 0) {
          result.memberIdsToRemove_.Add(other.memberIdsToRemove_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateLoginExchangeMemberIdListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateLoginExchangeMemberIdListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLoginId = input.ReadString(ref result.loginId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.memberIdsToSet_, global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.memberIdsToRemove_, global::CmsApiSamples.Protocol.CMSApi.Tuple.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginId {
        get { return result.hasLoginId; }
      }
      public string LoginId {
        get { return result.LoginId; }
        set { SetLoginId(value); }
      }
      public Builder SetLoginId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginId = true;
        result.loginId_ = value;
        return this;
      }
      public Builder ClearLoginId() {
        PrepareBuilder();
        result.hasLoginId = false;
        result.loginId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId> MemberIdsToSetList {
        get { return PrepareBuilder().memberIdsToSet_; }
      }
      public int MemberIdsToSetCount {
        get { return result.MemberIdsToSetCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId GetMemberIdsToSet(int index) {
        return result.GetMemberIdsToSet(index);
      }
      public Builder SetMemberIdsToSet(int index, global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.memberIdsToSet_[index] = value;
        return this;
      }
      public Builder SetMemberIdsToSet(int index, global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.memberIdsToSet_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMemberIdsToSet(global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.memberIdsToSet_.Add(value);
        return this;
      }
      public Builder AddMemberIdsToSet(global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.memberIdsToSet_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMemberIdsToSet(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.LoginExchangeMemberId> values) {
        PrepareBuilder();
        result.memberIdsToSet_.Add(values);
        return this;
      }
      public Builder ClearMemberIdsToSet() {
        PrepareBuilder();
        result.memberIdsToSet_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> MemberIdsToRemoveList {
        get { return PrepareBuilder().memberIdsToRemove_; }
      }
      public int MemberIdsToRemoveCount {
        get { return result.MemberIdsToRemoveCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Tuple GetMemberIdsToRemove(int index) {
        return result.GetMemberIdsToRemove(index);
      }
      public Builder SetMemberIdsToRemove(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.memberIdsToRemove_[index] = value;
        return this;
      }
      public Builder SetMemberIdsToRemove(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.memberIdsToRemove_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddMemberIdsToRemove(global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.memberIdsToRemove_.Add(value);
        return this;
      }
      public Builder AddMemberIdsToRemove(global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.memberIdsToRemove_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeMemberIdsToRemove(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Tuple> values) {
        PrepareBuilder();
        result.memberIdsToRemove_.Add(values);
        return this;
      }
      public Builder ClearMemberIdsToRemove() {
        PrepareBuilder();
        result.memberIdsToRemove_.Clear();
        return this;
      }
    }
    static UpdateLoginExchangeMemberIdList() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateLoginExchangeMemberIdListResult : pb::GeneratedMessage<UpdateLoginExchangeMemberIdListResult, UpdateLoginExchangeMemberIdListResult.Builder> {
    private UpdateLoginExchangeMemberIdListResult() { }
    private static readonly UpdateLoginExchangeMemberIdListResult defaultInstance = new UpdateLoginExchangeMemberIdListResult().MakeReadOnly();
    private static readonly string[] _updateLoginExchangeMemberIdListResultFieldNames = new string[] {  };
    private static readonly uint[] _updateLoginExchangeMemberIdListResultFieldTags = new uint[] {  };
    public static UpdateLoginExchangeMemberIdListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateLoginExchangeMemberIdListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateLoginExchangeMemberIdListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateLoginExchangeMemberIdListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateLoginExchangeMemberIdListResult, UpdateLoginExchangeMemberIdListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateLoginExchangeMemberIdListResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateLoginExchangeMemberIdListResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateLoginExchangeMemberIdListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateLoginExchangeMemberIdListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateLoginExchangeMemberIdListResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateLoginExchangeMemberIdListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateLoginExchangeMemberIdListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateLoginExchangeMemberIdListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateLoginExchangeMemberIdListResult result;
      
      private UpdateLoginExchangeMemberIdListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateLoginExchangeMemberIdListResult original = result;
          result = new UpdateLoginExchangeMemberIdListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateLoginExchangeMemberIdListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdListResult.Descriptor; }
      }
      
      public override UpdateLoginExchangeMemberIdListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdListResult.DefaultInstance; }
      }
      
      public override UpdateLoginExchangeMemberIdListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateLoginExchangeMemberIdListResult) {
          return MergeFrom((UpdateLoginExchangeMemberIdListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateLoginExchangeMemberIdListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateLoginExchangeMemberIdListResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateLoginExchangeMemberIdListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateLoginExchangeMemberIdListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateLoginExchangeMemberIdListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ActivateLogin : pb::GeneratedMessage<ActivateLogin, ActivateLogin.Builder> {
    private ActivateLogin() { }
    private static readonly ActivateLogin defaultInstance = new ActivateLogin().MakeReadOnly();
    private static readonly string[] _activateLoginFieldNames = new string[] { "login_id" };
    private static readonly uint[] _activateLoginFieldTags = new uint[] { 10 };
    public static ActivateLogin DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActivateLogin DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActivateLogin ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ActivateLogin__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActivateLogin, ActivateLogin.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ActivateLogin__FieldAccessorTable; }
    }
    
    public const int LoginIdFieldNumber = 1;
    private bool hasLoginId;
    private string loginId_ = "";
    public bool HasLoginId {
      get { return hasLoginId; }
    }
    public string LoginId {
      get { return loginId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _activateLoginFieldNames;
      if (hasLoginId) {
        output.WriteString(1, field_names[0], LoginId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLoginId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LoginId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ActivateLogin ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActivateLogin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActivateLogin ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActivateLogin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActivateLogin ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActivateLogin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActivateLogin ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActivateLogin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActivateLogin ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActivateLogin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActivateLogin MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActivateLogin prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ActivateLogin, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActivateLogin cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActivateLogin result;
      
      private ActivateLogin PrepareBuilder() {
        if (resultIsReadOnly) {
          ActivateLogin original = result;
          result = new ActivateLogin();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActivateLogin MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ActivateLogin.Descriptor; }
      }
      
      public override ActivateLogin DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ActivateLogin.DefaultInstance; }
      }
      
      public override ActivateLogin BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActivateLogin) {
          return MergeFrom((ActivateLogin) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActivateLogin other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ActivateLogin.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginId) {
          LoginId = other.LoginId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_activateLoginFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _activateLoginFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLoginId = input.ReadString(ref result.loginId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginId {
        get { return result.hasLoginId; }
      }
      public string LoginId {
        get { return result.LoginId; }
        set { SetLoginId(value); }
      }
      public Builder SetLoginId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginId = true;
        result.loginId_ = value;
        return this;
      }
      public Builder ClearLoginId() {
        PrepareBuilder();
        result.hasLoginId = false;
        result.loginId_ = "";
        return this;
      }
    }
    static ActivateLogin() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeactivateLogin : pb::GeneratedMessage<DeactivateLogin, DeactivateLogin.Builder> {
    private DeactivateLogin() { }
    private static readonly DeactivateLogin defaultInstance = new DeactivateLogin().MakeReadOnly();
    private static readonly string[] _deactivateLoginFieldNames = new string[] { "expiration_time", "login_id" };
    private static readonly uint[] _deactivateLoginFieldTags = new uint[] { 16, 10 };
    public static DeactivateLogin DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeactivateLogin DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeactivateLogin ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_DeactivateLogin__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeactivateLogin, DeactivateLogin.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_DeactivateLogin__FieldAccessorTable; }
    }
    
    public const int LoginIdFieldNumber = 1;
    private bool hasLoginId;
    private string loginId_ = "";
    public bool HasLoginId {
      get { return hasLoginId; }
    }
    public string LoginId {
      get { return loginId_; }
    }
    
    public const int ExpirationTimeFieldNumber = 2;
    private bool hasExpirationTime;
    private long expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public long ExpirationTime {
      get { return expirationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deactivateLoginFieldNames;
      if (hasLoginId) {
        output.WriteString(1, field_names[1], LoginId);
      }
      if (hasExpirationTime) {
        output.WriteSInt64(2, field_names[0], ExpirationTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLoginId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LoginId);
      }
      if (hasExpirationTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(2, ExpirationTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeactivateLogin ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeactivateLogin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeactivateLogin ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeactivateLogin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeactivateLogin ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeactivateLogin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeactivateLogin ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeactivateLogin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeactivateLogin ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeactivateLogin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeactivateLogin MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeactivateLogin prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeactivateLogin, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeactivateLogin cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeactivateLogin result;
      
      private DeactivateLogin PrepareBuilder() {
        if (resultIsReadOnly) {
          DeactivateLogin original = result;
          result = new DeactivateLogin();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeactivateLogin MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.DeactivateLogin.Descriptor; }
      }
      
      public override DeactivateLogin DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.DeactivateLogin.DefaultInstance; }
      }
      
      public override DeactivateLogin BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeactivateLogin) {
          return MergeFrom((DeactivateLogin) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeactivateLogin other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.DeactivateLogin.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginId) {
          LoginId = other.LoginId;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deactivateLoginFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deactivateLoginFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLoginId = input.ReadString(ref result.loginId_);
              break;
            }
            case 16: {
              result.hasExpirationTime = input.ReadSInt64(ref result.expirationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginId {
        get { return result.hasLoginId; }
      }
      public string LoginId {
        get { return result.LoginId; }
        set { SetLoginId(value); }
      }
      public Builder SetLoginId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginId = true;
        result.loginId_ = value;
        return this;
      }
      public Builder ClearLoginId() {
        PrepareBuilder();
        result.hasLoginId = false;
        result.loginId_ = "";
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public long ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(long value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0;
        return this;
      }
    }
    static DeactivateLogin() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ActivateLoginResult : pb::GeneratedMessage<ActivateLoginResult, ActivateLoginResult.Builder> {
    private ActivateLoginResult() { }
    private static readonly ActivateLoginResult defaultInstance = new ActivateLoginResult().MakeReadOnly();
    private static readonly string[] _activateLoginResultFieldNames = new string[] {  };
    private static readonly uint[] _activateLoginResultFieldTags = new uint[] {  };
    public static ActivateLoginResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ActivateLoginResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ActivateLoginResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ActivateLoginResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ActivateLoginResult, ActivateLoginResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_ActivateLoginResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _activateLoginResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ActivateLoginResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActivateLoginResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActivateLoginResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ActivateLoginResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ActivateLoginResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActivateLoginResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ActivateLoginResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ActivateLoginResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ActivateLoginResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ActivateLoginResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ActivateLoginResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ActivateLoginResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ActivateLoginResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ActivateLoginResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ActivateLoginResult result;
      
      private ActivateLoginResult PrepareBuilder() {
        if (resultIsReadOnly) {
          ActivateLoginResult original = result;
          result = new ActivateLoginResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ActivateLoginResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ActivateLoginResult.Descriptor; }
      }
      
      public override ActivateLoginResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ActivateLoginResult.DefaultInstance; }
      }
      
      public override ActivateLoginResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ActivateLoginResult) {
          return MergeFrom((ActivateLoginResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ActivateLoginResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ActivateLoginResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_activateLoginResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _activateLoginResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static ActivateLoginResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DeactivateLoginResult : pb::GeneratedMessage<DeactivateLoginResult, DeactivateLoginResult.Builder> {
    private DeactivateLoginResult() { }
    private static readonly DeactivateLoginResult defaultInstance = new DeactivateLoginResult().MakeReadOnly();
    private static readonly string[] _deactivateLoginResultFieldNames = new string[] {  };
    private static readonly uint[] _deactivateLoginResultFieldTags = new uint[] {  };
    public static DeactivateLoginResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DeactivateLoginResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DeactivateLoginResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_DeactivateLoginResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DeactivateLoginResult, DeactivateLoginResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_DeactivateLoginResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _deactivateLoginResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DeactivateLoginResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeactivateLoginResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeactivateLoginResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DeactivateLoginResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DeactivateLoginResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeactivateLoginResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DeactivateLoginResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DeactivateLoginResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DeactivateLoginResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DeactivateLoginResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DeactivateLoginResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DeactivateLoginResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DeactivateLoginResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DeactivateLoginResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DeactivateLoginResult result;
      
      private DeactivateLoginResult PrepareBuilder() {
        if (resultIsReadOnly) {
          DeactivateLoginResult original = result;
          result = new DeactivateLoginResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DeactivateLoginResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.DeactivateLoginResult.Descriptor; }
      }
      
      public override DeactivateLoginResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.DeactivateLoginResult.DefaultInstance; }
      }
      
      public override DeactivateLoginResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DeactivateLoginResult) {
          return MergeFrom((DeactivateLoginResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DeactivateLoginResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.DeactivateLoginResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_deactivateLoginResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _deactivateLoginResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static DeactivateLoginResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EraseCurrentCredentials : pb::GeneratedMessage<EraseCurrentCredentials, EraseCurrentCredentials.Builder> {
    private EraseCurrentCredentials() { }
    private static readonly EraseCurrentCredentials defaultInstance = new EraseCurrentCredentials().MakeReadOnly();
    private static readonly string[] _eraseCurrentCredentialsFieldNames = new string[] { "credential_types", "login_id" };
    private static readonly uint[] _eraseCurrentCredentialsFieldTags = new uint[] { 16, 10 };
    public static EraseCurrentCredentials DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EraseCurrentCredentials DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EraseCurrentCredentials ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EraseCurrentCredentials__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EraseCurrentCredentials, EraseCurrentCredentials.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EraseCurrentCredentials__FieldAccessorTable; }
    }
    
    public const int LoginIdFieldNumber = 1;
    private bool hasLoginId;
    private string loginId_ = "";
    public bool HasLoginId {
      get { return hasLoginId; }
    }
    public string LoginId {
      get { return loginId_; }
    }
    
    public const int CredentialTypesFieldNumber = 2;
    private pbc::PopsicleList<uint> credentialTypes_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> CredentialTypesList {
      get { return pbc::Lists.AsReadOnly(credentialTypes_); }
    }
    public int CredentialTypesCount {
      get { return credentialTypes_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetCredentialTypes(int index) {
      return credentialTypes_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _eraseCurrentCredentialsFieldNames;
      if (hasLoginId) {
        output.WriteString(1, field_names[1], LoginId);
      }
      if (credentialTypes_.Count > 0) {
        output.WriteUInt32Array(2, field_names[0], credentialTypes_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLoginId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LoginId);
      }
      {
        int dataSize = 0;
        foreach (uint element in CredentialTypesList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * credentialTypes_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EraseCurrentCredentials ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EraseCurrentCredentials ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EraseCurrentCredentials ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EraseCurrentCredentials ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EraseCurrentCredentials ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EraseCurrentCredentials ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EraseCurrentCredentials ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EraseCurrentCredentials ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EraseCurrentCredentials ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EraseCurrentCredentials ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EraseCurrentCredentials MakeReadOnly() {
      credentialTypes_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EraseCurrentCredentials prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EraseCurrentCredentials, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EraseCurrentCredentials cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EraseCurrentCredentials result;
      
      private EraseCurrentCredentials PrepareBuilder() {
        if (resultIsReadOnly) {
          EraseCurrentCredentials original = result;
          result = new EraseCurrentCredentials();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EraseCurrentCredentials MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentials.Descriptor; }
      }
      
      public override EraseCurrentCredentials DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentials.DefaultInstance; }
      }
      
      public override EraseCurrentCredentials BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EraseCurrentCredentials) {
          return MergeFrom((EraseCurrentCredentials) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EraseCurrentCredentials other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentials.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginId) {
          LoginId = other.LoginId;
        }
        if (other.credentialTypes_.Count != 0) {
          result.credentialTypes_.Add(other.credentialTypes_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_eraseCurrentCredentialsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _eraseCurrentCredentialsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLoginId = input.ReadString(ref result.loginId_);
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt32Array(tag, field_name, result.credentialTypes_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginId {
        get { return result.hasLoginId; }
      }
      public string LoginId {
        get { return result.LoginId; }
        set { SetLoginId(value); }
      }
      public Builder SetLoginId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginId = true;
        result.loginId_ = value;
        return this;
      }
      public Builder ClearLoginId() {
        PrepareBuilder();
        result.hasLoginId = false;
        result.loginId_ = "";
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> CredentialTypesList {
        get { return PrepareBuilder().credentialTypes_; }
      }
      public int CredentialTypesCount {
        get { return result.CredentialTypesCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetCredentialTypes(int index) {
        return result.GetCredentialTypes(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCredentialTypes(int index, uint value) {
        PrepareBuilder();
        result.credentialTypes_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddCredentialTypes(uint value) {
        PrepareBuilder();
        result.credentialTypes_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeCredentialTypes(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.credentialTypes_.Add(values);
        return this;
      }
      public Builder ClearCredentialTypes() {
        PrepareBuilder();
        result.credentialTypes_.Clear();
        return this;
      }
    }
    static EraseCurrentCredentials() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class EraseCurrentCredentialsResult : pb::GeneratedMessage<EraseCurrentCredentialsResult, EraseCurrentCredentialsResult.Builder> {
    private EraseCurrentCredentialsResult() { }
    private static readonly EraseCurrentCredentialsResult defaultInstance = new EraseCurrentCredentialsResult().MakeReadOnly();
    private static readonly string[] _eraseCurrentCredentialsResultFieldNames = new string[] {  };
    private static readonly uint[] _eraseCurrentCredentialsResultFieldTags = new uint[] {  };
    public static EraseCurrentCredentialsResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EraseCurrentCredentialsResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EraseCurrentCredentialsResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EraseCurrentCredentialsResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EraseCurrentCredentialsResult, EraseCurrentCredentialsResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_EraseCurrentCredentialsResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _eraseCurrentCredentialsResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static EraseCurrentCredentialsResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EraseCurrentCredentialsResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EraseCurrentCredentialsResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EraseCurrentCredentialsResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EraseCurrentCredentialsResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EraseCurrentCredentialsResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EraseCurrentCredentialsResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EraseCurrentCredentialsResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EraseCurrentCredentialsResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EraseCurrentCredentialsResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EraseCurrentCredentialsResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EraseCurrentCredentialsResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<EraseCurrentCredentialsResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EraseCurrentCredentialsResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EraseCurrentCredentialsResult result;
      
      private EraseCurrentCredentialsResult PrepareBuilder() {
        if (resultIsReadOnly) {
          EraseCurrentCredentialsResult original = result;
          result = new EraseCurrentCredentialsResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EraseCurrentCredentialsResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentialsResult.Descriptor; }
      }
      
      public override EraseCurrentCredentialsResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentialsResult.DefaultInstance; }
      }
      
      public override EraseCurrentCredentialsResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EraseCurrentCredentialsResult) {
          return MergeFrom((EraseCurrentCredentialsResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EraseCurrentCredentialsResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.EraseCurrentCredentialsResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_eraseCurrentCredentialsResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _eraseCurrentCredentialsResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static EraseCurrentCredentialsResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SearchOption : pb::GeneratedMessage<SearchOption, SearchOption.Builder> {
    private SearchOption() { }
    private static readonly SearchOption defaultInstance = new SearchOption().MakeReadOnly();
    private static readonly string[] _searchOptionFieldNames = new string[] { "criteria", "matching_rule", "text" };
    private static readonly uint[] _searchOptionFieldTags = new uint[] { 16, 24, 10 };
    public static SearchOption DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SearchOption DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SearchOption ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_SearchOption__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SearchOption, SearchOption.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_SearchOption__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum MatchingRule {
        CONTAINS = 0,
        STARTS_WITH = 1,
        ENDS_WITH = 2,
        EXACT_EQUALITY = 3,
      }
      
    }
    #endregion
    
    public const int TextFieldNumber = 1;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int CriteriaFieldNumber = 2;
    private pbc::PopsicleList<uint> criteria_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> CriteriaList {
      get { return pbc::Lists.AsReadOnly(criteria_); }
    }
    public int CriteriaCount {
      get { return criteria_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetCriteria(int index) {
      return criteria_[index];
    }
    
    public const int MatchingRuleFieldNumber = 3;
    private bool hasMatchingRule;
    private uint matchingRule_;
    public bool HasMatchingRule {
      get { return hasMatchingRule; }
    }
    [global::System.CLSCompliant(false)]
    public uint MatchingRule {
      get { return matchingRule_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _searchOptionFieldNames;
      if (hasText) {
        output.WriteString(1, field_names[2], Text);
      }
      if (criteria_.Count > 0) {
        output.WriteUInt32Array(2, field_names[0], criteria_);
      }
      if (hasMatchingRule) {
        output.WriteUInt32(3, field_names[1], MatchingRule);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Text);
      }
      {
        int dataSize = 0;
        foreach (uint element in CriteriaList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * criteria_.Count;
      }
      if (hasMatchingRule) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, MatchingRule);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SearchOption ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchOption ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchOption ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SearchOption ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SearchOption ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchOption ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SearchOption ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SearchOption ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SearchOption ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SearchOption ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SearchOption MakeReadOnly() {
      criteria_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SearchOption prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SearchOption, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SearchOption cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SearchOption result;
      
      private SearchOption PrepareBuilder() {
        if (resultIsReadOnly) {
          SearchOption original = result;
          result = new SearchOption();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SearchOption MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SearchOption.Descriptor; }
      }
      
      public override SearchOption DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SearchOption.DefaultInstance; }
      }
      
      public override SearchOption BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SearchOption) {
          return MergeFrom((SearchOption) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SearchOption other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.SearchOption.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.criteria_.Count != 0) {
          result.criteria_.Add(other.criteria_);
        }
        if (other.HasMatchingRule) {
          MatchingRule = other.MatchingRule;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_searchOptionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _searchOptionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt32Array(tag, field_name, result.criteria_);
              break;
            }
            case 24: {
              result.hasMatchingRule = input.ReadUInt32(ref result.matchingRule_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> CriteriaList {
        get { return PrepareBuilder().criteria_; }
      }
      public int CriteriaCount {
        get { return result.CriteriaCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetCriteria(int index) {
        return result.GetCriteria(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCriteria(int index, uint value) {
        PrepareBuilder();
        result.criteria_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddCriteria(uint value) {
        PrepareBuilder();
        result.criteria_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeCriteria(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.criteria_.Add(values);
        return this;
      }
      public Builder ClearCriteria() {
        PrepareBuilder();
        result.criteria_.Clear();
        return this;
      }
      
      public bool HasMatchingRule {
        get { return result.hasMatchingRule; }
      }
      [global::System.CLSCompliant(false)]
      public uint MatchingRule {
        get { return result.MatchingRule; }
        set { SetMatchingRule(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMatchingRule(uint value) {
        PrepareBuilder();
        result.hasMatchingRule = true;
        result.matchingRule_ = value;
        return this;
      }
      public Builder ClearMatchingRule() {
        PrepareBuilder();
        result.hasMatchingRule = false;
        result.matchingRule_ = 0;
        return this;
      }
    }
    static SearchOption() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TerminateLoginSession : pb::GeneratedMessage<TerminateLoginSession, TerminateLoginSession.Builder> {
    private TerminateLoginSession() { }
    private static readonly TerminateLoginSession defaultInstance = new TerminateLoginSession().MakeReadOnly();
    private static readonly string[] _terminateLoginSessionFieldNames = new string[] { "login_id" };
    private static readonly uint[] _terminateLoginSessionFieldTags = new uint[] { 10 };
    public static TerminateLoginSession DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TerminateLoginSession DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TerminateLoginSession ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_TerminateLoginSession__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TerminateLoginSession, TerminateLoginSession.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_TerminateLoginSession__FieldAccessorTable; }
    }
    
    public const int LoginIdFieldNumber = 1;
    private bool hasLoginId;
    private string loginId_ = "";
    public bool HasLoginId {
      get { return hasLoginId; }
    }
    public string LoginId {
      get { return loginId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _terminateLoginSessionFieldNames;
      if (hasLoginId) {
        output.WriteString(1, field_names[0], LoginId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLoginId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LoginId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TerminateLoginSession ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TerminateLoginSession ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TerminateLoginSession ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TerminateLoginSession ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TerminateLoginSession ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TerminateLoginSession ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TerminateLoginSession ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TerminateLoginSession ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TerminateLoginSession ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TerminateLoginSession ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TerminateLoginSession MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TerminateLoginSession prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TerminateLoginSession, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TerminateLoginSession cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TerminateLoginSession result;
      
      private TerminateLoginSession PrepareBuilder() {
        if (resultIsReadOnly) {
          TerminateLoginSession original = result;
          result = new TerminateLoginSession();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TerminateLoginSession MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSession.Descriptor; }
      }
      
      public override TerminateLoginSession DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSession.DefaultInstance; }
      }
      
      public override TerminateLoginSession BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TerminateLoginSession) {
          return MergeFrom((TerminateLoginSession) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TerminateLoginSession other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSession.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLoginId) {
          LoginId = other.LoginId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_terminateLoginSessionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _terminateLoginSessionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLoginId = input.ReadString(ref result.loginId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLoginId {
        get { return result.hasLoginId; }
      }
      public string LoginId {
        get { return result.LoginId; }
        set { SetLoginId(value); }
      }
      public Builder SetLoginId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginId = true;
        result.loginId_ = value;
        return this;
      }
      public Builder ClearLoginId() {
        PrepareBuilder();
        result.hasLoginId = false;
        result.loginId_ = "";
        return this;
      }
    }
    static TerminateLoginSession() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TerminateLoginSessionResult : pb::GeneratedMessage<TerminateLoginSessionResult, TerminateLoginSessionResult.Builder> {
    private TerminateLoginSessionResult() { }
    private static readonly TerminateLoginSessionResult defaultInstance = new TerminateLoginSessionResult().MakeReadOnly();
    private static readonly string[] _terminateLoginSessionResultFieldNames = new string[] {  };
    private static readonly uint[] _terminateLoginSessionResultFieldTags = new uint[] {  };
    public static TerminateLoginSessionResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TerminateLoginSessionResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TerminateLoginSessionResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_TerminateLoginSessionResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TerminateLoginSessionResult, TerminateLoginSessionResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_TerminateLoginSessionResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _terminateLoginSessionResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TerminateLoginSessionResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TerminateLoginSessionResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TerminateLoginSessionResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TerminateLoginSessionResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TerminateLoginSessionResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TerminateLoginSessionResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TerminateLoginSessionResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TerminateLoginSessionResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TerminateLoginSessionResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TerminateLoginSessionResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TerminateLoginSessionResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TerminateLoginSessionResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TerminateLoginSessionResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TerminateLoginSessionResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TerminateLoginSessionResult result;
      
      private TerminateLoginSessionResult PrepareBuilder() {
        if (resultIsReadOnly) {
          TerminateLoginSessionResult original = result;
          result = new TerminateLoginSessionResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TerminateLoginSessionResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSessionResult.Descriptor; }
      }
      
      public override TerminateLoginSessionResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSessionResult.DefaultInstance; }
      }
      
      public override TerminateLoginSessionResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TerminateLoginSessionResult) {
          return MergeFrom((TerminateLoginSessionResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TerminateLoginSessionResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.TerminateLoginSessionResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_terminateLoginSessionResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _terminateLoginSessionResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static TerminateLoginSessionResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NamedEntity : pb::GeneratedMessage<NamedEntity, NamedEntity.Builder> {
    private NamedEntity() { }
    private static readonly NamedEntity defaultInstance = new NamedEntity().MakeReadOnly();
    private static readonly string[] _namedEntityFieldNames = new string[] { "id", "name" };
    private static readonly uint[] _namedEntityFieldTags = new uint[] { 10, 18 };
    public static NamedEntity DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NamedEntity DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NamedEntity ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_NamedEntity__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NamedEntity, NamedEntity.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_NamedEntity__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private global::CmsApiSamples.Protocol.CMSApi.Text name_;
    public bool HasName {
      get { return hasName; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Name {
      get { return name_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasName) {
          if (!Name.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _namedEntityFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      if (hasName) {
        output.WriteMessage(2, field_names[1], Name);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Name);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NamedEntity ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NamedEntity ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NamedEntity ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NamedEntity ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NamedEntity ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NamedEntity ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NamedEntity ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NamedEntity ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NamedEntity ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NamedEntity ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NamedEntity MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NamedEntity prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NamedEntity, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NamedEntity cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NamedEntity result;
      
      private NamedEntity PrepareBuilder() {
        if (resultIsReadOnly) {
          NamedEntity original = result;
          result = new NamedEntity();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NamedEntity MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.NamedEntity.Descriptor; }
      }
      
      public override NamedEntity DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.NamedEntity.DefaultInstance; }
      }
      
      public override NamedEntity BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NamedEntity) {
          return MergeFrom((NamedEntity) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NamedEntity other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.NamedEntity.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasName) {
          MergeName(other.Name);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_namedEntityFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _namedEntityFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasName) {
                subBuilder.MergeFrom(Name);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Name = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasName {
       get { return result.hasName; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = builderForValue.Build();
        return this;
      }
      public Builder MergeName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasName &&
            result.name_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.name_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.name_).MergeFrom(value).BuildPartial();
        } else {
          result.name_ = value;
        }
        result.hasName = true;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = null;
        return this;
      }
    }
    static NamedEntity() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateEntityLinks : pb::GeneratedMessage<UpdateEntityLinks, UpdateEntityLinks.Builder> {
    private UpdateEntityLinks() { }
    private static readonly UpdateEntityLinks defaultInstance = new UpdateEntityLinks().MakeReadOnly();
    private static readonly string[] _updateEntityLinksFieldNames = new string[] { "links_to_remove", "links_to_set" };
    private static readonly uint[] _updateEntityLinksFieldTags = new uint[] { 18, 10 };
    public static UpdateEntityLinks DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateEntityLinks DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateEntityLinks ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateEntityLinks__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateEntityLinks, UpdateEntityLinks.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateEntityLinks__FieldAccessorTable; }
    }
    
    public const int LinksToSetFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> linksToSet_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Tuple> LinksToSetList {
      get { return linksToSet_; }
    }
    public int LinksToSetCount {
      get { return linksToSet_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Tuple GetLinksToSet(int index) {
      return linksToSet_[index];
    }
    
    public const int LinksToRemoveFieldNumber = 2;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> linksToRemove_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Tuple> LinksToRemoveList {
      get { return linksToRemove_; }
    }
    public int LinksToRemoveCount {
      get { return linksToRemove_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Tuple GetLinksToRemove(int index) {
      return linksToRemove_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateEntityLinksFieldNames;
      if (linksToSet_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], linksToSet_);
      }
      if (linksToRemove_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], linksToRemove_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.Tuple element in LinksToSetList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.Tuple element in LinksToRemoveList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateEntityLinks ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateEntityLinks ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateEntityLinks ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateEntityLinks ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateEntityLinks ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateEntityLinks ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateEntityLinks ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateEntityLinks ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateEntityLinks ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateEntityLinks ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateEntityLinks MakeReadOnly() {
      linksToSet_.MakeReadOnly();
      linksToRemove_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateEntityLinks prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateEntityLinks, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateEntityLinks cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateEntityLinks result;
      
      private UpdateEntityLinks PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateEntityLinks original = result;
          result = new UpdateEntityLinks();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateEntityLinks MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinks.Descriptor; }
      }
      
      public override UpdateEntityLinks DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinks.DefaultInstance; }
      }
      
      public override UpdateEntityLinks BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateEntityLinks) {
          return MergeFrom((UpdateEntityLinks) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateEntityLinks other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinks.DefaultInstance) return this;
        PrepareBuilder();
        if (other.linksToSet_.Count != 0) {
          result.linksToSet_.Add(other.linksToSet_);
        }
        if (other.linksToRemove_.Count != 0) {
          result.linksToRemove_.Add(other.linksToRemove_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateEntityLinksFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateEntityLinksFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.linksToSet_, global::CmsApiSamples.Protocol.CMSApi.Tuple.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.linksToRemove_, global::CmsApiSamples.Protocol.CMSApi.Tuple.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> LinksToSetList {
        get { return PrepareBuilder().linksToSet_; }
      }
      public int LinksToSetCount {
        get { return result.LinksToSetCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Tuple GetLinksToSet(int index) {
        return result.GetLinksToSet(index);
      }
      public Builder SetLinksToSet(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.linksToSet_[index] = value;
        return this;
      }
      public Builder SetLinksToSet(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.linksToSet_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLinksToSet(global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.linksToSet_.Add(value);
        return this;
      }
      public Builder AddLinksToSet(global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.linksToSet_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLinksToSet(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Tuple> values) {
        PrepareBuilder();
        result.linksToSet_.Add(values);
        return this;
      }
      public Builder ClearLinksToSet() {
        PrepareBuilder();
        result.linksToSet_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> LinksToRemoveList {
        get { return PrepareBuilder().linksToRemove_; }
      }
      public int LinksToRemoveCount {
        get { return result.LinksToRemoveCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Tuple GetLinksToRemove(int index) {
        return result.GetLinksToRemove(index);
      }
      public Builder SetLinksToRemove(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.linksToRemove_[index] = value;
        return this;
      }
      public Builder SetLinksToRemove(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.linksToRemove_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLinksToRemove(global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.linksToRemove_.Add(value);
        return this;
      }
      public Builder AddLinksToRemove(global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.linksToRemove_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLinksToRemove(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Tuple> values) {
        PrepareBuilder();
        result.linksToRemove_.Add(values);
        return this;
      }
      public Builder ClearLinksToRemove() {
        PrepareBuilder();
        result.linksToRemove_.Clear();
        return this;
      }
    }
    static UpdateEntityLinks() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateEntityLinksResult : pb::GeneratedMessage<UpdateEntityLinksResult, UpdateEntityLinksResult.Builder> {
    private UpdateEntityLinksResult() { }
    private static readonly UpdateEntityLinksResult defaultInstance = new UpdateEntityLinksResult().MakeReadOnly();
    private static readonly string[] _updateEntityLinksResultFieldNames = new string[] {  };
    private static readonly uint[] _updateEntityLinksResultFieldTags = new uint[] {  };
    public static UpdateEntityLinksResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateEntityLinksResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateEntityLinksResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateEntityLinksResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateEntityLinksResult, UpdateEntityLinksResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_UpdateEntityLinksResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateEntityLinksResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateEntityLinksResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateEntityLinksResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateEntityLinksResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateEntityLinksResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateEntityLinksResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateEntityLinksResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateEntityLinksResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateEntityLinksResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateEntityLinksResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateEntityLinksResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateEntityLinksResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateEntityLinksResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateEntityLinksResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateEntityLinksResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateEntityLinksResult result;
      
      private UpdateEntityLinksResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateEntityLinksResult original = result;
          result = new UpdateEntityLinksResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateEntityLinksResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinksResult.Descriptor; }
      }
      
      public override UpdateEntityLinksResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinksResult.DefaultInstance; }
      }
      
      public override UpdateEntityLinksResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateEntityLinksResult) {
          return MergeFrom((UpdateEntityLinksResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateEntityLinksResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateEntityLinksResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateEntityLinksResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateEntityLinksResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateEntityLinksResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LinkedEntityListRequest : pb::GeneratedMessage<LinkedEntityListRequest, LinkedEntityListRequest.Builder> {
    private LinkedEntityListRequest() { }
    private static readonly LinkedEntityListRequest defaultInstance = new LinkedEntityListRequest().MakeReadOnly();
    private static readonly string[] _linkedEntityListRequestFieldNames = new string[] { "id", "top" };
    private static readonly uint[] _linkedEntityListRequestFieldTags = new uint[] { 10, 16 };
    public static LinkedEntityListRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LinkedEntityListRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LinkedEntityListRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LinkedEntityListRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LinkedEntityListRequest, LinkedEntityListRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LinkedEntityListRequest__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int TopFieldNumber = 2;
    private bool hasTop;
    private uint top_;
    public bool HasTop {
      get { return hasTop; }
    }
    [global::System.CLSCompliant(false)]
    public uint Top {
      get { return top_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _linkedEntityListRequestFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      if (hasTop) {
        output.WriteUInt32(2, field_names[1], Top);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      if (hasTop) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Top);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LinkedEntityListRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LinkedEntityListRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LinkedEntityListRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LinkedEntityListRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LinkedEntityListRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LinkedEntityListRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LinkedEntityListRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LinkedEntityListRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LinkedEntityListRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LinkedEntityListRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LinkedEntityListRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LinkedEntityListRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LinkedEntityListRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LinkedEntityListRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LinkedEntityListRequest result;
      
      private LinkedEntityListRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LinkedEntityListRequest original = result;
          result = new LinkedEntityListRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LinkedEntityListRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListRequest.Descriptor; }
      }
      
      public override LinkedEntityListRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListRequest.DefaultInstance; }
      }
      
      public override LinkedEntityListRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LinkedEntityListRequest) {
          return MergeFrom((LinkedEntityListRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LinkedEntityListRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasTop) {
          Top = other.Top;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_linkedEntityListRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _linkedEntityListRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 16: {
              result.hasTop = input.ReadUInt32(ref result.top_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasTop {
        get { return result.hasTop; }
      }
      [global::System.CLSCompliant(false)]
      public uint Top {
        get { return result.Top; }
        set { SetTop(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTop(uint value) {
        PrepareBuilder();
        result.hasTop = true;
        result.top_ = value;
        return this;
      }
      public Builder ClearTop() {
        PrepareBuilder();
        result.hasTop = false;
        result.top_ = 0;
        return this;
      }
    }
    static LinkedEntityListRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LinkedEntityListResult : pb::GeneratedMessage<LinkedEntityListResult, LinkedEntityListResult.Builder> {
    private LinkedEntityListResult() { }
    private static readonly LinkedEntityListResult defaultInstance = new LinkedEntityListResult().MakeReadOnly();
    private static readonly string[] _linkedEntityListResultFieldNames = new string[] { "entities", "is_complete" };
    private static readonly uint[] _linkedEntityListResultFieldTags = new uint[] { 10, 16 };
    public static LinkedEntityListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LinkedEntityListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LinkedEntityListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LinkedEntityListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LinkedEntityListResult, LinkedEntityListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_LinkedEntityListResult__FieldAccessorTable; }
    }
    
    public const int EntitiesFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.NamedEntity> entities_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.NamedEntity>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.NamedEntity> EntitiesList {
      get { return entities_; }
    }
    public int EntitiesCount {
      get { return entities_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.NamedEntity GetEntities(int index) {
      return entities_[index];
    }
    
    public const int IsCompleteFieldNumber = 2;
    private bool hasIsComplete;
    private bool isComplete_ = true;
    public bool HasIsComplete {
      get { return hasIsComplete; }
    }
    public bool IsComplete {
      get { return isComplete_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.NamedEntity element in EntitiesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _linkedEntityListResultFieldNames;
      if (entities_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], entities_);
      }
      if (hasIsComplete) {
        output.WriteBool(2, field_names[1], IsComplete);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.NamedEntity element in EntitiesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasIsComplete) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsComplete);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LinkedEntityListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LinkedEntityListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LinkedEntityListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LinkedEntityListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LinkedEntityListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LinkedEntityListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LinkedEntityListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LinkedEntityListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LinkedEntityListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LinkedEntityListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LinkedEntityListResult MakeReadOnly() {
      entities_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LinkedEntityListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LinkedEntityListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LinkedEntityListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LinkedEntityListResult result;
      
      private LinkedEntityListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          LinkedEntityListResult original = result;
          result = new LinkedEntityListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LinkedEntityListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListResult.Descriptor; }
      }
      
      public override LinkedEntityListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListResult.DefaultInstance; }
      }
      
      public override LinkedEntityListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LinkedEntityListResult) {
          return MergeFrom((LinkedEntityListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LinkedEntityListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LinkedEntityListResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.entities_.Count != 0) {
          result.entities_.Add(other.entities_);
        }
        if (other.HasIsComplete) {
          IsComplete = other.IsComplete;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_linkedEntityListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _linkedEntityListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.entities_, global::CmsApiSamples.Protocol.CMSApi.NamedEntity.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasIsComplete = input.ReadBool(ref result.isComplete_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.NamedEntity> EntitiesList {
        get { return PrepareBuilder().entities_; }
      }
      public int EntitiesCount {
        get { return result.EntitiesCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.NamedEntity GetEntities(int index) {
        return result.GetEntities(index);
      }
      public Builder SetEntities(int index, global::CmsApiSamples.Protocol.CMSApi.NamedEntity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entities_[index] = value;
        return this;
      }
      public Builder SetEntities(int index, global::CmsApiSamples.Protocol.CMSApi.NamedEntity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entities_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddEntities(global::CmsApiSamples.Protocol.CMSApi.NamedEntity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.entities_.Add(value);
        return this;
      }
      public Builder AddEntities(global::CmsApiSamples.Protocol.CMSApi.NamedEntity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.entities_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeEntities(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.NamedEntity> values) {
        PrepareBuilder();
        result.entities_.Add(values);
        return this;
      }
      public Builder ClearEntities() {
        PrepareBuilder();
        result.entities_.Clear();
        return this;
      }
      
      public bool HasIsComplete {
        get { return result.hasIsComplete; }
      }
      public bool IsComplete {
        get { return result.IsComplete; }
        set { SetIsComplete(value); }
      }
      public Builder SetIsComplete(bool value) {
        PrepareBuilder();
        result.hasIsComplete = true;
        result.isComplete_ = value;
        return this;
      }
      public Builder ClearIsComplete() {
        PrepareBuilder();
        result.hasIsComplete = false;
        result.isComplete_ = true;
        return this;
      }
    }
    static LinkedEntityListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SalesSeriesListResult : pb::GeneratedMessage<SalesSeriesListResult, SalesSeriesListResult.Builder> {
    private SalesSeriesListResult() { }
    private static readonly SalesSeriesListResult defaultInstance = new SalesSeriesListResult().MakeReadOnly();
    private static readonly string[] _salesSeriesListResultFieldNames = new string[] { "is_complete", "sales_series" };
    private static readonly uint[] _salesSeriesListResultFieldTags = new uint[] { 16, 10 };
    public static SalesSeriesListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SalesSeriesListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SalesSeriesListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_SalesSeriesListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SalesSeriesListResult, SalesSeriesListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_SalesSeriesListResult__FieldAccessorTable; }
    }
    
    public const int SalesSeriesFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SalesSeries> salesSeries_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SalesSeries>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.SalesSeries> SalesSeriesList {
      get { return salesSeries_; }
    }
    public int SalesSeriesCount {
      get { return salesSeries_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.SalesSeries GetSalesSeries(int index) {
      return salesSeries_[index];
    }
    
    public const int IsCompleteFieldNumber = 2;
    private bool hasIsComplete;
    private bool isComplete_ = true;
    public bool HasIsComplete {
      get { return hasIsComplete; }
    }
    public bool IsComplete {
      get { return isComplete_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _salesSeriesListResultFieldNames;
      if (salesSeries_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], salesSeries_);
      }
      if (hasIsComplete) {
        output.WriteBool(2, field_names[0], IsComplete);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.SalesSeries element in SalesSeriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasIsComplete) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsComplete);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SalesSeriesListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SalesSeriesListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SalesSeriesListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SalesSeriesListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SalesSeriesListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SalesSeriesListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SalesSeriesListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SalesSeriesListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SalesSeriesListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SalesSeriesListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SalesSeriesListResult MakeReadOnly() {
      salesSeries_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SalesSeriesListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SalesSeriesListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SalesSeriesListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SalesSeriesListResult result;
      
      private SalesSeriesListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          SalesSeriesListResult original = result;
          result = new SalesSeriesListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SalesSeriesListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SalesSeriesListResult.Descriptor; }
      }
      
      public override SalesSeriesListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SalesSeriesListResult.DefaultInstance; }
      }
      
      public override SalesSeriesListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SalesSeriesListResult) {
          return MergeFrom((SalesSeriesListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SalesSeriesListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.SalesSeriesListResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.salesSeries_.Count != 0) {
          result.salesSeries_.Add(other.salesSeries_);
        }
        if (other.HasIsComplete) {
          IsComplete = other.IsComplete;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_salesSeriesListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _salesSeriesListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.salesSeries_, global::CmsApiSamples.Protocol.CMSApi.SalesSeries.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasIsComplete = input.ReadBool(ref result.isComplete_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.SalesSeries> SalesSeriesList {
        get { return PrepareBuilder().salesSeries_; }
      }
      public int SalesSeriesCount {
        get { return result.SalesSeriesCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.SalesSeries GetSalesSeries(int index) {
        return result.GetSalesSeries(index);
      }
      public Builder SetSalesSeries(int index, global::CmsApiSamples.Protocol.CMSApi.SalesSeries value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.salesSeries_[index] = value;
        return this;
      }
      public Builder SetSalesSeries(int index, global::CmsApiSamples.Protocol.CMSApi.SalesSeries.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.salesSeries_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSalesSeries(global::CmsApiSamples.Protocol.CMSApi.SalesSeries value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.salesSeries_.Add(value);
        return this;
      }
      public Builder AddSalesSeries(global::CmsApiSamples.Protocol.CMSApi.SalesSeries.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.salesSeries_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSalesSeries(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.SalesSeries> values) {
        PrepareBuilder();
        result.salesSeries_.Add(values);
        return this;
      }
      public Builder ClearSalesSeries() {
        PrepareBuilder();
        result.salesSeries_.Clear();
        return this;
      }
      
      public bool HasIsComplete {
        get { return result.hasIsComplete; }
      }
      public bool IsComplete {
        get { return result.IsComplete; }
        set { SetIsComplete(value); }
      }
      public Builder SetIsComplete(bool value) {
        PrepareBuilder();
        result.hasIsComplete = true;
        result.isComplete_ = value;
        return this;
      }
      public Builder ClearIsComplete() {
        PrepareBuilder();
        result.hasIsComplete = false;
        result.isComplete_ = true;
        return this;
      }
    }
    static SalesSeriesListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SalesSeries : pb::GeneratedMessage<SalesSeries, SalesSeries.Builder> {
    private SalesSeries() { }
    private static readonly SalesSeries defaultInstance = new SalesSeries().MakeReadOnly();
    private static readonly string[] _salesSeriesFieldNames = new string[] { "id", "sales_series_name", "sales_series_number" };
    private static readonly uint[] _salesSeriesFieldTags = new uint[] { 10, 18, 26 };
    public static SalesSeries DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SalesSeries DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SalesSeries ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_SalesSeries__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SalesSeries, SalesSeries.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Common1.internal__static_common_1_SalesSeries__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int SalesSeriesNameFieldNumber = 2;
    private bool hasSalesSeriesName;
    private string salesSeriesName_ = "";
    public bool HasSalesSeriesName {
      get { return hasSalesSeriesName; }
    }
    public string SalesSeriesName {
      get { return salesSeriesName_; }
    }
    
    public const int SalesSeriesNumberFieldNumber = 3;
    private bool hasSalesSeriesNumber;
    private string salesSeriesNumber_ = "";
    public bool HasSalesSeriesNumber {
      get { return hasSalesSeriesNumber; }
    }
    public string SalesSeriesNumber {
      get { return salesSeriesNumber_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _salesSeriesFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      if (hasSalesSeriesName) {
        output.WriteString(2, field_names[1], SalesSeriesName);
      }
      if (hasSalesSeriesNumber) {
        output.WriteString(3, field_names[2], SalesSeriesNumber);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      if (hasSalesSeriesName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, SalesSeriesName);
      }
      if (hasSalesSeriesNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(3, SalesSeriesNumber);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SalesSeries ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SalesSeries ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SalesSeries ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SalesSeries ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SalesSeries ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SalesSeries ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SalesSeries ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SalesSeries ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SalesSeries ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SalesSeries ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SalesSeries MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SalesSeries prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SalesSeries, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SalesSeries cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SalesSeries result;
      
      private SalesSeries PrepareBuilder() {
        if (resultIsReadOnly) {
          SalesSeries original = result;
          result = new SalesSeries();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SalesSeries MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SalesSeries.Descriptor; }
      }
      
      public override SalesSeries DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SalesSeries.DefaultInstance; }
      }
      
      public override SalesSeries BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SalesSeries) {
          return MergeFrom((SalesSeries) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SalesSeries other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.SalesSeries.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasSalesSeriesName) {
          SalesSeriesName = other.SalesSeriesName;
        }
        if (other.HasSalesSeriesNumber) {
          SalesSeriesNumber = other.SalesSeriesNumber;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_salesSeriesFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _salesSeriesFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 18: {
              result.hasSalesSeriesName = input.ReadString(ref result.salesSeriesName_);
              break;
            }
            case 26: {
              result.hasSalesSeriesNumber = input.ReadString(ref result.salesSeriesNumber_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasSalesSeriesName {
        get { return result.hasSalesSeriesName; }
      }
      public string SalesSeriesName {
        get { return result.SalesSeriesName; }
        set { SetSalesSeriesName(value); }
      }
      public Builder SetSalesSeriesName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesName = true;
        result.salesSeriesName_ = value;
        return this;
      }
      public Builder ClearSalesSeriesName() {
        PrepareBuilder();
        result.hasSalesSeriesName = false;
        result.salesSeriesName_ = "";
        return this;
      }
      
      public bool HasSalesSeriesNumber {
        get { return result.hasSalesSeriesNumber; }
      }
      public string SalesSeriesNumber {
        get { return result.SalesSeriesNumber; }
        set { SetSalesSeriesNumber(value); }
      }
      public Builder SetSalesSeriesNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesNumber = true;
        result.salesSeriesNumber_ = value;
        return this;
      }
      public Builder ClearSalesSeriesNumber() {
        PrepareBuilder();
        result.hasSalesSeriesNumber = false;
        result.salesSeriesNumber_ = "";
        return this;
      }
    }
    static SalesSeries() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
