// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace CmsApiSamples.Protocol.CMSApi {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Traderouting1 {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_traderouting_1_TradeRoutingRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradeRoutingRequest, global::CmsApiSamples.Protocol.CMSApi.TradeRoutingRequest.Builder> internal__static_traderouting_1_TradeRoutingRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountScopeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest, global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest.Builder> internal__static_traderouting_1_AccountScopeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderScopeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest, global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest.Builder> internal__static_traderouting_1_OrderScopeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderDetailsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest, global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest.Builder> internal__static_traderouting_1_OrderDetailsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AddFill__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AddFill, global::CmsApiSamples.Protocol.CMSApi.AddFill.Builder> internal__static_traderouting_1_AddFill__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CreateExternalOrder__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder, global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder.Builder> internal__static_traderouting_1_CreateExternalOrder__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderSearchRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest, global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest.Builder> internal__static_traderouting_1_OrderSearchRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_RelatedOrderTreeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest, global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest.Builder> internal__static_traderouting_1_RelatedOrderTreeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CompoundOrderTreeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest, global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest.Builder> internal__static_traderouting_1_CompoundOrderTreeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_SyntheticStrategyTreeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest, global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest.Builder> internal__static_traderouting_1_SyntheticStrategyTreeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CancelOrder__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CancelOrder, global::CmsApiSamples.Protocol.CMSApi.CancelOrder.Builder> internal__static_traderouting_1_CancelOrder__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_ReflectAsCanceledOrder__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder, global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder.Builder> internal__static_traderouting_1_ReflectAsCanceledOrder__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CancelCompoundOrderTree__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree, global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree.Builder> internal__static_traderouting_1_CancelCompoundOrderTree__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountInfoRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest, global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest.Builder> internal__static_traderouting_1_AccountInfoRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_BalanceRecordsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest, global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest.Builder> internal__static_traderouting_1_BalanceRecordsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CreateBalanceRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord, global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord.Builder> internal__static_traderouting_1_CreateBalanceRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateBalanceRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord, global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord.Builder> internal__static_traderouting_1_UpdateBalanceRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountSearchRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest, global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest.Builder> internal__static_traderouting_1_AccountSearchRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountRouteListRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest, global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest.Builder> internal__static_traderouting_1_AccountRouteListRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountUserAuthorizationListRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest, global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest.Builder> internal__static_traderouting_1_AccountUserAuthorizationListRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountSettingsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest, global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest.Builder> internal__static_traderouting_1_AccountSettingsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountRiskParametersRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest, global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest.Builder> internal__static_traderouting_1_AccountRiskParametersRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateRiskParameters__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters, global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters.Builder> internal__static_traderouting_1_UpdateRiskParameters__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountAvailableExchangeGroupsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest, global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest.Builder> internal__static_traderouting_1_AccountAvailableExchangeGroupsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountMarketLimitsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest, global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest.Builder> internal__static_traderouting_1_AccountMarketLimitsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountPositionsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest, global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest.Builder> internal__static_traderouting_1_AccountPositionsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountEquityRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest, global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest.Builder> internal__static_traderouting_1_AccountEquityRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountCollateralRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest, global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest.Builder> internal__static_traderouting_1_AccountCollateralRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CloneAccount__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CloneAccount, global::CmsApiSamples.Protocol.CMSApi.CloneAccount.Builder> internal__static_traderouting_1_CloneAccount__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccount__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccount, global::CmsApiSamples.Protocol.CMSApi.UpdateAccount.Builder> internal__static_traderouting_1_UpdateAccount__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountClusterRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest, global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest.Builder> internal__static_traderouting_1_AccountClusterRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CreateAccountCluster__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster, global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster.Builder> internal__static_traderouting_1_CreateAccountCluster__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountCluster__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster.Builder> internal__static_traderouting_1_UpdateAccountCluster__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountClusterPriceOffsets__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets.Builder> internal__static_traderouting_1_UpdateAccountClusterPriceOffsets__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountSettings__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings.Builder> internal__static_traderouting_1_UpdateAccountSettings__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountGroupRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest, global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest.Builder> internal__static_traderouting_1_AccountGroupRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountRiskParameters__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters.Builder> internal__static_traderouting_1_UpdateAccountRiskParameters__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountRouteList__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList.Builder> internal__static_traderouting_1_UpdateAccountRouteList__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountMarketLimits__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits.Builder> internal__static_traderouting_1_UpdateAccountMarketLimits__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_RouteListRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RouteListRequest, global::CmsApiSamples.Protocol.CMSApi.RouteListRequest.Builder> internal__static_traderouting_1_RouteListRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CreateAccount__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateAccount, global::CmsApiSamples.Protocol.CMSApi.CreateAccount.Builder> internal__static_traderouting_1_CreateAccount__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_TradeRoutingResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradeRoutingResult, global::CmsApiSamples.Protocol.CMSApi.TradeRoutingResult.Builder> internal__static_traderouting_1_TradeRoutingResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountScopeResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult, global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult.Builder> internal__static_traderouting_1_AccountScopeResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderScopeResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult, global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult.Builder> internal__static_traderouting_1_OrderScopeResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderDetailsResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult, global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult.Builder> internal__static_traderouting_1_OrderDetailsResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AddFillResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AddFillResult, global::CmsApiSamples.Protocol.CMSApi.AddFillResult.Builder> internal__static_traderouting_1_AddFillResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CreateExternalOrderResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult, global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult.Builder> internal__static_traderouting_1_CreateExternalOrderResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderSearchResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult, global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult.Builder> internal__static_traderouting_1_OrderSearchResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_RelatedOrderTreeResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult, global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult.Builder> internal__static_traderouting_1_RelatedOrderTreeResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CompoundOrderTreeResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult, global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult.Builder> internal__static_traderouting_1_CompoundOrderTreeResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_SyntheticStrategyTreeResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult, global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult.Builder> internal__static_traderouting_1_SyntheticStrategyTreeResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CancelOrderResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult, global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult.Builder> internal__static_traderouting_1_CancelOrderResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_ReflectAsCanceledOrderResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult, global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult.Builder> internal__static_traderouting_1_ReflectAsCanceledOrderResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CancelCompoundOrderTreeResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult, global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult.Builder> internal__static_traderouting_1_CancelCompoundOrderTreeResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountInfoResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult, global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult.Builder> internal__static_traderouting_1_AccountInfoResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_BalanceRecordsResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult, global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult.Builder> internal__static_traderouting_1_BalanceRecordsResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CreateBalanceRecordResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult, global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult.Builder> internal__static_traderouting_1_CreateBalanceRecordResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateBalanceRecordResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult, global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult.Builder> internal__static_traderouting_1_UpdateBalanceRecordResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountSearchResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult, global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult.Builder> internal__static_traderouting_1_AccountSearchResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountRouteListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult, global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult.Builder> internal__static_traderouting_1_AccountRouteListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountUserAuthorizationListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult, global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult.Builder> internal__static_traderouting_1_AccountUserAuthorizationListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountSettingsResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult, global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult.Builder> internal__static_traderouting_1_AccountSettingsResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountRiskParametersResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult, global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult.Builder> internal__static_traderouting_1_AccountRiskParametersResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateRiskParametersResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult, global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult.Builder> internal__static_traderouting_1_UpdateRiskParametersResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountExchangeGroupsResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult, global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult.Builder> internal__static_traderouting_1_AccountExchangeGroupsResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountMarketLimitsResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult, global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult.Builder> internal__static_traderouting_1_AccountMarketLimitsResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountPositionsResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult, global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult.Builder> internal__static_traderouting_1_AccountPositionsResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountEquityResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult, global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult.Builder> internal__static_traderouting_1_AccountEquityResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountCollateralResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult, global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult.Builder> internal__static_traderouting_1_AccountCollateralResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CloneAccountResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult, global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult.Builder> internal__static_traderouting_1_CloneAccountResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult.Builder> internal__static_traderouting_1_UpdateAccountResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountSettingsResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult.Builder> internal__static_traderouting_1_UpdateAccountSettingsResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountGroupResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult, global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult.Builder> internal__static_traderouting_1_AccountGroupResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountRiskParametersResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult.Builder> internal__static_traderouting_1_UpdateAccountRiskParametersResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_RouteListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RouteListResult, global::CmsApiSamples.Protocol.CMSApi.RouteListResult.Builder> internal__static_traderouting_1_RouteListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountRouteListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult.Builder> internal__static_traderouting_1_UpdateAccountRouteListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountMarketLimitsResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult.Builder> internal__static_traderouting_1_UpdateAccountMarketLimitsResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CreateAccountResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult, global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult.Builder> internal__static_traderouting_1_CreateAccountResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountClusterResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult, global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult.Builder> internal__static_traderouting_1_AccountClusterResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CreateAccountClusterResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult, global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult.Builder> internal__static_traderouting_1_CreateAccountClusterResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountClusterResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult.Builder> internal__static_traderouting_1_UpdateAccountClusterResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountClusterPriceOffsetsResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult.Builder> internal__static_traderouting_1_UpdateAccountClusterPriceOffsetsResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderChain__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderChain, global::CmsApiSamples.Protocol.CMSApi.OrderChain.Builder> internal__static_traderouting_1_OrderChain__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_ChainAccount__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ChainAccount, global::CmsApiSamples.Protocol.CMSApi.ChainAccount.Builder> internal__static_traderouting_1_ChainAccount__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderRoute__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderRoute, global::CmsApiSamples.Protocol.CMSApi.OrderRoute.Builder> internal__static_traderouting_1_OrderRoute__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderContractLeg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg, global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg.Builder> internal__static_traderouting_1_OrderContractLeg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountAndUserInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo, global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo.Builder> internal__static_traderouting_1_AccountAndUserInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderRequest, global::CmsApiSamples.Protocol.CMSApi.OrderRequest.Builder> internal__static_traderouting_1_OrderRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderSizes__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderSizes, global::CmsApiSamples.Protocol.CMSApi.OrderSizes.Builder> internal__static_traderouting_1_OrderSizes__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderTrailing__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderTrailing, global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.Builder> internal__static_traderouting_1_OrderTrailing__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OperationalDetails__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OperationalDetails, global::CmsApiSamples.Protocol.CMSApi.OperationalDetails.Builder> internal__static_traderouting_1_OperationalDetails__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_TransactionStatus__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TransactionStatus, global::CmsApiSamples.Protocol.CMSApi.TransactionStatus.Builder> internal__static_traderouting_1_TransactionStatus__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderFill__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderFill, global::CmsApiSamples.Protocol.CMSApi.OrderFill.Builder> internal__static_traderouting_1_OrderFill__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_LegFill__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LegFill, global::CmsApiSamples.Protocol.CMSApi.LegFill.Builder> internal__static_traderouting_1_LegFill__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_RelatedOrder__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RelatedOrder, global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.Builder> internal__static_traderouting_1_RelatedOrder__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CompoundOrder__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CompoundOrder, global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.Builder> internal__static_traderouting_1_CompoundOrder__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_StrategyLeg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.StrategyLeg, global::CmsApiSamples.Protocol.CMSApi.StrategyLeg.Builder> internal__static_traderouting_1_StrategyLeg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_Account__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Account, global::CmsApiSamples.Protocol.CMSApi.Account.Builder> internal__static_traderouting_1_Account__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_BalanceRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.BalanceRecord, global::CmsApiSamples.Protocol.CMSApi.BalanceRecord.Builder> internal__static_traderouting_1_BalanceRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountSearchResultRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord, global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord.Builder> internal__static_traderouting_1_AccountSearchResultRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountRouteRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord, global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord.Builder> internal__static_traderouting_1_AccountRouteRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountRouteAttribute__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute, global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute.Builder> internal__static_traderouting_1_AccountRouteAttribute__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountUserLink__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountUserLink, global::CmsApiSamples.Protocol.CMSApi.AccountUserLink.Builder> internal__static_traderouting_1_AccountUserLink__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountSettings__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountSettings, global::CmsApiSamples.Protocol.CMSApi.AccountSettings.Builder> internal__static_traderouting_1_AccountSettings__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountRiskParameters__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters, global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.Builder> internal__static_traderouting_1_AccountRiskParameters__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountGroup__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountGroup, global::CmsApiSamples.Protocol.CMSApi.AccountGroup.Builder> internal__static_traderouting_1_AccountGroup__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_SubAccount__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SubAccount, global::CmsApiSamples.Protocol.CMSApi.SubAccount.Builder> internal__static_traderouting_1_SubAccount__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_TradePriceLimit__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit, global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit.Builder> internal__static_traderouting_1_TradePriceLimit__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_TradePriceLimitPercent__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent, global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent.Builder> internal__static_traderouting_1_TradePriceLimitPercent__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_LimitValue__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LimitValue, global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder> internal__static_traderouting_1_LimitValue__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_LimitValueDouble__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble, global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder> internal__static_traderouting_1_LimitValueDouble__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_ExpirationLimit__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit, global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit.Builder> internal__static_traderouting_1_ExpirationLimit__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_MarginSubsystemParameters__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters, global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters.Builder> internal__static_traderouting_1_MarginSubsystemParameters__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_LossLimit__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LossLimit, global::CmsApiSamples.Protocol.CMSApi.LossLimit.Builder> internal__static_traderouting_1_LossLimit__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_ExchangeGroup__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup, global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup.Builder> internal__static_traderouting_1_ExchangeGroup__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_FungibleCommodity__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity, global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity.Builder> internal__static_traderouting_1_FungibleCommodity__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_TradableCommodity__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradableCommodity, global::CmsApiSamples.Protocol.CMSApi.TradableCommodity.Builder> internal__static_traderouting_1_TradableCommodity__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_InstrumentType__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.InstrumentType, global::CmsApiSamples.Protocol.CMSApi.InstrumentType.Builder> internal__static_traderouting_1_InstrumentType__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_MarketLimits__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.MarketLimits, global::CmsApiSamples.Protocol.CMSApi.MarketLimits.Builder> internal__static_traderouting_1_MarketLimits__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_MarketLimitsRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord, global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.Builder> internal__static_traderouting_1_MarketLimitsRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_PositionAndTradeLimits__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits, global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.Builder> internal__static_traderouting_1_PositionAndTradeLimits__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_TradePriceLimitsTicks__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks, global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.Builder> internal__static_traderouting_1_TradePriceLimitsTicks__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_TradePriceLimitsPercent__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent, global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.Builder> internal__static_traderouting_1_TradePriceLimitsPercent__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_ExchangeMarketLimits__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits, global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits.Builder> internal__static_traderouting_1_ExchangeMarketLimits__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_CommodityMarketLimits__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits, global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits.Builder> internal__static_traderouting_1_CommodityMarketLimits__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_InstrumentMarketLimits__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits, global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits.Builder> internal__static_traderouting_1_InstrumentMarketLimits__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_ContractPosition__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ContractPosition, global::CmsApiSamples.Protocol.CMSApi.ContractPosition.Builder> internal__static_traderouting_1_ContractPosition__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OpenPosition__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OpenPosition, global::CmsApiSamples.Protocol.CMSApi.OpenPosition.Builder> internal__static_traderouting_1_OpenPosition__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_Equity__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Equity, global::CmsApiSamples.Protocol.CMSApi.Equity.Builder> internal__static_traderouting_1_Equity__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_Collateral__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Collateral, global::CmsApiSamples.Protocol.CMSApi.Collateral.Builder> internal__static_traderouting_1_Collateral__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_OrderSearchResultRecord__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord, global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord.Builder> internal__static_traderouting_1_OrderSearchResultRecord__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountCluster__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountCluster, global::CmsApiSamples.Protocol.CMSApi.AccountCluster.Builder> internal__static_traderouting_1_AccountCluster__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountClusterPriceOffset__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset, global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.Builder> internal__static_traderouting_1_AccountClusterPriceOffset__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_Route__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Route, global::CmsApiSamples.Protocol.CMSApi.Route.Builder> internal__static_traderouting_1_Route__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_RouteOmnibusAccount__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount, global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount.Builder> internal__static_traderouting_1_RouteOmnibusAccount__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_RouteInformation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RouteInformation, global::CmsApiSamples.Protocol.CMSApi.RouteInformation.Builder> internal__static_traderouting_1_RouteInformation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_RestoreAccount__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreAccount, global::CmsApiSamples.Protocol.CMSApi.RestoreAccount.Builder> internal__static_traderouting_1_RestoreAccount__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountTypeOverrideListRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest, global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest.Builder> internal__static_traderouting_1_AccountTypeOverrideListRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountTypeOverrideList__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList.Builder> internal__static_traderouting_1_UpdateAccountTypeOverrideList__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_RestoreAccountResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult, global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult.Builder> internal__static_traderouting_1_RestoreAccountResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountTypeOverrideListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult, global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult.Builder> internal__static_traderouting_1_AccountTypeOverrideListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_AccountTypeOverride__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride, global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride.Builder> internal__static_traderouting_1_AccountTypeOverride__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountTypeOverrideListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult.Builder> internal__static_traderouting_1_UpdateAccountTypeOverrideListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountUserAuthorizationList__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList.Builder> internal__static_traderouting_1_UpdateAccountUserAuthorizationList__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_UpdateAccountUserAuthorizationListResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult.Builder> internal__static_traderouting_1_UpdateAccountUserAuthorizationListResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_RemoveAccount__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RemoveAccount, global::CmsApiSamples.Protocol.CMSApi.RemoveAccount.Builder> internal__static_traderouting_1_RemoveAccount__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_traderouting_1_RemoveAccountResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult, global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult.Builder> internal__static_traderouting_1_RemoveAccountResult__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Traderouting1() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhDTVMvdHJhZGVyb3V0aW5nXzEucHJvdG8SDnRyYWRlcm91dGluZ18xGhJD", 
            "TVMvY29tbW9uXzEucHJvdG8i8AEKE1RyYWRlUm91dGluZ1JlcXVlc3QSCgoC", 
            "aWQYASACKA0SQgoVYWNjb3VudF9zY29wZV9yZXF1ZXN0GAIgASgLMiMudHJh", 
            "ZGVyb3V0aW5nXzEuQWNjb3VudFNjb3BlUmVxdWVzdBI+ChNvcmRlcl9zY29w", 
            "ZV9yZXF1ZXN0GAMgASgLMiEudHJhZGVyb3V0aW5nXzEuT3JkZXJTY29wZVJl", 
            "cXVlc3QSSQocbG9va3VwX3Byb3BlcnR5X2xpc3RfcmVxdWVzdBgEIAEoCzIj", 
            "LmNvbW1vbl8xLkxvb2t1cFByb3BlcnR5TGlzdFJlcXVlc3QiwBMKE0FjY291", 
            "bnRTY29wZVJlcXVlc3QSQAoUYWNjb3VudF9pbmZvX3JlcXVlc3QYASABKAsy", 
            "Ii50cmFkZXJvdXRpbmdfMS5BY2NvdW50SW5mb1JlcXVlc3QSRgoXYmFsYW5j", 
            "ZV9yZWNvcmRzX3JlcXVlc3QYAiABKAsyJS50cmFkZXJvdXRpbmdfMS5CYWxh", 
            "bmNlUmVjb3Jkc1JlcXVlc3QSQgoVY3JlYXRlX2JhbGFuY2VfcmVjb3JkGAMg", 
            "ASgLMiMudHJhZGVyb3V0aW5nXzEuQ3JlYXRlQmFsYW5jZVJlY29yZBJCChV1", 
            "cGRhdGVfYmFsYW5jZV9yZWNvcmQYBCABKAsyIy50cmFkZXJvdXRpbmdfMS5V", 
            "cGRhdGVCYWxhbmNlUmVjb3JkElUKH2FjY291bnRfcmlza19wYXJhbWV0ZXJz", 
            "X3JlcXVlc3QYBSABKAsyLC50cmFkZXJvdXRpbmdfMS5BY2NvdW50Umlza1Bh", 
            "cmFtZXRlcnNSZXF1ZXN0EkQKFnVwZGF0ZV9yaXNrX3BhcmFtZXRlcnMYBiAB", 
            "KAsyJC50cmFkZXJvdXRpbmdfMS5VcGRhdGVSaXNrUGFyYW1ldGVycxJEChZh", 
            "Y2NvdW50X3NlYXJjaF9yZXF1ZXN0GAcgASgLMiQudHJhZGVyb3V0aW5nXzEu", 
            "QWNjb3VudFNlYXJjaFJlcXVlc3QSSwoaYWNjb3VudF9yb3V0ZV9saXN0X3Jl", 
            "cXVlc3QYCCABKAsyJy50cmFkZXJvdXRpbmdfMS5BY2NvdW50Um91dGVMaXN0", 
            "UmVxdWVzdBJkCidhY2NvdW50X3VzZXJfYXV0aG9yaXphdGlvbl9saXN0X3Jl", 
            "cXVlc3QYCSABKAsyMy50cmFkZXJvdXRpbmdfMS5BY2NvdW50VXNlckF1dGhv", 
            "cml6YXRpb25MaXN0UmVxdWVzdBJIChhhY2NvdW50X3NldHRpbmdzX3JlcXVl", 
            "c3QYCiABKAsyJi50cmFkZXJvdXRpbmdfMS5BY2NvdW50U2V0dGluZ3NSZXF1", 
            "ZXN0EmgKKWFjY291bnRfYXZhaWxhYmxlX2V4Y2hhbmdlX2dyb3Vwc19yZXF1", 
            "ZXN0GAsgASgLMjUudHJhZGVyb3V0aW5nXzEuQWNjb3VudEF2YWlsYWJsZUV4", 
            "Y2hhbmdlR3JvdXBzUmVxdWVzdBJRCh1hY2NvdW50X21hcmtldF9saW1pdHNf", 
            "cmVxdWVzdBgMIAEoCzIqLnRyYWRlcm91dGluZ18xLkFjY291bnRNYXJrZXRM", 
            "aW1pdHNSZXF1ZXN0EkoKGWFjY291bnRfcG9zaXRpb25zX3JlcXVlc3QYDSAB", 
            "KAsyJy50cmFkZXJvdXRpbmdfMS5BY2NvdW50UG9zaXRpb25zUmVxdWVzdBJE", 
            "ChZhY2NvdW50X2VxdWl0eV9yZXF1ZXN0GA4gASgLMiQudHJhZGVyb3V0aW5n", 
            "XzEuQWNjb3VudEVxdWl0eVJlcXVlc3QSTAoaYWNjb3VudF9jb2xsYXRlcmFs", 
            "X3JlcXVlc3QYDyABKAsyKC50cmFkZXJvdXRpbmdfMS5BY2NvdW50Q29sbGF0", 
            "ZXJhbFJlcXVlc3QSMwoNY2xvbmVfYWNjb3VudBgQIAEoCzIcLnRyYWRlcm91", 
            "dGluZ18xLkNsb25lQWNjb3VudBI1Cg51cGRhdGVfYWNjb3VudBgRIAEoCzId", 
            "LnRyYWRlcm91dGluZ18xLlVwZGF0ZUFjY291bnQSRgoXdXBkYXRlX2FjY291", 
            "bnRfc2V0dGluZ3MYEiABKAsyJS50cmFkZXJvdXRpbmdfMS5VcGRhdGVBY2Nv", 
            "dW50U2V0dGluZ3MSQgoVYWNjb3VudF9ncm91cF9yZXF1ZXN0GBMgASgLMiMu", 
            "dHJhZGVyb3V0aW5nXzEuQWNjb3VudEdyb3VwUmVxdWVzdBJTCh51cGRhdGVf", 
            "YWNjb3VudF9yaXNrX3BhcmFtZXRlcnMYFCABKAsyKy50cmFkZXJvdXRpbmdf", 
            "MS5VcGRhdGVBY2NvdW50Umlza1BhcmFtZXRlcnMSPAoScm91dGVfbGlzdF9y", 
            "ZXF1ZXN0GBUgASgLMiAudHJhZGVyb3V0aW5nXzEuUm91dGVMaXN0UmVxdWVz", 
            "dBJJChl1cGRhdGVfYWNjb3VudF9yb3V0ZV9saXN0GBYgASgLMiYudHJhZGVy", 
            "b3V0aW5nXzEuVXBkYXRlQWNjb3VudFJvdXRlTGlzdBJPChx1cGRhdGVfYWNj", 
            "b3VudF9tYXJrZXRfbGltaXRzGBcgASgLMikudHJhZGVyb3V0aW5nXzEuVXBk", 
            "YXRlQWNjb3VudE1hcmtldExpbWl0cxI1Cg5jcmVhdGVfYWNjb3VudBgYIAEo", 
            "CzIdLnRyYWRlcm91dGluZ18xLkNyZWF0ZUFjY291bnQSRgoXYWNjb3VudF9j", 
            "bHVzdGVyX3JlcXVlc3QYGSABKAsyJS50cmFkZXJvdXRpbmdfMS5BY2NvdW50", 
            "Q2x1c3RlclJlcXVlc3QSRAoWY3JlYXRlX2FjY291bnRfY2x1c3RlchgaIAEo", 
            "CzIkLnRyYWRlcm91dGluZ18xLkNyZWF0ZUFjY291bnRDbHVzdGVyEkQKFnVw", 
            "ZGF0ZV9hY2NvdW50X2NsdXN0ZXIYGyABKAsyJC50cmFkZXJvdXRpbmdfMS5V", 
            "cGRhdGVBY2NvdW50Q2x1c3RlchJeCiR1cGRhdGVfYWNjb3VudF9jbHVzdGVy", 
            "X3ByaWNlX29mZnNldHMYHCABKAsyMC50cmFkZXJvdXRpbmdfMS5VcGRhdGVB", 
            "Y2NvdW50Q2x1c3RlclByaWNlT2Zmc2V0cxI3Cg9yZXN0b3JlX2FjY291bnQY", 
            "HSABKAsyHi50cmFkZXJvdXRpbmdfMS5SZXN0b3JlQWNjb3VudBJaCiJhY2Nv", 
            "dW50X3R5cGVfb3ZlcnJpZGVfbGlzdF9yZXF1ZXN0GB4gASgLMi4udHJhZGVy", 
            "b3V0aW5nXzEuQWNjb3VudFR5cGVPdmVycmlkZUxpc3RSZXF1ZXN0ElgKIXVw", 
            "ZGF0ZV9hY2NvdW50X3R5cGVfb3ZlcnJpZGVfbGlzdBgfIAEoCzItLnRyYWRl", 
            "cm91dGluZ18xLlVwZGF0ZUFjY291bnRUeXBlT3ZlcnJpZGVMaXN0EmIKJnVw", 
            "ZGF0ZV9hY2NvdW50X3VzZXJfYXV0aG9yaXphdGlvbl9saXN0GCAgASgLMjIu", 
            "dHJhZGVyb3V0aW5nXzEuVXBkYXRlQWNjb3VudFVzZXJBdXRob3JpemF0aW9u", 
            "TGlzdBI1Cg5yZW1vdmVfYWNjb3VudBghIAEoCzIdLnRyYWRlcm91dGluZ18x", 
            "LlJlbW92ZUFjY291bnQixgUKEU9yZGVyU2NvcGVSZXF1ZXN0EkIKFW9yZGVy", 
            "X2RldGFpbHNfcmVxdWVzdBgBIAEoCzIjLnRyYWRlcm91dGluZ18xLk9yZGVy", 
            "RGV0YWlsc1JlcXVlc3QSKQoIYWRkX2ZpbGwYAiABKAsyFy50cmFkZXJvdXRp", 
            "bmdfMS5BZGRGaWxsEkIKFWNyZWF0ZV9leHRlcm5hbF9vcmRlchgDIAEoCzIj", 
            "LnRyYWRlcm91dGluZ18xLkNyZWF0ZUV4dGVybmFsT3JkZXISQAoUb3JkZXJf", 
            "c2VhcmNoX3JlcXVlc3QYBCABKAsyIi50cmFkZXJvdXRpbmdfMS5PcmRlclNl", 
            "YXJjaFJlcXVlc3QSSwoacmVsYXRlZF9vcmRlcl90cmVlX3JlcXVlc3QYBSAB", 
            "KAsyJy50cmFkZXJvdXRpbmdfMS5SZWxhdGVkT3JkZXJUcmVlUmVxdWVzdBJN", 
            "Chtjb21wb3VuZF9vcmRlcl90cmVlX3JlcXVlc3QYBiABKAsyKC50cmFkZXJv", 
            "dXRpbmdfMS5Db21wb3VuZE9yZGVyVHJlZVJlcXVlc3QSVQofc3ludGhldGlj", 
            "X3N0cmF0ZWd5X3RyZWVfcmVxdWVzdBgHIAEoCzIsLnRyYWRlcm91dGluZ18x", 
            "LlN5bnRoZXRpY1N0cmF0ZWd5VHJlZVJlcXVlc3QSMQoMY2FuY2VsX29yZGVy", 
            "GAggASgLMhsudHJhZGVyb3V0aW5nXzEuQ2FuY2VsT3JkZXISSQoZcmVmbGVj", 
            "dF9hc19jYW5jZWxlZF9vcmRlchgJIAEoCzImLnRyYWRlcm91dGluZ18xLlJl", 
            "ZmxlY3RBc0NhbmNlbGVkT3JkZXISSwoaY2FuY2VsX2NvbXBvdW5kX29yZGVy", 
            "X3RyZWUYCiABKAsyJy50cmFkZXJvdXRpbmdfMS5DYW5jZWxDb21wb3VuZE9y", 
            "ZGVyVHJlZSJyChNPcmRlckRldGFpbHNSZXF1ZXN0EhIKCmFjY291bnRfaWQY", 
            "ASABKBESEAoIb3JkZXJfaWQYAiABKAkSGQoRdHJhZGVfbG9jYXRpb25faWQY", 
            "AyABKAkSGgoSb3JkZXJfcmVxdWVzdHNfdG9wGAQgASgNIuMBCgdBZGRGaWxs", 
            "EhIKCmFjY291bnRfaWQYASABKBESEAoIb3JkZXJfaWQYAiABKAkSEAoIcXVh", 
            "bnRpdHkYAyABKA0SDQoFcHJpY2UYBCABKAESFQoNZmlsbF91dGNfdGltZRgF", 
            "IAEoEhIVCg1pc19hZ2dyZXNzaXZlGAYgASgIEhUKDWRpc3BsYXlfcHJpY2UY", 
            "ByABKBISFwoPb3Blbl9jbG9zZV90eXBlGAggASgNEhgKEHNwZWN1bGF0aW9u", 
            "X3R5cGUYCSABKA0SGQoRdHJhZGVfbG9jYXRpb25faWQYCiABKAkihAMKE0Ny", 
            "ZWF0ZUV4dGVybmFsT3JkZXISEgoKYWNjb3VudF9pZBgBIAEoERIPCgd1c2Vy", 
            "X2lkGAIgASgJEhcKD2NvbnRyYWN0X3N5bWJvbBgDIAEoCRIMCgRzaWRlGAQg", 
            "ASgNEhIKCm9yZGVyX3R5cGUYBSABKA0SEwoLbGltaXRfcHJpY2UYBiABKAES", 
            "EgoKc3RvcF9wcmljZRgHIAEoARIVCg1maWxsX3F1YW50aXR5GAggASgNEhIK", 
            "CmZpbGxfcHJpY2UYCSABKAESFQoNZmlsbF91dGNfdGltZRgKIAEoEhIbChNk", 
            "aXNwbGF5X2xpbWl0X3ByaWNlGAsgASgSEhoKEmRpc3BsYXlfc3RvcF9wcmlj", 
            "ZRgMIAEoEhIaChJkaXNwbGF5X2ZpbGxfcHJpY2UYDSABKBISFwoPb3Blbl9j", 
            "bG9zZV90eXBlGA4gASgNEhgKEHNwZWN1bGF0aW9uX3R5cGUYDyABKA0SGgoS", 
            "ZmlsbF9pc19hZ2dyZXNzaXZlGBAgASgIIoMFChJPcmRlclNlYXJjaFJlcXVl", 
            "c3QSDAoEdGV4dBgBIAEoCRIXCg9zZWFyY2hfY3JpdGVyaWEYAiADKA0SCwoD", 
            "dG9wGAMgASgNEhkKEXRyYWRlX2xvY2F0aW9uX2lkGAQgASgJEhAKCGFyY2hp", 
            "dmVkGAUgASgIEi4KDnNlYXJjaF9vcHRpb25zGAYgAygLMhYuY29tbW9uXzEu", 
            "U2VhcmNoT3B0aW9uEh0KDmFsbF9tYXRjaF9tb2RlGAcgASgIOgVmYWxzZSK8", 
            "AwoOU2VhcmNoQ3JpdGVyaWESDAoIT1JERVJfSUQQARITCg9DTElFTlRfT1JE", 
            "RVJfSUQQAhIRCg1USUNLRVRfTlVNQkVSEAMSDAoIQ09OVFJBQ1QQBBIOCgpB", 
            "Q0NPVU5UX0lEEAUSEAoMQUNDT1VOVF9OQU1FEAYSFAoQQlJPS0VSQUdFX05V", 
            "TUJFUhAHEg0KCVVTRVJfTkFNRRAIEhYKEkNVU1RPTUVSX0xBU1RfTkFNRRAJ", 
            "EhcKE0NVU1RPTUVSX0ZJUlNUX05BTUUQChILCgdVU0VSX0lEEAsSEgoOUk9V", 
            "VEVfT1JERVJfSUQQDBIZChVST1VURV9DTElFTlRfT1JERVJfSUQQDRIOCgpP", 
            "UkRFUl9HVUlEEA4SFgoSRklMTF9DQVJFX09SREVSX0lEEA8SEgoOQ0hBSU5f", 
            "T1JERVJfSUQQEBIXChNTQUxFU19TRVJJRVNfTlVNQkVSEBESFQoRU0FMRVNf", 
            "U0VSSUVTX05BTUUQEhITCg9TQUxFU19TRVJJRVNfSUQQExIRCg1FWENIQU5H", 
            "RV9OQU1FEBQSDgoKUk9VVEVfQ09ERRAVEg4KClJPVVRFX05BTUUQFiJ1ChdS", 
            "ZWxhdGVkT3JkZXJUcmVlUmVxdWVzdBIWCg5jaGFpbl9vcmRlcl9pZBgBIAEo", 
            "CRIZChF0cmFkZV9sb2NhdGlvbl9pZBgCIAEoCRIaChJvcmRlcl9yZXF1ZXN0", 
            "c190b3AYAyABKA0SCwoDdG9wGAQgASgNIngKGENvbXBvdW5kT3JkZXJUcmVl", 
            "UmVxdWVzdBIYChBjb21wb3VuZF90cmVlX2lkGAEgASgJEhkKEXRyYWRlX2xv", 
            "Y2F0aW9uX2lkGAIgASgJEhoKEm9yZGVyX3JlcXVlc3RzX3RvcBgDIAEoDRIL", 
            "CgN0b3AYBCABKA0iVgocU3ludGhldGljU3RyYXRlZ3lUcmVlUmVxdWVzdBIb", 
            "ChNyb290X2NoYWluX29yZGVyX2lkGAEgASgJEhkKEXRyYWRlX2xvY2F0aW9u", 
            "X2lkGAIgASgJIlQKC0NhbmNlbE9yZGVyEhYKDmNoYWluX29yZGVyX2lkGAEg", 
            "ASgJEhIKCmFjY291bnRfaWQYAiABKBESGQoRdHJhZGVfbG9jYXRpb25faWQY", 
            "AyABKAkiXwoWUmVmbGVjdEFzQ2FuY2VsZWRPcmRlchIWCg5jaGFpbl9vcmRl", 
            "cl9pZBgBIAEoCRISCgphY2NvdW50X2lkGAIgASgREhkKEXRyYWRlX2xvY2F0", 
            "aW9uX2lkGAMgASgJImIKF0NhbmNlbENvbXBvdW5kT3JkZXJUcmVlEhgKEGNv", 
            "bXBvdW5kX3RyZWVfaWQYASABKAkSEgoKYWNjb3VudF9pZBgCIAEoERIZChF0", 
            "cmFkZV9sb2NhdGlvbl9pZBgDIAEoCSJKChJBY2NvdW50SW5mb1JlcXVlc3QS", 
            "EgoKYWNjb3VudF9pZBgBIAEoERIgChhicm9rZXJhZ2VfYWNjb3VudF9udW1i", 
            "ZXIYAiABKAkiUQoVQmFsYW5jZVJlY29yZHNSZXF1ZXN0EhIKCmFjY291bnRf", 
            "aWQYASABKBESEAoIY3VycmVuY3kYAiABKAkSEgoKYmFsYW5jZV9pZBgDIAEo", 
            "ESKCAQoTQ3JlYXRlQmFsYW5jZVJlY29yZBISCgphY2NvdW50X2lkGAEgASgR", 
            "EhAKCGN1cnJlbmN5GAIgASgJEhgKEGVuZF9jYXNoX2JhbGFuY2UYAyABKAES", 
            "EgoKY29sbGF0ZXJhbBgEIAEoARIXCglyZWd1bGF0ZWQYBSABKAg6BHRydWUi", 
            "VwoTVXBkYXRlQmFsYW5jZVJlY29yZBISCgpiYWxhbmNlX2lkGAEgAigREhgK", 
            "EGVuZF9jYXNoX2JhbGFuY2UYAiABKAESEgoKY29sbGF0ZXJhbBgDIAEoASKF", 
            "AwoUQWNjb3VudFNlYXJjaFJlcXVlc3QSDAoEdGV4dBgBIAEoCRIXCg9zZWFy", 
            "Y2hfY3JpdGVyaWEYAiADKA0SCwoDdG9wGAMgASgNEh4KD2luY2x1ZGVfcmVt", 
            "b3ZlZBgEIAEoCDoFZmFsc2USLgoOc2VhcmNoX29wdGlvbnMYBSADKAsyFi5j", 
            "b21tb25fMS5TZWFyY2hPcHRpb24SHQoOYWxsX21hdGNoX21vZGUYBiABKAg6", 
            "BWZhbHNlIskBCg5TZWFyY2hDcml0ZXJpYRIOCgpBQ0NPVU5UX0lEEAESEAoM", 
            "QUNDT1VOVF9OQU1FEAISFAoQQlJPS0VSQUdFX05VTUJFUhADEhcKE1NBTEVT", 
            "X1NFUklFU19OVU1CRVIQBBIVChFTQUxFU19TRVJJRVNfTkFNRRAFEhMKD1NB", 
            "TEVTX1NFUklFU19JRBAGEg8KC0NVU1RPTUVSX0lEEAcSEQoNQ1VTVE9NRVJf", 
            "TkFNRRAIEhYKEkFDQ09VTlRfQ0xVU1RFUl9JRBAJIi0KF0FjY291bnRSb3V0", 
            "ZUxpc3RSZXF1ZXN0EhIKCmFjY291bnRfaWQYASACKBEiVwojQWNjb3VudFVz", 
            "ZXJBdXRob3JpemF0aW9uTGlzdFJlcXVlc3QSEgoKYWNjb3VudF9pZBgBIAEo", 
            "ERIPCgd1c2VyX2lkGAIgASgJEgsKA3RvcBgDIAEoDSIsChZBY2NvdW50U2V0", 
            "dGluZ3NSZXF1ZXN0EhIKCmFjY291bnRfaWQYASACKBEiMgocQWNjb3VudFJp", 
            "c2tQYXJhbWV0ZXJzUmVxdWVzdBISCgphY2NvdW50X2lkGAEgAigRIpMBChRV", 
            "cGRhdGVSaXNrUGFyYW1ldGVycxISCgphY2NvdW50X2lkGAEgAigREhgKEGxp", 
            "cXVpZGF0aW9uX29ubHkYAiABKAgSFQoNYWxsb3dfZnV0dXJlcxgDIAEoCBIV", 
            "Cg1hbGxvd19vcHRpb25zGAQgASgNEh8KF2FsbG93YWJsZV9tYXJnaW5fY3Jl", 
            "ZGl0GAUgASgBIjsKJUFjY291bnRBdmFpbGFibGVFeGNoYW5nZUdyb3Vwc1Jl", 
            "cXVlc3QSEgoKYWNjb3VudF9pZBgBIAIoESIwChpBY2NvdW50TWFya2V0TGlt", 
            "aXRzUmVxdWVzdBISCgphY2NvdW50X2lkGAEgAigRIi0KF0FjY291bnRQb3Np", 
            "dGlvbnNSZXF1ZXN0EhIKCmFjY291bnRfaWQYASACKBEiPAoUQWNjb3VudEVx", 
            "dWl0eVJlcXVlc3QSEgoKYWNjb3VudF9pZBgBIAIoERIQCghjdXJyZW5jeRgC", 
            "IAEoCSIuChhBY2NvdW50Q29sbGF0ZXJhbFJlcXVlc3QSEgoKYWNjb3VudF9p", 
            "ZBgBIAIoESKGAQoMQ2xvbmVBY2NvdW50EhkKEXNvdXJjZV9hY2NvdW50X2lk", 
            "GAEgAigREhgKEG5ld19hY2NvdW50X25hbWUYAiACKAkSJAocbmV3X2FjY291", 
            "bnRfYnJva2VyYWdlX251bWJlchgDIAIoCRIbChNuZXdfYWNjb3VudF91c2Vy", 
            "X2lkGAQgASgJImwKDVVwZGF0ZUFjY291bnQSKAoHYWNjb3VudBgBIAIoCzIX", 
            "LnRyYWRlcm91dGluZ18xLkFjY291bnQSMQoQb3JpZ2luYWxfYWNjb3VudBgC", 
            "IAEoCzIXLnRyYWRlcm91dGluZ18xLkFjY291bnQiMwoVQWNjb3VudENsdXN0", 
            "ZXJSZXF1ZXN0EhoKEmFjY291bnRfY2x1c3Rlcl9pZBgBIAEoCSJPChRDcmVh", 
            "dGVBY2NvdW50Q2x1c3RlchI3Cg9hY2NvdW50X2NsdXN0ZXIYASABKAsyHi50", 
            "cmFkZXJvdXRpbmdfMS5BY2NvdW50Q2x1c3RlciKRAQoUVXBkYXRlQWNjb3Vu", 
            "dENsdXN0ZXISNwoPYWNjb3VudF9jbHVzdGVyGAEgASgLMh4udHJhZGVyb3V0", 
            "aW5nXzEuQWNjb3VudENsdXN0ZXISQAoYb3JpZ2luYWxfYWNjb3VudF9jbHVz", 
            "dGVyGAIgASgLMh4udHJhZGVyb3V0aW5nXzEuQWNjb3VudENsdXN0ZXIixwEK", 
            "IFVwZGF0ZUFjY291bnRDbHVzdGVyUHJpY2VPZmZzZXRzEhoKEmFjY291bnRf", 
            "Y2x1c3Rlcl9pZBgBIAEoCRJBCg5vZmZzZXRzX3RvX3NldBgCIAMoCzIpLnRy", 
            "YWRlcm91dGluZ18xLkFjY291bnRDbHVzdGVyUHJpY2VPZmZzZXQSRAoRb2Zm", 
            "c2V0c190b19yZW1vdmUYAyADKAsyKS50cmFkZXJvdXRpbmdfMS5BY2NvdW50", 
            "Q2x1c3RlclByaWNlT2Zmc2V0IoYBChVVcGRhdGVBY2NvdW50U2V0dGluZ3MS", 
            "MQoIc2V0dGluZ3MYASACKAsyHy50cmFkZXJvdXRpbmdfMS5BY2NvdW50U2V0", 
            "dGluZ3MSOgoRb3JpZ2luYWxfc2V0dGluZ3MYAiABKAsyHy50cmFkZXJvdXRp", 
            "bmdfMS5BY2NvdW50U2V0dGluZ3MiKQoTQWNjb3VudEdyb3VwUmVxdWVzdBIS", 
            "CgphY2NvdW50X2lkGAEgAigJIqYBChtVcGRhdGVBY2NvdW50Umlza1BhcmFt", 
            "ZXRlcnMSPgoPcmlza19wYXJhbWV0ZXJzGAEgAigLMiUudHJhZGVyb3V0aW5n", 
            "XzEuQWNjb3VudFJpc2tQYXJhbWV0ZXJzEkcKGG9yaWdpbmFsX3Jpc2tfcGFy", 
            "YW1ldGVycxgCIAEoCzIlLnRyYWRlcm91dGluZ18xLkFjY291bnRSaXNrUGFy", 
            "YW1ldGVycyKGAQoWVXBkYXRlQWNjb3VudFJvdXRlTGlzdBISCgphY2NvdW50", 
            "X2lkGAEgASgJEjkKDXJvdXRlc190b19zZXQYAiADKAsyIi50cmFkZXJvdXRp", 
            "bmdfMS5BY2NvdW50Um91dGVSZWNvcmQSHQoVcm91dGVfY29kZXNfdG9fcmVt", 
            "b3ZlGAMgAygJIqIBChlVcGRhdGVBY2NvdW50TWFya2V0TGltaXRzEhIKCmFj", 
            "Y291bnRfaWQYASABKAkSMwoNbWFya2V0X2xpbWl0cxgCIAEoCzIcLnRyYWRl", 
            "cm91dGluZ18xLk1hcmtldExpbWl0cxI8ChZvcmlnaW5hbF9tYXJrZXRfbGlt", 
            "aXRzGAMgASgLMhwudHJhZGVyb3V0aW5nXzEuTWFya2V0TGltaXRzIiYKEFJv", 
            "dXRlTGlzdFJlcXVlc3QSEgoKYWNjb3VudF9pZBgBIAEoCSI5Cg1DcmVhdGVB", 
            "Y2NvdW50EigKB2FjY291bnQYASABKAsyFy50cmFkZXJvdXRpbmdfMS5BY2Nv", 
            "dW50IrICChJUcmFkZVJvdXRpbmdSZXN1bHQSEgoKcmVxdWVzdF9pZBgBIAIo", 
            "DRIYChBvcGVyYXRpb25fc3RhdHVzGAIgAigNEiUKDWVycm9yX21lc3NhZ2UY", 
            "AyABKAsyDi5jb21tb25fMS5UZXh0EkAKFGFjY291bnRfc2NvcGVfcmVzdWx0", 
            "GAQgASgLMiIudHJhZGVyb3V0aW5nXzEuQWNjb3VudFNjb3BlUmVzdWx0EjwK", 
            "Em9yZGVyX3Njb3BlX3Jlc3VsdBgFIAEoCzIgLnRyYWRlcm91dGluZ18xLk9y", 
            "ZGVyU2NvcGVSZXN1bHQSRwobbG9va3VwX3Byb3BlcnR5X2xpc3RfcmVzdWx0", 
            "GAYgASgLMiIuY29tbW9uXzEuTG9va3VwUHJvcGVydHlMaXN0UmVzdWx0IukU", 
            "ChJBY2NvdW50U2NvcGVSZXN1bHQSPgoTYWNjb3VudF9pbmZvX3Jlc3VsdBgB", 
            "IAEoCzIhLnRyYWRlcm91dGluZ18xLkFjY291bnRJbmZvUmVzdWx0EkQKFmJh", 
            "bGFuY2VfcmVjb3Jkc19yZXN1bHQYAiABKAsyJC50cmFkZXJvdXRpbmdfMS5C", 
            "YWxhbmNlUmVjb3Jkc1Jlc3VsdBJPChxjcmVhdGVfYmFsYW5jZV9yZWNvcmRf", 
            "cmVzdWx0GAMgASgLMikudHJhZGVyb3V0aW5nXzEuQ3JlYXRlQmFsYW5jZVJl", 
            "Y29yZFJlc3VsdBJPChx1cGRhdGVfYmFsYW5jZV9yZWNvcmRfcmVzdWx0GAQg", 
            "ASgLMikudHJhZGVyb3V0aW5nXzEuVXBkYXRlQmFsYW5jZVJlY29yZFJlc3Vs", 
            "dBJTCh5hY2NvdW50X3Jpc2tfcGFyYW1ldGVyc19yZXN1bHQYBSABKAsyKy50", 
            "cmFkZXJvdXRpbmdfMS5BY2NvdW50Umlza1BhcmFtZXRlcnNSZXN1bHQSUQod", 
            "dXBkYXRlX3Jpc2tfcGFyYW1ldGVyc19yZXN1bHQYBiABKAsyKi50cmFkZXJv", 
            "dXRpbmdfMS5VcGRhdGVSaXNrUGFyYW1ldGVyc1Jlc3VsdBJCChVhY2NvdW50", 
            "X3NlYXJjaF9yZXN1bHQYByABKAsyIy50cmFkZXJvdXRpbmdfMS5BY2NvdW50", 
            "U2VhcmNoUmVzdWx0EkkKGWFjY291bnRfcm91dGVfbGlzdF9yZXN1bHQYCCAB", 
            "KAsyJi50cmFkZXJvdXRpbmdfMS5BY2NvdW50Um91dGVMaXN0UmVzdWx0EmIK", 
            "JmFjY291bnRfdXNlcl9hdXRob3JpemF0aW9uX2xpc3RfcmVzdWx0GAkgASgL", 
            "MjIudHJhZGVyb3V0aW5nXzEuQWNjb3VudFVzZXJBdXRob3JpemF0aW9uTGlz", 
            "dFJlc3VsdBJGChdhY2NvdW50X3NldHRpbmdzX3Jlc3VsdBgKIAEoCzIlLnRy", 
            "YWRlcm91dGluZ18xLkFjY291bnRTZXR0aW5nc1Jlc3VsdBJTCh5hY2NvdW50", 
            "X2V4Y2hhbmdlX2dyb3Vwc19yZXN1bHQYCyABKAsyKy50cmFkZXJvdXRpbmdf", 
            "MS5BY2NvdW50RXhjaGFuZ2VHcm91cHNSZXN1bHQSTwocYWNjb3VudF9tYXJr", 
            "ZXRfbGltaXRzX3Jlc3VsdBgMIAEoCzIpLnRyYWRlcm91dGluZ18xLkFjY291", 
            "bnRNYXJrZXRMaW1pdHNSZXN1bHQSSAoYYWNjb3VudF9wb3NpdGlvbnNfcmVz", 
            "dWx0GA0gASgLMiYudHJhZGVyb3V0aW5nXzEuQWNjb3VudFBvc2l0aW9uc1Jl", 
            "c3VsdBJCChVhY2NvdW50X2VxdWl0eV9yZXN1bHQYDiABKAsyIy50cmFkZXJv", 
            "dXRpbmdfMS5BY2NvdW50RXF1aXR5UmVzdWx0EkoKGWFjY291bnRfY29sbGF0", 
            "ZXJhbF9yZXN1bHQYDyABKAsyJy50cmFkZXJvdXRpbmdfMS5BY2NvdW50Q29s", 
            "bGF0ZXJhbFJlc3VsdBJAChRjbG9uZV9hY2NvdW50X3Jlc3VsdBgQIAEoCzIi", 
            "LnRyYWRlcm91dGluZ18xLkNsb25lQWNjb3VudFJlc3VsdBJCChV1cGRhdGVf", 
            "YWNjb3VudF9yZXN1bHQYESABKAsyIy50cmFkZXJvdXRpbmdfMS5VcGRhdGVB", 
            "Y2NvdW50UmVzdWx0ElMKHnVwZGF0ZV9hY2NvdW50X3NldHRpbmdzX3Jlc3Vs", 
            "dBgSIAEoCzIrLnRyYWRlcm91dGluZ18xLlVwZGF0ZUFjY291bnRTZXR0aW5n", 
            "c1Jlc3VsdBJAChRhY2NvdW50X2dyb3VwX3Jlc3VsdBgTIAEoCzIiLnRyYWRl", 
            "cm91dGluZ18xLkFjY291bnRHcm91cFJlc3VsdBJgCiV1cGRhdGVfYWNjb3Vu", 
            "dF9yaXNrX3BhcmFtZXRlcnNfcmVzdWx0GBQgASgLMjEudHJhZGVyb3V0aW5n", 
            "XzEuVXBkYXRlQWNjb3VudFJpc2tQYXJhbWV0ZXJzUmVzdWx0EjoKEXJvdXRl", 
            "X2xpc3RfcmVzdWx0GBUgASgLMh8udHJhZGVyb3V0aW5nXzEuUm91dGVMaXN0", 
            "UmVzdWx0ElYKIHVwZGF0ZV9hY2NvdW50X3JvdXRlX2xpc3RfcmVzdWx0GBYg", 
            "ASgLMiwudHJhZGVyb3V0aW5nXzEuVXBkYXRlQWNjb3VudFJvdXRlTGlzdFJl", 
            "c3VsdBJcCiN1cGRhdGVfYWNjb3VudF9tYXJrZXRfbGltaXRzX3Jlc3VsdBgX", 
            "IAEoCzIvLnRyYWRlcm91dGluZ18xLlVwZGF0ZUFjY291bnRNYXJrZXRMaW1p", 
            "dHNSZXN1bHQSQgoVY3JlYXRlX2FjY291bnRfcmVzdWx0GBggASgLMiMudHJh", 
            "ZGVyb3V0aW5nXzEuQ3JlYXRlQWNjb3VudFJlc3VsdBJEChZhY2NvdW50X2Ns", 
            "dXN0ZXJfcmVzdWx0GBkgASgLMiQudHJhZGVyb3V0aW5nXzEuQWNjb3VudENs", 
            "dXN0ZXJSZXN1bHQSUQodY3JlYXRlX2FjY291bnRfY2x1c3Rlcl9yZXN1bHQY", 
            "GiABKAsyKi50cmFkZXJvdXRpbmdfMS5DcmVhdGVBY2NvdW50Q2x1c3RlclJl", 
            "c3VsdBJRCh11cGRhdGVfYWNjb3VudF9jbHVzdGVyX3Jlc3VsdBgbIAEoCzIq", 
            "LnRyYWRlcm91dGluZ18xLlVwZGF0ZUFjY291bnRDbHVzdGVyUmVzdWx0EmsK", 
            "K3VwZGF0ZV9hY2NvdW50X2NsdXN0ZXJfcHJpY2Vfb2Zmc2V0c19yZXN1bHQY", 
            "HCABKAsyNi50cmFkZXJvdXRpbmdfMS5VcGRhdGVBY2NvdW50Q2x1c3RlclBy", 
            "aWNlT2Zmc2V0c1Jlc3VsdBJEChZyZXN0b3JlX2FjY291bnRfcmVzdWx0GB0g", 
            "ASgLMiQudHJhZGVyb3V0aW5nXzEuUmVzdG9yZUFjY291bnRSZXN1bHQSWAoh", 
            "YWNjb3VudF90eXBlX292ZXJyaWRlX2xpc3RfcmVzdWx0GB4gASgLMi0udHJh", 
            "ZGVyb3V0aW5nXzEuQWNjb3VudFR5cGVPdmVycmlkZUxpc3RSZXN1bHQSZQoo", 
            "dXBkYXRlX2FjY291bnRfdHlwZV9vdmVycmlkZV9saXN0X3Jlc3VsdBgfIAEo", 
            "CzIzLnRyYWRlcm91dGluZ18xLlVwZGF0ZUFjY291bnRUeXBlT3ZlcnJpZGVM", 
            "aXN0UmVzdWx0Em8KLXVwZGF0ZV9hY2NvdW50X3VzZXJfYXV0aG9yaXphdGlv", 
            "bl9saXN0X3Jlc3VsdBggIAEoCzI4LnRyYWRlcm91dGluZ18xLlVwZGF0ZUFj", 
            "Y291bnRVc2VyQXV0aG9yaXphdGlvbkxpc3RSZXN1bHQSQgoVcmVtb3ZlX2Fj", 
            "Y291bnRfcmVzdWx0GCEgASgLMiMudHJhZGVyb3V0aW5nXzEuUmVtb3ZlQWNj", 
            "b3VudFJlc3VsdCL8BQoQT3JkZXJTY29wZVJlc3VsdBJAChRvcmRlcl9kZXRh", 
            "aWxzX3Jlc3VsdBgBIAEoCzIiLnRyYWRlcm91dGluZ18xLk9yZGVyRGV0YWls", 
            "c1Jlc3VsdBI2Cg9hZGRfZmlsbF9yZXN1bHQYAiABKAsyHS50cmFkZXJvdXRp", 
            "bmdfMS5BZGRGaWxsUmVzdWx0Ek8KHGNyZWF0ZV9leHRlcm5hbF9vcmRlcl9y", 
            "ZXN1bHQYAyABKAsyKS50cmFkZXJvdXRpbmdfMS5DcmVhdGVFeHRlcm5hbE9y", 
            "ZGVyUmVzdWx0Ej4KE29yZGVyX3NlYXJjaF9yZXN1bHQYBCABKAsyIS50cmFk", 
            "ZXJvdXRpbmdfMS5PcmRlclNlYXJjaFJlc3VsdBJJChlyZWxhdGVkX29yZGVy", 
            "X3RyZWVfcmVzdWx0GAUgASgLMiYudHJhZGVyb3V0aW5nXzEuUmVsYXRlZE9y", 
            "ZGVyVHJlZVJlc3VsdBJLChpjb21wb3VuZF9vcmRlcl90cmVlX3Jlc3VsdBgG", 
            "IAEoCzInLnRyYWRlcm91dGluZ18xLkNvbXBvdW5kT3JkZXJUcmVlUmVzdWx0", 
            "ElMKHnN5bnRoZXRpY19zdHJhdGVneV90cmVlX3Jlc3VsdBgHIAEoCzIrLnRy", 
            "YWRlcm91dGluZ18xLlN5bnRoZXRpY1N0cmF0ZWd5VHJlZVJlc3VsdBI+ChNj", 
            "YW5jZWxfb3JkZXJfcmVzdWx0GAggASgLMiEudHJhZGVyb3V0aW5nXzEuQ2Fu", 
            "Y2VsT3JkZXJSZXN1bHQSVgogcmVmbGVjdF9hc19jYW5jZWxlZF9vcmRlcl9y", 
            "ZXN1bHQYCSABKAsyLC50cmFkZXJvdXRpbmdfMS5SZWZsZWN0QXNDYW5jZWxl", 
            "ZE9yZGVyUmVzdWx0ElgKIWNhbmNlbF9jb21wb3VuZF9vcmRlcl90cmVlX3Jl", 
            "c3VsdBgKIAEoCzItLnRyYWRlcm91dGluZ18xLkNhbmNlbENvbXBvdW5kT3Jk", 
            "ZXJUcmVlUmVzdWx0ImAKEk9yZGVyRGV0YWlsc1Jlc3VsdBIvCgtvcmRlcl9j", 
            "aGFpbhgBIAIoCzIaLnRyYWRlcm91dGluZ18xLk9yZGVyQ2hhaW4SGQoLaXNf", 
            "Y29tcGxldGUYAiABKAg6BHRydWUiDwoNQWRkRmlsbFJlc3VsdCJIChlDcmVh", 
            "dGVFeHRlcm5hbE9yZGVyUmVzdWx0EhAKCG9yZGVyX2lkGAMgASgJEhkKEXRy", 
            "YWRlX2xvY2F0aW9uX2lkGAQgASgJIm0KEU9yZGVyU2VhcmNoUmVzdWx0Ej0K", 
            "DG9yZGVyX3JlY29yZBgBIAMoCzInLnRyYWRlcm91dGluZ18xLk9yZGVyU2Vh", 
            "cmNoUmVzdWx0UmVjb3JkEhkKC2lzX2NvbXBsZXRlGAIgASgIOgR0cnVlImgK", 
            "FlJlbGF0ZWRPcmRlclRyZWVSZXN1bHQSMwoNcmVsYXRlZF9vcmRlchgBIAEo", 
            "CzIcLnRyYWRlcm91dGluZ18xLlJlbGF0ZWRPcmRlchIZCgtpc19jb21wbGV0", 
            "ZRgCIAEoCDoEdHJ1ZSJrChdDb21wb3VuZE9yZGVyVHJlZVJlc3VsdBI1Cg5j", 
            "b21wb3VuZF9vcmRlchgBIAEoCzIdLnRyYWRlcm91dGluZ18xLkNvbXBvdW5k", 
            "T3JkZXISGQoLaXNfY29tcGxldGUYAiABKAg6BHRydWUiXwobU3ludGhldGlj", 
            "U3RyYXRlZ3lUcmVlUmVzdWx0EikKBGxlZ3MYASADKAsyGy50cmFkZXJvdXRp", 
            "bmdfMS5TdHJhdGVneUxlZxIVCg1zdHJhdGVneV9uYW1lGAIgASgJIhMKEUNh", 
            "bmNlbE9yZGVyUmVzdWx0Ih4KHFJlZmxlY3RBc0NhbmNlbGVkT3JkZXJSZXN1", 
            "bHQiHwodQ2FuY2VsQ29tcG91bmRPcmRlclRyZWVSZXN1bHQiPQoRQWNjb3Vu", 
            "dEluZm9SZXN1bHQSKAoHYWNjb3VudBgBIAIoCzIXLnRyYWRlcm91dGluZ18x", 
            "LkFjY291bnQiTQoUQmFsYW5jZVJlY29yZHNSZXN1bHQSNQoOYmFsYW5jZV9y", 
            "ZWNvcmQYASADKAsyHS50cmFkZXJvdXRpbmdfMS5CYWxhbmNlUmVjb3JkIjYK", 
            "GUNyZWF0ZUJhbGFuY2VSZWNvcmRSZXN1bHQSGQoRYmFsYW5jZV9yZWNvcmRf", 
            "aWQYAyACKBEiGwoZVXBkYXRlQmFsYW5jZVJlY29yZFJlc3VsdCJzChNBY2Nv", 
            "dW50U2VhcmNoUmVzdWx0EkEKDmFjY291bnRfcmVjb3JkGAEgAygLMikudHJh", 
            "ZGVyb3V0aW5nXzEuQWNjb3VudFNlYXJjaFJlc3VsdFJlY29yZBIZCgtpc19j", 
            "b21wbGV0ZRgCIAEoCDoEdHJ1ZSJaChZBY2NvdW50Um91dGVMaXN0UmVzdWx0", 
            "EkAKFGFjY291bnRfcm91dGVfcmVjb3JkGAEgAygLMiIudHJhZGVyb3V0aW5n", 
            "XzEuQWNjb3VudFJvdXRlUmVjb3JkInsKIkFjY291bnRVc2VyQXV0aG9yaXph", 
            "dGlvbkxpc3RSZXN1bHQSOgoRYWNjb3VudF91c2VyX2xpbmsYASADKAsyHy50", 
            "cmFkZXJvdXRpbmdfMS5BY2NvdW50VXNlckxpbmsSGQoLaXNfY29tcGxldGUY", 
            "AiABKAg6BHRydWUiUgoVQWNjb3VudFNldHRpbmdzUmVzdWx0EjkKEGFjY291", 
            "bnRfc2V0dGluZ3MYASACKAsyHy50cmFkZXJvdXRpbmdfMS5BY2NvdW50U2V0", 
            "dGluZ3MiZQobQWNjb3VudFJpc2tQYXJhbWV0ZXJzUmVzdWx0EkYKF2FjY291", 
            "bnRfcmlza19wYXJhbWV0ZXJzGAEgAigLMiUudHJhZGVyb3V0aW5nXzEuQWNj", 
            "b3VudFJpc2tQYXJhbWV0ZXJzIhwKGlVwZGF0ZVJpc2tQYXJhbWV0ZXJzUmVz", 
            "dWx0Io0BChtBY2NvdW50RXhjaGFuZ2VHcm91cHNSZXN1bHQSNQoOZXhjaGFu", 
            "Z2VfZ3JvdXAYASADKAsyHS50cmFkZXJvdXRpbmdfMS5FeGNoYW5nZUdyb3Vw", 
            "EjcKD2luc3RydW1lbnRfdHlwZRgCIAMoCzIeLnRyYWRlcm91dGluZ18xLklu", 
            "c3RydW1lbnRUeXBlIlgKGUFjY291bnRNYXJrZXRMaW1pdHNSZXN1bHQSOwoV", 
            "YWNjb3VudF9tYXJrZXRfbGltaXRzGAEgAigLMhwudHJhZGVyb3V0aW5nXzEu", 
            "TWFya2V0TGltaXRzIlUKFkFjY291bnRQb3NpdGlvbnNSZXN1bHQSOwoRY29u", 
            "dHJhY3RfcG9zaXRpb24YASADKAsyIC50cmFkZXJvdXRpbmdfMS5Db250cmFj", 
            "dFBvc2l0aW9uIj0KE0FjY291bnRFcXVpdHlSZXN1bHQSJgoGZXF1aXR5GAEg", 
            "AigLMhYudHJhZGVyb3V0aW5nXzEuRXF1aXR5IkkKF0FjY291bnRDb2xsYXRl", 
            "cmFsUmVzdWx0Ei4KCmNvbGxhdGVyYWwYASACKAsyGi50cmFkZXJvdXRpbmdf", 
            "MS5Db2xsYXRlcmFsIiwKEkNsb25lQWNjb3VudFJlc3VsdBIWCg5uZXdfYWNj", 
            "b3VudF9pZBgBIAIoESIVChNVcGRhdGVBY2NvdW50UmVzdWx0Ih0KG1VwZGF0", 
            "ZUFjY291bnRTZXR0aW5nc1Jlc3VsdCJIChJBY2NvdW50R3JvdXBSZXN1bHQS", 
            "MgoMYWNvdW50X2dyb3VwGAEgASgLMhwudHJhZGVyb3V0aW5nXzEuQWNjb3Vu", 
            "dEdyb3VwIiMKIVVwZGF0ZUFjY291bnRSaXNrUGFyYW1ldGVyc1Jlc3VsdCI4", 
            "Cg9Sb3V0ZUxpc3RSZXN1bHQSJQoGcm91dGVzGAEgAygLMhUudHJhZGVyb3V0", 
            "aW5nXzEuUm91dGUiHgocVXBkYXRlQWNjb3VudFJvdXRlTGlzdFJlc3VsdCIh", 
            "Ch9VcGRhdGVBY2NvdW50TWFya2V0TGltaXRzUmVzdWx0IiEKE0NyZWF0ZUFj", 
            "Y291bnRSZXN1bHQSCgoCaWQYASABKAkioQEKFEFjY291bnRDbHVzdGVyUmVz", 
            "dWx0EjcKD2FjY291bnRfY2x1c3RlchgBIAEoCzIeLnRyYWRlcm91dGluZ18x", 
            "LkFjY291bnRDbHVzdGVyElAKHWFjY291bnRfY2x1c3Rlcl9wcmljZV9vZmZz", 
            "ZXRzGAIgAygLMikudHJhZGVyb3V0aW5nXzEuQWNjb3VudENsdXN0ZXJQcmlj", 
            "ZU9mZnNldCIoChpDcmVhdGVBY2NvdW50Q2x1c3RlclJlc3VsdBIKCgJpZBgB", 
            "IAEoCSIcChpVcGRhdGVBY2NvdW50Q2x1c3RlclJlc3VsdCIoCiZVcGRhdGVB", 
            "Y2NvdW50Q2x1c3RlclByaWNlT2Zmc2V0c1Jlc3VsdCLMDQoKT3JkZXJDaGFp", 
            "bhIWCg5jaGFpbl9vcmRlcl9pZBgBIAIoCRIQCghvcmRlcl9pZBgCIAIoCRId", 
            "ChVjaGFpbl9vcmlnX2FjY291bnRfaWQYBCACKBESGgoSc3VibWl0dGVkX3V0", 
            "Y190aW1lGAUgAigSEhcKD2NvbnRyYWN0X3N5bWJvbBgGIAIoCRIMCgRzaWRl", 
            "GAcgAigNEgwKBHNpemUYCCACKA0SEwoLbGltaXRfcHJpY2UYCSABKAESEgoK", 
            "c3RvcF9wcmljZRgKIAEoARIYChBleGVjX2luc3RydWN0aW9uGAsgAygNEhAK", 
            "CGR1cmF0aW9uGAwgAigNEhYKDmdvb2RfdGhydV9kYXRlGA0gASgSEhoKEmdv", 
            "b2RfdGhydV91dGNfdGltZRgOIAEoEhIOCgZzdGF0dXMYDyACKA0SEgoKb3Jk", 
            "ZXJfdHlwZRgQIAIoDRIzCg1vcmRlcl9yZXF1ZXN0GBEgAygLMhwudHJhZGVy", 
            "b3V0aW5nXzEuT3JkZXJSZXF1ZXN0Ei0KCm9yZGVyX2ZpbGwYEiADKAsyGS50", 
            "cmFkZXJvdXRpbmdfMS5PcmRlckZpbGwSFQoNb3JkZXJfY2xhc3NlcxgTIAMo", 
            "CRIbChNkaXNwbGF5X2xpbWl0X3ByaWNlGBQgASgSEhoKEmRpc3BsYXlfc3Rv", 
            "cF9wcmljZRgVIAEoEhIeChZleGVjdXRpb25fYWNjb3VudF9uYW1lGBYgASgJ", 
            "Ei8KCHRyYWlsaW5nGBcgASgLMh0udHJhZGVyb3V0aW5nXzEuT3JkZXJUcmFp", 
            "bGluZxIpCgVzaXplcxgYIAEoCzIaLnRyYWRlcm91dGluZ18xLk9yZGVyU2l6", 
            "ZXMSLgoIYWNjb3VudHMYGSADKAsyHC50cmFkZXJvdXRpbmdfMS5DaGFpbkFj", 
            "Y291bnQSGAoQY29tcG91bmRfdHJlZV9pZBgaIAEoCRIbChNyb290X2NoYWlu", 
            "X29yZGVyX2lkGBsgASgJEg8KB2NoZWNrZWQYHCABKAgSGgoSdHJhZGluZ19l", 
            "eHByZXNzaW9uGB0gASgJEi4KBGxlZ3MYHiADKAsyIC50cmFkZXJvdXRpbmdf", 
            "MS5PcmRlckNvbnRyYWN0TGVnEhwKFGNvbnRyYWN0X2Rlc2NyaXB0aW9uGB8g", 
            "ASgJEigKD3VzZXJfYXR0cmlidXRlcxggIAMoCzIPLmNvbW1vbl8xLlR1cGxl", 
            "EhwKFGNsaWVudF9hbGdvX3N0cmF0ZWd5GCEgASgJEhUKDWFsZ29fc3RyYXRl", 
            "Z3kYIiABKAkSKQoFcm91dGUYIyABKAsyGi50cmFkZXJvdXRpbmdfMS5PcmRl", 
            "clJvdXRlEhcKD2V4cGlyYXRpb25fdGltZRgkIAEoEhIXCg9vcGVuX2Nsb3Nl", 
            "X3R5cGUYJSABKA0SGAoQc3BlY3VsYXRpb25fdHlwZRgmIAEoDRIQCghhcmNo", 
            "aXZlZBgnIAEoCBIcChRvcmRlcl9pZF9hdF9leGNoYW5nZRgoIAEoCRIcChRk", 
            "aXNjcmV0aW9uYXJ5X29mZnNldBgpIAEoDSIZCgRTaWRlEgcKA0JVWRABEggK", 
            "BFNFTEwQAiIvCglPcmRlclR5cGUSBwoDTUtUEAESBwoDTE1UEAISBwoDU1RQ", 
            "EAMSBwoDU1RMEAQibgoPRXhlY0luc3RydWN0aW9uEgcKA0FPThABEgsKB0lD", 
            "RUJFUkcQAhIGCgJRVBADEgkKBVRSQUlMEAQSCgoGRlVOQVJJEAUSBwoDTUlU", 
            "EAYSBwoDTUxNEAcSBwoDTVRMEAgSCwoHQVVDVElPThAJIlIKCER1cmF0aW9u", 
            "EgcKA0RBWRABEgcKA0dUQxACEgcKA0dURBADEgcKA0dUVBAEEgcKA0ZBSxAF", 
            "EgcKA0ZPSxAGEgcKA0FUTxAHEgcKA0FUQxAIIrgBCgZTdGF0dXMSDQoJVU5E", 
            "RUZJTkVEEAASDgoKSU5fVFJBTlNJVBABEgwKCFJFSkVDVEVEEAISCwoHV09S", 
            "S0lORxADEgsKB0VYUElSRUQQBBINCglJTl9DQU5DRUwQBRINCglJTl9NT0RJ", 
            "RlkQBhINCglDQU5DRUxMRUQQBxIKCgZGSUxMRUQQCBINCglTVVNQRU5ERUQQ", 
            "CRIQCgxESVNDT05ORUNURUQQChINCglBQ1RJVkVfQVQQCyI4Cg1PcGVuQ2xv", 
            "c2VUeXBlEggKBE9QRU4QARIJCgVDTE9TRRACEhIKDkNMT1NFX1BSRVZJT1VT", 
            "EAMiPAoPU3BlY3VsYXRpb25UeXBlEg8KC1NQRUNVTEFUSU9OEAESCQoFSEVE", 
            "R0UQAhINCglBUkJJVFJBR0UQAyJaCgxDaGFpbkFjY291bnQSEgoKYWNjb3Vu", 
            "dF9pZBgBIAEoCRIUCgxhY2NvdW50X25hbWUYAiABKAkSIAoYYnJva2VyYWdl", 
            "X2FjY291bnRfbnVtYmVyGAMgASgJIjoKCk9yZGVyUm91dGUSDAoEY29kZRgB", 
            "IAEoCRIMCgRuYW1lGAIgASgJEhAKCG9yZGVyX2lkGAMgASgJIlcKEE9yZGVy", 
            "Q29udHJhY3RMZWcSDgoGbnVtYmVyGAEgASgNEgwKBHNpemUYAiABKA0SDAoE", 
            "c2lkZRgDIAEoDRIXCg9jb250cmFjdF9zeW1ib2wYBCABKAki0AEKEkFjY291", 
            "bnRBbmRVc2VySW5mbxISCgphY2NvdW50X2lkGAEgAigREhEKCXVzZXJfaW5m", 
            "bxgCIAIoCRIWCg5yZWplY3RfZGV0YWlscxgDIAEoCRIfChdyZWplY3RfZGV0", 
            "YWlsc19pbnRlcm5hbBgEIAEoCRIPCgd1c2VyX2lkGAUgASgJEhEKCXVzZXJf", 
            "bmFtZRgGIAEoCRIUCgxhY2NvdW50X25hbWUYByABKAkSIAoYYnJva2VyYWdl", 
            "X2FjY291bnRfbnVtYmVyGAggASgJIsAJCgxPcmRlclJlcXVlc3QSEAoIb3Jk", 
            "ZXJfaWQYASACKAkSGgoSc3VibWl0dGVkX3V0Y190aW1lGAIgAigSEhQKDHJl", 
            "cXVlc3RfdHlwZRgDIAIoDRISCgpvcmRlcl90eXBlGAQgASgNEgwKBHNpemUY", 
            "BiABKA0SEwoLbGltaXRfcHJpY2UYByABKAESEgoKc3RvcF9wcmljZRgIIAEo", 
            "ARIQCghkdXJhdGlvbhgJIAEoDRIWCg5nb29kX3RocnVfZGF0ZRgKIAEoEhIa", 
            "ChJnb29kX3RocnVfdXRjX3RpbWUYCyABKBISDQoFc3RhdGUYDCACKA0SFQoN", 
            "bGlua19vcmRlcl9pZBgNIAEoCRI9ChJ0cmFuc2FjdGlvbl9zdGF0dXMYDiAD", 
            "KAsyIS50cmFkZXJvdXRpbmdfMS5UcmFuc2FjdGlvblN0YXR1cxJBChVhY2Nv", 
            "dW50X2FuZF91c2VyX2luZm8YDyADKAsyIi50cmFkZXJvdXRpbmdfMS5BY2Nv", 
            "dW50QW5kVXNlckluZm8SGwoTZGlzcGxheV9saW1pdF9wcmljZRgQIAEoEhIa", 
            "ChJkaXNwbGF5X3N0b3BfcHJpY2UYESABKBISLwoIdHJhaWxpbmcYEyABKAsy", 
            "HS50cmFkZXJvdXRpbmdfMS5PcmRlclRyYWlsaW5nEikKBXNpemVzGBQgASgL", 
            "MhoudHJhZGVyb3V0aW5nXzEuT3JkZXJTaXplcxIVCg10aWNrZXRfbnVtYmVy", 
            "GBUgASgJEhAKCGNvbW1lbnRzGBYgASgJEhUKDW9yZGVyX2NsYXNzZXMYFyAD", 
            "KAkSGQoRbmF0aXZlX29yZGVyX3R5cGUYGCABKA0SFwoPYWN0aXZhdGlvbl90", 
            "aW1lGBkgASgSEhcKD3N1c3BlbnNpb25fdGltZRgaIAEoEhIXCg9leHBpcmF0", 
            "aW9uX3RpbWUYGyABKBISKgoGcm91dGVzGBwgAygLMhoudHJhZGVyb3V0aW5n", 
            "XzEuT3JkZXJSb3V0ZRImCh5jbGllbnRfcmVndWxhdG9yeV9hbGdvcml0aG1f", 
            "aWQYHSABKAkSKQohZWZmZWN0aXZlX3JlZ3VsYXRvcnlfYWxnb3JpdGhtX2lk", 
            "GB4gASgJEj8KE29wZXJhdGlvbmFsX2RldGFpbHMYIiABKAsyIi50cmFkZXJv", 
            "dXRpbmdfMS5PcGVyYXRpb25hbERldGFpbHMSFAoMaW5zdHJ1Y3Rpb25zGCMg", 
            "ASgJEiwKE2NsaWVudF9leHRyYV92YWx1ZXMYJCADKAsyDy5jb21tb25fMS5U", 
            "dXBsZRIdChVyb3V0ZV9jbGllbnRfb3JkZXJfaWQYJSABKAkSHAoUZGlzY3Jl", 
            "dGlvbmFyeV9vZmZzZXQYJiABKA0iMQoLUmVxdWVzdFR5cGUSCQoFUExBQ0UQ", 
            "ARILCgdSRVBMQUNFEAISCgoGQ0FOQ0VMEAMigwEKBVN0YXRlEg0KCUFDVElW", 
            "RV9BVBABEg0KCVNVU1BFTkRFRBACEgsKB1BFTkRJTkcQAxILCgdXT1JLSU5H", 
            "EAQSDAoIUkVQTEFDRUQQBRINCglDQU5DRUxMRUQQBhIMCghSRUpFQ1RFRBAH", 
            "EgoKBkZJTExFRBAIEgsKB0VYUElSRUQQCSJqCgpPcmRlclNpemVzEhQKDHRy", 
            "aWdnZXJfc2l6ZRgBIAEoDRIUCgx2aXNpYmxlX3NpemUYAiABKA0SGAoQbWlu", 
            "X3Zpc2libGVfc2l6ZRgDIAEoDRIWCg5yZW1haW5pbmdfc2l6ZRgEIAEoDSL7", 
            "AQoNT3JkZXJUcmFpbGluZxISCgp0cmFpbF90eXBlGAEgASgNEg4KBm9mZnNl", 
            "dBgCIAEoARISCgpzdG9wX3ByaWNlGAMgASgBEhMKC2xpbWl0X3ByaWNlGAQg", 
            "ASgBEhYKDmRpc3BsYXlfb2Zmc2V0GAUgASgSEhoKEmRpc3BsYXlfc3RvcF9w", 
            "cmljZRgGIAEoEhIbChNkaXNwbGF5X2xpbWl0X3ByaWNlGAcgASgSEhMKC3Vw", 
            "ZGF0ZV90aW1lGAggASgSIjcKCVRyYWlsVHlwZRIMCghCRVNUX0JJRBABEgwK", 
            "CEJFU1RfQVNLEAISDgoKTEFTVF9UUkFERRADIqIBChJPcGVyYXRpb25hbERl", 
            "dGFpbHMSFwoPY2xpZW50X29yZGVyX2lkGAEgASgJEhMKC2NsaWVudF9ndWlk", 
            "GAIgASgJEhgKEGNsaWVudF9zeXN0ZW1faWQYAyABKAkSEQoJY2xpZW50X2lw", 
            "GAQgASgJEhYKDmNsaWVudF92ZXJzaW9uGAUgASgJEhkKEXRyYWRlX2xvY2F0", 
            "aW9uX2lkGAYgASgJIp0EChFUcmFuc2FjdGlvblN0YXR1cxIOCgZzdGF0dXMY", 
            "ASACKA0SEAoIdHJhbnNfaWQYAiACKAQSFgoOdHJhbnNfdXRjX3RpbWUYAyAC", 
            "KBISEwoLb3JkZXJfc3RhdGUYBCACKA0SGgoSb3JkZXJfY2hhaW5fc3RhdHVz", 
            "GAUgAigNEhQKDHRleHRfbWVzc2FnZRgGIAEoCRIgChhuZXdfZGlzY3JldGlv", 
            "bmFyeV9vZmZzZXQYByABKA0SIQoZcHJldl9kaXNjcmV0aW9uYXJ5X29mZnNl", 
            "dBgIIAEoDSLBAgoGU3RhdHVzEg0KCVVOREVGSU5FRBAAEg4KCklOX1RSQU5T", 
            "SVQQARIMCghSRUpFQ1RFRBACEg0KCUFDS19QTEFDRRADEgsKB0VYUElSRUQQ", 
            "BBINCglJTl9DQU5DRUwQBRIOCgpBQ0tfQ0FOQ0VMEAYSEQoNUkVKRUNUX0NB", 
            "TkNFTBAHEg0KCUlOX01PRElGWRAIEg4KCkFDS19NT0RJRlkQCRIRCg1SRUpF", 
            "Q1RfTU9ESUZZEAoSCAoERklMTBALEgsKB1NVU1BFTkQQDBIQCgxGSUxMX0NP", 
            "UlJFQ1QQDRIPCgtGSUxMX0NBTkNFTBAOEg0KCUZJTExfQlVTVBAPEgwKCEFD", 
            "VElWRUFUEBASDgoKRElTQ09OTkVDVBAREhcKE1NZTlRIRVRJQ19BQ1RJVkFU", 
            "RUQQEhIKCgZVUERBVEUQEyKsAwoJT3JkZXJGaWxsEgoKAmlkGAEgASgSEg8K", 
            "B2V4ZWNfaWQYAiABKAkSEAoIcXVhbnRpdHkYAyABKA0SDQoFcHJpY2UYBCAB", 
            "KAESFQoNZmlsbF91dGNfdGltZRgFIAEoEhIVCg1pc19hZ2dyZXNzaXZlGAYg", 
            "ASgIEioKCWxlZ19maWxscxgHIAMoCzIXLnRyYWRlcm91dGluZ18xLkxlZ0Zp", 
            "bGwSEAoIb3JkZXJfaWQYCCABKAkSEwoLZmlsbF9zdGF0dXMYCSABKA0SIgoa", 
            "ZmlsbF9jYXJlX29yZGVyX3JlcXVlc3RfaWQYCiABKAkSFQoNZGlzcGxheV9w", 
            "cmljZRgLIAEoEhIXCg9vcGVuX2Nsb3NlX3R5cGUYDCABKA0SGAoQc3BlY3Vs", 
            "YXRpb25fdHlwZRgNIAEoDRISCgpjb21taXNzaW9uGA4gASgBEhsKE2NvbW1p", 
            "c3Npb25fY3VycmVuY3kYDyABKAkiQQoKRmlsbFN0YXR1cxIJCgVWQUxJRBAB", 
            "EgoKBkJVU1RFRBACEg0KCUNPUlJFQ1RFRBADEg0KCUNBTkNFTExFRBAEIvsB", 
            "CgdMZWdGaWxsEgoKAmlkGAEgASgSEg8KB2V4ZWNfaWQYAiABKAkSFwoPY29u", 
            "dHJhY3Rfc3ltYm9sGAMgASgJEhAKCHF1YW50aXR5GAQgASgNEgwKBHNpZGUY", 
            "BSABKA0SDQoFcHJpY2UYBiABKAESFQoNZmlsbF91dGNfdGltZRgHIAEoEhIT", 
            "CgtmaWxsX3N0YXR1cxgIIAEoDRIVCg1kaXNwbGF5X3ByaWNlGAkgASgSEhcK", 
            "D29wZW5fY2xvc2VfdHlwZRgKIAEoDRIYChBzcGVjdWxhdGlvbl90eXBlGAsg", 
            "ASgNEhUKDWlzX2FnZ3Jlc3NpdmUYDCABKAgigQEKDFJlbGF0ZWRPcmRlchIv", 
            "CgtvcmRlcl9jaGFpbhgBIAEoCzIaLnRyYWRlcm91dGluZ18xLk9yZGVyQ2hh", 
            "aW4SLgoIY2hpbGRyZW4YAiADKAsyHC50cmFkZXJvdXRpbmdfMS5SZWxhdGVk", 
            "T3JkZXISEAoIbGVnX3BhdGgYAyABKAkilAMKDUNvbXBvdW5kT3JkZXISCgoC", 
            "aWQYASABKAkSEQoJbm9kZV9yb2xlGAIgASgNEgwKBHR5cGUYAyABKA0SEwoL", 
            "Y2xpZW50X2d1aWQYBSABKAkSFAoMdHJpZ2dlcl90eXBlGAYgASgNEi8KC29y", 
            "ZGVyX2NoYWluGAcgASgLMhoudHJhZGVyb3V0aW5nXzEuT3JkZXJDaGFpbhIv", 
            "CghjaGlsZHJlbhgIIAMoCzIdLnRyYWRlcm91dGluZ18xLkNvbXBvdW5kT3Jk", 
            "ZXIiUwoVQ29tcG91bmRPcmRlck5vZGVSb2xlEggKBFJPT1QQARIPCgtPUE9f", 
            "UFJJTUFSWRACEhEKDU9QT19TRUNPTkRBUlkQAxIMCghPQ09fUk9MRRAEIjAK", 
            "EUNvbXBvdW5kT3JkZXJUeXBlEgcKA09DTxABEgcKA09QTxACEgkKBU9SREVS", 
            "EAMiQgoYQ29tcG91bmRPcmRlclRyaWdnZXJUeXBlEgsKB1dvcmtpbmcQARIK", 
            "CgZGaWxsZWQQAhINCglDYW5jZWxsZWQQAyLSAgoLU3RyYXRlZ3lMZWcSEAoI", 
            "bGVnX3BhdGgYASABKAkSFwoPY29udHJhY3Rfc3ltYm9sGAIgASgJEhYKDnF1", 
            "YW50aXR5X3JhdGlvGAMgASgBEhMKC3ByaWNlX3JhdGlvGAQgASgBEgwKBG1v", 
            "ZGUYBSABKA0SLQoHYWNjb3VudBgGIAEoCzIcLnRyYWRlcm91dGluZ18xLkNo", 
            "YWluQWNjb3VudBIkCgt5aWVsZF9tb2RlbBgHIAMoCzIPLmNvbW1vbl8xLlR1", 
            "cGxlEikKBGxlZ3MYCCADKAsyGy50cmFkZXJvdXRpbmdfMS5TdHJhdGVneUxl", 
            "ZxIXCg9vcGVuX2Nsb3NlX3R5cGUYCSABKA0SGAoQc3BlY3VsYXRpb25fdHlw", 
            "ZRgKIAEoDSIqCgxTdHJhdGVneU1vZGUSBwoDQUxMEAESCAoEQUdHUhACEgcK", 
            "A01VTBADIsUECgdBY2NvdW50EgoKAmlkGAEgASgREgwKBG5hbWUYAiABKAkS", 
            "IAoYYnJva2VyYWdlX2FjY291bnRfbnVtYmVyGAMgASgJEhsKE3NhbGVzX3Nl", 
            "cmllc19udW1iZXIYBCABKAkSGQoRc2FsZXNfc2VyaWVzX25hbWUYBSABKAkS", 
            "FgoOYnJva2VyYWdlX25hbWUYBiABKAkSDQoFY2xhc3MYCCABKA0SEwoLY3Vz", 
            "dG9tZXJfaWQYCSABKAkSHAoUcmlza19zZXJ2ZXJfaW5zdGFuY2UYCiABKAkS", 
            "FwoPYWNjb3VudF90eXBlX2lkGAsgASgJEhcKD3NhbGVzX3Nlcmllc19pZBgM", 
            "IAEoCRIUCgxicm9rZXJhZ2VfaWQYDSABKAkSEAoIY3VycmVuY3kYDiABKAkS", 
            "EQoJc3ViX2NsYXNzGA8gASgNEh8KF3Jpc2tfc2VydmVyX2luc3RhbmNlX2lk", 
            "GBAgASgJEhoKEmFjY291bnRfY2x1c3Rlcl9pZBgRIAEoCRIPCgdyZW1vdmVk", 
            "GBIgASgIEhEKCWlzX21hc3RlchgTIAEoCBIbChNncm91cF9yZWxhdGlvbl90", 
            "eXBlGBQgASgNEhUKDWlzX2NvbGxlY3Rpb24YFSABKAgiLwoFQ2xhc3MSCwoH", 
            "UkVHVUxBUhABEgwKCFRFTVBMQVRFEAISCwoHT01OSUJVUxADIjkKCFN1YkNs", 
            "YXNzEhUKEVNVQl9DTEFTU19SRUdVTEFSEAESFgoSU1VCX0NMQVNTX0lOVEVS", 
            "TkFMEAIi5wEKDUJhbGFuY2VSZWNvcmQSEgoKYWNjb3VudF9pZBgBIAIoERIZ", 
            "ChFiYWxhbmNlX3JlY29yZF9pZBgCIAIoERIQCghjdXJyZW5jeRgDIAIoCRIY", 
            "ChBlbmRfY2FzaF9iYWxhbmNlGAQgASgBEhIKCmNvbGxhdGVyYWwYBSABKAES", 
            "EgoKYXNfb2ZfZGF0ZRgGIAEoEhIOCgZvcmlnaW4YByABKA0SEQoJcmVndWxh", 
            "dGVkGAggASgIIjAKDUJhbGFuY2VPcmlnaW4SBgoCTkEQARIJCgVMT0NBTBAC", 
            "EgwKCE9WRVJTRUFTEAMihQIKGUFjY291bnRTZWFyY2hSZXN1bHRSZWNvcmQS", 
            "EgoKYWNjb3VudF9pZBgBIAIoERIMCgRuYW1lGAIgAigJEiAKGGJyb2tlcmFn", 
            "ZV9hY2NvdW50X251bWJlchgDIAIoCRIbChNzYWxlc19zZXJpZXNfbnVtYmVy", 
            "GAQgAigJEhkKEXNhbGVzX3Nlcmllc19uYW1lGAUgAigJEhYKDmJyb2tlcmFn", 
            "ZV9uYW1lGAYgAigJEhMKC2N1c3RvbWVyX2lkGAcgASgJEhUKDWN1c3RvbWVy", 
            "X25hbWUYCCABKAkSDwoHcmVtb3ZlZBgJIAEoCBIXCg9zYWxlc19zZXJpZXNf", 
            "aWQYCiABKAki1gEKEkFjY291bnRSb3V0ZVJlY29yZBISCgpyb3V0ZV9jb2Rl", 
            "GAEgASgREhIKCnJvdXRlX25hbWUYAiABKAkSEAoIcHJpb3JpdHkYAyABKBES", 
            "GgoSb21uaWJ1c19hY2NvdW50X2lkGAQgASgREhwKFG9tbmlidXNfYWNjb3Vu", 
            "dF9uYW1lGAUgASgJEjkKCmF0dHJpYnV0ZXMYBiADKAsyJS50cmFkZXJvdXRp", 
            "bmdfMS5BY2NvdW50Um91dGVBdHRyaWJ1dGUSEQoJaXNfaW5fdXNlGAcgASgI", 
            "IkAKFUFjY291bnRSb3V0ZUF0dHJpYnV0ZRIMCgROYW1lGAEgAigJEg0KBVZh", 
            "bHVlGAIgASgJEgoKAmlkGAMgASgJIucBCg9BY2NvdW50VXNlckxpbmsSEgoK", 
            "YWNjb3VudF9pZBgBIAEoERIPCgd1c2VyX2lkGAIgASgJEhQKDGlzX3ZpZXdf", 
            "b25seRgDIAEoCBIVCg1pc19mb3JjZV9jYXJlGAQgASgIEhEKCXVzZXJfbmFt", 
            "ZRgFIAEoCRIUCgxhY2NvdW50X25hbWUYBiABKAkSIAoYYnJva2VyYWdlX2Fj", 
            "Y291bnRfbnVtYmVyGAcgASgJEhYKDmJyb2tlcmFnZV9uYW1lGAggASgJEh8K", 
            "F2FsbG93X2V4dGVybmFsX2FjY291bnRzGAkgASgIIvcDCg9BY2NvdW50U2V0", 
            "dGluZ3MSEgoKYWNjb3VudF9pZBgBIAEoERIQCghpc19ibG9jaxgCIAEoCBIS", 
            "CgpibG9ja19zaXplGAMgASgREhEKCWlzX2dpdmV1cBgEIAEoCBIdChVnaXZl", 
            "dXBfYnJva2VyYWdlX25hbWUYBSABKAkSGAoQc3RhdGVtZW50X29wdGlvbhgG", 
            "IAEoDRIUCgx6ZXJvX2JhbGFuY2UYByABKAgSFgoOcmVjb25jaWxpYXRpb24Y", 
            "CCABKAgSGwoTZ2l2ZXVwX2Jyb2tlcmFnZV9pZBgJIAEoCRIZChF0cmFkaW5n", 
            "X3RpbWVfZnJvbRgKIAEoCRIXCg90cmFkaW5nX3RpbWVfdG8YCyABKAkSGQoR", 
            "dHJhZGluZ190aW1lX3pvbmUYDCABKAkSLwonbGlxdWlkYXRpb25fb3JkZXJz", 
            "X291dHNpZGVfdHJhZGluZ190aW1lGA0gASgIEhMKC2lzX2luc3RydWN0GA4g", 
            "ASgIEiUKHWV4dGVybmFsbHlfcHJvdmlkZWRfZXhlY3V0aW9uGA8gASgIEhwK", 
            "FG1vZGVzX2FjY291bnRfZ3JvdXBzGBAgAygJIjkKD1N0YXRlbWVudE9wdGlv", 
            "bhIMCghHRU5FUkFURRABEg0KCUJST0tFUkFHRRACEgkKBVJFU0VUEAMiwQgK", 
            "FUFjY291bnRSaXNrUGFyYW1ldGVycxISCgphY2NvdW50X2lkGAEgASgREhgK", 
            "EGxpcXVpZGF0aW9uX29ubHkYAiABKAgSFQoNYWxsb3dfZnV0dXJlcxgDIAEo", 
            "CBIVCg1hbGxvd19vcHRpb25zGAQgASgNEiAKGGVuZm9yY2VfdHJhZGVfc2l6", 
            "ZV9saW1pdBgFIAEoCBIYChB0cmFkZV9zaXplX2xpbWl0GAYgASgREiIKGmVu", 
            "Zm9yY2VfdHJhZGVfbWFyZ2luX2xpbWl0GAcgASgIEhoKEnRyYWRlX21hcmdp", 
            "bl9saW1pdBgIIAEoARInCh9lbmZvcmNlX3RyYWRlX3ByaWNlX2xpbWl0X3Rp", 
            "Y2tzGAkgASgIEkAKF3RyYWRlX3ByaWNlX2xpbWl0X3RpY2tzGAogASgLMh8u", 
            "dHJhZGVyb3V0aW5nXzEuVHJhZGVQcmljZUxpbWl0EigKIGVuZm9yY2VfY29t", 
            "bW9kaXR5X3Bvc2l0aW9uX2xpbWl0GAsgASgIEjwKGGNvbW1vZGl0eV9wb3Np", 
            "dGlvbl9saW1pdBgMIAEoCzIaLnRyYWRlcm91dGluZ18xLkxpbWl0VmFsdWUS", 
            "JwofZW5mb3JjZV9jb250cmFjdF9wb3NpdGlvbl9saW1pdBgNIAEoCBI7Chdj", 
            "b250cmFjdF9wb3NpdGlvbl9saW1pdBgOIAEoCzIaLnRyYWRlcm91dGluZ18x", 
            "LkxpbWl0VmFsdWUSKwojZW5mb3JjZV9tYXJnaW5fc3Vic3lzdGVtX3BhcmFt", 
            "ZXRlcnMYDyABKAgSTgobbWFyZ2luX3N1YnN5c3RlbV9wYXJhbWV0ZXJzGBAg", 
            "ASgLMikudHJhZGVyb3V0aW5nXzEuTWFyZ2luU3Vic3lzdGVtUGFyYW1ldGVy", 
            "cxIgChhlbmZvcmNlX2RhaWx5X2xvc3NfbGltaXQYESABKAgSMwoQZGFpbHlf", 
            "bG9zc19saW1pdBgSIAEoCzIZLnRyYWRlcm91dGluZ18xLkxvc3NMaW1pdBIm", 
            "Ch5lbmZvcmNlX2RlbHRhX2RhaWx5X2xvc3NfbGltaXQYEyABKAgSOQoWZGVs", 
            "dGFfZGFpbHlfbG9zc19saW1pdBgUIAEoCzIZLnRyYWRlcm91dGluZ18xLkxv", 
            "c3NMaW1pdBIaChJtYXhpbXVtX29yZGVyX3JhdGUYFSABKBESIgoacmVqZWN0", 
            "X3Jpc2t5X21hcmtldF9vcmRlcnMYFiABKAgSKQohZW5mb3JjZV90cmFkZV9w", 
            "cmljZV9saW1pdF9wZXJjZW50GBcgASgIEkkKGXRyYWRlX3ByaWNlX2xpbWl0", 
            "X3BlcmNlbnQYGCABKAsyJi50cmFkZXJvdXRpbmdfMS5UcmFkZVByaWNlTGlt", 
            "aXRQZXJjZW50IioKDk9wdGlvbnNUcmFkaW5nEgYKAk5PEAESBwoDQlVZEAIS", 
            "BwoDQUxMEAMi6AEKDEFjY291bnRHcm91cBIQCghncm91cF9pZBgBIAEoCRIZ", 
            "ChFtYXN0ZXJfYWNjb3VudF9pZBgCIAEoCRIVCg1yZWxhdGlvbl90eXBlGAMg", 
            "ASgNEjAKDHN1Yl9hY2NvdW50cxgEIAMoCzIaLnRyYWRlcm91dGluZ18xLlN1", 
            "YkFjY291bnQiYgoMUmVsYXRpb25UeXBlEh8KG01BUkdJTl9JTkRFUEVOREVO", 
            "VExZX0JPUlJPVxABEhwKGE1BUkdJTl9JTkRFUEVOREVOVExZX1NVTRACEhMK", 
            "D01BUkdJTl9UT0dFVEhFUhADInsKClN1YkFjY291bnQSEgoKYWNjb3VudF9p", 
            "ZBgBIAEoCRIUCgxhY2NvdW50X25hbWUYAiABKAkSIAoYYnJva2VyYWdlX2Fj", 
            "Y291bnRfbnVtYmVyGAMgASgJEiEKGXB1cmNoYXNpbmdfcG93ZXJfZnJhY3Rp", 
            "b24YBCABKAEiWQoPVHJhZGVQcmljZUxpbWl0EgwKBG1vZGUYASABKA0SDQoF", 
            "dGlja3MYAiABKBESKQoFdmFsdWUYAyABKAsyGi50cmFkZXJvdXRpbmdfMS5M", 
            "aW1pdFZhbHVlIlcKFlRyYWRlUHJpY2VMaW1pdFBlcmNlbnQSDAoEbW9kZRgB", 
            "IAEoDRIvCgV2YWx1ZRgCIAEoCzIgLnRyYWRlcm91dGluZ18xLkxpbWl0VmFs", 
            "dWVEb3VibGUiZAoKTGltaXRWYWx1ZRIMCgRtb2RlGAEgASgNEg0KBXZhbHVl", 
            "GAIgASgREjkKEGV4cGlyYXRpb25fbGltaXQYAyADKAsyHy50cmFkZXJvdXRp", 
            "bmdfMS5FeHBpcmF0aW9uTGltaXQiLwoQTGltaXRWYWx1ZURvdWJsZRIMCgRt", 
            "b2RlGAEgASgNEg0KBXZhbHVlGAIgASgBIkAKD0V4cGlyYXRpb25MaW1pdBIe", 
            "ChZkYXlzX2JlZm9yZV9leHBpcmF0aW9uGAEgASgNEg0KBXZhbHVlGAIgASgR", 
            "Ip4EChlNYXJnaW5TdWJzeXN0ZW1QYXJhbWV0ZXJzEh8KF2FsbG93YWJsZV9t", 
            "YXJnaW5fY3JlZGl0GAEgASgBEhcKD2Nyb3NzX21hcmdpbmluZxgCIAEoCBIW", 
            "Cg5pbmNsdWRlX290ZV9wcBgDIAEoDRIWCg5pbmNsdWRlX25vdl9wcBgEIAEo", 
            "DRIWCg5pbmNsdWRlX3VwbF9sbBgFIAEoDRIWCg5pbmNsdWRlX290ZV9sbBgG", 
            "IAEoDRIeChZjaGVja19uZWdhdGl2ZV9iYWxhbmNlGAcgASgIEhcKD3VzZV90", 
            "aGVvX3ByaWNlcxgIIAEoCBISCgp0aGVvX3RpY2tzGAkgASgREhMKC3VzZV9i", 
            "YmFfb3RlGAogASgIEhcKD3VzZV9iYmFfbm92X3VwbBgLIAEoCBIhChlhZGp1", 
            "c3RfcHJpY2VfYnlfbmV0Y2hhbmdlGAwgASgIEiIKGnVzZV9icm9rZXJhZ2Vf", 
            "bWFyZ2luc19vbmx5GA0gASgIEhkKEW1hcmdpbl9tdWx0aXBsaWVyGA4gASgB", 
            "Ei4KJnVzZV9pbnN0cnVtZW50X2dyb3VwX21hcmdpbl9tdWx0aXBsaWVyGA8g", 
            "ASgIEioKImluc3RydW1lbnRfZ3JvdXBfbWFyZ2luX211bHRpcGxpZXIYECAB", 
            "KAEiLgoNSW5jbHVkZU9wdGlvbhIHCgNZRVMQARIMCghORUdBVElWRRACEgYK", 
            "Ak5PEAMioAEKCUxvc3NMaW1pdBIMCgR0eXBlGAEgAigNEg8KB3BlcmNlbnQY", 
            "AiABKAESDgoGYW1vdW50GAMgASgBImQKBFR5cGUSCwoHUEVSQ0VOVBABEgoK", 
            "BkFNT1VOVBACEhYKEk1JTl9QRVJDRU5UX0FNT1VOVBADEhYKEk1BWF9QRVJD", 
            "RU5UX0FNT1VOVBAEEhMKD0FNT1VOVF9OT19MSU1JVBAFIngKDUV4Y2hhbmdl", 
            "R3JvdXASCgoCaWQYASACKBESHAoEbmFtZRgCIAIoCzIOLmNvbW1vbl8xLlRl", 
            "eHQSPQoSZnVuZ2libGVfY29tbW9kaXR5GAMgAygLMiEudHJhZGVyb3V0aW5n", 
            "XzEuRnVuZ2libGVDb21tb2RpdHkipwEKEUZ1bmdpYmxlQ29tbW9kaXR5EgoK", 
            "AmlkGAEgAigREhwKBG5hbWUYAiACKAsyDi5jb21tb25fMS5UZXh0Ej0KEnRy", 
            "YWRhYmxlX2NvbW1vZGl0eRgDIAMoCzIhLnRyYWRlcm91dGluZ18xLlRyYWRh", 
            "YmxlQ29tbW9kaXR5Eg0KBWlzX3VzGAQgAigIEhoKEmluc3RydW1lbnRfdHlw", 
            "ZV9pZBgFIAMoESIvChFUcmFkYWJsZUNvbW1vZGl0eRIKCgJpZBgBIAIoCRIO", 
            "CgZzeW1ib2wYAiACKAkizgEKDkluc3RydW1lbnRUeXBlEgoKAmlkGAEgAigR", 
            "EhwKBG5hbWUYAiACKAsyDi5jb21tb25fMS5UZXh0EhYKDmFsbG93ZWRfbGlt", 
            "aXRzGAMgAygNInoKD01hcmtldExpbWl0VHlwZRIdChlJTlNUUlVNRU5UX1BP", 
            "U0lUSU9OX0xJTUlUEAESGwoXQ09OVFJBQ1RfUE9TSVRJT05fTElNSVQQAhIU", 
            "ChBUUkFERV9TSVpFX0xJTUlUEAMSFQoRVFJBREVfUFJJQ0VfTElNSVQQBCKT", 
            "AgoMTWFya2V0TGltaXRzEj0KEWFsbF9tYXJrZXRfbGltaXRzGAEgASgLMiIu", 
            "dHJhZGVyb3V0aW5nXzEuTWFya2V0TGltaXRzUmVjb3JkEjwKEHVzX21hcmtl", 
            "dF9saW1pdHMYAiABKAsyIi50cmFkZXJvdXRpbmdfMS5NYXJrZXRMaW1pdHNS", 
            "ZWNvcmQSQAoUbm9uX3VzX21hcmtldF9saW1pdHMYAyABKAsyIi50cmFkZXJv", 
            "dXRpbmdfMS5NYXJrZXRMaW1pdHNSZWNvcmQSRAoWZXhjaGFuZ2VfbWFya2V0", 
            "X2xpbWl0cxgEIAMoCzIkLnRyYWRlcm91dGluZ18xLkV4Y2hhbmdlTWFya2V0", 
            "TGltaXRzIpQBChJNYXJrZXRMaW1pdHNSZWNvcmQSGAoQYWxsb3dlZF90b190", 
            "cmFkZRgBIAEoCBIZChFtYXJnaW5fbXVsdGlwbGllchgCIAEoARJJChlwb3Np", 
            "dGlvbl9hbmRfdHJhZGVfbGltaXRzGAMgASgLMiYudHJhZGVyb3V0aW5nXzEu", 
            "UG9zaXRpb25BbmRUcmFkZUxpbWl0cyLmBQoWUG9zaXRpb25BbmRUcmFkZUxp", 
            "bWl0cxI8Chhjb21tb2RpdHlfcG9zaXRpb25fbGltaXQYASABKAsyGi50cmFk", 
            "ZXJvdXRpbmdfMS5MaW1pdFZhbHVlEj0KGWluc3RydW1lbnRfcG9zaXRpb25f", 
            "bGltaXQYAiABKAsyGi50cmFkZXJvdXRpbmdfMS5MaW1pdFZhbHVlEjsKF2Nv", 
            "bnRyYWN0X3Bvc2l0aW9uX2xpbWl0GAMgASgLMhoudHJhZGVyb3V0aW5nXzEu", 
            "TGltaXRWYWx1ZRI0ChB0cmFkZV9zaXplX2xpbWl0GAQgASgLMhoudHJhZGVy", 
            "b3V0aW5nXzEuTGltaXRWYWx1ZRI7Chd0cmFkZV9wcmljZV9saW1pdF90aWNr", 
            "cxgFIAEoCzIaLnRyYWRlcm91dGluZ18xLkxpbWl0VmFsdWUSQwoZdHJhZGVf", 
            "cHJpY2VfbGltaXRfcGVyY2VudBgGIAEoCzIgLnRyYWRlcm91dGluZ18xLkxp", 
            "bWl0VmFsdWVEb3VibGUSUQoidHJhZGVfcHJpY2VfbGltaXRfdGlja3NfY29u", 
            "dGludW91cxgHIAEoCzIlLnRyYWRlcm91dGluZ18xLlRyYWRlUHJpY2VMaW1p", 
            "dHNUaWNrcxJVCiZ0cmFkZV9wcmljZV9saW1pdF90aWNrc19ub25fY29udGlu", 
            "dW91cxgIIAEoCzIlLnRyYWRlcm91dGluZ18xLlRyYWRlUHJpY2VMaW1pdHNU", 
            "aWNrcxJVCiR0cmFkZV9wcmljZV9saW1pdF9wZXJjZW50X2NvbnRpbnVvdXMY", 
            "CSABKAsyJy50cmFkZXJvdXRpbmdfMS5UcmFkZVByaWNlTGltaXRzUGVyY2Vu", 
            "dBJZCih0cmFkZV9wcmljZV9saW1pdF9wZXJjZW50X25vbl9jb250aW51b3Vz", 
            "GAogASgLMicudHJhZGVyb3V0aW5nXzEuVHJhZGVQcmljZUxpbWl0c1BlcmNl", 
            "bnQiyAEKFVRyYWRlUHJpY2VMaW1pdHNUaWNrcxIrCgdiaWRfYXNrGAEgASgL", 
            "MhoudHJhZGVyb3V0aW5nXzEuTGltaXRWYWx1ZRIoCgRsYXN0GAIgASgLMhou", 
            "dHJhZGVyb3V0aW5nXzEuTGltaXRWYWx1ZRIoCgRvcGVuGAMgASgLMhoudHJh", 
            "ZGVyb3V0aW5nXzEuTGltaXRWYWx1ZRIuCgpzZXR0bGVtZW50GAQgASgLMhou", 
            "dHJhZGVyb3V0aW5nXzEuTGltaXRWYWx1ZSLiAQoXVHJhZGVQcmljZUxpbWl0", 
            "c1BlcmNlbnQSMQoHYmlkX2FzaxgBIAEoCzIgLnRyYWRlcm91dGluZ18xLkxp", 
            "bWl0VmFsdWVEb3VibGUSLgoEbGFzdBgCIAEoCzIgLnRyYWRlcm91dGluZ18x", 
            "LkxpbWl0VmFsdWVEb3VibGUSLgoEb3BlbhgDIAEoCzIgLnRyYWRlcm91dGlu", 
            "Z18xLkxpbWl0VmFsdWVEb3VibGUSNAoKc2V0dGxlbWVudBgEIAEoCzIgLnRy", 
            "YWRlcm91dGluZ18xLkxpbWl0VmFsdWVEb3VibGUivAEKFEV4Y2hhbmdlTWFy", 
            "a2V0TGltaXRzEhkKEWV4Y2hhbmdlX2dyb3VwX2lkGAEgAigREkEKFWRlZmF1", 
            "bHRfbWFya2V0X2xpbWl0cxgCIAEoCzIiLnRyYWRlcm91dGluZ18xLk1hcmtl", 
            "dExpbWl0c1JlY29yZBJGChdjb21tb2RpdHlfbWFya2V0X2xpbWl0cxgDIAMo", 
            "CzIlLnRyYWRlcm91dGluZ18xLkNvbW1vZGl0eU1hcmtldExpbWl0cyLqAQoV", 
            "Q29tbW9kaXR5TWFya2V0TGltaXRzEh0KFWZ1bmdpYmxlX2NvbW1vZGl0eV9p", 
            "ZBgBIAIoERIdChV0cmFkYWJsZV9jb21tb2RpdHlfaWQYAiADKAkSSQoZcG9z", 
            "aXRpb25fYW5kX3RyYWRlX2xpbWl0cxgDIAEoCzImLnRyYWRlcm91dGluZ18x", 
            "LlBvc2l0aW9uQW5kVHJhZGVMaW1pdHMSSAoYaW5zdHJ1bWVudF9tYXJrZXRf", 
            "bGltaXRzGAQgAygLMiYudHJhZGVyb3V0aW5nXzEuSW5zdHJ1bWVudE1hcmtl", 
            "dExpbWl0cyJ/ChZJbnN0cnVtZW50TWFya2V0TGltaXRzEhoKEmluc3RydW1l", 
            "bnRfdHlwZV9pZBgBIAIoERJJChlwb3NpdGlvbl9hbmRfdHJhZGVfbGltaXRz", 
            "GAIgASgLMiYudHJhZGVyb3V0aW5nXzEuUG9zaXRpb25BbmRUcmFkZUxpbWl0", 
            "cyJ3ChBDb250cmFjdFBvc2l0aW9uEg4KBnN5bWJvbBgBIAIoCRIeChZpc19z", 
            "aG9ydF9vcGVuX3Bvc2l0aW9uGAIgAigIEjMKDW9wZW5fcG9zaXRpb24YAyAD", 
            "KAsyHC50cmFkZXJvdXRpbmdfMS5PcGVuUG9zaXRpb24igwEKDE9wZW5Qb3Np", 
            "dGlvbhILCgNxdHkYAiACKA0SDQoFcHJpY2UYAyACKAESEgoKdHJhZGVfZGF0", 
            "ZRgEIAIoEhIWCg5zdGF0ZW1lbnRfZGF0ZRgFIAIoEhIWCg50cmFkZV91dGNf", 
            "dGltZRgGIAEoEhITCgtwb3NpdGlvbl9pZBgHIAEoCSLeAQoGRXF1aXR5EhAK", 
            "CGN1cnJlbmN5GAEgAigJEhIKCnNlY3VyaXRpZXMYAiACKAESDwoHYmFsYW5j", 
            "ZRgDIAIoARILCgNvdGUYBCACKAESFAoMdG90YWxfZXF1aXR5GAUgAigBEgsK", 
            "A212bxgGIAIoARITCgt0b3RhbF92YWx1ZRgHIAIoARITCgtjYXNoX2V4Y2Vz", 
            "cxgIIAEoARIWCg5pbml0aWFsX21hcmdpbhgJIAEoARIUCgxtYWludF9tYXJn", 
            "aW4YCiABKAESFQoNcG9zdGVkX21hcmdpbhgLIAEoASJOCgpDb2xsYXRlcmFs", 
            "EhAKCGN1cnJlbmN5GAQgAigJEhQKDHRvdGFsX21hcmdpbhgFIAIoARIYChBw", 
            "dXJjaGFzaW5nX3Bvd2VyGAYgAigBIvIEChdPcmRlclNlYXJjaFJlc3VsdFJl", 
            "Y29yZBIgChhicm9rZXJhZ2VfYWNjb3VudF9udW1iZXIYASACKAkSEAoIb3Jk", 
            "ZXJfaWQYAiACKAkSFQoNdGlja2V0X251bWJlchgDIAEoCRIMCgRzaWRlGAQg", 
            "AigNEgwKBHR5cGUYBSACKA0SEwoLbGltaXRfcHJpY2UYBiABKAESEgoKc3Rv", 
            "cF9wcmljZRgHIAEoARIVCg1jb250cmFjdF9uYW1lGAggAigJEhoKEnN1Ym1p", 
            "dHRlZF91dGNfdGltZRgJIAIoEhIOCgZzdGF0dXMYCiACKA0SEQoJdXNlcl9u", 
            "YW1lGAsgASgJEhoKEmN1c3RvbWVyX2xhc3RfbmFtZRgMIAEoCRIWCg5icm9r", 
            "ZXJhZ2VfbmFtZRgNIAIoCRISCgpyb3V0ZV9uYW1lGA4gAigJEhIKCmFjY291", 
            "bnRfaWQYDyACKBESFAoMYWNjb3VudF9uYW1lGBAgAigJEhkKEW5hdGl2ZV9y", 
            "b3V0ZV9uYW1lGBEgASgJEh0KFXJvdXRlX2NsaWVudF9vcmRlcl9pZBgSIAIo", 
            "CRIVCg1leGNoYW5nZV9uYW1lGBMgAigJEhYKDmNoYWluX29yZGVyX2lkGBQg", 
            "ASgJEhsKE2Rpc3BsYXlfbGltaXRfcHJpY2UYFSABKBISGgoSZGlzcGxheV9z", 
            "dG9wX3ByaWNlGBYgASgSEgwKBHNpemUYFyABKA0SGwoTc2FsZXNfc2VyaWVz", 
            "X251bWJlchgYIAEoCRIZChFzYWxlc19zZXJpZXNfbmFtZRgZIAEoCRIXCg9z", 
            "YWxlc19zZXJpZXNfaWQYGiABKAkiVAoOQWNjb3VudENsdXN0ZXISCgoCaWQY", 
            "ASABKAkSFAoMYnJva2VyYWdlX2lkGAIgASgJEgwKBG5hbWUYAyABKAkSEgoK", 
            "aXNfcmVtb3ZlZBgEIAEoCCLiAQoZQWNjb3VudENsdXN0ZXJQcmljZU9mZnNl", 
            "dBIWCg5jbGVhcmVkX2ZpZWxkcxgHIAMoDRIUCgxjb21tb2RpdHlfaWQYASAB", 
            "KAkSGgoSaW5zdHJ1bWVudF90eXBlX2lkGAIgASgREhoKEnByaWNlX29mZnNl", 
            "dF90aWNrcxgDIAEoERIaChJoZWRnZV9vZmZzZXRfdGlja3MYBCABKBESHgoW", 
            "aGVkZ2VfZXhlY19pbnN0cnVjdGlvbhgFIAMoDRIjChtpY2ViZXJnX3Zpc2li", 
            "bGVfcXR5X3BlcmNlbnQYBiABKA0i9AEKBVJvdXRlEjsKEXJvdXRlX2luZm9y", 
            "bWF0aW9uGAEgASgLMiAudHJhZGVyb3V0aW5nXzEuUm91dGVJbmZvcm1hdGlv", 
            "bhIQCghwcmlvcml0eRgCIAEoDRIcChRvbW5pYnVzX3N1cHBvcnRfdHlwZRgD", 
            "IAEoDRI9ChBvbW5pYnVzX2FjY291bnRzGAQgAygLMiMudHJhZGVyb3V0aW5n", 
            "XzEuUm91dGVPbW5pYnVzQWNjb3VudCI/ChJPbW5pYnVzU3VwcG9ydFR5cGUS", 
            "DgoKUFJPSElCSVRFRBABEgsKB0FMTE9XRUQQAhIMCghSRVFVSVJFRBADInMK", 
            "E1JvdXRlT21uaWJ1c0FjY291bnQSEgoKYWNjb3VudF9pZBgBIAEoCRIUCgxh", 
            "Y2NvdW50X25hbWUYAiABKAkSIAoYYnJva2VyYWdlX2FjY291bnRfbnVtYmVy", 
            "GAMgASgJEhAKCHByaW9yaXR5GAQgASgNItcBChBSb3V0ZUluZm9ybWF0aW9u", 
            "EhIKCnJvdXRlX2NvZGUYASABKAkSEgoKcm91dGVfbmFtZRgCIAEoCRIcChRz", 
            "eW50aGV0aWNfc3RyYXRlZ2llcxgDIAEoCBI5CgphdHRyaWJ1dGVzGAQgAygL", 
            "MiUudHJhZGVyb3V0aW5nXzEuQWNjb3VudFJvdXRlQXR0cmlidXRlEiIKGmhh", 
            "c19vdmVybGFwcGVkX2luc3RydW1lbnRzGAUgASgIEh4KFmF1dGhvcml6YXRp", 
            "b25fcmVxdWlyZWQYBiABKAgiJAoOUmVzdG9yZUFjY291bnQSEgoKYWNjb3Vu", 
            "dF9pZBgBIAEoCSI0Ch5BY2NvdW50VHlwZU92ZXJyaWRlTGlzdFJlcXVlc3QS", 
            "EgoKYWNjb3VudF9pZBgBIAEoCSKgAQodVXBkYXRlQWNjb3VudFR5cGVPdmVy", 
            "cmlkZUxpc3QSEgoKYWNjb3VudF9pZBgBIAEoCRI9ChBvdmVycmlkZXNfdG9f", 
            "c2V0GAIgAygLMiMudHJhZGVyb3V0aW5nXzEuQWNjb3VudFR5cGVPdmVycmlk", 
            "ZRIsChNvdmVycmlkZXNfdG9fcmVtb3ZlGAMgAygLMg8uY29tbW9uXzEuVHVw", 
            "bGUiFgoUUmVzdG9yZUFjY291bnRSZXN1bHQiVwodQWNjb3VudFR5cGVPdmVy", 
            "cmlkZUxpc3RSZXN1bHQSNgoJb3ZlcnJpZGVzGAEgAygLMiMudHJhZGVyb3V0", 
            "aW5nXzEuQWNjb3VudFR5cGVPdmVycmlkZSJhChNBY2NvdW50VHlwZU92ZXJy", 
            "aWRlEhQKDGV4Y2hhbmdlX2tleRgCIAEoCRIQCghsb2dpbl9pZBgDIAEoCRIP", 
            "Cgd0eXBlX2lkGAQgASgJEhEKCW9yaWdpbl9pZBgFIAEoCSIlCiNVcGRhdGVB", 
            "Y2NvdW50VHlwZU92ZXJyaWRlTGlzdFJlc3VsdCKFAQoiVXBkYXRlQWNjb3Vu", 
            "dFVzZXJBdXRob3JpemF0aW9uTGlzdBI1CgxsaW5rc190b19zZXQYASADKAsy", 
            "Hy50cmFkZXJvdXRpbmdfMS5BY2NvdW50VXNlckxpbmsSKAoPbGlua3NfdG9f", 
            "cmVtb3ZlGAIgAygLMg8uY29tbW9uXzEuVHVwbGUiKgooVXBkYXRlQWNjb3Vu", 
            "dFVzZXJBdXRob3JpemF0aW9uTGlzdFJlc3VsdCIjCg1SZW1vdmVBY2NvdW50", 
            "EhIKCmFjY291bnRfaWQYASABKAkiFQoTUmVtb3ZlQWNjb3VudFJlc3VsdCqt", 
            "AQoeVHJhZGVSb3V0aW5nTG9va3VwUHJvcGVydHlUeXBlEhAKDEFDQ09VTlRf", 
            "VFlQRRBlEhcKE01PREVTX0FDQ09VTlRfR1JPVVAQZhINCglUSU1FX1pPTkUQ", 
            "ZxIYChRSSVNLX1NFUlZFUl9JTlNUQU5DRRBoEhIKDlRSQURFX0xPQ0FUSU9O", 
            "EGkSDwoLT1JERVJfQ0xBU1MQahISCg5BQ0NPVU5UX09SSUdJThBrKloKDlBy", 
            "aWNlTGltaXRNb2RlEhIKDkFHR1JFU1NJVkVfTE1UEAESFgoSQUdHUkVTU0lW", 
            "RV9MTVRfU1RQEAISCwoHQUxMX0xNVBADEg8KC0FMTF9MTVRfU1RQEAQqNAoJ", 
            "TGltaXRNb2RlEgsKB0RFRkFVTFQQARINCglVTkxJTUlURUQQAhILCgdMSU1J", 
          "VEVEEAM="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_traderouting_1_TradeRoutingRequest__Descriptor = Descriptor.MessageTypes[0];
        internal__static_traderouting_1_TradeRoutingRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradeRoutingRequest, global::CmsApiSamples.Protocol.CMSApi.TradeRoutingRequest.Builder>(internal__static_traderouting_1_TradeRoutingRequest__Descriptor,
                new string[] { "Id", "AccountScopeRequest", "OrderScopeRequest", "LookupPropertyListRequest", });
        internal__static_traderouting_1_AccountScopeRequest__Descriptor = Descriptor.MessageTypes[1];
        internal__static_traderouting_1_AccountScopeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest, global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest.Builder>(internal__static_traderouting_1_AccountScopeRequest__Descriptor,
                new string[] { "AccountInfoRequest", "BalanceRecordsRequest", "CreateBalanceRecord", "UpdateBalanceRecord", "AccountRiskParametersRequest", "UpdateRiskParameters", "AccountSearchRequest", "AccountRouteListRequest", "AccountUserAuthorizationListRequest", "AccountSettingsRequest", "AccountAvailableExchangeGroupsRequest", "AccountMarketLimitsRequest", "AccountPositionsRequest", "AccountEquityRequest", "AccountCollateralRequest", "CloneAccount", "UpdateAccount", "UpdateAccountSettings", "AccountGroupRequest", "UpdateAccountRiskParameters", "RouteListRequest", "UpdateAccountRouteList", "UpdateAccountMarketLimits", "CreateAccount", "AccountClusterRequest", "CreateAccountCluster", "UpdateAccountCluster", "UpdateAccountClusterPriceOffsets", "RestoreAccount", "AccountTypeOverrideListRequest", "UpdateAccountTypeOverrideList", "UpdateAccountUserAuthorizationList", "RemoveAccount", });
        internal__static_traderouting_1_OrderScopeRequest__Descriptor = Descriptor.MessageTypes[2];
        internal__static_traderouting_1_OrderScopeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest, global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest.Builder>(internal__static_traderouting_1_OrderScopeRequest__Descriptor,
                new string[] { "OrderDetailsRequest", "AddFill", "CreateExternalOrder", "OrderSearchRequest", "RelatedOrderTreeRequest", "CompoundOrderTreeRequest", "SyntheticStrategyTreeRequest", "CancelOrder", "ReflectAsCanceledOrder", "CancelCompoundOrderTree", });
        internal__static_traderouting_1_OrderDetailsRequest__Descriptor = Descriptor.MessageTypes[3];
        internal__static_traderouting_1_OrderDetailsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest, global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest.Builder>(internal__static_traderouting_1_OrderDetailsRequest__Descriptor,
                new string[] { "AccountId", "OrderId", "TradeLocationId", "OrderRequestsTop", });
        internal__static_traderouting_1_AddFill__Descriptor = Descriptor.MessageTypes[4];
        internal__static_traderouting_1_AddFill__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AddFill, global::CmsApiSamples.Protocol.CMSApi.AddFill.Builder>(internal__static_traderouting_1_AddFill__Descriptor,
                new string[] { "AccountId", "OrderId", "Quantity", "Price", "FillUtcTime", "IsAggressive", "DisplayPrice", "OpenCloseType", "SpeculationType", "TradeLocationId", });
        internal__static_traderouting_1_CreateExternalOrder__Descriptor = Descriptor.MessageTypes[5];
        internal__static_traderouting_1_CreateExternalOrder__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder, global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder.Builder>(internal__static_traderouting_1_CreateExternalOrder__Descriptor,
                new string[] { "AccountId", "UserId", "ContractSymbol", "Side", "OrderType", "LimitPrice", "StopPrice", "FillQuantity", "FillPrice", "FillUtcTime", "DisplayLimitPrice", "DisplayStopPrice", "DisplayFillPrice", "OpenCloseType", "SpeculationType", "FillIsAggressive", });
        internal__static_traderouting_1_OrderSearchRequest__Descriptor = Descriptor.MessageTypes[6];
        internal__static_traderouting_1_OrderSearchRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest, global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest.Builder>(internal__static_traderouting_1_OrderSearchRequest__Descriptor,
                new string[] { "Text", "SearchCriteria", "Top", "TradeLocationId", "Archived", "SearchOptions", "AllMatchMode", });
        internal__static_traderouting_1_RelatedOrderTreeRequest__Descriptor = Descriptor.MessageTypes[7];
        internal__static_traderouting_1_RelatedOrderTreeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest, global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest.Builder>(internal__static_traderouting_1_RelatedOrderTreeRequest__Descriptor,
                new string[] { "ChainOrderId", "TradeLocationId", "OrderRequestsTop", "Top", });
        internal__static_traderouting_1_CompoundOrderTreeRequest__Descriptor = Descriptor.MessageTypes[8];
        internal__static_traderouting_1_CompoundOrderTreeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest, global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest.Builder>(internal__static_traderouting_1_CompoundOrderTreeRequest__Descriptor,
                new string[] { "CompoundTreeId", "TradeLocationId", "OrderRequestsTop", "Top", });
        internal__static_traderouting_1_SyntheticStrategyTreeRequest__Descriptor = Descriptor.MessageTypes[9];
        internal__static_traderouting_1_SyntheticStrategyTreeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest, global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest.Builder>(internal__static_traderouting_1_SyntheticStrategyTreeRequest__Descriptor,
                new string[] { "RootChainOrderId", "TradeLocationId", });
        internal__static_traderouting_1_CancelOrder__Descriptor = Descriptor.MessageTypes[10];
        internal__static_traderouting_1_CancelOrder__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CancelOrder, global::CmsApiSamples.Protocol.CMSApi.CancelOrder.Builder>(internal__static_traderouting_1_CancelOrder__Descriptor,
                new string[] { "ChainOrderId", "AccountId", "TradeLocationId", });
        internal__static_traderouting_1_ReflectAsCanceledOrder__Descriptor = Descriptor.MessageTypes[11];
        internal__static_traderouting_1_ReflectAsCanceledOrder__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder, global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder.Builder>(internal__static_traderouting_1_ReflectAsCanceledOrder__Descriptor,
                new string[] { "ChainOrderId", "AccountId", "TradeLocationId", });
        internal__static_traderouting_1_CancelCompoundOrderTree__Descriptor = Descriptor.MessageTypes[12];
        internal__static_traderouting_1_CancelCompoundOrderTree__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree, global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree.Builder>(internal__static_traderouting_1_CancelCompoundOrderTree__Descriptor,
                new string[] { "CompoundTreeId", "AccountId", "TradeLocationId", });
        internal__static_traderouting_1_AccountInfoRequest__Descriptor = Descriptor.MessageTypes[13];
        internal__static_traderouting_1_AccountInfoRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest, global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest.Builder>(internal__static_traderouting_1_AccountInfoRequest__Descriptor,
                new string[] { "AccountId", "BrokerageAccountNumber", });
        internal__static_traderouting_1_BalanceRecordsRequest__Descriptor = Descriptor.MessageTypes[14];
        internal__static_traderouting_1_BalanceRecordsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest, global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest.Builder>(internal__static_traderouting_1_BalanceRecordsRequest__Descriptor,
                new string[] { "AccountId", "Currency", "BalanceId", });
        internal__static_traderouting_1_CreateBalanceRecord__Descriptor = Descriptor.MessageTypes[15];
        internal__static_traderouting_1_CreateBalanceRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord, global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord.Builder>(internal__static_traderouting_1_CreateBalanceRecord__Descriptor,
                new string[] { "AccountId", "Currency", "EndCashBalance", "Collateral", "Regulated", });
        internal__static_traderouting_1_UpdateBalanceRecord__Descriptor = Descriptor.MessageTypes[16];
        internal__static_traderouting_1_UpdateBalanceRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord, global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord.Builder>(internal__static_traderouting_1_UpdateBalanceRecord__Descriptor,
                new string[] { "BalanceId", "EndCashBalance", "Collateral", });
        internal__static_traderouting_1_AccountSearchRequest__Descriptor = Descriptor.MessageTypes[17];
        internal__static_traderouting_1_AccountSearchRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest, global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest.Builder>(internal__static_traderouting_1_AccountSearchRequest__Descriptor,
                new string[] { "Text", "SearchCriteria", "Top", "IncludeRemoved", "SearchOptions", "AllMatchMode", });
        internal__static_traderouting_1_AccountRouteListRequest__Descriptor = Descriptor.MessageTypes[18];
        internal__static_traderouting_1_AccountRouteListRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest, global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest.Builder>(internal__static_traderouting_1_AccountRouteListRequest__Descriptor,
                new string[] { "AccountId", });
        internal__static_traderouting_1_AccountUserAuthorizationListRequest__Descriptor = Descriptor.MessageTypes[19];
        internal__static_traderouting_1_AccountUserAuthorizationListRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest, global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest.Builder>(internal__static_traderouting_1_AccountUserAuthorizationListRequest__Descriptor,
                new string[] { "AccountId", "UserId", "Top", });
        internal__static_traderouting_1_AccountSettingsRequest__Descriptor = Descriptor.MessageTypes[20];
        internal__static_traderouting_1_AccountSettingsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest, global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest.Builder>(internal__static_traderouting_1_AccountSettingsRequest__Descriptor,
                new string[] { "AccountId", });
        internal__static_traderouting_1_AccountRiskParametersRequest__Descriptor = Descriptor.MessageTypes[21];
        internal__static_traderouting_1_AccountRiskParametersRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest, global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest.Builder>(internal__static_traderouting_1_AccountRiskParametersRequest__Descriptor,
                new string[] { "AccountId", });
        internal__static_traderouting_1_UpdateRiskParameters__Descriptor = Descriptor.MessageTypes[22];
        internal__static_traderouting_1_UpdateRiskParameters__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters, global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters.Builder>(internal__static_traderouting_1_UpdateRiskParameters__Descriptor,
                new string[] { "AccountId", "LiquidationOnly", "AllowFutures", "AllowOptions", "AllowableMarginCredit", });
        internal__static_traderouting_1_AccountAvailableExchangeGroupsRequest__Descriptor = Descriptor.MessageTypes[23];
        internal__static_traderouting_1_AccountAvailableExchangeGroupsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest, global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest.Builder>(internal__static_traderouting_1_AccountAvailableExchangeGroupsRequest__Descriptor,
                new string[] { "AccountId", });
        internal__static_traderouting_1_AccountMarketLimitsRequest__Descriptor = Descriptor.MessageTypes[24];
        internal__static_traderouting_1_AccountMarketLimitsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest, global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest.Builder>(internal__static_traderouting_1_AccountMarketLimitsRequest__Descriptor,
                new string[] { "AccountId", });
        internal__static_traderouting_1_AccountPositionsRequest__Descriptor = Descriptor.MessageTypes[25];
        internal__static_traderouting_1_AccountPositionsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest, global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest.Builder>(internal__static_traderouting_1_AccountPositionsRequest__Descriptor,
                new string[] { "AccountId", });
        internal__static_traderouting_1_AccountEquityRequest__Descriptor = Descriptor.MessageTypes[26];
        internal__static_traderouting_1_AccountEquityRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest, global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest.Builder>(internal__static_traderouting_1_AccountEquityRequest__Descriptor,
                new string[] { "AccountId", "Currency", });
        internal__static_traderouting_1_AccountCollateralRequest__Descriptor = Descriptor.MessageTypes[27];
        internal__static_traderouting_1_AccountCollateralRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest, global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest.Builder>(internal__static_traderouting_1_AccountCollateralRequest__Descriptor,
                new string[] { "AccountId", });
        internal__static_traderouting_1_CloneAccount__Descriptor = Descriptor.MessageTypes[28];
        internal__static_traderouting_1_CloneAccount__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CloneAccount, global::CmsApiSamples.Protocol.CMSApi.CloneAccount.Builder>(internal__static_traderouting_1_CloneAccount__Descriptor,
                new string[] { "SourceAccountId", "NewAccountName", "NewAccountBrokerageNumber", "NewAccountUserId", });
        internal__static_traderouting_1_UpdateAccount__Descriptor = Descriptor.MessageTypes[29];
        internal__static_traderouting_1_UpdateAccount__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccount, global::CmsApiSamples.Protocol.CMSApi.UpdateAccount.Builder>(internal__static_traderouting_1_UpdateAccount__Descriptor,
                new string[] { "Account", "OriginalAccount", });
        internal__static_traderouting_1_AccountClusterRequest__Descriptor = Descriptor.MessageTypes[30];
        internal__static_traderouting_1_AccountClusterRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest, global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest.Builder>(internal__static_traderouting_1_AccountClusterRequest__Descriptor,
                new string[] { "AccountClusterId", });
        internal__static_traderouting_1_CreateAccountCluster__Descriptor = Descriptor.MessageTypes[31];
        internal__static_traderouting_1_CreateAccountCluster__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster, global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster.Builder>(internal__static_traderouting_1_CreateAccountCluster__Descriptor,
                new string[] { "AccountCluster", });
        internal__static_traderouting_1_UpdateAccountCluster__Descriptor = Descriptor.MessageTypes[32];
        internal__static_traderouting_1_UpdateAccountCluster__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster.Builder>(internal__static_traderouting_1_UpdateAccountCluster__Descriptor,
                new string[] { "AccountCluster", "OriginalAccountCluster", });
        internal__static_traderouting_1_UpdateAccountClusterPriceOffsets__Descriptor = Descriptor.MessageTypes[33];
        internal__static_traderouting_1_UpdateAccountClusterPriceOffsets__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets.Builder>(internal__static_traderouting_1_UpdateAccountClusterPriceOffsets__Descriptor,
                new string[] { "AccountClusterId", "OffsetsToSet", "OffsetsToRemove", });
        internal__static_traderouting_1_UpdateAccountSettings__Descriptor = Descriptor.MessageTypes[34];
        internal__static_traderouting_1_UpdateAccountSettings__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings.Builder>(internal__static_traderouting_1_UpdateAccountSettings__Descriptor,
                new string[] { "Settings", "OriginalSettings", });
        internal__static_traderouting_1_AccountGroupRequest__Descriptor = Descriptor.MessageTypes[35];
        internal__static_traderouting_1_AccountGroupRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest, global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest.Builder>(internal__static_traderouting_1_AccountGroupRequest__Descriptor,
                new string[] { "AccountId", });
        internal__static_traderouting_1_UpdateAccountRiskParameters__Descriptor = Descriptor.MessageTypes[36];
        internal__static_traderouting_1_UpdateAccountRiskParameters__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters.Builder>(internal__static_traderouting_1_UpdateAccountRiskParameters__Descriptor,
                new string[] { "RiskParameters", "OriginalRiskParameters", });
        internal__static_traderouting_1_UpdateAccountRouteList__Descriptor = Descriptor.MessageTypes[37];
        internal__static_traderouting_1_UpdateAccountRouteList__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList.Builder>(internal__static_traderouting_1_UpdateAccountRouteList__Descriptor,
                new string[] { "AccountId", "RoutesToSet", "RouteCodesToRemove", });
        internal__static_traderouting_1_UpdateAccountMarketLimits__Descriptor = Descriptor.MessageTypes[38];
        internal__static_traderouting_1_UpdateAccountMarketLimits__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits.Builder>(internal__static_traderouting_1_UpdateAccountMarketLimits__Descriptor,
                new string[] { "AccountId", "MarketLimits", "OriginalMarketLimits", });
        internal__static_traderouting_1_RouteListRequest__Descriptor = Descriptor.MessageTypes[39];
        internal__static_traderouting_1_RouteListRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RouteListRequest, global::CmsApiSamples.Protocol.CMSApi.RouteListRequest.Builder>(internal__static_traderouting_1_RouteListRequest__Descriptor,
                new string[] { "AccountId", });
        internal__static_traderouting_1_CreateAccount__Descriptor = Descriptor.MessageTypes[40];
        internal__static_traderouting_1_CreateAccount__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateAccount, global::CmsApiSamples.Protocol.CMSApi.CreateAccount.Builder>(internal__static_traderouting_1_CreateAccount__Descriptor,
                new string[] { "Account", });
        internal__static_traderouting_1_TradeRoutingResult__Descriptor = Descriptor.MessageTypes[41];
        internal__static_traderouting_1_TradeRoutingResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradeRoutingResult, global::CmsApiSamples.Protocol.CMSApi.TradeRoutingResult.Builder>(internal__static_traderouting_1_TradeRoutingResult__Descriptor,
                new string[] { "RequestId", "OperationStatus", "ErrorMessage", "AccountScopeResult", "OrderScopeResult", "LookupPropertyListResult", });
        internal__static_traderouting_1_AccountScopeResult__Descriptor = Descriptor.MessageTypes[42];
        internal__static_traderouting_1_AccountScopeResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult, global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult.Builder>(internal__static_traderouting_1_AccountScopeResult__Descriptor,
                new string[] { "AccountInfoResult", "BalanceRecordsResult", "CreateBalanceRecordResult", "UpdateBalanceRecordResult", "AccountRiskParametersResult", "UpdateRiskParametersResult", "AccountSearchResult", "AccountRouteListResult", "AccountUserAuthorizationListResult", "AccountSettingsResult", "AccountExchangeGroupsResult", "AccountMarketLimitsResult", "AccountPositionsResult", "AccountEquityResult", "AccountCollateralResult", "CloneAccountResult", "UpdateAccountResult", "UpdateAccountSettingsResult", "AccountGroupResult", "UpdateAccountRiskParametersResult", "RouteListResult", "UpdateAccountRouteListResult", "UpdateAccountMarketLimitsResult", "CreateAccountResult", "AccountClusterResult", "CreateAccountClusterResult", "UpdateAccountClusterResult", "UpdateAccountClusterPriceOffsetsResult", "RestoreAccountResult", "AccountTypeOverrideListResult", "UpdateAccountTypeOverrideListResult", "UpdateAccountUserAuthorizationListResult", "RemoveAccountResult", });
        internal__static_traderouting_1_OrderScopeResult__Descriptor = Descriptor.MessageTypes[43];
        internal__static_traderouting_1_OrderScopeResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult, global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult.Builder>(internal__static_traderouting_1_OrderScopeResult__Descriptor,
                new string[] { "OrderDetailsResult", "AddFillResult", "CreateExternalOrderResult", "OrderSearchResult", "RelatedOrderTreeResult", "CompoundOrderTreeResult", "SyntheticStrategyTreeResult", "CancelOrderResult", "ReflectAsCanceledOrderResult", "CancelCompoundOrderTreeResult", });
        internal__static_traderouting_1_OrderDetailsResult__Descriptor = Descriptor.MessageTypes[44];
        internal__static_traderouting_1_OrderDetailsResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult, global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult.Builder>(internal__static_traderouting_1_OrderDetailsResult__Descriptor,
                new string[] { "OrderChain", "IsComplete", });
        internal__static_traderouting_1_AddFillResult__Descriptor = Descriptor.MessageTypes[45];
        internal__static_traderouting_1_AddFillResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AddFillResult, global::CmsApiSamples.Protocol.CMSApi.AddFillResult.Builder>(internal__static_traderouting_1_AddFillResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_CreateExternalOrderResult__Descriptor = Descriptor.MessageTypes[46];
        internal__static_traderouting_1_CreateExternalOrderResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult, global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult.Builder>(internal__static_traderouting_1_CreateExternalOrderResult__Descriptor,
                new string[] { "OrderId", "TradeLocationId", });
        internal__static_traderouting_1_OrderSearchResult__Descriptor = Descriptor.MessageTypes[47];
        internal__static_traderouting_1_OrderSearchResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult, global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult.Builder>(internal__static_traderouting_1_OrderSearchResult__Descriptor,
                new string[] { "OrderRecord", "IsComplete", });
        internal__static_traderouting_1_RelatedOrderTreeResult__Descriptor = Descriptor.MessageTypes[48];
        internal__static_traderouting_1_RelatedOrderTreeResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult, global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult.Builder>(internal__static_traderouting_1_RelatedOrderTreeResult__Descriptor,
                new string[] { "RelatedOrder", "IsComplete", });
        internal__static_traderouting_1_CompoundOrderTreeResult__Descriptor = Descriptor.MessageTypes[49];
        internal__static_traderouting_1_CompoundOrderTreeResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult, global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult.Builder>(internal__static_traderouting_1_CompoundOrderTreeResult__Descriptor,
                new string[] { "CompoundOrder", "IsComplete", });
        internal__static_traderouting_1_SyntheticStrategyTreeResult__Descriptor = Descriptor.MessageTypes[50];
        internal__static_traderouting_1_SyntheticStrategyTreeResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult, global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult.Builder>(internal__static_traderouting_1_SyntheticStrategyTreeResult__Descriptor,
                new string[] { "Legs", "StrategyName", });
        internal__static_traderouting_1_CancelOrderResult__Descriptor = Descriptor.MessageTypes[51];
        internal__static_traderouting_1_CancelOrderResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult, global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult.Builder>(internal__static_traderouting_1_CancelOrderResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_ReflectAsCanceledOrderResult__Descriptor = Descriptor.MessageTypes[52];
        internal__static_traderouting_1_ReflectAsCanceledOrderResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult, global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult.Builder>(internal__static_traderouting_1_ReflectAsCanceledOrderResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_CancelCompoundOrderTreeResult__Descriptor = Descriptor.MessageTypes[53];
        internal__static_traderouting_1_CancelCompoundOrderTreeResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult, global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult.Builder>(internal__static_traderouting_1_CancelCompoundOrderTreeResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_AccountInfoResult__Descriptor = Descriptor.MessageTypes[54];
        internal__static_traderouting_1_AccountInfoResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult, global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult.Builder>(internal__static_traderouting_1_AccountInfoResult__Descriptor,
                new string[] { "Account", });
        internal__static_traderouting_1_BalanceRecordsResult__Descriptor = Descriptor.MessageTypes[55];
        internal__static_traderouting_1_BalanceRecordsResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult, global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult.Builder>(internal__static_traderouting_1_BalanceRecordsResult__Descriptor,
                new string[] { "BalanceRecord", });
        internal__static_traderouting_1_CreateBalanceRecordResult__Descriptor = Descriptor.MessageTypes[56];
        internal__static_traderouting_1_CreateBalanceRecordResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult, global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult.Builder>(internal__static_traderouting_1_CreateBalanceRecordResult__Descriptor,
                new string[] { "BalanceRecordId", });
        internal__static_traderouting_1_UpdateBalanceRecordResult__Descriptor = Descriptor.MessageTypes[57];
        internal__static_traderouting_1_UpdateBalanceRecordResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult, global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult.Builder>(internal__static_traderouting_1_UpdateBalanceRecordResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_AccountSearchResult__Descriptor = Descriptor.MessageTypes[58];
        internal__static_traderouting_1_AccountSearchResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult, global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult.Builder>(internal__static_traderouting_1_AccountSearchResult__Descriptor,
                new string[] { "AccountRecord", "IsComplete", });
        internal__static_traderouting_1_AccountRouteListResult__Descriptor = Descriptor.MessageTypes[59];
        internal__static_traderouting_1_AccountRouteListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult, global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult.Builder>(internal__static_traderouting_1_AccountRouteListResult__Descriptor,
                new string[] { "AccountRouteRecord", });
        internal__static_traderouting_1_AccountUserAuthorizationListResult__Descriptor = Descriptor.MessageTypes[60];
        internal__static_traderouting_1_AccountUserAuthorizationListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult, global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult.Builder>(internal__static_traderouting_1_AccountUserAuthorizationListResult__Descriptor,
                new string[] { "AccountUserLink", "IsComplete", });
        internal__static_traderouting_1_AccountSettingsResult__Descriptor = Descriptor.MessageTypes[61];
        internal__static_traderouting_1_AccountSettingsResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult, global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult.Builder>(internal__static_traderouting_1_AccountSettingsResult__Descriptor,
                new string[] { "AccountSettings", });
        internal__static_traderouting_1_AccountRiskParametersResult__Descriptor = Descriptor.MessageTypes[62];
        internal__static_traderouting_1_AccountRiskParametersResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult, global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult.Builder>(internal__static_traderouting_1_AccountRiskParametersResult__Descriptor,
                new string[] { "AccountRiskParameters", });
        internal__static_traderouting_1_UpdateRiskParametersResult__Descriptor = Descriptor.MessageTypes[63];
        internal__static_traderouting_1_UpdateRiskParametersResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult, global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult.Builder>(internal__static_traderouting_1_UpdateRiskParametersResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_AccountExchangeGroupsResult__Descriptor = Descriptor.MessageTypes[64];
        internal__static_traderouting_1_AccountExchangeGroupsResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult, global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult.Builder>(internal__static_traderouting_1_AccountExchangeGroupsResult__Descriptor,
                new string[] { "ExchangeGroup", "InstrumentType", });
        internal__static_traderouting_1_AccountMarketLimitsResult__Descriptor = Descriptor.MessageTypes[65];
        internal__static_traderouting_1_AccountMarketLimitsResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult, global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult.Builder>(internal__static_traderouting_1_AccountMarketLimitsResult__Descriptor,
                new string[] { "AccountMarketLimits", });
        internal__static_traderouting_1_AccountPositionsResult__Descriptor = Descriptor.MessageTypes[66];
        internal__static_traderouting_1_AccountPositionsResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult, global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult.Builder>(internal__static_traderouting_1_AccountPositionsResult__Descriptor,
                new string[] { "ContractPosition", });
        internal__static_traderouting_1_AccountEquityResult__Descriptor = Descriptor.MessageTypes[67];
        internal__static_traderouting_1_AccountEquityResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult, global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult.Builder>(internal__static_traderouting_1_AccountEquityResult__Descriptor,
                new string[] { "Equity", });
        internal__static_traderouting_1_AccountCollateralResult__Descriptor = Descriptor.MessageTypes[68];
        internal__static_traderouting_1_AccountCollateralResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult, global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult.Builder>(internal__static_traderouting_1_AccountCollateralResult__Descriptor,
                new string[] { "Collateral", });
        internal__static_traderouting_1_CloneAccountResult__Descriptor = Descriptor.MessageTypes[69];
        internal__static_traderouting_1_CloneAccountResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult, global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult.Builder>(internal__static_traderouting_1_CloneAccountResult__Descriptor,
                new string[] { "NewAccountId", });
        internal__static_traderouting_1_UpdateAccountResult__Descriptor = Descriptor.MessageTypes[70];
        internal__static_traderouting_1_UpdateAccountResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult.Builder>(internal__static_traderouting_1_UpdateAccountResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_UpdateAccountSettingsResult__Descriptor = Descriptor.MessageTypes[71];
        internal__static_traderouting_1_UpdateAccountSettingsResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult.Builder>(internal__static_traderouting_1_UpdateAccountSettingsResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_AccountGroupResult__Descriptor = Descriptor.MessageTypes[72];
        internal__static_traderouting_1_AccountGroupResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult, global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult.Builder>(internal__static_traderouting_1_AccountGroupResult__Descriptor,
                new string[] { "AcountGroup", });
        internal__static_traderouting_1_UpdateAccountRiskParametersResult__Descriptor = Descriptor.MessageTypes[73];
        internal__static_traderouting_1_UpdateAccountRiskParametersResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult.Builder>(internal__static_traderouting_1_UpdateAccountRiskParametersResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_RouteListResult__Descriptor = Descriptor.MessageTypes[74];
        internal__static_traderouting_1_RouteListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RouteListResult, global::CmsApiSamples.Protocol.CMSApi.RouteListResult.Builder>(internal__static_traderouting_1_RouteListResult__Descriptor,
                new string[] { "Routes", });
        internal__static_traderouting_1_UpdateAccountRouteListResult__Descriptor = Descriptor.MessageTypes[75];
        internal__static_traderouting_1_UpdateAccountRouteListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult.Builder>(internal__static_traderouting_1_UpdateAccountRouteListResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_UpdateAccountMarketLimitsResult__Descriptor = Descriptor.MessageTypes[76];
        internal__static_traderouting_1_UpdateAccountMarketLimitsResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult.Builder>(internal__static_traderouting_1_UpdateAccountMarketLimitsResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_CreateAccountResult__Descriptor = Descriptor.MessageTypes[77];
        internal__static_traderouting_1_CreateAccountResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult, global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult.Builder>(internal__static_traderouting_1_CreateAccountResult__Descriptor,
                new string[] { "Id", });
        internal__static_traderouting_1_AccountClusterResult__Descriptor = Descriptor.MessageTypes[78];
        internal__static_traderouting_1_AccountClusterResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult, global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult.Builder>(internal__static_traderouting_1_AccountClusterResult__Descriptor,
                new string[] { "AccountCluster", "AccountClusterPriceOffsets", });
        internal__static_traderouting_1_CreateAccountClusterResult__Descriptor = Descriptor.MessageTypes[79];
        internal__static_traderouting_1_CreateAccountClusterResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult, global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult.Builder>(internal__static_traderouting_1_CreateAccountClusterResult__Descriptor,
                new string[] { "Id", });
        internal__static_traderouting_1_UpdateAccountClusterResult__Descriptor = Descriptor.MessageTypes[80];
        internal__static_traderouting_1_UpdateAccountClusterResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult.Builder>(internal__static_traderouting_1_UpdateAccountClusterResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_UpdateAccountClusterPriceOffsetsResult__Descriptor = Descriptor.MessageTypes[81];
        internal__static_traderouting_1_UpdateAccountClusterPriceOffsetsResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult.Builder>(internal__static_traderouting_1_UpdateAccountClusterPriceOffsetsResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_OrderChain__Descriptor = Descriptor.MessageTypes[82];
        internal__static_traderouting_1_OrderChain__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderChain, global::CmsApiSamples.Protocol.CMSApi.OrderChain.Builder>(internal__static_traderouting_1_OrderChain__Descriptor,
                new string[] { "ChainOrderId", "OrderId", "ChainOrigAccountId", "SubmittedUtcTime", "ContractSymbol", "Side", "Size", "LimitPrice", "StopPrice", "ExecInstruction", "Duration", "GoodThruDate", "GoodThruUtcTime", "Status", "OrderType", "OrderRequest", "OrderFill", "OrderClasses", "DisplayLimitPrice", "DisplayStopPrice", "ExecutionAccountName", "Trailing", "Sizes", "Accounts", "CompoundTreeId", "RootChainOrderId", "Checked", "TradingExpression", "Legs", "ContractDescription", "UserAttributes", "ClientAlgoStrategy", "AlgoStrategy", "Route", "ExpirationTime", "OpenCloseType", "SpeculationType", "Archived", "OrderIdAtExchange", "DiscretionaryOffset", });
        internal__static_traderouting_1_ChainAccount__Descriptor = Descriptor.MessageTypes[83];
        internal__static_traderouting_1_ChainAccount__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ChainAccount, global::CmsApiSamples.Protocol.CMSApi.ChainAccount.Builder>(internal__static_traderouting_1_ChainAccount__Descriptor,
                new string[] { "AccountId", "AccountName", "BrokerageAccountNumber", });
        internal__static_traderouting_1_OrderRoute__Descriptor = Descriptor.MessageTypes[84];
        internal__static_traderouting_1_OrderRoute__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderRoute, global::CmsApiSamples.Protocol.CMSApi.OrderRoute.Builder>(internal__static_traderouting_1_OrderRoute__Descriptor,
                new string[] { "Code", "Name", "OrderId", });
        internal__static_traderouting_1_OrderContractLeg__Descriptor = Descriptor.MessageTypes[85];
        internal__static_traderouting_1_OrderContractLeg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg, global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg.Builder>(internal__static_traderouting_1_OrderContractLeg__Descriptor,
                new string[] { "Number", "Size", "Side", "ContractSymbol", });
        internal__static_traderouting_1_AccountAndUserInfo__Descriptor = Descriptor.MessageTypes[86];
        internal__static_traderouting_1_AccountAndUserInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo, global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo.Builder>(internal__static_traderouting_1_AccountAndUserInfo__Descriptor,
                new string[] { "AccountId", "UserInfo", "RejectDetails", "RejectDetailsInternal", "UserId", "UserName", "AccountName", "BrokerageAccountNumber", });
        internal__static_traderouting_1_OrderRequest__Descriptor = Descriptor.MessageTypes[87];
        internal__static_traderouting_1_OrderRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderRequest, global::CmsApiSamples.Protocol.CMSApi.OrderRequest.Builder>(internal__static_traderouting_1_OrderRequest__Descriptor,
                new string[] { "OrderId", "SubmittedUtcTime", "RequestType", "OrderType", "Size", "LimitPrice", "StopPrice", "Duration", "GoodThruDate", "GoodThruUtcTime", "State", "LinkOrderId", "TransactionStatus", "AccountAndUserInfo", "DisplayLimitPrice", "DisplayStopPrice", "Trailing", "Sizes", "TicketNumber", "Comments", "OrderClasses", "NativeOrderType", "ActivationTime", "SuspensionTime", "ExpirationTime", "Routes", "ClientRegulatoryAlgorithmId", "EffectiveRegulatoryAlgorithmId", "OperationalDetails", "Instructions", "ClientExtraValues", "RouteClientOrderId", "DiscretionaryOffset", });
        internal__static_traderouting_1_OrderSizes__Descriptor = Descriptor.MessageTypes[88];
        internal__static_traderouting_1_OrderSizes__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderSizes, global::CmsApiSamples.Protocol.CMSApi.OrderSizes.Builder>(internal__static_traderouting_1_OrderSizes__Descriptor,
                new string[] { "TriggerSize", "VisibleSize", "MinVisibleSize", "RemainingSize", });
        internal__static_traderouting_1_OrderTrailing__Descriptor = Descriptor.MessageTypes[89];
        internal__static_traderouting_1_OrderTrailing__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderTrailing, global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.Builder>(internal__static_traderouting_1_OrderTrailing__Descriptor,
                new string[] { "TrailType", "Offset", "StopPrice", "LimitPrice", "DisplayOffset", "DisplayStopPrice", "DisplayLimitPrice", "UpdateTime", });
        internal__static_traderouting_1_OperationalDetails__Descriptor = Descriptor.MessageTypes[90];
        internal__static_traderouting_1_OperationalDetails__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OperationalDetails, global::CmsApiSamples.Protocol.CMSApi.OperationalDetails.Builder>(internal__static_traderouting_1_OperationalDetails__Descriptor,
                new string[] { "ClientOrderId", "ClientGuid", "ClientSystemId", "ClientIp", "ClientVersion", "TradeLocationId", });
        internal__static_traderouting_1_TransactionStatus__Descriptor = Descriptor.MessageTypes[91];
        internal__static_traderouting_1_TransactionStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TransactionStatus, global::CmsApiSamples.Protocol.CMSApi.TransactionStatus.Builder>(internal__static_traderouting_1_TransactionStatus__Descriptor,
                new string[] { "Status", "TransId", "TransUtcTime", "OrderState", "OrderChainStatus", "TextMessage", "NewDiscretionaryOffset", "PrevDiscretionaryOffset", });
        internal__static_traderouting_1_OrderFill__Descriptor = Descriptor.MessageTypes[92];
        internal__static_traderouting_1_OrderFill__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderFill, global::CmsApiSamples.Protocol.CMSApi.OrderFill.Builder>(internal__static_traderouting_1_OrderFill__Descriptor,
                new string[] { "Id", "ExecId", "Quantity", "Price", "FillUtcTime", "IsAggressive", "LegFills", "OrderId", "FillStatus", "FillCareOrderRequestId", "DisplayPrice", "OpenCloseType", "SpeculationType", "Commission", "CommissionCurrency", });
        internal__static_traderouting_1_LegFill__Descriptor = Descriptor.MessageTypes[93];
        internal__static_traderouting_1_LegFill__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LegFill, global::CmsApiSamples.Protocol.CMSApi.LegFill.Builder>(internal__static_traderouting_1_LegFill__Descriptor,
                new string[] { "Id", "ExecId", "ContractSymbol", "Quantity", "Side", "Price", "FillUtcTime", "FillStatus", "DisplayPrice", "OpenCloseType", "SpeculationType", "IsAggressive", });
        internal__static_traderouting_1_RelatedOrder__Descriptor = Descriptor.MessageTypes[94];
        internal__static_traderouting_1_RelatedOrder__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RelatedOrder, global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.Builder>(internal__static_traderouting_1_RelatedOrder__Descriptor,
                new string[] { "OrderChain", "Children", "LegPath", });
        internal__static_traderouting_1_CompoundOrder__Descriptor = Descriptor.MessageTypes[95];
        internal__static_traderouting_1_CompoundOrder__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CompoundOrder, global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.Builder>(internal__static_traderouting_1_CompoundOrder__Descriptor,
                new string[] { "Id", "NodeRole", "Type", "ClientGuid", "TriggerType", "OrderChain", "Children", });
        internal__static_traderouting_1_StrategyLeg__Descriptor = Descriptor.MessageTypes[96];
        internal__static_traderouting_1_StrategyLeg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.StrategyLeg, global::CmsApiSamples.Protocol.CMSApi.StrategyLeg.Builder>(internal__static_traderouting_1_StrategyLeg__Descriptor,
                new string[] { "LegPath", "ContractSymbol", "QuantityRatio", "PriceRatio", "Mode", "Account", "YieldModel", "Legs", "OpenCloseType", "SpeculationType", });
        internal__static_traderouting_1_Account__Descriptor = Descriptor.MessageTypes[97];
        internal__static_traderouting_1_Account__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Account, global::CmsApiSamples.Protocol.CMSApi.Account.Builder>(internal__static_traderouting_1_Account__Descriptor,
                new string[] { "Id", "Name", "BrokerageAccountNumber", "SalesSeriesNumber", "SalesSeriesName", "BrokerageName", "Class", "CustomerId", "RiskServerInstance", "AccountTypeId", "SalesSeriesId", "BrokerageId", "Currency", "SubClass", "RiskServerInstanceId", "AccountClusterId", "Removed", "IsMaster", "GroupRelationType", "IsCollection", });
        internal__static_traderouting_1_BalanceRecord__Descriptor = Descriptor.MessageTypes[98];
        internal__static_traderouting_1_BalanceRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.BalanceRecord, global::CmsApiSamples.Protocol.CMSApi.BalanceRecord.Builder>(internal__static_traderouting_1_BalanceRecord__Descriptor,
                new string[] { "AccountId", "BalanceRecordId", "Currency", "EndCashBalance", "Collateral", "AsOfDate", "Origin", "Regulated", });
        internal__static_traderouting_1_AccountSearchResultRecord__Descriptor = Descriptor.MessageTypes[99];
        internal__static_traderouting_1_AccountSearchResultRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord, global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord.Builder>(internal__static_traderouting_1_AccountSearchResultRecord__Descriptor,
                new string[] { "AccountId", "Name", "BrokerageAccountNumber", "SalesSeriesNumber", "SalesSeriesName", "BrokerageName", "CustomerId", "CustomerName", "Removed", "SalesSeriesId", });
        internal__static_traderouting_1_AccountRouteRecord__Descriptor = Descriptor.MessageTypes[100];
        internal__static_traderouting_1_AccountRouteRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord, global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord.Builder>(internal__static_traderouting_1_AccountRouteRecord__Descriptor,
                new string[] { "RouteCode", "RouteName", "Priority", "OmnibusAccountId", "OmnibusAccountName", "Attributes", "IsInUse", });
        internal__static_traderouting_1_AccountRouteAttribute__Descriptor = Descriptor.MessageTypes[101];
        internal__static_traderouting_1_AccountRouteAttribute__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute, global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute.Builder>(internal__static_traderouting_1_AccountRouteAttribute__Descriptor,
                new string[] { "Name", "Value", "Id", });
        internal__static_traderouting_1_AccountUserLink__Descriptor = Descriptor.MessageTypes[102];
        internal__static_traderouting_1_AccountUserLink__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountUserLink, global::CmsApiSamples.Protocol.CMSApi.AccountUserLink.Builder>(internal__static_traderouting_1_AccountUserLink__Descriptor,
                new string[] { "AccountId", "UserId", "IsViewOnly", "IsForceCare", "UserName", "AccountName", "BrokerageAccountNumber", "BrokerageName", "AllowExternalAccounts", });
        internal__static_traderouting_1_AccountSettings__Descriptor = Descriptor.MessageTypes[103];
        internal__static_traderouting_1_AccountSettings__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountSettings, global::CmsApiSamples.Protocol.CMSApi.AccountSettings.Builder>(internal__static_traderouting_1_AccountSettings__Descriptor,
                new string[] { "AccountId", "IsBlock", "BlockSize", "IsGiveup", "GiveupBrokerageName", "StatementOption", "ZeroBalance", "Reconciliation", "GiveupBrokerageId", "TradingTimeFrom", "TradingTimeTo", "TradingTimeZone", "LiquidationOrdersOutsideTradingTime", "IsInstruct", "ExternallyProvidedExecution", "ModesAccountGroups", });
        internal__static_traderouting_1_AccountRiskParameters__Descriptor = Descriptor.MessageTypes[104];
        internal__static_traderouting_1_AccountRiskParameters__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters, global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.Builder>(internal__static_traderouting_1_AccountRiskParameters__Descriptor,
                new string[] { "AccountId", "LiquidationOnly", "AllowFutures", "AllowOptions", "EnforceTradeSizeLimit", "TradeSizeLimit", "EnforceTradeMarginLimit", "TradeMarginLimit", "EnforceTradePriceLimitTicks", "TradePriceLimitTicks", "EnforceCommodityPositionLimit", "CommodityPositionLimit", "EnforceContractPositionLimit", "ContractPositionLimit", "EnforceMarginSubsystemParameters", "MarginSubsystemParameters", "EnforceDailyLossLimit", "DailyLossLimit", "EnforceDeltaDailyLossLimit", "DeltaDailyLossLimit", "MaximumOrderRate", "RejectRiskyMarketOrders", "EnforceTradePriceLimitPercent", "TradePriceLimitPercent", });
        internal__static_traderouting_1_AccountGroup__Descriptor = Descriptor.MessageTypes[105];
        internal__static_traderouting_1_AccountGroup__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountGroup, global::CmsApiSamples.Protocol.CMSApi.AccountGroup.Builder>(internal__static_traderouting_1_AccountGroup__Descriptor,
                new string[] { "GroupId", "MasterAccountId", "RelationType", "SubAccounts", });
        internal__static_traderouting_1_SubAccount__Descriptor = Descriptor.MessageTypes[106];
        internal__static_traderouting_1_SubAccount__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.SubAccount, global::CmsApiSamples.Protocol.CMSApi.SubAccount.Builder>(internal__static_traderouting_1_SubAccount__Descriptor,
                new string[] { "AccountId", "AccountName", "BrokerageAccountNumber", "PurchasingPowerFraction", });
        internal__static_traderouting_1_TradePriceLimit__Descriptor = Descriptor.MessageTypes[107];
        internal__static_traderouting_1_TradePriceLimit__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit, global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit.Builder>(internal__static_traderouting_1_TradePriceLimit__Descriptor,
                new string[] { "Mode", "Ticks", "Value", });
        internal__static_traderouting_1_TradePriceLimitPercent__Descriptor = Descriptor.MessageTypes[108];
        internal__static_traderouting_1_TradePriceLimitPercent__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent, global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent.Builder>(internal__static_traderouting_1_TradePriceLimitPercent__Descriptor,
                new string[] { "Mode", "Value", });
        internal__static_traderouting_1_LimitValue__Descriptor = Descriptor.MessageTypes[109];
        internal__static_traderouting_1_LimitValue__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LimitValue, global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder>(internal__static_traderouting_1_LimitValue__Descriptor,
                new string[] { "Mode", "Value", "ExpirationLimit", });
        internal__static_traderouting_1_LimitValueDouble__Descriptor = Descriptor.MessageTypes[110];
        internal__static_traderouting_1_LimitValueDouble__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble, global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder>(internal__static_traderouting_1_LimitValueDouble__Descriptor,
                new string[] { "Mode", "Value", });
        internal__static_traderouting_1_ExpirationLimit__Descriptor = Descriptor.MessageTypes[111];
        internal__static_traderouting_1_ExpirationLimit__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit, global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit.Builder>(internal__static_traderouting_1_ExpirationLimit__Descriptor,
                new string[] { "DaysBeforeExpiration", "Value", });
        internal__static_traderouting_1_MarginSubsystemParameters__Descriptor = Descriptor.MessageTypes[112];
        internal__static_traderouting_1_MarginSubsystemParameters__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters, global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters.Builder>(internal__static_traderouting_1_MarginSubsystemParameters__Descriptor,
                new string[] { "AllowableMarginCredit", "CrossMargining", "IncludeOtePp", "IncludeNovPp", "IncludeUplLl", "IncludeOteLl", "CheckNegativeBalance", "UseTheoPrices", "TheoTicks", "UseBbaOte", "UseBbaNovUpl", "AdjustPriceByNetchange", "UseBrokerageMarginsOnly", "MarginMultiplier", "UseInstrumentGroupMarginMultiplier", "InstrumentGroupMarginMultiplier", });
        internal__static_traderouting_1_LossLimit__Descriptor = Descriptor.MessageTypes[113];
        internal__static_traderouting_1_LossLimit__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.LossLimit, global::CmsApiSamples.Protocol.CMSApi.LossLimit.Builder>(internal__static_traderouting_1_LossLimit__Descriptor,
                new string[] { "Type", "Percent", "Amount", });
        internal__static_traderouting_1_ExchangeGroup__Descriptor = Descriptor.MessageTypes[114];
        internal__static_traderouting_1_ExchangeGroup__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup, global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup.Builder>(internal__static_traderouting_1_ExchangeGroup__Descriptor,
                new string[] { "Id", "Name", "FungibleCommodity", });
        internal__static_traderouting_1_FungibleCommodity__Descriptor = Descriptor.MessageTypes[115];
        internal__static_traderouting_1_FungibleCommodity__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity, global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity.Builder>(internal__static_traderouting_1_FungibleCommodity__Descriptor,
                new string[] { "Id", "Name", "TradableCommodity", "IsUs", "InstrumentTypeId", });
        internal__static_traderouting_1_TradableCommodity__Descriptor = Descriptor.MessageTypes[116];
        internal__static_traderouting_1_TradableCommodity__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradableCommodity, global::CmsApiSamples.Protocol.CMSApi.TradableCommodity.Builder>(internal__static_traderouting_1_TradableCommodity__Descriptor,
                new string[] { "Id", "Symbol", });
        internal__static_traderouting_1_InstrumentType__Descriptor = Descriptor.MessageTypes[117];
        internal__static_traderouting_1_InstrumentType__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.InstrumentType, global::CmsApiSamples.Protocol.CMSApi.InstrumentType.Builder>(internal__static_traderouting_1_InstrumentType__Descriptor,
                new string[] { "Id", "Name", "AllowedLimits", });
        internal__static_traderouting_1_MarketLimits__Descriptor = Descriptor.MessageTypes[118];
        internal__static_traderouting_1_MarketLimits__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.MarketLimits, global::CmsApiSamples.Protocol.CMSApi.MarketLimits.Builder>(internal__static_traderouting_1_MarketLimits__Descriptor,
                new string[] { "AllMarketLimits", "UsMarketLimits", "NonUsMarketLimits", "ExchangeMarketLimits", });
        internal__static_traderouting_1_MarketLimitsRecord__Descriptor = Descriptor.MessageTypes[119];
        internal__static_traderouting_1_MarketLimitsRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord, global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.Builder>(internal__static_traderouting_1_MarketLimitsRecord__Descriptor,
                new string[] { "AllowedToTrade", "MarginMultiplier", "PositionAndTradeLimits", });
        internal__static_traderouting_1_PositionAndTradeLimits__Descriptor = Descriptor.MessageTypes[120];
        internal__static_traderouting_1_PositionAndTradeLimits__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits, global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.Builder>(internal__static_traderouting_1_PositionAndTradeLimits__Descriptor,
                new string[] { "CommodityPositionLimit", "InstrumentPositionLimit", "ContractPositionLimit", "TradeSizeLimit", "TradePriceLimitTicks", "TradePriceLimitPercent", "TradePriceLimitTicksContinuous", "TradePriceLimitTicksNonContinuous", "TradePriceLimitPercentContinuous", "TradePriceLimitPercentNonContinuous", });
        internal__static_traderouting_1_TradePriceLimitsTicks__Descriptor = Descriptor.MessageTypes[121];
        internal__static_traderouting_1_TradePriceLimitsTicks__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks, global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.Builder>(internal__static_traderouting_1_TradePriceLimitsTicks__Descriptor,
                new string[] { "BidAsk", "Last", "Open", "Settlement", });
        internal__static_traderouting_1_TradePriceLimitsPercent__Descriptor = Descriptor.MessageTypes[122];
        internal__static_traderouting_1_TradePriceLimitsPercent__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent, global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.Builder>(internal__static_traderouting_1_TradePriceLimitsPercent__Descriptor,
                new string[] { "BidAsk", "Last", "Open", "Settlement", });
        internal__static_traderouting_1_ExchangeMarketLimits__Descriptor = Descriptor.MessageTypes[123];
        internal__static_traderouting_1_ExchangeMarketLimits__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits, global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits.Builder>(internal__static_traderouting_1_ExchangeMarketLimits__Descriptor,
                new string[] { "ExchangeGroupId", "DefaultMarketLimits", "CommodityMarketLimits", });
        internal__static_traderouting_1_CommodityMarketLimits__Descriptor = Descriptor.MessageTypes[124];
        internal__static_traderouting_1_CommodityMarketLimits__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits, global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits.Builder>(internal__static_traderouting_1_CommodityMarketLimits__Descriptor,
                new string[] { "FungibleCommodityId", "TradableCommodityId", "PositionAndTradeLimits", "InstrumentMarketLimits", });
        internal__static_traderouting_1_InstrumentMarketLimits__Descriptor = Descriptor.MessageTypes[125];
        internal__static_traderouting_1_InstrumentMarketLimits__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits, global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits.Builder>(internal__static_traderouting_1_InstrumentMarketLimits__Descriptor,
                new string[] { "InstrumentTypeId", "PositionAndTradeLimits", });
        internal__static_traderouting_1_ContractPosition__Descriptor = Descriptor.MessageTypes[126];
        internal__static_traderouting_1_ContractPosition__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.ContractPosition, global::CmsApiSamples.Protocol.CMSApi.ContractPosition.Builder>(internal__static_traderouting_1_ContractPosition__Descriptor,
                new string[] { "Symbol", "IsShortOpenPosition", "OpenPosition", });
        internal__static_traderouting_1_OpenPosition__Descriptor = Descriptor.MessageTypes[127];
        internal__static_traderouting_1_OpenPosition__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OpenPosition, global::CmsApiSamples.Protocol.CMSApi.OpenPosition.Builder>(internal__static_traderouting_1_OpenPosition__Descriptor,
                new string[] { "Qty", "Price", "TradeDate", "StatementDate", "TradeUtcTime", "PositionId", });
        internal__static_traderouting_1_Equity__Descriptor = Descriptor.MessageTypes[128];
        internal__static_traderouting_1_Equity__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Equity, global::CmsApiSamples.Protocol.CMSApi.Equity.Builder>(internal__static_traderouting_1_Equity__Descriptor,
                new string[] { "Currency", "Securities", "Balance", "Ote", "TotalEquity", "Mvo", "TotalValue", "CashExcess", "InitialMargin", "MaintMargin", "PostedMargin", });
        internal__static_traderouting_1_Collateral__Descriptor = Descriptor.MessageTypes[129];
        internal__static_traderouting_1_Collateral__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Collateral, global::CmsApiSamples.Protocol.CMSApi.Collateral.Builder>(internal__static_traderouting_1_Collateral__Descriptor,
                new string[] { "Currency", "TotalMargin", "PurchasingPower", });
        internal__static_traderouting_1_OrderSearchResultRecord__Descriptor = Descriptor.MessageTypes[130];
        internal__static_traderouting_1_OrderSearchResultRecord__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord, global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord.Builder>(internal__static_traderouting_1_OrderSearchResultRecord__Descriptor,
                new string[] { "BrokerageAccountNumber", "OrderId", "TicketNumber", "Side", "Type", "LimitPrice", "StopPrice", "ContractName", "SubmittedUtcTime", "Status", "UserName", "CustomerLastName", "BrokerageName", "RouteName", "AccountId", "AccountName", "NativeRouteName", "RouteClientOrderId", "ExchangeName", "ChainOrderId", "DisplayLimitPrice", "DisplayStopPrice", "Size", "SalesSeriesNumber", "SalesSeriesName", "SalesSeriesId", });
        internal__static_traderouting_1_AccountCluster__Descriptor = Descriptor.MessageTypes[131];
        internal__static_traderouting_1_AccountCluster__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountCluster, global::CmsApiSamples.Protocol.CMSApi.AccountCluster.Builder>(internal__static_traderouting_1_AccountCluster__Descriptor,
                new string[] { "Id", "BrokerageId", "Name", "IsRemoved", });
        internal__static_traderouting_1_AccountClusterPriceOffset__Descriptor = Descriptor.MessageTypes[132];
        internal__static_traderouting_1_AccountClusterPriceOffset__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset, global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.Builder>(internal__static_traderouting_1_AccountClusterPriceOffset__Descriptor,
                new string[] { "ClearedFields", "CommodityId", "InstrumentTypeId", "PriceOffsetTicks", "HedgeOffsetTicks", "HedgeExecInstruction", "IcebergVisibleQtyPercent", });
        internal__static_traderouting_1_Route__Descriptor = Descriptor.MessageTypes[133];
        internal__static_traderouting_1_Route__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.Route, global::CmsApiSamples.Protocol.CMSApi.Route.Builder>(internal__static_traderouting_1_Route__Descriptor,
                new string[] { "RouteInformation", "Priority", "OmnibusSupportType", "OmnibusAccounts", });
        internal__static_traderouting_1_RouteOmnibusAccount__Descriptor = Descriptor.MessageTypes[134];
        internal__static_traderouting_1_RouteOmnibusAccount__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount, global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount.Builder>(internal__static_traderouting_1_RouteOmnibusAccount__Descriptor,
                new string[] { "AccountId", "AccountName", "BrokerageAccountNumber", "Priority", });
        internal__static_traderouting_1_RouteInformation__Descriptor = Descriptor.MessageTypes[135];
        internal__static_traderouting_1_RouteInformation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RouteInformation, global::CmsApiSamples.Protocol.CMSApi.RouteInformation.Builder>(internal__static_traderouting_1_RouteInformation__Descriptor,
                new string[] { "RouteCode", "RouteName", "SyntheticStrategies", "Attributes", "HasOverlappedInstruments", "AuthorizationRequired", });
        internal__static_traderouting_1_RestoreAccount__Descriptor = Descriptor.MessageTypes[136];
        internal__static_traderouting_1_RestoreAccount__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreAccount, global::CmsApiSamples.Protocol.CMSApi.RestoreAccount.Builder>(internal__static_traderouting_1_RestoreAccount__Descriptor,
                new string[] { "AccountId", });
        internal__static_traderouting_1_AccountTypeOverrideListRequest__Descriptor = Descriptor.MessageTypes[137];
        internal__static_traderouting_1_AccountTypeOverrideListRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest, global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest.Builder>(internal__static_traderouting_1_AccountTypeOverrideListRequest__Descriptor,
                new string[] { "AccountId", });
        internal__static_traderouting_1_UpdateAccountTypeOverrideList__Descriptor = Descriptor.MessageTypes[138];
        internal__static_traderouting_1_UpdateAccountTypeOverrideList__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList.Builder>(internal__static_traderouting_1_UpdateAccountTypeOverrideList__Descriptor,
                new string[] { "AccountId", "OverridesToSet", "OverridesToRemove", });
        internal__static_traderouting_1_RestoreAccountResult__Descriptor = Descriptor.MessageTypes[139];
        internal__static_traderouting_1_RestoreAccountResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult, global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult.Builder>(internal__static_traderouting_1_RestoreAccountResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_AccountTypeOverrideListResult__Descriptor = Descriptor.MessageTypes[140];
        internal__static_traderouting_1_AccountTypeOverrideListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult, global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult.Builder>(internal__static_traderouting_1_AccountTypeOverrideListResult__Descriptor,
                new string[] { "Overrides", });
        internal__static_traderouting_1_AccountTypeOverride__Descriptor = Descriptor.MessageTypes[141];
        internal__static_traderouting_1_AccountTypeOverride__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride, global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride.Builder>(internal__static_traderouting_1_AccountTypeOverride__Descriptor,
                new string[] { "ExchangeKey", "LoginId", "TypeId", "OriginId", });
        internal__static_traderouting_1_UpdateAccountTypeOverrideListResult__Descriptor = Descriptor.MessageTypes[142];
        internal__static_traderouting_1_UpdateAccountTypeOverrideListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult.Builder>(internal__static_traderouting_1_UpdateAccountTypeOverrideListResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_UpdateAccountUserAuthorizationList__Descriptor = Descriptor.MessageTypes[143];
        internal__static_traderouting_1_UpdateAccountUserAuthorizationList__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList.Builder>(internal__static_traderouting_1_UpdateAccountUserAuthorizationList__Descriptor,
                new string[] { "LinksToSet", "LinksToRemove", });
        internal__static_traderouting_1_UpdateAccountUserAuthorizationListResult__Descriptor = Descriptor.MessageTypes[144];
        internal__static_traderouting_1_UpdateAccountUserAuthorizationListResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult, global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult.Builder>(internal__static_traderouting_1_UpdateAccountUserAuthorizationListResult__Descriptor,
                new string[] { });
        internal__static_traderouting_1_RemoveAccount__Descriptor = Descriptor.MessageTypes[145];
        internal__static_traderouting_1_RemoveAccount__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RemoveAccount, global::CmsApiSamples.Protocol.CMSApi.RemoveAccount.Builder>(internal__static_traderouting_1_RemoveAccount__Descriptor,
                new string[] { "AccountId", });
        internal__static_traderouting_1_RemoveAccountResult__Descriptor = Descriptor.MessageTypes[146];
        internal__static_traderouting_1_RemoveAccountResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult, global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult.Builder>(internal__static_traderouting_1_RemoveAccountResult__Descriptor,
                new string[] { });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::CmsApiSamples.Protocol.CMSApi.Common1.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum TradeRoutingLookupPropertyType {
    ACCOUNT_TYPE = 101,
    MODES_ACCOUNT_GROUP = 102,
    TIME_ZONE = 103,
    RISK_SERVER_INSTANCE = 104,
    TRADE_LOCATION = 105,
    ORDER_CLASS = 106,
    ACCOUNT_ORIGIN = 107,
  }
  
  public enum PriceLimitMode {
    AGGRESSIVE_LMT = 1,
    AGGRESSIVE_LMT_STP = 2,
    ALL_LMT = 3,
    ALL_LMT_STP = 4,
  }
  
  public enum LimitMode {
    DEFAULT = 1,
    UNLIMITED = 2,
    LIMITED = 3,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TradeRoutingRequest : pb::GeneratedMessage<TradeRoutingRequest, TradeRoutingRequest.Builder> {
    private TradeRoutingRequest() { }
    private static readonly TradeRoutingRequest defaultInstance = new TradeRoutingRequest().MakeReadOnly();
    private static readonly string[] _tradeRoutingRequestFieldNames = new string[] { "account_scope_request", "id", "lookup_property_list_request", "order_scope_request" };
    private static readonly uint[] _tradeRoutingRequestFieldTags = new uint[] { 18, 8, 34, 26 };
    public static TradeRoutingRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TradeRoutingRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TradeRoutingRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradeRoutingRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TradeRoutingRequest, TradeRoutingRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradeRoutingRequest__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private uint id_;
    public bool HasId {
      get { return hasId; }
    }
    [global::System.CLSCompliant(false)]
    public uint Id {
      get { return id_; }
    }
    
    public const int AccountScopeRequestFieldNumber = 2;
    private bool hasAccountScopeRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest accountScopeRequest_;
    public bool HasAccountScopeRequest {
      get { return hasAccountScopeRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest AccountScopeRequest {
      get { return accountScopeRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest.DefaultInstance; }
    }
    
    public const int OrderScopeRequestFieldNumber = 3;
    private bool hasOrderScopeRequest;
    private global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest orderScopeRequest_;
    public bool HasOrderScopeRequest {
      get { return hasOrderScopeRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest OrderScopeRequest {
      get { return orderScopeRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest.DefaultInstance; }
    }
    
    public const int LookupPropertyListRequestFieldNumber = 4;
    private bool hasLookupPropertyListRequest;
    private global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest lookupPropertyListRequest_;
    public bool HasLookupPropertyListRequest {
      get { return hasLookupPropertyListRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest LookupPropertyListRequest {
      get { return lookupPropertyListRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (HasAccountScopeRequest) {
          if (!AccountScopeRequest.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tradeRoutingRequestFieldNames;
      if (hasId) {
        output.WriteUInt32(1, field_names[1], Id);
      }
      if (hasAccountScopeRequest) {
        output.WriteMessage(2, field_names[0], AccountScopeRequest);
      }
      if (hasOrderScopeRequest) {
        output.WriteMessage(3, field_names[3], OrderScopeRequest);
      }
      if (hasLookupPropertyListRequest) {
        output.WriteMessage(4, field_names[2], LookupPropertyListRequest);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Id);
      }
      if (hasAccountScopeRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, AccountScopeRequest);
      }
      if (hasOrderScopeRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, OrderScopeRequest);
      }
      if (hasLookupPropertyListRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, LookupPropertyListRequest);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TradeRoutingRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradeRoutingRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradeRoutingRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradeRoutingRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradeRoutingRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradeRoutingRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TradeRoutingRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TradeRoutingRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TradeRoutingRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradeRoutingRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TradeRoutingRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TradeRoutingRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TradeRoutingRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TradeRoutingRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TradeRoutingRequest result;
      
      private TradeRoutingRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          TradeRoutingRequest original = result;
          result = new TradeRoutingRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TradeRoutingRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradeRoutingRequest.Descriptor; }
      }
      
      public override TradeRoutingRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradeRoutingRequest.DefaultInstance; }
      }
      
      public override TradeRoutingRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TradeRoutingRequest) {
          return MergeFrom((TradeRoutingRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TradeRoutingRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.TradeRoutingRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasAccountScopeRequest) {
          MergeAccountScopeRequest(other.AccountScopeRequest);
        }
        if (other.HasOrderScopeRequest) {
          MergeOrderScopeRequest(other.OrderScopeRequest);
        }
        if (other.HasLookupPropertyListRequest) {
          MergeLookupPropertyListRequest(other.LookupPropertyListRequest);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tradeRoutingRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tradeRoutingRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt32(ref result.id_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest.CreateBuilder();
              if (result.hasAccountScopeRequest) {
                subBuilder.MergeFrom(AccountScopeRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountScopeRequest = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest.CreateBuilder();
              if (result.hasOrderScopeRequest) {
                subBuilder.MergeFrom(OrderScopeRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderScopeRequest = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest.CreateBuilder();
              if (result.hasLookupPropertyListRequest) {
                subBuilder.MergeFrom(LookupPropertyListRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              LookupPropertyListRequest = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      [global::System.CLSCompliant(false)]
      public uint Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetId(uint value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasAccountScopeRequest {
       get { return result.hasAccountScopeRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest AccountScopeRequest {
        get { return result.AccountScopeRequest; }
        set { SetAccountScopeRequest(value); }
      }
      public Builder SetAccountScopeRequest(global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountScopeRequest = true;
        result.accountScopeRequest_ = value;
        return this;
      }
      public Builder SetAccountScopeRequest(global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountScopeRequest = true;
        result.accountScopeRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountScopeRequest(global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountScopeRequest &&
            result.accountScopeRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest.DefaultInstance) {
            result.accountScopeRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest.CreateBuilder(result.accountScopeRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountScopeRequest_ = value;
        }
        result.hasAccountScopeRequest = true;
        return this;
      }
      public Builder ClearAccountScopeRequest() {
        PrepareBuilder();
        result.hasAccountScopeRequest = false;
        result.accountScopeRequest_ = null;
        return this;
      }
      
      public bool HasOrderScopeRequest {
       get { return result.hasOrderScopeRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest OrderScopeRequest {
        get { return result.OrderScopeRequest; }
        set { SetOrderScopeRequest(value); }
      }
      public Builder SetOrderScopeRequest(global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderScopeRequest = true;
        result.orderScopeRequest_ = value;
        return this;
      }
      public Builder SetOrderScopeRequest(global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderScopeRequest = true;
        result.orderScopeRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderScopeRequest(global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderScopeRequest &&
            result.orderScopeRequest_ != global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest.DefaultInstance) {
            result.orderScopeRequest_ = global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest.CreateBuilder(result.orderScopeRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.orderScopeRequest_ = value;
        }
        result.hasOrderScopeRequest = true;
        return this;
      }
      public Builder ClearOrderScopeRequest() {
        PrepareBuilder();
        result.hasOrderScopeRequest = false;
        result.orderScopeRequest_ = null;
        return this;
      }
      
      public bool HasLookupPropertyListRequest {
       get { return result.hasLookupPropertyListRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest LookupPropertyListRequest {
        get { return result.LookupPropertyListRequest; }
        set { SetLookupPropertyListRequest(value); }
      }
      public Builder SetLookupPropertyListRequest(global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLookupPropertyListRequest = true;
        result.lookupPropertyListRequest_ = value;
        return this;
      }
      public Builder SetLookupPropertyListRequest(global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLookupPropertyListRequest = true;
        result.lookupPropertyListRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLookupPropertyListRequest(global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLookupPropertyListRequest &&
            result.lookupPropertyListRequest_ != global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest.DefaultInstance) {
            result.lookupPropertyListRequest_ = global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListRequest.CreateBuilder(result.lookupPropertyListRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.lookupPropertyListRequest_ = value;
        }
        result.hasLookupPropertyListRequest = true;
        return this;
      }
      public Builder ClearLookupPropertyListRequest() {
        PrepareBuilder();
        result.hasLookupPropertyListRequest = false;
        result.lookupPropertyListRequest_ = null;
        return this;
      }
    }
    static TradeRoutingRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountScopeRequest : pb::GeneratedMessage<AccountScopeRequest, AccountScopeRequest.Builder> {
    private AccountScopeRequest() { }
    private static readonly AccountScopeRequest defaultInstance = new AccountScopeRequest().MakeReadOnly();
    private static readonly string[] _accountScopeRequestFieldNames = new string[] { "account_available_exchange_groups_request", "account_cluster_request", "account_collateral_request", "account_equity_request", "account_group_request", "account_info_request", "account_market_limits_request", "account_positions_request", "account_risk_parameters_request", "account_route_list_request", "account_search_request", "account_settings_request", "account_type_override_list_request", "account_user_authorization_list_request", "balance_records_request", "clone_account", "create_account", "create_account_cluster", "create_balance_record", "remove_account", "restore_account", "route_list_request", "update_account", "update_account_cluster", "update_account_cluster_price_offsets", "update_account_market_limits", "update_account_risk_parameters", "update_account_route_list", "update_account_settings", "update_account_type_override_list", "update_account_user_authorization_list", "update_balance_record", "update_risk_parameters" };
    private static readonly uint[] _accountScopeRequestFieldTags = new uint[] { 90, 202, 122, 114, 154, 10, 98, 106, 42, 66, 58, 82, 242, 74, 18, 130, 194, 210, 26, 266, 234, 170, 138, 218, 226, 186, 162, 178, 146, 250, 258, 34, 50 };
    public static AccountScopeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountScopeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountScopeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountScopeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountScopeRequest, AccountScopeRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountScopeRequest__FieldAccessorTable; }
    }
    
    public const int AccountInfoRequestFieldNumber = 1;
    private bool hasAccountInfoRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest accountInfoRequest_;
    public bool HasAccountInfoRequest {
      get { return hasAccountInfoRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest AccountInfoRequest {
      get { return accountInfoRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest.DefaultInstance; }
    }
    
    public const int BalanceRecordsRequestFieldNumber = 2;
    private bool hasBalanceRecordsRequest;
    private global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest balanceRecordsRequest_;
    public bool HasBalanceRecordsRequest {
      get { return hasBalanceRecordsRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest BalanceRecordsRequest {
      get { return balanceRecordsRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest.DefaultInstance; }
    }
    
    public const int CreateBalanceRecordFieldNumber = 3;
    private bool hasCreateBalanceRecord;
    private global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord createBalanceRecord_;
    public bool HasCreateBalanceRecord {
      get { return hasCreateBalanceRecord; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord CreateBalanceRecord {
      get { return createBalanceRecord_ ?? global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord.DefaultInstance; }
    }
    
    public const int UpdateBalanceRecordFieldNumber = 4;
    private bool hasUpdateBalanceRecord;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord updateBalanceRecord_;
    public bool HasUpdateBalanceRecord {
      get { return hasUpdateBalanceRecord; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord UpdateBalanceRecord {
      get { return updateBalanceRecord_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord.DefaultInstance; }
    }
    
    public const int AccountRiskParametersRequestFieldNumber = 5;
    private bool hasAccountRiskParametersRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest accountRiskParametersRequest_;
    public bool HasAccountRiskParametersRequest {
      get { return hasAccountRiskParametersRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest AccountRiskParametersRequest {
      get { return accountRiskParametersRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest.DefaultInstance; }
    }
    
    public const int UpdateRiskParametersFieldNumber = 6;
    private bool hasUpdateRiskParameters;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters updateRiskParameters_;
    public bool HasUpdateRiskParameters {
      get { return hasUpdateRiskParameters; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters UpdateRiskParameters {
      get { return updateRiskParameters_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters.DefaultInstance; }
    }
    
    public const int AccountSearchRequestFieldNumber = 7;
    private bool hasAccountSearchRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest accountSearchRequest_;
    public bool HasAccountSearchRequest {
      get { return hasAccountSearchRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest AccountSearchRequest {
      get { return accountSearchRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest.DefaultInstance; }
    }
    
    public const int AccountRouteListRequestFieldNumber = 8;
    private bool hasAccountRouteListRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest accountRouteListRequest_;
    public bool HasAccountRouteListRequest {
      get { return hasAccountRouteListRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest AccountRouteListRequest {
      get { return accountRouteListRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest.DefaultInstance; }
    }
    
    public const int AccountUserAuthorizationListRequestFieldNumber = 9;
    private bool hasAccountUserAuthorizationListRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest accountUserAuthorizationListRequest_;
    public bool HasAccountUserAuthorizationListRequest {
      get { return hasAccountUserAuthorizationListRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest AccountUserAuthorizationListRequest {
      get { return accountUserAuthorizationListRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest.DefaultInstance; }
    }
    
    public const int AccountSettingsRequestFieldNumber = 10;
    private bool hasAccountSettingsRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest accountSettingsRequest_;
    public bool HasAccountSettingsRequest {
      get { return hasAccountSettingsRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest AccountSettingsRequest {
      get { return accountSettingsRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest.DefaultInstance; }
    }
    
    public const int AccountAvailableExchangeGroupsRequestFieldNumber = 11;
    private bool hasAccountAvailableExchangeGroupsRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest accountAvailableExchangeGroupsRequest_;
    public bool HasAccountAvailableExchangeGroupsRequest {
      get { return hasAccountAvailableExchangeGroupsRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest AccountAvailableExchangeGroupsRequest {
      get { return accountAvailableExchangeGroupsRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest.DefaultInstance; }
    }
    
    public const int AccountMarketLimitsRequestFieldNumber = 12;
    private bool hasAccountMarketLimitsRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest accountMarketLimitsRequest_;
    public bool HasAccountMarketLimitsRequest {
      get { return hasAccountMarketLimitsRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest AccountMarketLimitsRequest {
      get { return accountMarketLimitsRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest.DefaultInstance; }
    }
    
    public const int AccountPositionsRequestFieldNumber = 13;
    private bool hasAccountPositionsRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest accountPositionsRequest_;
    public bool HasAccountPositionsRequest {
      get { return hasAccountPositionsRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest AccountPositionsRequest {
      get { return accountPositionsRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest.DefaultInstance; }
    }
    
    public const int AccountEquityRequestFieldNumber = 14;
    private bool hasAccountEquityRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest accountEquityRequest_;
    public bool HasAccountEquityRequest {
      get { return hasAccountEquityRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest AccountEquityRequest {
      get { return accountEquityRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest.DefaultInstance; }
    }
    
    public const int AccountCollateralRequestFieldNumber = 15;
    private bool hasAccountCollateralRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest accountCollateralRequest_;
    public bool HasAccountCollateralRequest {
      get { return hasAccountCollateralRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest AccountCollateralRequest {
      get { return accountCollateralRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest.DefaultInstance; }
    }
    
    public const int CloneAccountFieldNumber = 16;
    private bool hasCloneAccount;
    private global::CmsApiSamples.Protocol.CMSApi.CloneAccount cloneAccount_;
    public bool HasCloneAccount {
      get { return hasCloneAccount; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CloneAccount CloneAccount {
      get { return cloneAccount_ ?? global::CmsApiSamples.Protocol.CMSApi.CloneAccount.DefaultInstance; }
    }
    
    public const int UpdateAccountFieldNumber = 17;
    private bool hasUpdateAccount;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccount updateAccount_;
    public bool HasUpdateAccount {
      get { return hasUpdateAccount; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccount UpdateAccount {
      get { return updateAccount_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccount.DefaultInstance; }
    }
    
    public const int UpdateAccountSettingsFieldNumber = 18;
    private bool hasUpdateAccountSettings;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings updateAccountSettings_;
    public bool HasUpdateAccountSettings {
      get { return hasUpdateAccountSettings; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings UpdateAccountSettings {
      get { return updateAccountSettings_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings.DefaultInstance; }
    }
    
    public const int AccountGroupRequestFieldNumber = 19;
    private bool hasAccountGroupRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest accountGroupRequest_;
    public bool HasAccountGroupRequest {
      get { return hasAccountGroupRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest AccountGroupRequest {
      get { return accountGroupRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest.DefaultInstance; }
    }
    
    public const int UpdateAccountRiskParametersFieldNumber = 20;
    private bool hasUpdateAccountRiskParameters;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters updateAccountRiskParameters_;
    public bool HasUpdateAccountRiskParameters {
      get { return hasUpdateAccountRiskParameters; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters UpdateAccountRiskParameters {
      get { return updateAccountRiskParameters_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters.DefaultInstance; }
    }
    
    public const int RouteListRequestFieldNumber = 21;
    private bool hasRouteListRequest;
    private global::CmsApiSamples.Protocol.CMSApi.RouteListRequest routeListRequest_;
    public bool HasRouteListRequest {
      get { return hasRouteListRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RouteListRequest RouteListRequest {
      get { return routeListRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.RouteListRequest.DefaultInstance; }
    }
    
    public const int UpdateAccountRouteListFieldNumber = 22;
    private bool hasUpdateAccountRouteList;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList updateAccountRouteList_;
    public bool HasUpdateAccountRouteList {
      get { return hasUpdateAccountRouteList; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList UpdateAccountRouteList {
      get { return updateAccountRouteList_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList.DefaultInstance; }
    }
    
    public const int UpdateAccountMarketLimitsFieldNumber = 23;
    private bool hasUpdateAccountMarketLimits;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits updateAccountMarketLimits_;
    public bool HasUpdateAccountMarketLimits {
      get { return hasUpdateAccountMarketLimits; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits UpdateAccountMarketLimits {
      get { return updateAccountMarketLimits_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits.DefaultInstance; }
    }
    
    public const int CreateAccountFieldNumber = 24;
    private bool hasCreateAccount;
    private global::CmsApiSamples.Protocol.CMSApi.CreateAccount createAccount_;
    public bool HasCreateAccount {
      get { return hasCreateAccount; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CreateAccount CreateAccount {
      get { return createAccount_ ?? global::CmsApiSamples.Protocol.CMSApi.CreateAccount.DefaultInstance; }
    }
    
    public const int AccountClusterRequestFieldNumber = 25;
    private bool hasAccountClusterRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest accountClusterRequest_;
    public bool HasAccountClusterRequest {
      get { return hasAccountClusterRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest AccountClusterRequest {
      get { return accountClusterRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest.DefaultInstance; }
    }
    
    public const int CreateAccountClusterFieldNumber = 26;
    private bool hasCreateAccountCluster;
    private global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster createAccountCluster_;
    public bool HasCreateAccountCluster {
      get { return hasCreateAccountCluster; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster CreateAccountCluster {
      get { return createAccountCluster_ ?? global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster.DefaultInstance; }
    }
    
    public const int UpdateAccountClusterFieldNumber = 27;
    private bool hasUpdateAccountCluster;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster updateAccountCluster_;
    public bool HasUpdateAccountCluster {
      get { return hasUpdateAccountCluster; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster UpdateAccountCluster {
      get { return updateAccountCluster_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster.DefaultInstance; }
    }
    
    public const int UpdateAccountClusterPriceOffsetsFieldNumber = 28;
    private bool hasUpdateAccountClusterPriceOffsets;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets updateAccountClusterPriceOffsets_;
    public bool HasUpdateAccountClusterPriceOffsets {
      get { return hasUpdateAccountClusterPriceOffsets; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets UpdateAccountClusterPriceOffsets {
      get { return updateAccountClusterPriceOffsets_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets.DefaultInstance; }
    }
    
    public const int RestoreAccountFieldNumber = 29;
    private bool hasRestoreAccount;
    private global::CmsApiSamples.Protocol.CMSApi.RestoreAccount restoreAccount_;
    public bool HasRestoreAccount {
      get { return hasRestoreAccount; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RestoreAccount RestoreAccount {
      get { return restoreAccount_ ?? global::CmsApiSamples.Protocol.CMSApi.RestoreAccount.DefaultInstance; }
    }
    
    public const int AccountTypeOverrideListRequestFieldNumber = 30;
    private bool hasAccountTypeOverrideListRequest;
    private global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest accountTypeOverrideListRequest_;
    public bool HasAccountTypeOverrideListRequest {
      get { return hasAccountTypeOverrideListRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest AccountTypeOverrideListRequest {
      get { return accountTypeOverrideListRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest.DefaultInstance; }
    }
    
    public const int UpdateAccountTypeOverrideListFieldNumber = 31;
    private bool hasUpdateAccountTypeOverrideList;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList updateAccountTypeOverrideList_;
    public bool HasUpdateAccountTypeOverrideList {
      get { return hasUpdateAccountTypeOverrideList; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList UpdateAccountTypeOverrideList {
      get { return updateAccountTypeOverrideList_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList.DefaultInstance; }
    }
    
    public const int UpdateAccountUserAuthorizationListFieldNumber = 32;
    private bool hasUpdateAccountUserAuthorizationList;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList updateAccountUserAuthorizationList_;
    public bool HasUpdateAccountUserAuthorizationList {
      get { return hasUpdateAccountUserAuthorizationList; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList UpdateAccountUserAuthorizationList {
      get { return updateAccountUserAuthorizationList_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList.DefaultInstance; }
    }
    
    public const int RemoveAccountFieldNumber = 33;
    private bool hasRemoveAccount;
    private global::CmsApiSamples.Protocol.CMSApi.RemoveAccount removeAccount_;
    public bool HasRemoveAccount {
      get { return hasRemoveAccount; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RemoveAccount RemoveAccount {
      get { return removeAccount_ ?? global::CmsApiSamples.Protocol.CMSApi.RemoveAccount.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasUpdateBalanceRecord) {
          if (!UpdateBalanceRecord.IsInitialized) return false;
        }
        if (HasAccountRiskParametersRequest) {
          if (!AccountRiskParametersRequest.IsInitialized) return false;
        }
        if (HasUpdateRiskParameters) {
          if (!UpdateRiskParameters.IsInitialized) return false;
        }
        if (HasAccountRouteListRequest) {
          if (!AccountRouteListRequest.IsInitialized) return false;
        }
        if (HasAccountSettingsRequest) {
          if (!AccountSettingsRequest.IsInitialized) return false;
        }
        if (HasAccountAvailableExchangeGroupsRequest) {
          if (!AccountAvailableExchangeGroupsRequest.IsInitialized) return false;
        }
        if (HasAccountMarketLimitsRequest) {
          if (!AccountMarketLimitsRequest.IsInitialized) return false;
        }
        if (HasAccountPositionsRequest) {
          if (!AccountPositionsRequest.IsInitialized) return false;
        }
        if (HasAccountEquityRequest) {
          if (!AccountEquityRequest.IsInitialized) return false;
        }
        if (HasAccountCollateralRequest) {
          if (!AccountCollateralRequest.IsInitialized) return false;
        }
        if (HasCloneAccount) {
          if (!CloneAccount.IsInitialized) return false;
        }
        if (HasUpdateAccount) {
          if (!UpdateAccount.IsInitialized) return false;
        }
        if (HasUpdateAccountSettings) {
          if (!UpdateAccountSettings.IsInitialized) return false;
        }
        if (HasAccountGroupRequest) {
          if (!AccountGroupRequest.IsInitialized) return false;
        }
        if (HasUpdateAccountRiskParameters) {
          if (!UpdateAccountRiskParameters.IsInitialized) return false;
        }
        if (HasUpdateAccountRouteList) {
          if (!UpdateAccountRouteList.IsInitialized) return false;
        }
        if (HasUpdateAccountMarketLimits) {
          if (!UpdateAccountMarketLimits.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountScopeRequestFieldNames;
      if (hasAccountInfoRequest) {
        output.WriteMessage(1, field_names[5], AccountInfoRequest);
      }
      if (hasBalanceRecordsRequest) {
        output.WriteMessage(2, field_names[14], BalanceRecordsRequest);
      }
      if (hasCreateBalanceRecord) {
        output.WriteMessage(3, field_names[18], CreateBalanceRecord);
      }
      if (hasUpdateBalanceRecord) {
        output.WriteMessage(4, field_names[31], UpdateBalanceRecord);
      }
      if (hasAccountRiskParametersRequest) {
        output.WriteMessage(5, field_names[8], AccountRiskParametersRequest);
      }
      if (hasUpdateRiskParameters) {
        output.WriteMessage(6, field_names[32], UpdateRiskParameters);
      }
      if (hasAccountSearchRequest) {
        output.WriteMessage(7, field_names[10], AccountSearchRequest);
      }
      if (hasAccountRouteListRequest) {
        output.WriteMessage(8, field_names[9], AccountRouteListRequest);
      }
      if (hasAccountUserAuthorizationListRequest) {
        output.WriteMessage(9, field_names[13], AccountUserAuthorizationListRequest);
      }
      if (hasAccountSettingsRequest) {
        output.WriteMessage(10, field_names[11], AccountSettingsRequest);
      }
      if (hasAccountAvailableExchangeGroupsRequest) {
        output.WriteMessage(11, field_names[0], AccountAvailableExchangeGroupsRequest);
      }
      if (hasAccountMarketLimitsRequest) {
        output.WriteMessage(12, field_names[6], AccountMarketLimitsRequest);
      }
      if (hasAccountPositionsRequest) {
        output.WriteMessage(13, field_names[7], AccountPositionsRequest);
      }
      if (hasAccountEquityRequest) {
        output.WriteMessage(14, field_names[3], AccountEquityRequest);
      }
      if (hasAccountCollateralRequest) {
        output.WriteMessage(15, field_names[2], AccountCollateralRequest);
      }
      if (hasCloneAccount) {
        output.WriteMessage(16, field_names[15], CloneAccount);
      }
      if (hasUpdateAccount) {
        output.WriteMessage(17, field_names[22], UpdateAccount);
      }
      if (hasUpdateAccountSettings) {
        output.WriteMessage(18, field_names[28], UpdateAccountSettings);
      }
      if (hasAccountGroupRequest) {
        output.WriteMessage(19, field_names[4], AccountGroupRequest);
      }
      if (hasUpdateAccountRiskParameters) {
        output.WriteMessage(20, field_names[26], UpdateAccountRiskParameters);
      }
      if (hasRouteListRequest) {
        output.WriteMessage(21, field_names[21], RouteListRequest);
      }
      if (hasUpdateAccountRouteList) {
        output.WriteMessage(22, field_names[27], UpdateAccountRouteList);
      }
      if (hasUpdateAccountMarketLimits) {
        output.WriteMessage(23, field_names[25], UpdateAccountMarketLimits);
      }
      if (hasCreateAccount) {
        output.WriteMessage(24, field_names[16], CreateAccount);
      }
      if (hasAccountClusterRequest) {
        output.WriteMessage(25, field_names[1], AccountClusterRequest);
      }
      if (hasCreateAccountCluster) {
        output.WriteMessage(26, field_names[17], CreateAccountCluster);
      }
      if (hasUpdateAccountCluster) {
        output.WriteMessage(27, field_names[23], UpdateAccountCluster);
      }
      if (hasUpdateAccountClusterPriceOffsets) {
        output.WriteMessage(28, field_names[24], UpdateAccountClusterPriceOffsets);
      }
      if (hasRestoreAccount) {
        output.WriteMessage(29, field_names[20], RestoreAccount);
      }
      if (hasAccountTypeOverrideListRequest) {
        output.WriteMessage(30, field_names[12], AccountTypeOverrideListRequest);
      }
      if (hasUpdateAccountTypeOverrideList) {
        output.WriteMessage(31, field_names[29], UpdateAccountTypeOverrideList);
      }
      if (hasUpdateAccountUserAuthorizationList) {
        output.WriteMessage(32, field_names[30], UpdateAccountUserAuthorizationList);
      }
      if (hasRemoveAccount) {
        output.WriteMessage(33, field_names[19], RemoveAccount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountInfoRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, AccountInfoRequest);
      }
      if (hasBalanceRecordsRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, BalanceRecordsRequest);
      }
      if (hasCreateBalanceRecord) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, CreateBalanceRecord);
      }
      if (hasUpdateBalanceRecord) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, UpdateBalanceRecord);
      }
      if (hasAccountRiskParametersRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, AccountRiskParametersRequest);
      }
      if (hasUpdateRiskParameters) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, UpdateRiskParameters);
      }
      if (hasAccountSearchRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, AccountSearchRequest);
      }
      if (hasAccountRouteListRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, AccountRouteListRequest);
      }
      if (hasAccountUserAuthorizationListRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, AccountUserAuthorizationListRequest);
      }
      if (hasAccountSettingsRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, AccountSettingsRequest);
      }
      if (hasAccountAvailableExchangeGroupsRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(11, AccountAvailableExchangeGroupsRequest);
      }
      if (hasAccountMarketLimitsRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(12, AccountMarketLimitsRequest);
      }
      if (hasAccountPositionsRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(13, AccountPositionsRequest);
      }
      if (hasAccountEquityRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(14, AccountEquityRequest);
      }
      if (hasAccountCollateralRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(15, AccountCollateralRequest);
      }
      if (hasCloneAccount) {
        size += pb::CodedOutputStream.ComputeMessageSize(16, CloneAccount);
      }
      if (hasUpdateAccount) {
        size += pb::CodedOutputStream.ComputeMessageSize(17, UpdateAccount);
      }
      if (hasUpdateAccountSettings) {
        size += pb::CodedOutputStream.ComputeMessageSize(18, UpdateAccountSettings);
      }
      if (hasAccountGroupRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(19, AccountGroupRequest);
      }
      if (hasUpdateAccountRiskParameters) {
        size += pb::CodedOutputStream.ComputeMessageSize(20, UpdateAccountRiskParameters);
      }
      if (hasRouteListRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(21, RouteListRequest);
      }
      if (hasUpdateAccountRouteList) {
        size += pb::CodedOutputStream.ComputeMessageSize(22, UpdateAccountRouteList);
      }
      if (hasUpdateAccountMarketLimits) {
        size += pb::CodedOutputStream.ComputeMessageSize(23, UpdateAccountMarketLimits);
      }
      if (hasCreateAccount) {
        size += pb::CodedOutputStream.ComputeMessageSize(24, CreateAccount);
      }
      if (hasAccountClusterRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(25, AccountClusterRequest);
      }
      if (hasCreateAccountCluster) {
        size += pb::CodedOutputStream.ComputeMessageSize(26, CreateAccountCluster);
      }
      if (hasUpdateAccountCluster) {
        size += pb::CodedOutputStream.ComputeMessageSize(27, UpdateAccountCluster);
      }
      if (hasUpdateAccountClusterPriceOffsets) {
        size += pb::CodedOutputStream.ComputeMessageSize(28, UpdateAccountClusterPriceOffsets);
      }
      if (hasRestoreAccount) {
        size += pb::CodedOutputStream.ComputeMessageSize(29, RestoreAccount);
      }
      if (hasAccountTypeOverrideListRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(30, AccountTypeOverrideListRequest);
      }
      if (hasUpdateAccountTypeOverrideList) {
        size += pb::CodedOutputStream.ComputeMessageSize(31, UpdateAccountTypeOverrideList);
      }
      if (hasUpdateAccountUserAuthorizationList) {
        size += pb::CodedOutputStream.ComputeMessageSize(32, UpdateAccountUserAuthorizationList);
      }
      if (hasRemoveAccount) {
        size += pb::CodedOutputStream.ComputeMessageSize(33, RemoveAccount);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountScopeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountScopeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountScopeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountScopeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountScopeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountScopeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountScopeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountScopeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountScopeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountScopeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountScopeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountScopeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountScopeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountScopeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountScopeRequest result;
      
      private AccountScopeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountScopeRequest original = result;
          result = new AccountScopeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountScopeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest.Descriptor; }
      }
      
      public override AccountScopeRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest.DefaultInstance; }
      }
      
      public override AccountScopeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountScopeRequest) {
          return MergeFrom((AccountScopeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountScopeRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountScopeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountInfoRequest) {
          MergeAccountInfoRequest(other.AccountInfoRequest);
        }
        if (other.HasBalanceRecordsRequest) {
          MergeBalanceRecordsRequest(other.BalanceRecordsRequest);
        }
        if (other.HasCreateBalanceRecord) {
          MergeCreateBalanceRecord(other.CreateBalanceRecord);
        }
        if (other.HasUpdateBalanceRecord) {
          MergeUpdateBalanceRecord(other.UpdateBalanceRecord);
        }
        if (other.HasAccountRiskParametersRequest) {
          MergeAccountRiskParametersRequest(other.AccountRiskParametersRequest);
        }
        if (other.HasUpdateRiskParameters) {
          MergeUpdateRiskParameters(other.UpdateRiskParameters);
        }
        if (other.HasAccountSearchRequest) {
          MergeAccountSearchRequest(other.AccountSearchRequest);
        }
        if (other.HasAccountRouteListRequest) {
          MergeAccountRouteListRequest(other.AccountRouteListRequest);
        }
        if (other.HasAccountUserAuthorizationListRequest) {
          MergeAccountUserAuthorizationListRequest(other.AccountUserAuthorizationListRequest);
        }
        if (other.HasAccountSettingsRequest) {
          MergeAccountSettingsRequest(other.AccountSettingsRequest);
        }
        if (other.HasAccountAvailableExchangeGroupsRequest) {
          MergeAccountAvailableExchangeGroupsRequest(other.AccountAvailableExchangeGroupsRequest);
        }
        if (other.HasAccountMarketLimitsRequest) {
          MergeAccountMarketLimitsRequest(other.AccountMarketLimitsRequest);
        }
        if (other.HasAccountPositionsRequest) {
          MergeAccountPositionsRequest(other.AccountPositionsRequest);
        }
        if (other.HasAccountEquityRequest) {
          MergeAccountEquityRequest(other.AccountEquityRequest);
        }
        if (other.HasAccountCollateralRequest) {
          MergeAccountCollateralRequest(other.AccountCollateralRequest);
        }
        if (other.HasCloneAccount) {
          MergeCloneAccount(other.CloneAccount);
        }
        if (other.HasUpdateAccount) {
          MergeUpdateAccount(other.UpdateAccount);
        }
        if (other.HasUpdateAccountSettings) {
          MergeUpdateAccountSettings(other.UpdateAccountSettings);
        }
        if (other.HasAccountGroupRequest) {
          MergeAccountGroupRequest(other.AccountGroupRequest);
        }
        if (other.HasUpdateAccountRiskParameters) {
          MergeUpdateAccountRiskParameters(other.UpdateAccountRiskParameters);
        }
        if (other.HasRouteListRequest) {
          MergeRouteListRequest(other.RouteListRequest);
        }
        if (other.HasUpdateAccountRouteList) {
          MergeUpdateAccountRouteList(other.UpdateAccountRouteList);
        }
        if (other.HasUpdateAccountMarketLimits) {
          MergeUpdateAccountMarketLimits(other.UpdateAccountMarketLimits);
        }
        if (other.HasCreateAccount) {
          MergeCreateAccount(other.CreateAccount);
        }
        if (other.HasAccountClusterRequest) {
          MergeAccountClusterRequest(other.AccountClusterRequest);
        }
        if (other.HasCreateAccountCluster) {
          MergeCreateAccountCluster(other.CreateAccountCluster);
        }
        if (other.HasUpdateAccountCluster) {
          MergeUpdateAccountCluster(other.UpdateAccountCluster);
        }
        if (other.HasUpdateAccountClusterPriceOffsets) {
          MergeUpdateAccountClusterPriceOffsets(other.UpdateAccountClusterPriceOffsets);
        }
        if (other.HasRestoreAccount) {
          MergeRestoreAccount(other.RestoreAccount);
        }
        if (other.HasAccountTypeOverrideListRequest) {
          MergeAccountTypeOverrideListRequest(other.AccountTypeOverrideListRequest);
        }
        if (other.HasUpdateAccountTypeOverrideList) {
          MergeUpdateAccountTypeOverrideList(other.UpdateAccountTypeOverrideList);
        }
        if (other.HasUpdateAccountUserAuthorizationList) {
          MergeUpdateAccountUserAuthorizationList(other.UpdateAccountUserAuthorizationList);
        }
        if (other.HasRemoveAccount) {
          MergeRemoveAccount(other.RemoveAccount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountScopeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountScopeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest.CreateBuilder();
              if (result.hasAccountInfoRequest) {
                subBuilder.MergeFrom(AccountInfoRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountInfoRequest = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest.CreateBuilder();
              if (result.hasBalanceRecordsRequest) {
                subBuilder.MergeFrom(BalanceRecordsRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BalanceRecordsRequest = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord.CreateBuilder();
              if (result.hasCreateBalanceRecord) {
                subBuilder.MergeFrom(CreateBalanceRecord);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CreateBalanceRecord = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord.CreateBuilder();
              if (result.hasUpdateBalanceRecord) {
                subBuilder.MergeFrom(UpdateBalanceRecord);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateBalanceRecord = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest.CreateBuilder();
              if (result.hasAccountRiskParametersRequest) {
                subBuilder.MergeFrom(AccountRiskParametersRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountRiskParametersRequest = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters.CreateBuilder();
              if (result.hasUpdateRiskParameters) {
                subBuilder.MergeFrom(UpdateRiskParameters);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateRiskParameters = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest.CreateBuilder();
              if (result.hasAccountSearchRequest) {
                subBuilder.MergeFrom(AccountSearchRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountSearchRequest = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest.CreateBuilder();
              if (result.hasAccountRouteListRequest) {
                subBuilder.MergeFrom(AccountRouteListRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountRouteListRequest = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest.CreateBuilder();
              if (result.hasAccountUserAuthorizationListRequest) {
                subBuilder.MergeFrom(AccountUserAuthorizationListRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountUserAuthorizationListRequest = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest.CreateBuilder();
              if (result.hasAccountSettingsRequest) {
                subBuilder.MergeFrom(AccountSettingsRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountSettingsRequest = subBuilder.BuildPartial();
              break;
            }
            case 90: {
              global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest.CreateBuilder();
              if (result.hasAccountAvailableExchangeGroupsRequest) {
                subBuilder.MergeFrom(AccountAvailableExchangeGroupsRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountAvailableExchangeGroupsRequest = subBuilder.BuildPartial();
              break;
            }
            case 98: {
              global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest.CreateBuilder();
              if (result.hasAccountMarketLimitsRequest) {
                subBuilder.MergeFrom(AccountMarketLimitsRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountMarketLimitsRequest = subBuilder.BuildPartial();
              break;
            }
            case 106: {
              global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest.CreateBuilder();
              if (result.hasAccountPositionsRequest) {
                subBuilder.MergeFrom(AccountPositionsRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountPositionsRequest = subBuilder.BuildPartial();
              break;
            }
            case 114: {
              global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest.CreateBuilder();
              if (result.hasAccountEquityRequest) {
                subBuilder.MergeFrom(AccountEquityRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountEquityRequest = subBuilder.BuildPartial();
              break;
            }
            case 122: {
              global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest.CreateBuilder();
              if (result.hasAccountCollateralRequest) {
                subBuilder.MergeFrom(AccountCollateralRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountCollateralRequest = subBuilder.BuildPartial();
              break;
            }
            case 130: {
              global::CmsApiSamples.Protocol.CMSApi.CloneAccount.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CloneAccount.CreateBuilder();
              if (result.hasCloneAccount) {
                subBuilder.MergeFrom(CloneAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CloneAccount = subBuilder.BuildPartial();
              break;
            }
            case 138: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccount.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccount.CreateBuilder();
              if (result.hasUpdateAccount) {
                subBuilder.MergeFrom(UpdateAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccount = subBuilder.BuildPartial();
              break;
            }
            case 146: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings.CreateBuilder();
              if (result.hasUpdateAccountSettings) {
                subBuilder.MergeFrom(UpdateAccountSettings);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountSettings = subBuilder.BuildPartial();
              break;
            }
            case 154: {
              global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest.CreateBuilder();
              if (result.hasAccountGroupRequest) {
                subBuilder.MergeFrom(AccountGroupRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountGroupRequest = subBuilder.BuildPartial();
              break;
            }
            case 162: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters.CreateBuilder();
              if (result.hasUpdateAccountRiskParameters) {
                subBuilder.MergeFrom(UpdateAccountRiskParameters);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountRiskParameters = subBuilder.BuildPartial();
              break;
            }
            case 170: {
              global::CmsApiSamples.Protocol.CMSApi.RouteListRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.RouteListRequest.CreateBuilder();
              if (result.hasRouteListRequest) {
                subBuilder.MergeFrom(RouteListRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RouteListRequest = subBuilder.BuildPartial();
              break;
            }
            case 178: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList.CreateBuilder();
              if (result.hasUpdateAccountRouteList) {
                subBuilder.MergeFrom(UpdateAccountRouteList);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountRouteList = subBuilder.BuildPartial();
              break;
            }
            case 186: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits.CreateBuilder();
              if (result.hasUpdateAccountMarketLimits) {
                subBuilder.MergeFrom(UpdateAccountMarketLimits);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountMarketLimits = subBuilder.BuildPartial();
              break;
            }
            case 194: {
              global::CmsApiSamples.Protocol.CMSApi.CreateAccount.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CreateAccount.CreateBuilder();
              if (result.hasCreateAccount) {
                subBuilder.MergeFrom(CreateAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CreateAccount = subBuilder.BuildPartial();
              break;
            }
            case 202: {
              global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest.CreateBuilder();
              if (result.hasAccountClusterRequest) {
                subBuilder.MergeFrom(AccountClusterRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountClusterRequest = subBuilder.BuildPartial();
              break;
            }
            case 210: {
              global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster.CreateBuilder();
              if (result.hasCreateAccountCluster) {
                subBuilder.MergeFrom(CreateAccountCluster);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CreateAccountCluster = subBuilder.BuildPartial();
              break;
            }
            case 218: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster.CreateBuilder();
              if (result.hasUpdateAccountCluster) {
                subBuilder.MergeFrom(UpdateAccountCluster);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountCluster = subBuilder.BuildPartial();
              break;
            }
            case 226: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets.CreateBuilder();
              if (result.hasUpdateAccountClusterPriceOffsets) {
                subBuilder.MergeFrom(UpdateAccountClusterPriceOffsets);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountClusterPriceOffsets = subBuilder.BuildPartial();
              break;
            }
            case 234: {
              global::CmsApiSamples.Protocol.CMSApi.RestoreAccount.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.RestoreAccount.CreateBuilder();
              if (result.hasRestoreAccount) {
                subBuilder.MergeFrom(RestoreAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RestoreAccount = subBuilder.BuildPartial();
              break;
            }
            case 242: {
              global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest.CreateBuilder();
              if (result.hasAccountTypeOverrideListRequest) {
                subBuilder.MergeFrom(AccountTypeOverrideListRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountTypeOverrideListRequest = subBuilder.BuildPartial();
              break;
            }
            case 250: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList.CreateBuilder();
              if (result.hasUpdateAccountTypeOverrideList) {
                subBuilder.MergeFrom(UpdateAccountTypeOverrideList);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountTypeOverrideList = subBuilder.BuildPartial();
              break;
            }
            case 258: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList.CreateBuilder();
              if (result.hasUpdateAccountUserAuthorizationList) {
                subBuilder.MergeFrom(UpdateAccountUserAuthorizationList);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountUserAuthorizationList = subBuilder.BuildPartial();
              break;
            }
            case 266: {
              global::CmsApiSamples.Protocol.CMSApi.RemoveAccount.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.RemoveAccount.CreateBuilder();
              if (result.hasRemoveAccount) {
                subBuilder.MergeFrom(RemoveAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RemoveAccount = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountInfoRequest {
       get { return result.hasAccountInfoRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest AccountInfoRequest {
        get { return result.AccountInfoRequest; }
        set { SetAccountInfoRequest(value); }
      }
      public Builder SetAccountInfoRequest(global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountInfoRequest = true;
        result.accountInfoRequest_ = value;
        return this;
      }
      public Builder SetAccountInfoRequest(global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountInfoRequest = true;
        result.accountInfoRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountInfoRequest(global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountInfoRequest &&
            result.accountInfoRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest.DefaultInstance) {
            result.accountInfoRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest.CreateBuilder(result.accountInfoRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountInfoRequest_ = value;
        }
        result.hasAccountInfoRequest = true;
        return this;
      }
      public Builder ClearAccountInfoRequest() {
        PrepareBuilder();
        result.hasAccountInfoRequest = false;
        result.accountInfoRequest_ = null;
        return this;
      }
      
      public bool HasBalanceRecordsRequest {
       get { return result.hasBalanceRecordsRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest BalanceRecordsRequest {
        get { return result.BalanceRecordsRequest; }
        set { SetBalanceRecordsRequest(value); }
      }
      public Builder SetBalanceRecordsRequest(global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBalanceRecordsRequest = true;
        result.balanceRecordsRequest_ = value;
        return this;
      }
      public Builder SetBalanceRecordsRequest(global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBalanceRecordsRequest = true;
        result.balanceRecordsRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBalanceRecordsRequest(global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBalanceRecordsRequest &&
            result.balanceRecordsRequest_ != global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest.DefaultInstance) {
            result.balanceRecordsRequest_ = global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest.CreateBuilder(result.balanceRecordsRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.balanceRecordsRequest_ = value;
        }
        result.hasBalanceRecordsRequest = true;
        return this;
      }
      public Builder ClearBalanceRecordsRequest() {
        PrepareBuilder();
        result.hasBalanceRecordsRequest = false;
        result.balanceRecordsRequest_ = null;
        return this;
      }
      
      public bool HasCreateBalanceRecord {
       get { return result.hasCreateBalanceRecord; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord CreateBalanceRecord {
        get { return result.CreateBalanceRecord; }
        set { SetCreateBalanceRecord(value); }
      }
      public Builder SetCreateBalanceRecord(global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateBalanceRecord = true;
        result.createBalanceRecord_ = value;
        return this;
      }
      public Builder SetCreateBalanceRecord(global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreateBalanceRecord = true;
        result.createBalanceRecord_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreateBalanceRecord(global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreateBalanceRecord &&
            result.createBalanceRecord_ != global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord.DefaultInstance) {
            result.createBalanceRecord_ = global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord.CreateBuilder(result.createBalanceRecord_).MergeFrom(value).BuildPartial();
        } else {
          result.createBalanceRecord_ = value;
        }
        result.hasCreateBalanceRecord = true;
        return this;
      }
      public Builder ClearCreateBalanceRecord() {
        PrepareBuilder();
        result.hasCreateBalanceRecord = false;
        result.createBalanceRecord_ = null;
        return this;
      }
      
      public bool HasUpdateBalanceRecord {
       get { return result.hasUpdateBalanceRecord; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord UpdateBalanceRecord {
        get { return result.UpdateBalanceRecord; }
        set { SetUpdateBalanceRecord(value); }
      }
      public Builder SetUpdateBalanceRecord(global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateBalanceRecord = true;
        result.updateBalanceRecord_ = value;
        return this;
      }
      public Builder SetUpdateBalanceRecord(global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateBalanceRecord = true;
        result.updateBalanceRecord_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateBalanceRecord(global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateBalanceRecord &&
            result.updateBalanceRecord_ != global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord.DefaultInstance) {
            result.updateBalanceRecord_ = global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord.CreateBuilder(result.updateBalanceRecord_).MergeFrom(value).BuildPartial();
        } else {
          result.updateBalanceRecord_ = value;
        }
        result.hasUpdateBalanceRecord = true;
        return this;
      }
      public Builder ClearUpdateBalanceRecord() {
        PrepareBuilder();
        result.hasUpdateBalanceRecord = false;
        result.updateBalanceRecord_ = null;
        return this;
      }
      
      public bool HasAccountRiskParametersRequest {
       get { return result.hasAccountRiskParametersRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest AccountRiskParametersRequest {
        get { return result.AccountRiskParametersRequest; }
        set { SetAccountRiskParametersRequest(value); }
      }
      public Builder SetAccountRiskParametersRequest(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountRiskParametersRequest = true;
        result.accountRiskParametersRequest_ = value;
        return this;
      }
      public Builder SetAccountRiskParametersRequest(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountRiskParametersRequest = true;
        result.accountRiskParametersRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountRiskParametersRequest(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountRiskParametersRequest &&
            result.accountRiskParametersRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest.DefaultInstance) {
            result.accountRiskParametersRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest.CreateBuilder(result.accountRiskParametersRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountRiskParametersRequest_ = value;
        }
        result.hasAccountRiskParametersRequest = true;
        return this;
      }
      public Builder ClearAccountRiskParametersRequest() {
        PrepareBuilder();
        result.hasAccountRiskParametersRequest = false;
        result.accountRiskParametersRequest_ = null;
        return this;
      }
      
      public bool HasUpdateRiskParameters {
       get { return result.hasUpdateRiskParameters; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters UpdateRiskParameters {
        get { return result.UpdateRiskParameters; }
        set { SetUpdateRiskParameters(value); }
      }
      public Builder SetUpdateRiskParameters(global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateRiskParameters = true;
        result.updateRiskParameters_ = value;
        return this;
      }
      public Builder SetUpdateRiskParameters(global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateRiskParameters = true;
        result.updateRiskParameters_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateRiskParameters(global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateRiskParameters &&
            result.updateRiskParameters_ != global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters.DefaultInstance) {
            result.updateRiskParameters_ = global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters.CreateBuilder(result.updateRiskParameters_).MergeFrom(value).BuildPartial();
        } else {
          result.updateRiskParameters_ = value;
        }
        result.hasUpdateRiskParameters = true;
        return this;
      }
      public Builder ClearUpdateRiskParameters() {
        PrepareBuilder();
        result.hasUpdateRiskParameters = false;
        result.updateRiskParameters_ = null;
        return this;
      }
      
      public bool HasAccountSearchRequest {
       get { return result.hasAccountSearchRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest AccountSearchRequest {
        get { return result.AccountSearchRequest; }
        set { SetAccountSearchRequest(value); }
      }
      public Builder SetAccountSearchRequest(global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountSearchRequest = true;
        result.accountSearchRequest_ = value;
        return this;
      }
      public Builder SetAccountSearchRequest(global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountSearchRequest = true;
        result.accountSearchRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountSearchRequest(global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountSearchRequest &&
            result.accountSearchRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest.DefaultInstance) {
            result.accountSearchRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest.CreateBuilder(result.accountSearchRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountSearchRequest_ = value;
        }
        result.hasAccountSearchRequest = true;
        return this;
      }
      public Builder ClearAccountSearchRequest() {
        PrepareBuilder();
        result.hasAccountSearchRequest = false;
        result.accountSearchRequest_ = null;
        return this;
      }
      
      public bool HasAccountRouteListRequest {
       get { return result.hasAccountRouteListRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest AccountRouteListRequest {
        get { return result.AccountRouteListRequest; }
        set { SetAccountRouteListRequest(value); }
      }
      public Builder SetAccountRouteListRequest(global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountRouteListRequest = true;
        result.accountRouteListRequest_ = value;
        return this;
      }
      public Builder SetAccountRouteListRequest(global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountRouteListRequest = true;
        result.accountRouteListRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountRouteListRequest(global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountRouteListRequest &&
            result.accountRouteListRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest.DefaultInstance) {
            result.accountRouteListRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest.CreateBuilder(result.accountRouteListRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountRouteListRequest_ = value;
        }
        result.hasAccountRouteListRequest = true;
        return this;
      }
      public Builder ClearAccountRouteListRequest() {
        PrepareBuilder();
        result.hasAccountRouteListRequest = false;
        result.accountRouteListRequest_ = null;
        return this;
      }
      
      public bool HasAccountUserAuthorizationListRequest {
       get { return result.hasAccountUserAuthorizationListRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest AccountUserAuthorizationListRequest {
        get { return result.AccountUserAuthorizationListRequest; }
        set { SetAccountUserAuthorizationListRequest(value); }
      }
      public Builder SetAccountUserAuthorizationListRequest(global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountUserAuthorizationListRequest = true;
        result.accountUserAuthorizationListRequest_ = value;
        return this;
      }
      public Builder SetAccountUserAuthorizationListRequest(global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountUserAuthorizationListRequest = true;
        result.accountUserAuthorizationListRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountUserAuthorizationListRequest(global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountUserAuthorizationListRequest &&
            result.accountUserAuthorizationListRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest.DefaultInstance) {
            result.accountUserAuthorizationListRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest.CreateBuilder(result.accountUserAuthorizationListRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountUserAuthorizationListRequest_ = value;
        }
        result.hasAccountUserAuthorizationListRequest = true;
        return this;
      }
      public Builder ClearAccountUserAuthorizationListRequest() {
        PrepareBuilder();
        result.hasAccountUserAuthorizationListRequest = false;
        result.accountUserAuthorizationListRequest_ = null;
        return this;
      }
      
      public bool HasAccountSettingsRequest {
       get { return result.hasAccountSettingsRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest AccountSettingsRequest {
        get { return result.AccountSettingsRequest; }
        set { SetAccountSettingsRequest(value); }
      }
      public Builder SetAccountSettingsRequest(global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountSettingsRequest = true;
        result.accountSettingsRequest_ = value;
        return this;
      }
      public Builder SetAccountSettingsRequest(global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountSettingsRequest = true;
        result.accountSettingsRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountSettingsRequest(global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountSettingsRequest &&
            result.accountSettingsRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest.DefaultInstance) {
            result.accountSettingsRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest.CreateBuilder(result.accountSettingsRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountSettingsRequest_ = value;
        }
        result.hasAccountSettingsRequest = true;
        return this;
      }
      public Builder ClearAccountSettingsRequest() {
        PrepareBuilder();
        result.hasAccountSettingsRequest = false;
        result.accountSettingsRequest_ = null;
        return this;
      }
      
      public bool HasAccountAvailableExchangeGroupsRequest {
       get { return result.hasAccountAvailableExchangeGroupsRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest AccountAvailableExchangeGroupsRequest {
        get { return result.AccountAvailableExchangeGroupsRequest; }
        set { SetAccountAvailableExchangeGroupsRequest(value); }
      }
      public Builder SetAccountAvailableExchangeGroupsRequest(global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountAvailableExchangeGroupsRequest = true;
        result.accountAvailableExchangeGroupsRequest_ = value;
        return this;
      }
      public Builder SetAccountAvailableExchangeGroupsRequest(global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountAvailableExchangeGroupsRequest = true;
        result.accountAvailableExchangeGroupsRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountAvailableExchangeGroupsRequest(global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountAvailableExchangeGroupsRequest &&
            result.accountAvailableExchangeGroupsRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest.DefaultInstance) {
            result.accountAvailableExchangeGroupsRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest.CreateBuilder(result.accountAvailableExchangeGroupsRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountAvailableExchangeGroupsRequest_ = value;
        }
        result.hasAccountAvailableExchangeGroupsRequest = true;
        return this;
      }
      public Builder ClearAccountAvailableExchangeGroupsRequest() {
        PrepareBuilder();
        result.hasAccountAvailableExchangeGroupsRequest = false;
        result.accountAvailableExchangeGroupsRequest_ = null;
        return this;
      }
      
      public bool HasAccountMarketLimitsRequest {
       get { return result.hasAccountMarketLimitsRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest AccountMarketLimitsRequest {
        get { return result.AccountMarketLimitsRequest; }
        set { SetAccountMarketLimitsRequest(value); }
      }
      public Builder SetAccountMarketLimitsRequest(global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountMarketLimitsRequest = true;
        result.accountMarketLimitsRequest_ = value;
        return this;
      }
      public Builder SetAccountMarketLimitsRequest(global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountMarketLimitsRequest = true;
        result.accountMarketLimitsRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountMarketLimitsRequest(global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountMarketLimitsRequest &&
            result.accountMarketLimitsRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest.DefaultInstance) {
            result.accountMarketLimitsRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest.CreateBuilder(result.accountMarketLimitsRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountMarketLimitsRequest_ = value;
        }
        result.hasAccountMarketLimitsRequest = true;
        return this;
      }
      public Builder ClearAccountMarketLimitsRequest() {
        PrepareBuilder();
        result.hasAccountMarketLimitsRequest = false;
        result.accountMarketLimitsRequest_ = null;
        return this;
      }
      
      public bool HasAccountPositionsRequest {
       get { return result.hasAccountPositionsRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest AccountPositionsRequest {
        get { return result.AccountPositionsRequest; }
        set { SetAccountPositionsRequest(value); }
      }
      public Builder SetAccountPositionsRequest(global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountPositionsRequest = true;
        result.accountPositionsRequest_ = value;
        return this;
      }
      public Builder SetAccountPositionsRequest(global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountPositionsRequest = true;
        result.accountPositionsRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountPositionsRequest(global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountPositionsRequest &&
            result.accountPositionsRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest.DefaultInstance) {
            result.accountPositionsRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest.CreateBuilder(result.accountPositionsRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountPositionsRequest_ = value;
        }
        result.hasAccountPositionsRequest = true;
        return this;
      }
      public Builder ClearAccountPositionsRequest() {
        PrepareBuilder();
        result.hasAccountPositionsRequest = false;
        result.accountPositionsRequest_ = null;
        return this;
      }
      
      public bool HasAccountEquityRequest {
       get { return result.hasAccountEquityRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest AccountEquityRequest {
        get { return result.AccountEquityRequest; }
        set { SetAccountEquityRequest(value); }
      }
      public Builder SetAccountEquityRequest(global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountEquityRequest = true;
        result.accountEquityRequest_ = value;
        return this;
      }
      public Builder SetAccountEquityRequest(global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountEquityRequest = true;
        result.accountEquityRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountEquityRequest(global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountEquityRequest &&
            result.accountEquityRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest.DefaultInstance) {
            result.accountEquityRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest.CreateBuilder(result.accountEquityRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountEquityRequest_ = value;
        }
        result.hasAccountEquityRequest = true;
        return this;
      }
      public Builder ClearAccountEquityRequest() {
        PrepareBuilder();
        result.hasAccountEquityRequest = false;
        result.accountEquityRequest_ = null;
        return this;
      }
      
      public bool HasAccountCollateralRequest {
       get { return result.hasAccountCollateralRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest AccountCollateralRequest {
        get { return result.AccountCollateralRequest; }
        set { SetAccountCollateralRequest(value); }
      }
      public Builder SetAccountCollateralRequest(global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountCollateralRequest = true;
        result.accountCollateralRequest_ = value;
        return this;
      }
      public Builder SetAccountCollateralRequest(global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountCollateralRequest = true;
        result.accountCollateralRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountCollateralRequest(global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountCollateralRequest &&
            result.accountCollateralRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest.DefaultInstance) {
            result.accountCollateralRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest.CreateBuilder(result.accountCollateralRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountCollateralRequest_ = value;
        }
        result.hasAccountCollateralRequest = true;
        return this;
      }
      public Builder ClearAccountCollateralRequest() {
        PrepareBuilder();
        result.hasAccountCollateralRequest = false;
        result.accountCollateralRequest_ = null;
        return this;
      }
      
      public bool HasCloneAccount {
       get { return result.hasCloneAccount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CloneAccount CloneAccount {
        get { return result.CloneAccount; }
        set { SetCloneAccount(value); }
      }
      public Builder SetCloneAccount(global::CmsApiSamples.Protocol.CMSApi.CloneAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCloneAccount = true;
        result.cloneAccount_ = value;
        return this;
      }
      public Builder SetCloneAccount(global::CmsApiSamples.Protocol.CMSApi.CloneAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCloneAccount = true;
        result.cloneAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCloneAccount(global::CmsApiSamples.Protocol.CMSApi.CloneAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCloneAccount &&
            result.cloneAccount_ != global::CmsApiSamples.Protocol.CMSApi.CloneAccount.DefaultInstance) {
            result.cloneAccount_ = global::CmsApiSamples.Protocol.CMSApi.CloneAccount.CreateBuilder(result.cloneAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.cloneAccount_ = value;
        }
        result.hasCloneAccount = true;
        return this;
      }
      public Builder ClearCloneAccount() {
        PrepareBuilder();
        result.hasCloneAccount = false;
        result.cloneAccount_ = null;
        return this;
      }
      
      public bool HasUpdateAccount {
       get { return result.hasUpdateAccount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccount UpdateAccount {
        get { return result.UpdateAccount; }
        set { SetUpdateAccount(value); }
      }
      public Builder SetUpdateAccount(global::CmsApiSamples.Protocol.CMSApi.UpdateAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccount = true;
        result.updateAccount_ = value;
        return this;
      }
      public Builder SetUpdateAccount(global::CmsApiSamples.Protocol.CMSApi.UpdateAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccount = true;
        result.updateAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccount(global::CmsApiSamples.Protocol.CMSApi.UpdateAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccount &&
            result.updateAccount_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccount.DefaultInstance) {
            result.updateAccount_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccount.CreateBuilder(result.updateAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccount_ = value;
        }
        result.hasUpdateAccount = true;
        return this;
      }
      public Builder ClearUpdateAccount() {
        PrepareBuilder();
        result.hasUpdateAccount = false;
        result.updateAccount_ = null;
        return this;
      }
      
      public bool HasUpdateAccountSettings {
       get { return result.hasUpdateAccountSettings; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings UpdateAccountSettings {
        get { return result.UpdateAccountSettings; }
        set { SetUpdateAccountSettings(value); }
      }
      public Builder SetUpdateAccountSettings(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountSettings = true;
        result.updateAccountSettings_ = value;
        return this;
      }
      public Builder SetUpdateAccountSettings(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountSettings = true;
        result.updateAccountSettings_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountSettings(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountSettings &&
            result.updateAccountSettings_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings.DefaultInstance) {
            result.updateAccountSettings_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings.CreateBuilder(result.updateAccountSettings_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountSettings_ = value;
        }
        result.hasUpdateAccountSettings = true;
        return this;
      }
      public Builder ClearUpdateAccountSettings() {
        PrepareBuilder();
        result.hasUpdateAccountSettings = false;
        result.updateAccountSettings_ = null;
        return this;
      }
      
      public bool HasAccountGroupRequest {
       get { return result.hasAccountGroupRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest AccountGroupRequest {
        get { return result.AccountGroupRequest; }
        set { SetAccountGroupRequest(value); }
      }
      public Builder SetAccountGroupRequest(global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountGroupRequest = true;
        result.accountGroupRequest_ = value;
        return this;
      }
      public Builder SetAccountGroupRequest(global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountGroupRequest = true;
        result.accountGroupRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountGroupRequest(global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountGroupRequest &&
            result.accountGroupRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest.DefaultInstance) {
            result.accountGroupRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest.CreateBuilder(result.accountGroupRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountGroupRequest_ = value;
        }
        result.hasAccountGroupRequest = true;
        return this;
      }
      public Builder ClearAccountGroupRequest() {
        PrepareBuilder();
        result.hasAccountGroupRequest = false;
        result.accountGroupRequest_ = null;
        return this;
      }
      
      public bool HasUpdateAccountRiskParameters {
       get { return result.hasUpdateAccountRiskParameters; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters UpdateAccountRiskParameters {
        get { return result.UpdateAccountRiskParameters; }
        set { SetUpdateAccountRiskParameters(value); }
      }
      public Builder SetUpdateAccountRiskParameters(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountRiskParameters = true;
        result.updateAccountRiskParameters_ = value;
        return this;
      }
      public Builder SetUpdateAccountRiskParameters(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountRiskParameters = true;
        result.updateAccountRiskParameters_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountRiskParameters(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountRiskParameters &&
            result.updateAccountRiskParameters_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters.DefaultInstance) {
            result.updateAccountRiskParameters_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters.CreateBuilder(result.updateAccountRiskParameters_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountRiskParameters_ = value;
        }
        result.hasUpdateAccountRiskParameters = true;
        return this;
      }
      public Builder ClearUpdateAccountRiskParameters() {
        PrepareBuilder();
        result.hasUpdateAccountRiskParameters = false;
        result.updateAccountRiskParameters_ = null;
        return this;
      }
      
      public bool HasRouteListRequest {
       get { return result.hasRouteListRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RouteListRequest RouteListRequest {
        get { return result.RouteListRequest; }
        set { SetRouteListRequest(value); }
      }
      public Builder SetRouteListRequest(global::CmsApiSamples.Protocol.CMSApi.RouteListRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRouteListRequest = true;
        result.routeListRequest_ = value;
        return this;
      }
      public Builder SetRouteListRequest(global::CmsApiSamples.Protocol.CMSApi.RouteListRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRouteListRequest = true;
        result.routeListRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRouteListRequest(global::CmsApiSamples.Protocol.CMSApi.RouteListRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRouteListRequest &&
            result.routeListRequest_ != global::CmsApiSamples.Protocol.CMSApi.RouteListRequest.DefaultInstance) {
            result.routeListRequest_ = global::CmsApiSamples.Protocol.CMSApi.RouteListRequest.CreateBuilder(result.routeListRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.routeListRequest_ = value;
        }
        result.hasRouteListRequest = true;
        return this;
      }
      public Builder ClearRouteListRequest() {
        PrepareBuilder();
        result.hasRouteListRequest = false;
        result.routeListRequest_ = null;
        return this;
      }
      
      public bool HasUpdateAccountRouteList {
       get { return result.hasUpdateAccountRouteList; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList UpdateAccountRouteList {
        get { return result.UpdateAccountRouteList; }
        set { SetUpdateAccountRouteList(value); }
      }
      public Builder SetUpdateAccountRouteList(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountRouteList = true;
        result.updateAccountRouteList_ = value;
        return this;
      }
      public Builder SetUpdateAccountRouteList(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountRouteList = true;
        result.updateAccountRouteList_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountRouteList(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountRouteList &&
            result.updateAccountRouteList_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList.DefaultInstance) {
            result.updateAccountRouteList_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList.CreateBuilder(result.updateAccountRouteList_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountRouteList_ = value;
        }
        result.hasUpdateAccountRouteList = true;
        return this;
      }
      public Builder ClearUpdateAccountRouteList() {
        PrepareBuilder();
        result.hasUpdateAccountRouteList = false;
        result.updateAccountRouteList_ = null;
        return this;
      }
      
      public bool HasUpdateAccountMarketLimits {
       get { return result.hasUpdateAccountMarketLimits; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits UpdateAccountMarketLimits {
        get { return result.UpdateAccountMarketLimits; }
        set { SetUpdateAccountMarketLimits(value); }
      }
      public Builder SetUpdateAccountMarketLimits(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountMarketLimits = true;
        result.updateAccountMarketLimits_ = value;
        return this;
      }
      public Builder SetUpdateAccountMarketLimits(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountMarketLimits = true;
        result.updateAccountMarketLimits_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountMarketLimits(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountMarketLimits &&
            result.updateAccountMarketLimits_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits.DefaultInstance) {
            result.updateAccountMarketLimits_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits.CreateBuilder(result.updateAccountMarketLimits_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountMarketLimits_ = value;
        }
        result.hasUpdateAccountMarketLimits = true;
        return this;
      }
      public Builder ClearUpdateAccountMarketLimits() {
        PrepareBuilder();
        result.hasUpdateAccountMarketLimits = false;
        result.updateAccountMarketLimits_ = null;
        return this;
      }
      
      public bool HasCreateAccount {
       get { return result.hasCreateAccount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CreateAccount CreateAccount {
        get { return result.CreateAccount; }
        set { SetCreateAccount(value); }
      }
      public Builder SetCreateAccount(global::CmsApiSamples.Protocol.CMSApi.CreateAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateAccount = true;
        result.createAccount_ = value;
        return this;
      }
      public Builder SetCreateAccount(global::CmsApiSamples.Protocol.CMSApi.CreateAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreateAccount = true;
        result.createAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreateAccount(global::CmsApiSamples.Protocol.CMSApi.CreateAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreateAccount &&
            result.createAccount_ != global::CmsApiSamples.Protocol.CMSApi.CreateAccount.DefaultInstance) {
            result.createAccount_ = global::CmsApiSamples.Protocol.CMSApi.CreateAccount.CreateBuilder(result.createAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.createAccount_ = value;
        }
        result.hasCreateAccount = true;
        return this;
      }
      public Builder ClearCreateAccount() {
        PrepareBuilder();
        result.hasCreateAccount = false;
        result.createAccount_ = null;
        return this;
      }
      
      public bool HasAccountClusterRequest {
       get { return result.hasAccountClusterRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest AccountClusterRequest {
        get { return result.AccountClusterRequest; }
        set { SetAccountClusterRequest(value); }
      }
      public Builder SetAccountClusterRequest(global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountClusterRequest = true;
        result.accountClusterRequest_ = value;
        return this;
      }
      public Builder SetAccountClusterRequest(global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountClusterRequest = true;
        result.accountClusterRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountClusterRequest(global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountClusterRequest &&
            result.accountClusterRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest.DefaultInstance) {
            result.accountClusterRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest.CreateBuilder(result.accountClusterRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountClusterRequest_ = value;
        }
        result.hasAccountClusterRequest = true;
        return this;
      }
      public Builder ClearAccountClusterRequest() {
        PrepareBuilder();
        result.hasAccountClusterRequest = false;
        result.accountClusterRequest_ = null;
        return this;
      }
      
      public bool HasCreateAccountCluster {
       get { return result.hasCreateAccountCluster; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster CreateAccountCluster {
        get { return result.CreateAccountCluster; }
        set { SetCreateAccountCluster(value); }
      }
      public Builder SetCreateAccountCluster(global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateAccountCluster = true;
        result.createAccountCluster_ = value;
        return this;
      }
      public Builder SetCreateAccountCluster(global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreateAccountCluster = true;
        result.createAccountCluster_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreateAccountCluster(global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreateAccountCluster &&
            result.createAccountCluster_ != global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster.DefaultInstance) {
            result.createAccountCluster_ = global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster.CreateBuilder(result.createAccountCluster_).MergeFrom(value).BuildPartial();
        } else {
          result.createAccountCluster_ = value;
        }
        result.hasCreateAccountCluster = true;
        return this;
      }
      public Builder ClearCreateAccountCluster() {
        PrepareBuilder();
        result.hasCreateAccountCluster = false;
        result.createAccountCluster_ = null;
        return this;
      }
      
      public bool HasUpdateAccountCluster {
       get { return result.hasUpdateAccountCluster; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster UpdateAccountCluster {
        get { return result.UpdateAccountCluster; }
        set { SetUpdateAccountCluster(value); }
      }
      public Builder SetUpdateAccountCluster(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountCluster = true;
        result.updateAccountCluster_ = value;
        return this;
      }
      public Builder SetUpdateAccountCluster(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountCluster = true;
        result.updateAccountCluster_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountCluster(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountCluster &&
            result.updateAccountCluster_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster.DefaultInstance) {
            result.updateAccountCluster_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster.CreateBuilder(result.updateAccountCluster_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountCluster_ = value;
        }
        result.hasUpdateAccountCluster = true;
        return this;
      }
      public Builder ClearUpdateAccountCluster() {
        PrepareBuilder();
        result.hasUpdateAccountCluster = false;
        result.updateAccountCluster_ = null;
        return this;
      }
      
      public bool HasUpdateAccountClusterPriceOffsets {
       get { return result.hasUpdateAccountClusterPriceOffsets; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets UpdateAccountClusterPriceOffsets {
        get { return result.UpdateAccountClusterPriceOffsets; }
        set { SetUpdateAccountClusterPriceOffsets(value); }
      }
      public Builder SetUpdateAccountClusterPriceOffsets(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountClusterPriceOffsets = true;
        result.updateAccountClusterPriceOffsets_ = value;
        return this;
      }
      public Builder SetUpdateAccountClusterPriceOffsets(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountClusterPriceOffsets = true;
        result.updateAccountClusterPriceOffsets_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountClusterPriceOffsets(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountClusterPriceOffsets &&
            result.updateAccountClusterPriceOffsets_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets.DefaultInstance) {
            result.updateAccountClusterPriceOffsets_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets.CreateBuilder(result.updateAccountClusterPriceOffsets_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountClusterPriceOffsets_ = value;
        }
        result.hasUpdateAccountClusterPriceOffsets = true;
        return this;
      }
      public Builder ClearUpdateAccountClusterPriceOffsets() {
        PrepareBuilder();
        result.hasUpdateAccountClusterPriceOffsets = false;
        result.updateAccountClusterPriceOffsets_ = null;
        return this;
      }
      
      public bool HasRestoreAccount {
       get { return result.hasRestoreAccount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RestoreAccount RestoreAccount {
        get { return result.RestoreAccount; }
        set { SetRestoreAccount(value); }
      }
      public Builder SetRestoreAccount(global::CmsApiSamples.Protocol.CMSApi.RestoreAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRestoreAccount = true;
        result.restoreAccount_ = value;
        return this;
      }
      public Builder SetRestoreAccount(global::CmsApiSamples.Protocol.CMSApi.RestoreAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRestoreAccount = true;
        result.restoreAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRestoreAccount(global::CmsApiSamples.Protocol.CMSApi.RestoreAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRestoreAccount &&
            result.restoreAccount_ != global::CmsApiSamples.Protocol.CMSApi.RestoreAccount.DefaultInstance) {
            result.restoreAccount_ = global::CmsApiSamples.Protocol.CMSApi.RestoreAccount.CreateBuilder(result.restoreAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.restoreAccount_ = value;
        }
        result.hasRestoreAccount = true;
        return this;
      }
      public Builder ClearRestoreAccount() {
        PrepareBuilder();
        result.hasRestoreAccount = false;
        result.restoreAccount_ = null;
        return this;
      }
      
      public bool HasAccountTypeOverrideListRequest {
       get { return result.hasAccountTypeOverrideListRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest AccountTypeOverrideListRequest {
        get { return result.AccountTypeOverrideListRequest; }
        set { SetAccountTypeOverrideListRequest(value); }
      }
      public Builder SetAccountTypeOverrideListRequest(global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountTypeOverrideListRequest = true;
        result.accountTypeOverrideListRequest_ = value;
        return this;
      }
      public Builder SetAccountTypeOverrideListRequest(global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountTypeOverrideListRequest = true;
        result.accountTypeOverrideListRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountTypeOverrideListRequest(global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountTypeOverrideListRequest &&
            result.accountTypeOverrideListRequest_ != global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest.DefaultInstance) {
            result.accountTypeOverrideListRequest_ = global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest.CreateBuilder(result.accountTypeOverrideListRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.accountTypeOverrideListRequest_ = value;
        }
        result.hasAccountTypeOverrideListRequest = true;
        return this;
      }
      public Builder ClearAccountTypeOverrideListRequest() {
        PrepareBuilder();
        result.hasAccountTypeOverrideListRequest = false;
        result.accountTypeOverrideListRequest_ = null;
        return this;
      }
      
      public bool HasUpdateAccountTypeOverrideList {
       get { return result.hasUpdateAccountTypeOverrideList; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList UpdateAccountTypeOverrideList {
        get { return result.UpdateAccountTypeOverrideList; }
        set { SetUpdateAccountTypeOverrideList(value); }
      }
      public Builder SetUpdateAccountTypeOverrideList(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountTypeOverrideList = true;
        result.updateAccountTypeOverrideList_ = value;
        return this;
      }
      public Builder SetUpdateAccountTypeOverrideList(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountTypeOverrideList = true;
        result.updateAccountTypeOverrideList_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountTypeOverrideList(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountTypeOverrideList &&
            result.updateAccountTypeOverrideList_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList.DefaultInstance) {
            result.updateAccountTypeOverrideList_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList.CreateBuilder(result.updateAccountTypeOverrideList_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountTypeOverrideList_ = value;
        }
        result.hasUpdateAccountTypeOverrideList = true;
        return this;
      }
      public Builder ClearUpdateAccountTypeOverrideList() {
        PrepareBuilder();
        result.hasUpdateAccountTypeOverrideList = false;
        result.updateAccountTypeOverrideList_ = null;
        return this;
      }
      
      public bool HasUpdateAccountUserAuthorizationList {
       get { return result.hasUpdateAccountUserAuthorizationList; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList UpdateAccountUserAuthorizationList {
        get { return result.UpdateAccountUserAuthorizationList; }
        set { SetUpdateAccountUserAuthorizationList(value); }
      }
      public Builder SetUpdateAccountUserAuthorizationList(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountUserAuthorizationList = true;
        result.updateAccountUserAuthorizationList_ = value;
        return this;
      }
      public Builder SetUpdateAccountUserAuthorizationList(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountUserAuthorizationList = true;
        result.updateAccountUserAuthorizationList_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountUserAuthorizationList(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountUserAuthorizationList &&
            result.updateAccountUserAuthorizationList_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList.DefaultInstance) {
            result.updateAccountUserAuthorizationList_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList.CreateBuilder(result.updateAccountUserAuthorizationList_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountUserAuthorizationList_ = value;
        }
        result.hasUpdateAccountUserAuthorizationList = true;
        return this;
      }
      public Builder ClearUpdateAccountUserAuthorizationList() {
        PrepareBuilder();
        result.hasUpdateAccountUserAuthorizationList = false;
        result.updateAccountUserAuthorizationList_ = null;
        return this;
      }
      
      public bool HasRemoveAccount {
       get { return result.hasRemoveAccount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RemoveAccount RemoveAccount {
        get { return result.RemoveAccount; }
        set { SetRemoveAccount(value); }
      }
      public Builder SetRemoveAccount(global::CmsApiSamples.Protocol.CMSApi.RemoveAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRemoveAccount = true;
        result.removeAccount_ = value;
        return this;
      }
      public Builder SetRemoveAccount(global::CmsApiSamples.Protocol.CMSApi.RemoveAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRemoveAccount = true;
        result.removeAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRemoveAccount(global::CmsApiSamples.Protocol.CMSApi.RemoveAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRemoveAccount &&
            result.removeAccount_ != global::CmsApiSamples.Protocol.CMSApi.RemoveAccount.DefaultInstance) {
            result.removeAccount_ = global::CmsApiSamples.Protocol.CMSApi.RemoveAccount.CreateBuilder(result.removeAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.removeAccount_ = value;
        }
        result.hasRemoveAccount = true;
        return this;
      }
      public Builder ClearRemoveAccount() {
        PrepareBuilder();
        result.hasRemoveAccount = false;
        result.removeAccount_ = null;
        return this;
      }
    }
    static AccountScopeRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderScopeRequest : pb::GeneratedMessage<OrderScopeRequest, OrderScopeRequest.Builder> {
    private OrderScopeRequest() { }
    private static readonly OrderScopeRequest defaultInstance = new OrderScopeRequest().MakeReadOnly();
    private static readonly string[] _orderScopeRequestFieldNames = new string[] { "add_fill", "cancel_compound_order_tree", "cancel_order", "compound_order_tree_request", "create_external_order", "order_details_request", "order_search_request", "reflect_as_canceled_order", "related_order_tree_request", "synthetic_strategy_tree_request" };
    private static readonly uint[] _orderScopeRequestFieldTags = new uint[] { 18, 82, 66, 50, 26, 10, 34, 74, 42, 58 };
    public static OrderScopeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderScopeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderScopeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderScopeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderScopeRequest, OrderScopeRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderScopeRequest__FieldAccessorTable; }
    }
    
    public const int OrderDetailsRequestFieldNumber = 1;
    private bool hasOrderDetailsRequest;
    private global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest orderDetailsRequest_;
    public bool HasOrderDetailsRequest {
      get { return hasOrderDetailsRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest OrderDetailsRequest {
      get { return orderDetailsRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest.DefaultInstance; }
    }
    
    public const int AddFillFieldNumber = 2;
    private bool hasAddFill;
    private global::CmsApiSamples.Protocol.CMSApi.AddFill addFill_;
    public bool HasAddFill {
      get { return hasAddFill; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AddFill AddFill {
      get { return addFill_ ?? global::CmsApiSamples.Protocol.CMSApi.AddFill.DefaultInstance; }
    }
    
    public const int CreateExternalOrderFieldNumber = 3;
    private bool hasCreateExternalOrder;
    private global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder createExternalOrder_;
    public bool HasCreateExternalOrder {
      get { return hasCreateExternalOrder; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder CreateExternalOrder {
      get { return createExternalOrder_ ?? global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder.DefaultInstance; }
    }
    
    public const int OrderSearchRequestFieldNumber = 4;
    private bool hasOrderSearchRequest;
    private global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest orderSearchRequest_;
    public bool HasOrderSearchRequest {
      get { return hasOrderSearchRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest OrderSearchRequest {
      get { return orderSearchRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest.DefaultInstance; }
    }
    
    public const int RelatedOrderTreeRequestFieldNumber = 5;
    private bool hasRelatedOrderTreeRequest;
    private global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest relatedOrderTreeRequest_;
    public bool HasRelatedOrderTreeRequest {
      get { return hasRelatedOrderTreeRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest RelatedOrderTreeRequest {
      get { return relatedOrderTreeRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest.DefaultInstance; }
    }
    
    public const int CompoundOrderTreeRequestFieldNumber = 6;
    private bool hasCompoundOrderTreeRequest;
    private global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest compoundOrderTreeRequest_;
    public bool HasCompoundOrderTreeRequest {
      get { return hasCompoundOrderTreeRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest CompoundOrderTreeRequest {
      get { return compoundOrderTreeRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest.DefaultInstance; }
    }
    
    public const int SyntheticStrategyTreeRequestFieldNumber = 7;
    private bool hasSyntheticStrategyTreeRequest;
    private global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest syntheticStrategyTreeRequest_;
    public bool HasSyntheticStrategyTreeRequest {
      get { return hasSyntheticStrategyTreeRequest; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest SyntheticStrategyTreeRequest {
      get { return syntheticStrategyTreeRequest_ ?? global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest.DefaultInstance; }
    }
    
    public const int CancelOrderFieldNumber = 8;
    private bool hasCancelOrder;
    private global::CmsApiSamples.Protocol.CMSApi.CancelOrder cancelOrder_;
    public bool HasCancelOrder {
      get { return hasCancelOrder; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CancelOrder CancelOrder {
      get { return cancelOrder_ ?? global::CmsApiSamples.Protocol.CMSApi.CancelOrder.DefaultInstance; }
    }
    
    public const int ReflectAsCanceledOrderFieldNumber = 9;
    private bool hasReflectAsCanceledOrder;
    private global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder reflectAsCanceledOrder_;
    public bool HasReflectAsCanceledOrder {
      get { return hasReflectAsCanceledOrder; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder ReflectAsCanceledOrder {
      get { return reflectAsCanceledOrder_ ?? global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder.DefaultInstance; }
    }
    
    public const int CancelCompoundOrderTreeFieldNumber = 10;
    private bool hasCancelCompoundOrderTree;
    private global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree cancelCompoundOrderTree_;
    public bool HasCancelCompoundOrderTree {
      get { return hasCancelCompoundOrderTree; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree CancelCompoundOrderTree {
      get { return cancelCompoundOrderTree_ ?? global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderScopeRequestFieldNames;
      if (hasOrderDetailsRequest) {
        output.WriteMessage(1, field_names[5], OrderDetailsRequest);
      }
      if (hasAddFill) {
        output.WriteMessage(2, field_names[0], AddFill);
      }
      if (hasCreateExternalOrder) {
        output.WriteMessage(3, field_names[4], CreateExternalOrder);
      }
      if (hasOrderSearchRequest) {
        output.WriteMessage(4, field_names[6], OrderSearchRequest);
      }
      if (hasRelatedOrderTreeRequest) {
        output.WriteMessage(5, field_names[8], RelatedOrderTreeRequest);
      }
      if (hasCompoundOrderTreeRequest) {
        output.WriteMessage(6, field_names[3], CompoundOrderTreeRequest);
      }
      if (hasSyntheticStrategyTreeRequest) {
        output.WriteMessage(7, field_names[9], SyntheticStrategyTreeRequest);
      }
      if (hasCancelOrder) {
        output.WriteMessage(8, field_names[2], CancelOrder);
      }
      if (hasReflectAsCanceledOrder) {
        output.WriteMessage(9, field_names[7], ReflectAsCanceledOrder);
      }
      if (hasCancelCompoundOrderTree) {
        output.WriteMessage(10, field_names[1], CancelCompoundOrderTree);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOrderDetailsRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, OrderDetailsRequest);
      }
      if (hasAddFill) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, AddFill);
      }
      if (hasCreateExternalOrder) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, CreateExternalOrder);
      }
      if (hasOrderSearchRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, OrderSearchRequest);
      }
      if (hasRelatedOrderTreeRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, RelatedOrderTreeRequest);
      }
      if (hasCompoundOrderTreeRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, CompoundOrderTreeRequest);
      }
      if (hasSyntheticStrategyTreeRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, SyntheticStrategyTreeRequest);
      }
      if (hasCancelOrder) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, CancelOrder);
      }
      if (hasReflectAsCanceledOrder) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, ReflectAsCanceledOrder);
      }
      if (hasCancelCompoundOrderTree) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, CancelCompoundOrderTree);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderScopeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderScopeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderScopeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderScopeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderScopeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderScopeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderScopeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderScopeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderScopeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderScopeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderScopeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderScopeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderScopeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderScopeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderScopeRequest result;
      
      private OrderScopeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderScopeRequest original = result;
          result = new OrderScopeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderScopeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest.Descriptor; }
      }
      
      public override OrderScopeRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest.DefaultInstance; }
      }
      
      public override OrderScopeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderScopeRequest) {
          return MergeFrom((OrderScopeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderScopeRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderScopeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderDetailsRequest) {
          MergeOrderDetailsRequest(other.OrderDetailsRequest);
        }
        if (other.HasAddFill) {
          MergeAddFill(other.AddFill);
        }
        if (other.HasCreateExternalOrder) {
          MergeCreateExternalOrder(other.CreateExternalOrder);
        }
        if (other.HasOrderSearchRequest) {
          MergeOrderSearchRequest(other.OrderSearchRequest);
        }
        if (other.HasRelatedOrderTreeRequest) {
          MergeRelatedOrderTreeRequest(other.RelatedOrderTreeRequest);
        }
        if (other.HasCompoundOrderTreeRequest) {
          MergeCompoundOrderTreeRequest(other.CompoundOrderTreeRequest);
        }
        if (other.HasSyntheticStrategyTreeRequest) {
          MergeSyntheticStrategyTreeRequest(other.SyntheticStrategyTreeRequest);
        }
        if (other.HasCancelOrder) {
          MergeCancelOrder(other.CancelOrder);
        }
        if (other.HasReflectAsCanceledOrder) {
          MergeReflectAsCanceledOrder(other.ReflectAsCanceledOrder);
        }
        if (other.HasCancelCompoundOrderTree) {
          MergeCancelCompoundOrderTree(other.CancelCompoundOrderTree);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderScopeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderScopeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest.CreateBuilder();
              if (result.hasOrderDetailsRequest) {
                subBuilder.MergeFrom(OrderDetailsRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderDetailsRequest = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.AddFill.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AddFill.CreateBuilder();
              if (result.hasAddFill) {
                subBuilder.MergeFrom(AddFill);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AddFill = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder.CreateBuilder();
              if (result.hasCreateExternalOrder) {
                subBuilder.MergeFrom(CreateExternalOrder);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CreateExternalOrder = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest.CreateBuilder();
              if (result.hasOrderSearchRequest) {
                subBuilder.MergeFrom(OrderSearchRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderSearchRequest = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest.CreateBuilder();
              if (result.hasRelatedOrderTreeRequest) {
                subBuilder.MergeFrom(RelatedOrderTreeRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RelatedOrderTreeRequest = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest.CreateBuilder();
              if (result.hasCompoundOrderTreeRequest) {
                subBuilder.MergeFrom(CompoundOrderTreeRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CompoundOrderTreeRequest = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest.CreateBuilder();
              if (result.hasSyntheticStrategyTreeRequest) {
                subBuilder.MergeFrom(SyntheticStrategyTreeRequest);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SyntheticStrategyTreeRequest = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::CmsApiSamples.Protocol.CMSApi.CancelOrder.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CancelOrder.CreateBuilder();
              if (result.hasCancelOrder) {
                subBuilder.MergeFrom(CancelOrder);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CancelOrder = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder.CreateBuilder();
              if (result.hasReflectAsCanceledOrder) {
                subBuilder.MergeFrom(ReflectAsCanceledOrder);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReflectAsCanceledOrder = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree.CreateBuilder();
              if (result.hasCancelCompoundOrderTree) {
                subBuilder.MergeFrom(CancelCompoundOrderTree);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CancelCompoundOrderTree = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderDetailsRequest {
       get { return result.hasOrderDetailsRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest OrderDetailsRequest {
        get { return result.OrderDetailsRequest; }
        set { SetOrderDetailsRequest(value); }
      }
      public Builder SetOrderDetailsRequest(global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderDetailsRequest = true;
        result.orderDetailsRequest_ = value;
        return this;
      }
      public Builder SetOrderDetailsRequest(global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderDetailsRequest = true;
        result.orderDetailsRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderDetailsRequest(global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderDetailsRequest &&
            result.orderDetailsRequest_ != global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest.DefaultInstance) {
            result.orderDetailsRequest_ = global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest.CreateBuilder(result.orderDetailsRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.orderDetailsRequest_ = value;
        }
        result.hasOrderDetailsRequest = true;
        return this;
      }
      public Builder ClearOrderDetailsRequest() {
        PrepareBuilder();
        result.hasOrderDetailsRequest = false;
        result.orderDetailsRequest_ = null;
        return this;
      }
      
      public bool HasAddFill {
       get { return result.hasAddFill; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AddFill AddFill {
        get { return result.AddFill; }
        set { SetAddFill(value); }
      }
      public Builder SetAddFill(global::CmsApiSamples.Protocol.CMSApi.AddFill value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddFill = true;
        result.addFill_ = value;
        return this;
      }
      public Builder SetAddFill(global::CmsApiSamples.Protocol.CMSApi.AddFill.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAddFill = true;
        result.addFill_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAddFill(global::CmsApiSamples.Protocol.CMSApi.AddFill value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAddFill &&
            result.addFill_ != global::CmsApiSamples.Protocol.CMSApi.AddFill.DefaultInstance) {
            result.addFill_ = global::CmsApiSamples.Protocol.CMSApi.AddFill.CreateBuilder(result.addFill_).MergeFrom(value).BuildPartial();
        } else {
          result.addFill_ = value;
        }
        result.hasAddFill = true;
        return this;
      }
      public Builder ClearAddFill() {
        PrepareBuilder();
        result.hasAddFill = false;
        result.addFill_ = null;
        return this;
      }
      
      public bool HasCreateExternalOrder {
       get { return result.hasCreateExternalOrder; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder CreateExternalOrder {
        get { return result.CreateExternalOrder; }
        set { SetCreateExternalOrder(value); }
      }
      public Builder SetCreateExternalOrder(global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateExternalOrder = true;
        result.createExternalOrder_ = value;
        return this;
      }
      public Builder SetCreateExternalOrder(global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreateExternalOrder = true;
        result.createExternalOrder_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreateExternalOrder(global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreateExternalOrder &&
            result.createExternalOrder_ != global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder.DefaultInstance) {
            result.createExternalOrder_ = global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder.CreateBuilder(result.createExternalOrder_).MergeFrom(value).BuildPartial();
        } else {
          result.createExternalOrder_ = value;
        }
        result.hasCreateExternalOrder = true;
        return this;
      }
      public Builder ClearCreateExternalOrder() {
        PrepareBuilder();
        result.hasCreateExternalOrder = false;
        result.createExternalOrder_ = null;
        return this;
      }
      
      public bool HasOrderSearchRequest {
       get { return result.hasOrderSearchRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest OrderSearchRequest {
        get { return result.OrderSearchRequest; }
        set { SetOrderSearchRequest(value); }
      }
      public Builder SetOrderSearchRequest(global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderSearchRequest = true;
        result.orderSearchRequest_ = value;
        return this;
      }
      public Builder SetOrderSearchRequest(global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderSearchRequest = true;
        result.orderSearchRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderSearchRequest(global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderSearchRequest &&
            result.orderSearchRequest_ != global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest.DefaultInstance) {
            result.orderSearchRequest_ = global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest.CreateBuilder(result.orderSearchRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.orderSearchRequest_ = value;
        }
        result.hasOrderSearchRequest = true;
        return this;
      }
      public Builder ClearOrderSearchRequest() {
        PrepareBuilder();
        result.hasOrderSearchRequest = false;
        result.orderSearchRequest_ = null;
        return this;
      }
      
      public bool HasRelatedOrderTreeRequest {
       get { return result.hasRelatedOrderTreeRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest RelatedOrderTreeRequest {
        get { return result.RelatedOrderTreeRequest; }
        set { SetRelatedOrderTreeRequest(value); }
      }
      public Builder SetRelatedOrderTreeRequest(global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRelatedOrderTreeRequest = true;
        result.relatedOrderTreeRequest_ = value;
        return this;
      }
      public Builder SetRelatedOrderTreeRequest(global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRelatedOrderTreeRequest = true;
        result.relatedOrderTreeRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRelatedOrderTreeRequest(global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRelatedOrderTreeRequest &&
            result.relatedOrderTreeRequest_ != global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest.DefaultInstance) {
            result.relatedOrderTreeRequest_ = global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest.CreateBuilder(result.relatedOrderTreeRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.relatedOrderTreeRequest_ = value;
        }
        result.hasRelatedOrderTreeRequest = true;
        return this;
      }
      public Builder ClearRelatedOrderTreeRequest() {
        PrepareBuilder();
        result.hasRelatedOrderTreeRequest = false;
        result.relatedOrderTreeRequest_ = null;
        return this;
      }
      
      public bool HasCompoundOrderTreeRequest {
       get { return result.hasCompoundOrderTreeRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest CompoundOrderTreeRequest {
        get { return result.CompoundOrderTreeRequest; }
        set { SetCompoundOrderTreeRequest(value); }
      }
      public Builder SetCompoundOrderTreeRequest(global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCompoundOrderTreeRequest = true;
        result.compoundOrderTreeRequest_ = value;
        return this;
      }
      public Builder SetCompoundOrderTreeRequest(global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCompoundOrderTreeRequest = true;
        result.compoundOrderTreeRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCompoundOrderTreeRequest(global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCompoundOrderTreeRequest &&
            result.compoundOrderTreeRequest_ != global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest.DefaultInstance) {
            result.compoundOrderTreeRequest_ = global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest.CreateBuilder(result.compoundOrderTreeRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.compoundOrderTreeRequest_ = value;
        }
        result.hasCompoundOrderTreeRequest = true;
        return this;
      }
      public Builder ClearCompoundOrderTreeRequest() {
        PrepareBuilder();
        result.hasCompoundOrderTreeRequest = false;
        result.compoundOrderTreeRequest_ = null;
        return this;
      }
      
      public bool HasSyntheticStrategyTreeRequest {
       get { return result.hasSyntheticStrategyTreeRequest; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest SyntheticStrategyTreeRequest {
        get { return result.SyntheticStrategyTreeRequest; }
        set { SetSyntheticStrategyTreeRequest(value); }
      }
      public Builder SetSyntheticStrategyTreeRequest(global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSyntheticStrategyTreeRequest = true;
        result.syntheticStrategyTreeRequest_ = value;
        return this;
      }
      public Builder SetSyntheticStrategyTreeRequest(global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSyntheticStrategyTreeRequest = true;
        result.syntheticStrategyTreeRequest_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSyntheticStrategyTreeRequest(global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSyntheticStrategyTreeRequest &&
            result.syntheticStrategyTreeRequest_ != global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest.DefaultInstance) {
            result.syntheticStrategyTreeRequest_ = global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest.CreateBuilder(result.syntheticStrategyTreeRequest_).MergeFrom(value).BuildPartial();
        } else {
          result.syntheticStrategyTreeRequest_ = value;
        }
        result.hasSyntheticStrategyTreeRequest = true;
        return this;
      }
      public Builder ClearSyntheticStrategyTreeRequest() {
        PrepareBuilder();
        result.hasSyntheticStrategyTreeRequest = false;
        result.syntheticStrategyTreeRequest_ = null;
        return this;
      }
      
      public bool HasCancelOrder {
       get { return result.hasCancelOrder; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CancelOrder CancelOrder {
        get { return result.CancelOrder; }
        set { SetCancelOrder(value); }
      }
      public Builder SetCancelOrder(global::CmsApiSamples.Protocol.CMSApi.CancelOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCancelOrder = true;
        result.cancelOrder_ = value;
        return this;
      }
      public Builder SetCancelOrder(global::CmsApiSamples.Protocol.CMSApi.CancelOrder.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCancelOrder = true;
        result.cancelOrder_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCancelOrder(global::CmsApiSamples.Protocol.CMSApi.CancelOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCancelOrder &&
            result.cancelOrder_ != global::CmsApiSamples.Protocol.CMSApi.CancelOrder.DefaultInstance) {
            result.cancelOrder_ = global::CmsApiSamples.Protocol.CMSApi.CancelOrder.CreateBuilder(result.cancelOrder_).MergeFrom(value).BuildPartial();
        } else {
          result.cancelOrder_ = value;
        }
        result.hasCancelOrder = true;
        return this;
      }
      public Builder ClearCancelOrder() {
        PrepareBuilder();
        result.hasCancelOrder = false;
        result.cancelOrder_ = null;
        return this;
      }
      
      public bool HasReflectAsCanceledOrder {
       get { return result.hasReflectAsCanceledOrder; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder ReflectAsCanceledOrder {
        get { return result.ReflectAsCanceledOrder; }
        set { SetReflectAsCanceledOrder(value); }
      }
      public Builder SetReflectAsCanceledOrder(global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReflectAsCanceledOrder = true;
        result.reflectAsCanceledOrder_ = value;
        return this;
      }
      public Builder SetReflectAsCanceledOrder(global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReflectAsCanceledOrder = true;
        result.reflectAsCanceledOrder_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReflectAsCanceledOrder(global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReflectAsCanceledOrder &&
            result.reflectAsCanceledOrder_ != global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder.DefaultInstance) {
            result.reflectAsCanceledOrder_ = global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder.CreateBuilder(result.reflectAsCanceledOrder_).MergeFrom(value).BuildPartial();
        } else {
          result.reflectAsCanceledOrder_ = value;
        }
        result.hasReflectAsCanceledOrder = true;
        return this;
      }
      public Builder ClearReflectAsCanceledOrder() {
        PrepareBuilder();
        result.hasReflectAsCanceledOrder = false;
        result.reflectAsCanceledOrder_ = null;
        return this;
      }
      
      public bool HasCancelCompoundOrderTree {
       get { return result.hasCancelCompoundOrderTree; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree CancelCompoundOrderTree {
        get { return result.CancelCompoundOrderTree; }
        set { SetCancelCompoundOrderTree(value); }
      }
      public Builder SetCancelCompoundOrderTree(global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCancelCompoundOrderTree = true;
        result.cancelCompoundOrderTree_ = value;
        return this;
      }
      public Builder SetCancelCompoundOrderTree(global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCancelCompoundOrderTree = true;
        result.cancelCompoundOrderTree_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCancelCompoundOrderTree(global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCancelCompoundOrderTree &&
            result.cancelCompoundOrderTree_ != global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree.DefaultInstance) {
            result.cancelCompoundOrderTree_ = global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree.CreateBuilder(result.cancelCompoundOrderTree_).MergeFrom(value).BuildPartial();
        } else {
          result.cancelCompoundOrderTree_ = value;
        }
        result.hasCancelCompoundOrderTree = true;
        return this;
      }
      public Builder ClearCancelCompoundOrderTree() {
        PrepareBuilder();
        result.hasCancelCompoundOrderTree = false;
        result.cancelCompoundOrderTree_ = null;
        return this;
      }
    }
    static OrderScopeRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderDetailsRequest : pb::GeneratedMessage<OrderDetailsRequest, OrderDetailsRequest.Builder> {
    private OrderDetailsRequest() { }
    private static readonly OrderDetailsRequest defaultInstance = new OrderDetailsRequest().MakeReadOnly();
    private static readonly string[] _orderDetailsRequestFieldNames = new string[] { "account_id", "order_id", "order_requests_top", "trade_location_id" };
    private static readonly uint[] _orderDetailsRequestFieldTags = new uint[] { 8, 18, 32, 26 };
    public static OrderDetailsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderDetailsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderDetailsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderDetailsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderDetailsRequest, OrderDetailsRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderDetailsRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int OrderIdFieldNumber = 2;
    private bool hasOrderId;
    private string orderId_ = "";
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public string OrderId {
      get { return orderId_; }
    }
    
    public const int TradeLocationIdFieldNumber = 3;
    private bool hasTradeLocationId;
    private string tradeLocationId_ = "";
    public bool HasTradeLocationId {
      get { return hasTradeLocationId; }
    }
    public string TradeLocationId {
      get { return tradeLocationId_; }
    }
    
    public const int OrderRequestsTopFieldNumber = 4;
    private bool hasOrderRequestsTop;
    private uint orderRequestsTop_;
    public bool HasOrderRequestsTop {
      get { return hasOrderRequestsTop; }
    }
    [global::System.CLSCompliant(false)]
    public uint OrderRequestsTop {
      get { return orderRequestsTop_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderDetailsRequestFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasOrderId) {
        output.WriteString(2, field_names[1], OrderId);
      }
      if (hasTradeLocationId) {
        output.WriteString(3, field_names[3], TradeLocationId);
      }
      if (hasOrderRequestsTop) {
        output.WriteUInt32(4, field_names[2], OrderRequestsTop);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, OrderId);
      }
      if (hasTradeLocationId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, TradeLocationId);
      }
      if (hasOrderRequestsTop) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, OrderRequestsTop);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderDetailsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderDetailsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderDetailsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderDetailsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderDetailsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderDetailsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderDetailsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderDetailsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderDetailsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderDetailsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderDetailsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderDetailsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderDetailsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderDetailsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderDetailsRequest result;
      
      private OrderDetailsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderDetailsRequest original = result;
          result = new OrderDetailsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderDetailsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest.Descriptor; }
      }
      
      public override OrderDetailsRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest.DefaultInstance; }
      }
      
      public override OrderDetailsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderDetailsRequest) {
          return MergeFrom((OrderDetailsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderDetailsRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderDetailsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasTradeLocationId) {
          TradeLocationId = other.TradeLocationId;
        }
        if (other.HasOrderRequestsTop) {
          OrderRequestsTop = other.OrderRequestsTop;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderDetailsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderDetailsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasOrderId = input.ReadString(ref result.orderId_);
              break;
            }
            case 26: {
              result.hasTradeLocationId = input.ReadString(ref result.tradeLocationId_);
              break;
            }
            case 32: {
              result.hasOrderRequestsTop = input.ReadUInt32(ref result.orderRequestsTop_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public string OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = "";
        return this;
      }
      
      public bool HasTradeLocationId {
        get { return result.hasTradeLocationId; }
      }
      public string TradeLocationId {
        get { return result.TradeLocationId; }
        set { SetTradeLocationId(value); }
      }
      public Builder SetTradeLocationId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradeLocationId = true;
        result.tradeLocationId_ = value;
        return this;
      }
      public Builder ClearTradeLocationId() {
        PrepareBuilder();
        result.hasTradeLocationId = false;
        result.tradeLocationId_ = "";
        return this;
      }
      
      public bool HasOrderRequestsTop {
        get { return result.hasOrderRequestsTop; }
      }
      [global::System.CLSCompliant(false)]
      public uint OrderRequestsTop {
        get { return result.OrderRequestsTop; }
        set { SetOrderRequestsTop(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOrderRequestsTop(uint value) {
        PrepareBuilder();
        result.hasOrderRequestsTop = true;
        result.orderRequestsTop_ = value;
        return this;
      }
      public Builder ClearOrderRequestsTop() {
        PrepareBuilder();
        result.hasOrderRequestsTop = false;
        result.orderRequestsTop_ = 0;
        return this;
      }
    }
    static OrderDetailsRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AddFill : pb::GeneratedMessage<AddFill, AddFill.Builder> {
    private AddFill() { }
    private static readonly AddFill defaultInstance = new AddFill().MakeReadOnly();
    private static readonly string[] _addFillFieldNames = new string[] { "account_id", "display_price", "fill_utc_time", "is_aggressive", "open_close_type", "order_id", "price", "quantity", "speculation_type", "trade_location_id" };
    private static readonly uint[] _addFillFieldTags = new uint[] { 8, 56, 40, 48, 64, 18, 33, 24, 72, 82 };
    public static AddFill DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddFill DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddFill ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AddFill__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddFill, AddFill.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AddFill__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int OrderIdFieldNumber = 2;
    private bool hasOrderId;
    private string orderId_ = "";
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public string OrderId {
      get { return orderId_; }
    }
    
    public const int QuantityFieldNumber = 3;
    private bool hasQuantity;
    private uint quantity_;
    public bool HasQuantity {
      get { return hasQuantity; }
    }
    [global::System.CLSCompliant(false)]
    public uint Quantity {
      get { return quantity_; }
    }
    
    public const int PriceFieldNumber = 4;
    private bool hasPrice;
    private double price_;
    public bool HasPrice {
      get { return hasPrice; }
    }
    public double Price {
      get { return price_; }
    }
    
    public const int FillUtcTimeFieldNumber = 5;
    private bool hasFillUtcTime;
    private long fillUtcTime_;
    public bool HasFillUtcTime {
      get { return hasFillUtcTime; }
    }
    public long FillUtcTime {
      get { return fillUtcTime_; }
    }
    
    public const int IsAggressiveFieldNumber = 6;
    private bool hasIsAggressive;
    private bool isAggressive_;
    public bool HasIsAggressive {
      get { return hasIsAggressive; }
    }
    public bool IsAggressive {
      get { return isAggressive_; }
    }
    
    public const int DisplayPriceFieldNumber = 7;
    private bool hasDisplayPrice;
    private long displayPrice_;
    public bool HasDisplayPrice {
      get { return hasDisplayPrice; }
    }
    public long DisplayPrice {
      get { return displayPrice_; }
    }
    
    public const int OpenCloseTypeFieldNumber = 8;
    private bool hasOpenCloseType;
    private uint openCloseType_;
    public bool HasOpenCloseType {
      get { return hasOpenCloseType; }
    }
    [global::System.CLSCompliant(false)]
    public uint OpenCloseType {
      get { return openCloseType_; }
    }
    
    public const int SpeculationTypeFieldNumber = 9;
    private bool hasSpeculationType;
    private uint speculationType_;
    public bool HasSpeculationType {
      get { return hasSpeculationType; }
    }
    [global::System.CLSCompliant(false)]
    public uint SpeculationType {
      get { return speculationType_; }
    }
    
    public const int TradeLocationIdFieldNumber = 10;
    private bool hasTradeLocationId;
    private string tradeLocationId_ = "";
    public bool HasTradeLocationId {
      get { return hasTradeLocationId; }
    }
    public string TradeLocationId {
      get { return tradeLocationId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _addFillFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasOrderId) {
        output.WriteString(2, field_names[5], OrderId);
      }
      if (hasQuantity) {
        output.WriteUInt32(3, field_names[7], Quantity);
      }
      if (hasPrice) {
        output.WriteDouble(4, field_names[6], Price);
      }
      if (hasFillUtcTime) {
        output.WriteSInt64(5, field_names[2], FillUtcTime);
      }
      if (hasIsAggressive) {
        output.WriteBool(6, field_names[3], IsAggressive);
      }
      if (hasDisplayPrice) {
        output.WriteSInt64(7, field_names[1], DisplayPrice);
      }
      if (hasOpenCloseType) {
        output.WriteUInt32(8, field_names[4], OpenCloseType);
      }
      if (hasSpeculationType) {
        output.WriteUInt32(9, field_names[8], SpeculationType);
      }
      if (hasTradeLocationId) {
        output.WriteString(10, field_names[9], TradeLocationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, OrderId);
      }
      if (hasQuantity) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Quantity);
      }
      if (hasPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(4, Price);
      }
      if (hasFillUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(5, FillUtcTime);
      }
      if (hasIsAggressive) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, IsAggressive);
      }
      if (hasDisplayPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(7, DisplayPrice);
      }
      if (hasOpenCloseType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, OpenCloseType);
      }
      if (hasSpeculationType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(9, SpeculationType);
      }
      if (hasTradeLocationId) {
        size += pb::CodedOutputStream.ComputeStringSize(10, TradeLocationId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AddFill ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddFill ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddFill ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddFill ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddFill ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddFill ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddFill ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddFill ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddFill ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddFill ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddFill MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddFill prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AddFill, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddFill cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddFill result;
      
      private AddFill PrepareBuilder() {
        if (resultIsReadOnly) {
          AddFill original = result;
          result = new AddFill();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddFill MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AddFill.Descriptor; }
      }
      
      public override AddFill DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AddFill.DefaultInstance; }
      }
      
      public override AddFill BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddFill) {
          return MergeFrom((AddFill) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddFill other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AddFill.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasQuantity) {
          Quantity = other.Quantity;
        }
        if (other.HasPrice) {
          Price = other.Price;
        }
        if (other.HasFillUtcTime) {
          FillUtcTime = other.FillUtcTime;
        }
        if (other.HasIsAggressive) {
          IsAggressive = other.IsAggressive;
        }
        if (other.HasDisplayPrice) {
          DisplayPrice = other.DisplayPrice;
        }
        if (other.HasOpenCloseType) {
          OpenCloseType = other.OpenCloseType;
        }
        if (other.HasSpeculationType) {
          SpeculationType = other.SpeculationType;
        }
        if (other.HasTradeLocationId) {
          TradeLocationId = other.TradeLocationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addFillFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addFillFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasOrderId = input.ReadString(ref result.orderId_);
              break;
            }
            case 24: {
              result.hasQuantity = input.ReadUInt32(ref result.quantity_);
              break;
            }
            case 33: {
              result.hasPrice = input.ReadDouble(ref result.price_);
              break;
            }
            case 40: {
              result.hasFillUtcTime = input.ReadSInt64(ref result.fillUtcTime_);
              break;
            }
            case 48: {
              result.hasIsAggressive = input.ReadBool(ref result.isAggressive_);
              break;
            }
            case 56: {
              result.hasDisplayPrice = input.ReadSInt64(ref result.displayPrice_);
              break;
            }
            case 64: {
              result.hasOpenCloseType = input.ReadUInt32(ref result.openCloseType_);
              break;
            }
            case 72: {
              result.hasSpeculationType = input.ReadUInt32(ref result.speculationType_);
              break;
            }
            case 82: {
              result.hasTradeLocationId = input.ReadString(ref result.tradeLocationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public string OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = "";
        return this;
      }
      
      public bool HasQuantity {
        get { return result.hasQuantity; }
      }
      [global::System.CLSCompliant(false)]
      public uint Quantity {
        get { return result.Quantity; }
        set { SetQuantity(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetQuantity(uint value) {
        PrepareBuilder();
        result.hasQuantity = true;
        result.quantity_ = value;
        return this;
      }
      public Builder ClearQuantity() {
        PrepareBuilder();
        result.hasQuantity = false;
        result.quantity_ = 0;
        return this;
      }
      
      public bool HasPrice {
        get { return result.hasPrice; }
      }
      public double Price {
        get { return result.Price; }
        set { SetPrice(value); }
      }
      public Builder SetPrice(double value) {
        PrepareBuilder();
        result.hasPrice = true;
        result.price_ = value;
        return this;
      }
      public Builder ClearPrice() {
        PrepareBuilder();
        result.hasPrice = false;
        result.price_ = 0D;
        return this;
      }
      
      public bool HasFillUtcTime {
        get { return result.hasFillUtcTime; }
      }
      public long FillUtcTime {
        get { return result.FillUtcTime; }
        set { SetFillUtcTime(value); }
      }
      public Builder SetFillUtcTime(long value) {
        PrepareBuilder();
        result.hasFillUtcTime = true;
        result.fillUtcTime_ = value;
        return this;
      }
      public Builder ClearFillUtcTime() {
        PrepareBuilder();
        result.hasFillUtcTime = false;
        result.fillUtcTime_ = 0;
        return this;
      }
      
      public bool HasIsAggressive {
        get { return result.hasIsAggressive; }
      }
      public bool IsAggressive {
        get { return result.IsAggressive; }
        set { SetIsAggressive(value); }
      }
      public Builder SetIsAggressive(bool value) {
        PrepareBuilder();
        result.hasIsAggressive = true;
        result.isAggressive_ = value;
        return this;
      }
      public Builder ClearIsAggressive() {
        PrepareBuilder();
        result.hasIsAggressive = false;
        result.isAggressive_ = false;
        return this;
      }
      
      public bool HasDisplayPrice {
        get { return result.hasDisplayPrice; }
      }
      public long DisplayPrice {
        get { return result.DisplayPrice; }
        set { SetDisplayPrice(value); }
      }
      public Builder SetDisplayPrice(long value) {
        PrepareBuilder();
        result.hasDisplayPrice = true;
        result.displayPrice_ = value;
        return this;
      }
      public Builder ClearDisplayPrice() {
        PrepareBuilder();
        result.hasDisplayPrice = false;
        result.displayPrice_ = 0;
        return this;
      }
      
      public bool HasOpenCloseType {
        get { return result.hasOpenCloseType; }
      }
      [global::System.CLSCompliant(false)]
      public uint OpenCloseType {
        get { return result.OpenCloseType; }
        set { SetOpenCloseType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOpenCloseType(uint value) {
        PrepareBuilder();
        result.hasOpenCloseType = true;
        result.openCloseType_ = value;
        return this;
      }
      public Builder ClearOpenCloseType() {
        PrepareBuilder();
        result.hasOpenCloseType = false;
        result.openCloseType_ = 0;
        return this;
      }
      
      public bool HasSpeculationType {
        get { return result.hasSpeculationType; }
      }
      [global::System.CLSCompliant(false)]
      public uint SpeculationType {
        get { return result.SpeculationType; }
        set { SetSpeculationType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSpeculationType(uint value) {
        PrepareBuilder();
        result.hasSpeculationType = true;
        result.speculationType_ = value;
        return this;
      }
      public Builder ClearSpeculationType() {
        PrepareBuilder();
        result.hasSpeculationType = false;
        result.speculationType_ = 0;
        return this;
      }
      
      public bool HasTradeLocationId {
        get { return result.hasTradeLocationId; }
      }
      public string TradeLocationId {
        get { return result.TradeLocationId; }
        set { SetTradeLocationId(value); }
      }
      public Builder SetTradeLocationId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradeLocationId = true;
        result.tradeLocationId_ = value;
        return this;
      }
      public Builder ClearTradeLocationId() {
        PrepareBuilder();
        result.hasTradeLocationId = false;
        result.tradeLocationId_ = "";
        return this;
      }
    }
    static AddFill() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateExternalOrder : pb::GeneratedMessage<CreateExternalOrder, CreateExternalOrder.Builder> {
    private CreateExternalOrder() { }
    private static readonly CreateExternalOrder defaultInstance = new CreateExternalOrder().MakeReadOnly();
    private static readonly string[] _createExternalOrderFieldNames = new string[] { "account_id", "contract_symbol", "display_fill_price", "display_limit_price", "display_stop_price", "fill_is_aggressive", "fill_price", "fill_quantity", "fill_utc_time", "limit_price", "open_close_type", "order_type", "side", "speculation_type", "stop_price", "user_id" };
    private static readonly uint[] _createExternalOrderFieldTags = new uint[] { 8, 26, 104, 88, 96, 128, 73, 64, 80, 49, 112, 40, 32, 120, 57, 18 };
    public static CreateExternalOrder DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateExternalOrder DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateExternalOrder ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateExternalOrder__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateExternalOrder, CreateExternalOrder.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateExternalOrder__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int UserIdFieldNumber = 2;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int ContractSymbolFieldNumber = 3;
    private bool hasContractSymbol;
    private string contractSymbol_ = "";
    public bool HasContractSymbol {
      get { return hasContractSymbol; }
    }
    public string ContractSymbol {
      get { return contractSymbol_; }
    }
    
    public const int SideFieldNumber = 4;
    private bool hasSide;
    private uint side_;
    public bool HasSide {
      get { return hasSide; }
    }
    [global::System.CLSCompliant(false)]
    public uint Side {
      get { return side_; }
    }
    
    public const int OrderTypeFieldNumber = 5;
    private bool hasOrderType;
    private uint orderType_;
    public bool HasOrderType {
      get { return hasOrderType; }
    }
    [global::System.CLSCompliant(false)]
    public uint OrderType {
      get { return orderType_; }
    }
    
    public const int LimitPriceFieldNumber = 6;
    private bool hasLimitPrice;
    private double limitPrice_;
    public bool HasLimitPrice {
      get { return hasLimitPrice; }
    }
    public double LimitPrice {
      get { return limitPrice_; }
    }
    
    public const int StopPriceFieldNumber = 7;
    private bool hasStopPrice;
    private double stopPrice_;
    public bool HasStopPrice {
      get { return hasStopPrice; }
    }
    public double StopPrice {
      get { return stopPrice_; }
    }
    
    public const int FillQuantityFieldNumber = 8;
    private bool hasFillQuantity;
    private uint fillQuantity_;
    public bool HasFillQuantity {
      get { return hasFillQuantity; }
    }
    [global::System.CLSCompliant(false)]
    public uint FillQuantity {
      get { return fillQuantity_; }
    }
    
    public const int FillPriceFieldNumber = 9;
    private bool hasFillPrice;
    private double fillPrice_;
    public bool HasFillPrice {
      get { return hasFillPrice; }
    }
    public double FillPrice {
      get { return fillPrice_; }
    }
    
    public const int FillUtcTimeFieldNumber = 10;
    private bool hasFillUtcTime;
    private long fillUtcTime_;
    public bool HasFillUtcTime {
      get { return hasFillUtcTime; }
    }
    public long FillUtcTime {
      get { return fillUtcTime_; }
    }
    
    public const int DisplayLimitPriceFieldNumber = 11;
    private bool hasDisplayLimitPrice;
    private long displayLimitPrice_;
    public bool HasDisplayLimitPrice {
      get { return hasDisplayLimitPrice; }
    }
    public long DisplayLimitPrice {
      get { return displayLimitPrice_; }
    }
    
    public const int DisplayStopPriceFieldNumber = 12;
    private bool hasDisplayStopPrice;
    private long displayStopPrice_;
    public bool HasDisplayStopPrice {
      get { return hasDisplayStopPrice; }
    }
    public long DisplayStopPrice {
      get { return displayStopPrice_; }
    }
    
    public const int DisplayFillPriceFieldNumber = 13;
    private bool hasDisplayFillPrice;
    private long displayFillPrice_;
    public bool HasDisplayFillPrice {
      get { return hasDisplayFillPrice; }
    }
    public long DisplayFillPrice {
      get { return displayFillPrice_; }
    }
    
    public const int OpenCloseTypeFieldNumber = 14;
    private bool hasOpenCloseType;
    private uint openCloseType_;
    public bool HasOpenCloseType {
      get { return hasOpenCloseType; }
    }
    [global::System.CLSCompliant(false)]
    public uint OpenCloseType {
      get { return openCloseType_; }
    }
    
    public const int SpeculationTypeFieldNumber = 15;
    private bool hasSpeculationType;
    private uint speculationType_;
    public bool HasSpeculationType {
      get { return hasSpeculationType; }
    }
    [global::System.CLSCompliant(false)]
    public uint SpeculationType {
      get { return speculationType_; }
    }
    
    public const int FillIsAggressiveFieldNumber = 16;
    private bool hasFillIsAggressive;
    private bool fillIsAggressive_;
    public bool HasFillIsAggressive {
      get { return hasFillIsAggressive; }
    }
    public bool FillIsAggressive {
      get { return fillIsAggressive_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createExternalOrderFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasUserId) {
        output.WriteString(2, field_names[15], UserId);
      }
      if (hasContractSymbol) {
        output.WriteString(3, field_names[1], ContractSymbol);
      }
      if (hasSide) {
        output.WriteUInt32(4, field_names[12], Side);
      }
      if (hasOrderType) {
        output.WriteUInt32(5, field_names[11], OrderType);
      }
      if (hasLimitPrice) {
        output.WriteDouble(6, field_names[9], LimitPrice);
      }
      if (hasStopPrice) {
        output.WriteDouble(7, field_names[14], StopPrice);
      }
      if (hasFillQuantity) {
        output.WriteUInt32(8, field_names[7], FillQuantity);
      }
      if (hasFillPrice) {
        output.WriteDouble(9, field_names[6], FillPrice);
      }
      if (hasFillUtcTime) {
        output.WriteSInt64(10, field_names[8], FillUtcTime);
      }
      if (hasDisplayLimitPrice) {
        output.WriteSInt64(11, field_names[3], DisplayLimitPrice);
      }
      if (hasDisplayStopPrice) {
        output.WriteSInt64(12, field_names[4], DisplayStopPrice);
      }
      if (hasDisplayFillPrice) {
        output.WriteSInt64(13, field_names[2], DisplayFillPrice);
      }
      if (hasOpenCloseType) {
        output.WriteUInt32(14, field_names[10], OpenCloseType);
      }
      if (hasSpeculationType) {
        output.WriteUInt32(15, field_names[13], SpeculationType);
      }
      if (hasFillIsAggressive) {
        output.WriteBool(16, field_names[5], FillIsAggressive);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, UserId);
      }
      if (hasContractSymbol) {
        size += pb::CodedOutputStream.ComputeStringSize(3, ContractSymbol);
      }
      if (hasSide) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Side);
      }
      if (hasOrderType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, OrderType);
      }
      if (hasLimitPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(6, LimitPrice);
      }
      if (hasStopPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(7, StopPrice);
      }
      if (hasFillQuantity) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, FillQuantity);
      }
      if (hasFillPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(9, FillPrice);
      }
      if (hasFillUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(10, FillUtcTime);
      }
      if (hasDisplayLimitPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(11, DisplayLimitPrice);
      }
      if (hasDisplayStopPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(12, DisplayStopPrice);
      }
      if (hasDisplayFillPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(13, DisplayFillPrice);
      }
      if (hasOpenCloseType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(14, OpenCloseType);
      }
      if (hasSpeculationType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(15, SpeculationType);
      }
      if (hasFillIsAggressive) {
        size += pb::CodedOutputStream.ComputeBoolSize(16, FillIsAggressive);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateExternalOrder ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateExternalOrder ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateExternalOrder ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateExternalOrder ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateExternalOrder ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateExternalOrder ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateExternalOrder ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateExternalOrder ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateExternalOrder ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateExternalOrder ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateExternalOrder MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateExternalOrder prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateExternalOrder, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateExternalOrder cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateExternalOrder result;
      
      private CreateExternalOrder PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateExternalOrder original = result;
          result = new CreateExternalOrder();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateExternalOrder MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder.Descriptor; }
      }
      
      public override CreateExternalOrder DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder.DefaultInstance; }
      }
      
      public override CreateExternalOrder BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateExternalOrder) {
          return MergeFrom((CreateExternalOrder) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateExternalOrder other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrder.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasContractSymbol) {
          ContractSymbol = other.ContractSymbol;
        }
        if (other.HasSide) {
          Side = other.Side;
        }
        if (other.HasOrderType) {
          OrderType = other.OrderType;
        }
        if (other.HasLimitPrice) {
          LimitPrice = other.LimitPrice;
        }
        if (other.HasStopPrice) {
          StopPrice = other.StopPrice;
        }
        if (other.HasFillQuantity) {
          FillQuantity = other.FillQuantity;
        }
        if (other.HasFillPrice) {
          FillPrice = other.FillPrice;
        }
        if (other.HasFillUtcTime) {
          FillUtcTime = other.FillUtcTime;
        }
        if (other.HasDisplayLimitPrice) {
          DisplayLimitPrice = other.DisplayLimitPrice;
        }
        if (other.HasDisplayStopPrice) {
          DisplayStopPrice = other.DisplayStopPrice;
        }
        if (other.HasDisplayFillPrice) {
          DisplayFillPrice = other.DisplayFillPrice;
        }
        if (other.HasOpenCloseType) {
          OpenCloseType = other.OpenCloseType;
        }
        if (other.HasSpeculationType) {
          SpeculationType = other.SpeculationType;
        }
        if (other.HasFillIsAggressive) {
          FillIsAggressive = other.FillIsAggressive;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createExternalOrderFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createExternalOrderFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 26: {
              result.hasContractSymbol = input.ReadString(ref result.contractSymbol_);
              break;
            }
            case 32: {
              result.hasSide = input.ReadUInt32(ref result.side_);
              break;
            }
            case 40: {
              result.hasOrderType = input.ReadUInt32(ref result.orderType_);
              break;
            }
            case 49: {
              result.hasLimitPrice = input.ReadDouble(ref result.limitPrice_);
              break;
            }
            case 57: {
              result.hasStopPrice = input.ReadDouble(ref result.stopPrice_);
              break;
            }
            case 64: {
              result.hasFillQuantity = input.ReadUInt32(ref result.fillQuantity_);
              break;
            }
            case 73: {
              result.hasFillPrice = input.ReadDouble(ref result.fillPrice_);
              break;
            }
            case 80: {
              result.hasFillUtcTime = input.ReadSInt64(ref result.fillUtcTime_);
              break;
            }
            case 88: {
              result.hasDisplayLimitPrice = input.ReadSInt64(ref result.displayLimitPrice_);
              break;
            }
            case 96: {
              result.hasDisplayStopPrice = input.ReadSInt64(ref result.displayStopPrice_);
              break;
            }
            case 104: {
              result.hasDisplayFillPrice = input.ReadSInt64(ref result.displayFillPrice_);
              break;
            }
            case 112: {
              result.hasOpenCloseType = input.ReadUInt32(ref result.openCloseType_);
              break;
            }
            case 120: {
              result.hasSpeculationType = input.ReadUInt32(ref result.speculationType_);
              break;
            }
            case 128: {
              result.hasFillIsAggressive = input.ReadBool(ref result.fillIsAggressive_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasContractSymbol {
        get { return result.hasContractSymbol; }
      }
      public string ContractSymbol {
        get { return result.ContractSymbol; }
        set { SetContractSymbol(value); }
      }
      public Builder SetContractSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContractSymbol = true;
        result.contractSymbol_ = value;
        return this;
      }
      public Builder ClearContractSymbol() {
        PrepareBuilder();
        result.hasContractSymbol = false;
        result.contractSymbol_ = "";
        return this;
      }
      
      public bool HasSide {
        get { return result.hasSide; }
      }
      [global::System.CLSCompliant(false)]
      public uint Side {
        get { return result.Side; }
        set { SetSide(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSide(uint value) {
        PrepareBuilder();
        result.hasSide = true;
        result.side_ = value;
        return this;
      }
      public Builder ClearSide() {
        PrepareBuilder();
        result.hasSide = false;
        result.side_ = 0;
        return this;
      }
      
      public bool HasOrderType {
        get { return result.hasOrderType; }
      }
      [global::System.CLSCompliant(false)]
      public uint OrderType {
        get { return result.OrderType; }
        set { SetOrderType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOrderType(uint value) {
        PrepareBuilder();
        result.hasOrderType = true;
        result.orderType_ = value;
        return this;
      }
      public Builder ClearOrderType() {
        PrepareBuilder();
        result.hasOrderType = false;
        result.orderType_ = 0;
        return this;
      }
      
      public bool HasLimitPrice {
        get { return result.hasLimitPrice; }
      }
      public double LimitPrice {
        get { return result.LimitPrice; }
        set { SetLimitPrice(value); }
      }
      public Builder SetLimitPrice(double value) {
        PrepareBuilder();
        result.hasLimitPrice = true;
        result.limitPrice_ = value;
        return this;
      }
      public Builder ClearLimitPrice() {
        PrepareBuilder();
        result.hasLimitPrice = false;
        result.limitPrice_ = 0D;
        return this;
      }
      
      public bool HasStopPrice {
        get { return result.hasStopPrice; }
      }
      public double StopPrice {
        get { return result.StopPrice; }
        set { SetStopPrice(value); }
      }
      public Builder SetStopPrice(double value) {
        PrepareBuilder();
        result.hasStopPrice = true;
        result.stopPrice_ = value;
        return this;
      }
      public Builder ClearStopPrice() {
        PrepareBuilder();
        result.hasStopPrice = false;
        result.stopPrice_ = 0D;
        return this;
      }
      
      public bool HasFillQuantity {
        get { return result.hasFillQuantity; }
      }
      [global::System.CLSCompliant(false)]
      public uint FillQuantity {
        get { return result.FillQuantity; }
        set { SetFillQuantity(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetFillQuantity(uint value) {
        PrepareBuilder();
        result.hasFillQuantity = true;
        result.fillQuantity_ = value;
        return this;
      }
      public Builder ClearFillQuantity() {
        PrepareBuilder();
        result.hasFillQuantity = false;
        result.fillQuantity_ = 0;
        return this;
      }
      
      public bool HasFillPrice {
        get { return result.hasFillPrice; }
      }
      public double FillPrice {
        get { return result.FillPrice; }
        set { SetFillPrice(value); }
      }
      public Builder SetFillPrice(double value) {
        PrepareBuilder();
        result.hasFillPrice = true;
        result.fillPrice_ = value;
        return this;
      }
      public Builder ClearFillPrice() {
        PrepareBuilder();
        result.hasFillPrice = false;
        result.fillPrice_ = 0D;
        return this;
      }
      
      public bool HasFillUtcTime {
        get { return result.hasFillUtcTime; }
      }
      public long FillUtcTime {
        get { return result.FillUtcTime; }
        set { SetFillUtcTime(value); }
      }
      public Builder SetFillUtcTime(long value) {
        PrepareBuilder();
        result.hasFillUtcTime = true;
        result.fillUtcTime_ = value;
        return this;
      }
      public Builder ClearFillUtcTime() {
        PrepareBuilder();
        result.hasFillUtcTime = false;
        result.fillUtcTime_ = 0;
        return this;
      }
      
      public bool HasDisplayLimitPrice {
        get { return result.hasDisplayLimitPrice; }
      }
      public long DisplayLimitPrice {
        get { return result.DisplayLimitPrice; }
        set { SetDisplayLimitPrice(value); }
      }
      public Builder SetDisplayLimitPrice(long value) {
        PrepareBuilder();
        result.hasDisplayLimitPrice = true;
        result.displayLimitPrice_ = value;
        return this;
      }
      public Builder ClearDisplayLimitPrice() {
        PrepareBuilder();
        result.hasDisplayLimitPrice = false;
        result.displayLimitPrice_ = 0;
        return this;
      }
      
      public bool HasDisplayStopPrice {
        get { return result.hasDisplayStopPrice; }
      }
      public long DisplayStopPrice {
        get { return result.DisplayStopPrice; }
        set { SetDisplayStopPrice(value); }
      }
      public Builder SetDisplayStopPrice(long value) {
        PrepareBuilder();
        result.hasDisplayStopPrice = true;
        result.displayStopPrice_ = value;
        return this;
      }
      public Builder ClearDisplayStopPrice() {
        PrepareBuilder();
        result.hasDisplayStopPrice = false;
        result.displayStopPrice_ = 0;
        return this;
      }
      
      public bool HasDisplayFillPrice {
        get { return result.hasDisplayFillPrice; }
      }
      public long DisplayFillPrice {
        get { return result.DisplayFillPrice; }
        set { SetDisplayFillPrice(value); }
      }
      public Builder SetDisplayFillPrice(long value) {
        PrepareBuilder();
        result.hasDisplayFillPrice = true;
        result.displayFillPrice_ = value;
        return this;
      }
      public Builder ClearDisplayFillPrice() {
        PrepareBuilder();
        result.hasDisplayFillPrice = false;
        result.displayFillPrice_ = 0;
        return this;
      }
      
      public bool HasOpenCloseType {
        get { return result.hasOpenCloseType; }
      }
      [global::System.CLSCompliant(false)]
      public uint OpenCloseType {
        get { return result.OpenCloseType; }
        set { SetOpenCloseType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOpenCloseType(uint value) {
        PrepareBuilder();
        result.hasOpenCloseType = true;
        result.openCloseType_ = value;
        return this;
      }
      public Builder ClearOpenCloseType() {
        PrepareBuilder();
        result.hasOpenCloseType = false;
        result.openCloseType_ = 0;
        return this;
      }
      
      public bool HasSpeculationType {
        get { return result.hasSpeculationType; }
      }
      [global::System.CLSCompliant(false)]
      public uint SpeculationType {
        get { return result.SpeculationType; }
        set { SetSpeculationType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSpeculationType(uint value) {
        PrepareBuilder();
        result.hasSpeculationType = true;
        result.speculationType_ = value;
        return this;
      }
      public Builder ClearSpeculationType() {
        PrepareBuilder();
        result.hasSpeculationType = false;
        result.speculationType_ = 0;
        return this;
      }
      
      public bool HasFillIsAggressive {
        get { return result.hasFillIsAggressive; }
      }
      public bool FillIsAggressive {
        get { return result.FillIsAggressive; }
        set { SetFillIsAggressive(value); }
      }
      public Builder SetFillIsAggressive(bool value) {
        PrepareBuilder();
        result.hasFillIsAggressive = true;
        result.fillIsAggressive_ = value;
        return this;
      }
      public Builder ClearFillIsAggressive() {
        PrepareBuilder();
        result.hasFillIsAggressive = false;
        result.fillIsAggressive_ = false;
        return this;
      }
    }
    static CreateExternalOrder() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderSearchRequest : pb::GeneratedMessage<OrderSearchRequest, OrderSearchRequest.Builder> {
    private OrderSearchRequest() { }
    private static readonly OrderSearchRequest defaultInstance = new OrderSearchRequest().MakeReadOnly();
    private static readonly string[] _orderSearchRequestFieldNames = new string[] { "all_match_mode", "archived", "search_criteria", "search_options", "text", "top", "trade_location_id" };
    private static readonly uint[] _orderSearchRequestFieldTags = new uint[] { 56, 40, 16, 50, 10, 24, 34 };
    public static OrderSearchRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderSearchRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderSearchRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderSearchRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderSearchRequest, OrderSearchRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderSearchRequest__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum SearchCriteria {
        ORDER_ID = 1,
        CLIENT_ORDER_ID = 2,
        TICKET_NUMBER = 3,
        CONTRACT = 4,
        ACCOUNT_ID = 5,
        ACCOUNT_NAME = 6,
        BROKERAGE_NUMBER = 7,
        USER_NAME = 8,
        CUSTOMER_LAST_NAME = 9,
        CUSTOMER_FIRST_NAME = 10,
        USER_ID = 11,
        ROUTE_ORDER_ID = 12,
        ROUTE_CLIENT_ORDER_ID = 13,
        ORDER_GUID = 14,
        FILL_CARE_ORDER_ID = 15,
        CHAIN_ORDER_ID = 16,
        SALES_SERIES_NUMBER = 17,
        SALES_SERIES_NAME = 18,
        SALES_SERIES_ID = 19,
        EXCHANGE_NAME = 20,
        ROUTE_CODE = 21,
        ROUTE_NAME = 22,
      }
      
    }
    #endregion
    
    public const int TextFieldNumber = 1;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int SearchCriteriaFieldNumber = 2;
    private pbc::PopsicleList<uint> searchCriteria_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> SearchCriteriaList {
      get { return pbc::Lists.AsReadOnly(searchCriteria_); }
    }
    public int SearchCriteriaCount {
      get { return searchCriteria_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetSearchCriteria(int index) {
      return searchCriteria_[index];
    }
    
    public const int TopFieldNumber = 3;
    private bool hasTop;
    private uint top_;
    public bool HasTop {
      get { return hasTop; }
    }
    [global::System.CLSCompliant(false)]
    public uint Top {
      get { return top_; }
    }
    
    public const int TradeLocationIdFieldNumber = 4;
    private bool hasTradeLocationId;
    private string tradeLocationId_ = "";
    public bool HasTradeLocationId {
      get { return hasTradeLocationId; }
    }
    public string TradeLocationId {
      get { return tradeLocationId_; }
    }
    
    public const int ArchivedFieldNumber = 5;
    private bool hasArchived;
    private bool archived_;
    public bool HasArchived {
      get { return hasArchived; }
    }
    public bool Archived {
      get { return archived_; }
    }
    
    public const int SearchOptionsFieldNumber = 6;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> searchOptions_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> SearchOptionsList {
      get { return searchOptions_; }
    }
    public int SearchOptionsCount {
      get { return searchOptions_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.SearchOption GetSearchOptions(int index) {
      return searchOptions_[index];
    }
    
    public const int AllMatchModeFieldNumber = 7;
    private bool hasAllMatchMode;
    private bool allMatchMode_;
    public bool HasAllMatchMode {
      get { return hasAllMatchMode; }
    }
    public bool AllMatchMode {
      get { return allMatchMode_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderSearchRequestFieldNames;
      if (hasText) {
        output.WriteString(1, field_names[4], Text);
      }
      if (searchCriteria_.Count > 0) {
        output.WriteUInt32Array(2, field_names[2], searchCriteria_);
      }
      if (hasTop) {
        output.WriteUInt32(3, field_names[5], Top);
      }
      if (hasTradeLocationId) {
        output.WriteString(4, field_names[6], TradeLocationId);
      }
      if (hasArchived) {
        output.WriteBool(5, field_names[1], Archived);
      }
      if (searchOptions_.Count > 0) {
        output.WriteMessageArray(6, field_names[3], searchOptions_);
      }
      if (hasAllMatchMode) {
        output.WriteBool(7, field_names[0], AllMatchMode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Text);
      }
      {
        int dataSize = 0;
        foreach (uint element in SearchCriteriaList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * searchCriteria_.Count;
      }
      if (hasTop) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Top);
      }
      if (hasTradeLocationId) {
        size += pb::CodedOutputStream.ComputeStringSize(4, TradeLocationId);
      }
      if (hasArchived) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, Archived);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.SearchOption element in SearchOptionsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, element);
      }
      if (hasAllMatchMode) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, AllMatchMode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderSearchRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderSearchRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderSearchRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderSearchRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderSearchRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderSearchRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderSearchRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderSearchRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderSearchRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderSearchRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderSearchRequest MakeReadOnly() {
      searchCriteria_.MakeReadOnly();
      searchOptions_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderSearchRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderSearchRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderSearchRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderSearchRequest result;
      
      private OrderSearchRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderSearchRequest original = result;
          result = new OrderSearchRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderSearchRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest.Descriptor; }
      }
      
      public override OrderSearchRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest.DefaultInstance; }
      }
      
      public override OrderSearchRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderSearchRequest) {
          return MergeFrom((OrderSearchRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderSearchRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderSearchRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.searchCriteria_.Count != 0) {
          result.searchCriteria_.Add(other.searchCriteria_);
        }
        if (other.HasTop) {
          Top = other.Top;
        }
        if (other.HasTradeLocationId) {
          TradeLocationId = other.TradeLocationId;
        }
        if (other.HasArchived) {
          Archived = other.Archived;
        }
        if (other.searchOptions_.Count != 0) {
          result.searchOptions_.Add(other.searchOptions_);
        }
        if (other.HasAllMatchMode) {
          AllMatchMode = other.AllMatchMode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderSearchRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderSearchRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt32Array(tag, field_name, result.searchCriteria_);
              break;
            }
            case 24: {
              result.hasTop = input.ReadUInt32(ref result.top_);
              break;
            }
            case 34: {
              result.hasTradeLocationId = input.ReadString(ref result.tradeLocationId_);
              break;
            }
            case 40: {
              result.hasArchived = input.ReadBool(ref result.archived_);
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.searchOptions_, global::CmsApiSamples.Protocol.CMSApi.SearchOption.DefaultInstance, extensionRegistry);
              break;
            }
            case 56: {
              result.hasAllMatchMode = input.ReadBool(ref result.allMatchMode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> SearchCriteriaList {
        get { return PrepareBuilder().searchCriteria_; }
      }
      public int SearchCriteriaCount {
        get { return result.SearchCriteriaCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetSearchCriteria(int index) {
        return result.GetSearchCriteria(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSearchCriteria(int index, uint value) {
        PrepareBuilder();
        result.searchCriteria_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddSearchCriteria(uint value) {
        PrepareBuilder();
        result.searchCriteria_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeSearchCriteria(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.searchCriteria_.Add(values);
        return this;
      }
      public Builder ClearSearchCriteria() {
        PrepareBuilder();
        result.searchCriteria_.Clear();
        return this;
      }
      
      public bool HasTop {
        get { return result.hasTop; }
      }
      [global::System.CLSCompliant(false)]
      public uint Top {
        get { return result.Top; }
        set { SetTop(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTop(uint value) {
        PrepareBuilder();
        result.hasTop = true;
        result.top_ = value;
        return this;
      }
      public Builder ClearTop() {
        PrepareBuilder();
        result.hasTop = false;
        result.top_ = 0;
        return this;
      }
      
      public bool HasTradeLocationId {
        get { return result.hasTradeLocationId; }
      }
      public string TradeLocationId {
        get { return result.TradeLocationId; }
        set { SetTradeLocationId(value); }
      }
      public Builder SetTradeLocationId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradeLocationId = true;
        result.tradeLocationId_ = value;
        return this;
      }
      public Builder ClearTradeLocationId() {
        PrepareBuilder();
        result.hasTradeLocationId = false;
        result.tradeLocationId_ = "";
        return this;
      }
      
      public bool HasArchived {
        get { return result.hasArchived; }
      }
      public bool Archived {
        get { return result.Archived; }
        set { SetArchived(value); }
      }
      public Builder SetArchived(bool value) {
        PrepareBuilder();
        result.hasArchived = true;
        result.archived_ = value;
        return this;
      }
      public Builder ClearArchived() {
        PrepareBuilder();
        result.hasArchived = false;
        result.archived_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> SearchOptionsList {
        get { return PrepareBuilder().searchOptions_; }
      }
      public int SearchOptionsCount {
        get { return result.SearchOptionsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.SearchOption GetSearchOptions(int index) {
        return result.GetSearchOptions(index);
      }
      public Builder SetSearchOptions(int index, global::CmsApiSamples.Protocol.CMSApi.SearchOption value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.searchOptions_[index] = value;
        return this;
      }
      public Builder SetSearchOptions(int index, global::CmsApiSamples.Protocol.CMSApi.SearchOption.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.searchOptions_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSearchOptions(global::CmsApiSamples.Protocol.CMSApi.SearchOption value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.searchOptions_.Add(value);
        return this;
      }
      public Builder AddSearchOptions(global::CmsApiSamples.Protocol.CMSApi.SearchOption.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.searchOptions_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSearchOptions(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.SearchOption> values) {
        PrepareBuilder();
        result.searchOptions_.Add(values);
        return this;
      }
      public Builder ClearSearchOptions() {
        PrepareBuilder();
        result.searchOptions_.Clear();
        return this;
      }
      
      public bool HasAllMatchMode {
        get { return result.hasAllMatchMode; }
      }
      public bool AllMatchMode {
        get { return result.AllMatchMode; }
        set { SetAllMatchMode(value); }
      }
      public Builder SetAllMatchMode(bool value) {
        PrepareBuilder();
        result.hasAllMatchMode = true;
        result.allMatchMode_ = value;
        return this;
      }
      public Builder ClearAllMatchMode() {
        PrepareBuilder();
        result.hasAllMatchMode = false;
        result.allMatchMode_ = false;
        return this;
      }
    }
    static OrderSearchRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RelatedOrderTreeRequest : pb::GeneratedMessage<RelatedOrderTreeRequest, RelatedOrderTreeRequest.Builder> {
    private RelatedOrderTreeRequest() { }
    private static readonly RelatedOrderTreeRequest defaultInstance = new RelatedOrderTreeRequest().MakeReadOnly();
    private static readonly string[] _relatedOrderTreeRequestFieldNames = new string[] { "chain_order_id", "order_requests_top", "top", "trade_location_id" };
    private static readonly uint[] _relatedOrderTreeRequestFieldTags = new uint[] { 10, 24, 32, 18 };
    public static RelatedOrderTreeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RelatedOrderTreeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RelatedOrderTreeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RelatedOrderTreeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RelatedOrderTreeRequest, RelatedOrderTreeRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RelatedOrderTreeRequest__FieldAccessorTable; }
    }
    
    public const int ChainOrderIdFieldNumber = 1;
    private bool hasChainOrderId;
    private string chainOrderId_ = "";
    public bool HasChainOrderId {
      get { return hasChainOrderId; }
    }
    public string ChainOrderId {
      get { return chainOrderId_; }
    }
    
    public const int TradeLocationIdFieldNumber = 2;
    private bool hasTradeLocationId;
    private string tradeLocationId_ = "";
    public bool HasTradeLocationId {
      get { return hasTradeLocationId; }
    }
    public string TradeLocationId {
      get { return tradeLocationId_; }
    }
    
    public const int OrderRequestsTopFieldNumber = 3;
    private bool hasOrderRequestsTop;
    private uint orderRequestsTop_;
    public bool HasOrderRequestsTop {
      get { return hasOrderRequestsTop; }
    }
    [global::System.CLSCompliant(false)]
    public uint OrderRequestsTop {
      get { return orderRequestsTop_; }
    }
    
    public const int TopFieldNumber = 4;
    private bool hasTop;
    private uint top_;
    public bool HasTop {
      get { return hasTop; }
    }
    [global::System.CLSCompliant(false)]
    public uint Top {
      get { return top_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _relatedOrderTreeRequestFieldNames;
      if (hasChainOrderId) {
        output.WriteString(1, field_names[0], ChainOrderId);
      }
      if (hasTradeLocationId) {
        output.WriteString(2, field_names[3], TradeLocationId);
      }
      if (hasOrderRequestsTop) {
        output.WriteUInt32(3, field_names[1], OrderRequestsTop);
      }
      if (hasTop) {
        output.WriteUInt32(4, field_names[2], Top);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasChainOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, ChainOrderId);
      }
      if (hasTradeLocationId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, TradeLocationId);
      }
      if (hasOrderRequestsTop) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, OrderRequestsTop);
      }
      if (hasTop) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Top);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RelatedOrderTreeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RelatedOrderTreeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RelatedOrderTreeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RelatedOrderTreeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RelatedOrderTreeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RelatedOrderTreeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RelatedOrderTreeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RelatedOrderTreeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RelatedOrderTreeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RelatedOrderTreeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RelatedOrderTreeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RelatedOrderTreeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RelatedOrderTreeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RelatedOrderTreeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RelatedOrderTreeRequest result;
      
      private RelatedOrderTreeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RelatedOrderTreeRequest original = result;
          result = new RelatedOrderTreeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RelatedOrderTreeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest.Descriptor; }
      }
      
      public override RelatedOrderTreeRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest.DefaultInstance; }
      }
      
      public override RelatedOrderTreeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RelatedOrderTreeRequest) {
          return MergeFrom((RelatedOrderTreeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RelatedOrderTreeRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChainOrderId) {
          ChainOrderId = other.ChainOrderId;
        }
        if (other.HasTradeLocationId) {
          TradeLocationId = other.TradeLocationId;
        }
        if (other.HasOrderRequestsTop) {
          OrderRequestsTop = other.OrderRequestsTop;
        }
        if (other.HasTop) {
          Top = other.Top;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_relatedOrderTreeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _relatedOrderTreeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasChainOrderId = input.ReadString(ref result.chainOrderId_);
              break;
            }
            case 18: {
              result.hasTradeLocationId = input.ReadString(ref result.tradeLocationId_);
              break;
            }
            case 24: {
              result.hasOrderRequestsTop = input.ReadUInt32(ref result.orderRequestsTop_);
              break;
            }
            case 32: {
              result.hasTop = input.ReadUInt32(ref result.top_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChainOrderId {
        get { return result.hasChainOrderId; }
      }
      public string ChainOrderId {
        get { return result.ChainOrderId; }
        set { SetChainOrderId(value); }
      }
      public Builder SetChainOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChainOrderId = true;
        result.chainOrderId_ = value;
        return this;
      }
      public Builder ClearChainOrderId() {
        PrepareBuilder();
        result.hasChainOrderId = false;
        result.chainOrderId_ = "";
        return this;
      }
      
      public bool HasTradeLocationId {
        get { return result.hasTradeLocationId; }
      }
      public string TradeLocationId {
        get { return result.TradeLocationId; }
        set { SetTradeLocationId(value); }
      }
      public Builder SetTradeLocationId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradeLocationId = true;
        result.tradeLocationId_ = value;
        return this;
      }
      public Builder ClearTradeLocationId() {
        PrepareBuilder();
        result.hasTradeLocationId = false;
        result.tradeLocationId_ = "";
        return this;
      }
      
      public bool HasOrderRequestsTop {
        get { return result.hasOrderRequestsTop; }
      }
      [global::System.CLSCompliant(false)]
      public uint OrderRequestsTop {
        get { return result.OrderRequestsTop; }
        set { SetOrderRequestsTop(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOrderRequestsTop(uint value) {
        PrepareBuilder();
        result.hasOrderRequestsTop = true;
        result.orderRequestsTop_ = value;
        return this;
      }
      public Builder ClearOrderRequestsTop() {
        PrepareBuilder();
        result.hasOrderRequestsTop = false;
        result.orderRequestsTop_ = 0;
        return this;
      }
      
      public bool HasTop {
        get { return result.hasTop; }
      }
      [global::System.CLSCompliant(false)]
      public uint Top {
        get { return result.Top; }
        set { SetTop(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTop(uint value) {
        PrepareBuilder();
        result.hasTop = true;
        result.top_ = value;
        return this;
      }
      public Builder ClearTop() {
        PrepareBuilder();
        result.hasTop = false;
        result.top_ = 0;
        return this;
      }
    }
    static RelatedOrderTreeRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CompoundOrderTreeRequest : pb::GeneratedMessage<CompoundOrderTreeRequest, CompoundOrderTreeRequest.Builder> {
    private CompoundOrderTreeRequest() { }
    private static readonly CompoundOrderTreeRequest defaultInstance = new CompoundOrderTreeRequest().MakeReadOnly();
    private static readonly string[] _compoundOrderTreeRequestFieldNames = new string[] { "compound_tree_id", "order_requests_top", "top", "trade_location_id" };
    private static readonly uint[] _compoundOrderTreeRequestFieldTags = new uint[] { 10, 24, 32, 18 };
    public static CompoundOrderTreeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CompoundOrderTreeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CompoundOrderTreeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CompoundOrderTreeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CompoundOrderTreeRequest, CompoundOrderTreeRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CompoundOrderTreeRequest__FieldAccessorTable; }
    }
    
    public const int CompoundTreeIdFieldNumber = 1;
    private bool hasCompoundTreeId;
    private string compoundTreeId_ = "";
    public bool HasCompoundTreeId {
      get { return hasCompoundTreeId; }
    }
    public string CompoundTreeId {
      get { return compoundTreeId_; }
    }
    
    public const int TradeLocationIdFieldNumber = 2;
    private bool hasTradeLocationId;
    private string tradeLocationId_ = "";
    public bool HasTradeLocationId {
      get { return hasTradeLocationId; }
    }
    public string TradeLocationId {
      get { return tradeLocationId_; }
    }
    
    public const int OrderRequestsTopFieldNumber = 3;
    private bool hasOrderRequestsTop;
    private uint orderRequestsTop_;
    public bool HasOrderRequestsTop {
      get { return hasOrderRequestsTop; }
    }
    [global::System.CLSCompliant(false)]
    public uint OrderRequestsTop {
      get { return orderRequestsTop_; }
    }
    
    public const int TopFieldNumber = 4;
    private bool hasTop;
    private uint top_;
    public bool HasTop {
      get { return hasTop; }
    }
    [global::System.CLSCompliant(false)]
    public uint Top {
      get { return top_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _compoundOrderTreeRequestFieldNames;
      if (hasCompoundTreeId) {
        output.WriteString(1, field_names[0], CompoundTreeId);
      }
      if (hasTradeLocationId) {
        output.WriteString(2, field_names[3], TradeLocationId);
      }
      if (hasOrderRequestsTop) {
        output.WriteUInt32(3, field_names[1], OrderRequestsTop);
      }
      if (hasTop) {
        output.WriteUInt32(4, field_names[2], Top);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCompoundTreeId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, CompoundTreeId);
      }
      if (hasTradeLocationId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, TradeLocationId);
      }
      if (hasOrderRequestsTop) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, OrderRequestsTop);
      }
      if (hasTop) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Top);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CompoundOrderTreeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompoundOrderTreeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompoundOrderTreeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompoundOrderTreeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompoundOrderTreeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompoundOrderTreeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CompoundOrderTreeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CompoundOrderTreeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CompoundOrderTreeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompoundOrderTreeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CompoundOrderTreeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CompoundOrderTreeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CompoundOrderTreeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CompoundOrderTreeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CompoundOrderTreeRequest result;
      
      private CompoundOrderTreeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CompoundOrderTreeRequest original = result;
          result = new CompoundOrderTreeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CompoundOrderTreeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest.Descriptor; }
      }
      
      public override CompoundOrderTreeRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest.DefaultInstance; }
      }
      
      public override CompoundOrderTreeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CompoundOrderTreeRequest) {
          return MergeFrom((CompoundOrderTreeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CompoundOrderTreeRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCompoundTreeId) {
          CompoundTreeId = other.CompoundTreeId;
        }
        if (other.HasTradeLocationId) {
          TradeLocationId = other.TradeLocationId;
        }
        if (other.HasOrderRequestsTop) {
          OrderRequestsTop = other.OrderRequestsTop;
        }
        if (other.HasTop) {
          Top = other.Top;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_compoundOrderTreeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _compoundOrderTreeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCompoundTreeId = input.ReadString(ref result.compoundTreeId_);
              break;
            }
            case 18: {
              result.hasTradeLocationId = input.ReadString(ref result.tradeLocationId_);
              break;
            }
            case 24: {
              result.hasOrderRequestsTop = input.ReadUInt32(ref result.orderRequestsTop_);
              break;
            }
            case 32: {
              result.hasTop = input.ReadUInt32(ref result.top_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCompoundTreeId {
        get { return result.hasCompoundTreeId; }
      }
      public string CompoundTreeId {
        get { return result.CompoundTreeId; }
        set { SetCompoundTreeId(value); }
      }
      public Builder SetCompoundTreeId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCompoundTreeId = true;
        result.compoundTreeId_ = value;
        return this;
      }
      public Builder ClearCompoundTreeId() {
        PrepareBuilder();
        result.hasCompoundTreeId = false;
        result.compoundTreeId_ = "";
        return this;
      }
      
      public bool HasTradeLocationId {
        get { return result.hasTradeLocationId; }
      }
      public string TradeLocationId {
        get { return result.TradeLocationId; }
        set { SetTradeLocationId(value); }
      }
      public Builder SetTradeLocationId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradeLocationId = true;
        result.tradeLocationId_ = value;
        return this;
      }
      public Builder ClearTradeLocationId() {
        PrepareBuilder();
        result.hasTradeLocationId = false;
        result.tradeLocationId_ = "";
        return this;
      }
      
      public bool HasOrderRequestsTop {
        get { return result.hasOrderRequestsTop; }
      }
      [global::System.CLSCompliant(false)]
      public uint OrderRequestsTop {
        get { return result.OrderRequestsTop; }
        set { SetOrderRequestsTop(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOrderRequestsTop(uint value) {
        PrepareBuilder();
        result.hasOrderRequestsTop = true;
        result.orderRequestsTop_ = value;
        return this;
      }
      public Builder ClearOrderRequestsTop() {
        PrepareBuilder();
        result.hasOrderRequestsTop = false;
        result.orderRequestsTop_ = 0;
        return this;
      }
      
      public bool HasTop {
        get { return result.hasTop; }
      }
      [global::System.CLSCompliant(false)]
      public uint Top {
        get { return result.Top; }
        set { SetTop(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTop(uint value) {
        PrepareBuilder();
        result.hasTop = true;
        result.top_ = value;
        return this;
      }
      public Builder ClearTop() {
        PrepareBuilder();
        result.hasTop = false;
        result.top_ = 0;
        return this;
      }
    }
    static CompoundOrderTreeRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SyntheticStrategyTreeRequest : pb::GeneratedMessage<SyntheticStrategyTreeRequest, SyntheticStrategyTreeRequest.Builder> {
    private SyntheticStrategyTreeRequest() { }
    private static readonly SyntheticStrategyTreeRequest defaultInstance = new SyntheticStrategyTreeRequest().MakeReadOnly();
    private static readonly string[] _syntheticStrategyTreeRequestFieldNames = new string[] { "root_chain_order_id", "trade_location_id" };
    private static readonly uint[] _syntheticStrategyTreeRequestFieldTags = new uint[] { 10, 18 };
    public static SyntheticStrategyTreeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SyntheticStrategyTreeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SyntheticStrategyTreeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_SyntheticStrategyTreeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SyntheticStrategyTreeRequest, SyntheticStrategyTreeRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_SyntheticStrategyTreeRequest__FieldAccessorTable; }
    }
    
    public const int RootChainOrderIdFieldNumber = 1;
    private bool hasRootChainOrderId;
    private string rootChainOrderId_ = "";
    public bool HasRootChainOrderId {
      get { return hasRootChainOrderId; }
    }
    public string RootChainOrderId {
      get { return rootChainOrderId_; }
    }
    
    public const int TradeLocationIdFieldNumber = 2;
    private bool hasTradeLocationId;
    private string tradeLocationId_ = "";
    public bool HasTradeLocationId {
      get { return hasTradeLocationId; }
    }
    public string TradeLocationId {
      get { return tradeLocationId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _syntheticStrategyTreeRequestFieldNames;
      if (hasRootChainOrderId) {
        output.WriteString(1, field_names[0], RootChainOrderId);
      }
      if (hasTradeLocationId) {
        output.WriteString(2, field_names[1], TradeLocationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRootChainOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, RootChainOrderId);
      }
      if (hasTradeLocationId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, TradeLocationId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SyntheticStrategyTreeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyntheticStrategyTreeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyntheticStrategyTreeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyntheticStrategyTreeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyntheticStrategyTreeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyntheticStrategyTreeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SyntheticStrategyTreeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SyntheticStrategyTreeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SyntheticStrategyTreeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyntheticStrategyTreeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SyntheticStrategyTreeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SyntheticStrategyTreeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SyntheticStrategyTreeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SyntheticStrategyTreeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SyntheticStrategyTreeRequest result;
      
      private SyntheticStrategyTreeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SyntheticStrategyTreeRequest original = result;
          result = new SyntheticStrategyTreeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SyntheticStrategyTreeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest.Descriptor; }
      }
      
      public override SyntheticStrategyTreeRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest.DefaultInstance; }
      }
      
      public override SyntheticStrategyTreeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SyntheticStrategyTreeRequest) {
          return MergeFrom((SyntheticStrategyTreeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SyntheticStrategyTreeRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRootChainOrderId) {
          RootChainOrderId = other.RootChainOrderId;
        }
        if (other.HasTradeLocationId) {
          TradeLocationId = other.TradeLocationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_syntheticStrategyTreeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _syntheticStrategyTreeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasRootChainOrderId = input.ReadString(ref result.rootChainOrderId_);
              break;
            }
            case 18: {
              result.hasTradeLocationId = input.ReadString(ref result.tradeLocationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRootChainOrderId {
        get { return result.hasRootChainOrderId; }
      }
      public string RootChainOrderId {
        get { return result.RootChainOrderId; }
        set { SetRootChainOrderId(value); }
      }
      public Builder SetRootChainOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRootChainOrderId = true;
        result.rootChainOrderId_ = value;
        return this;
      }
      public Builder ClearRootChainOrderId() {
        PrepareBuilder();
        result.hasRootChainOrderId = false;
        result.rootChainOrderId_ = "";
        return this;
      }
      
      public bool HasTradeLocationId {
        get { return result.hasTradeLocationId; }
      }
      public string TradeLocationId {
        get { return result.TradeLocationId; }
        set { SetTradeLocationId(value); }
      }
      public Builder SetTradeLocationId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradeLocationId = true;
        result.tradeLocationId_ = value;
        return this;
      }
      public Builder ClearTradeLocationId() {
        PrepareBuilder();
        result.hasTradeLocationId = false;
        result.tradeLocationId_ = "";
        return this;
      }
    }
    static SyntheticStrategyTreeRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CancelOrder : pb::GeneratedMessage<CancelOrder, CancelOrder.Builder> {
    private CancelOrder() { }
    private static readonly CancelOrder defaultInstance = new CancelOrder().MakeReadOnly();
    private static readonly string[] _cancelOrderFieldNames = new string[] { "account_id", "chain_order_id", "trade_location_id" };
    private static readonly uint[] _cancelOrderFieldTags = new uint[] { 16, 10, 26 };
    public static CancelOrder DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CancelOrder DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CancelOrder ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CancelOrder__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CancelOrder, CancelOrder.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CancelOrder__FieldAccessorTable; }
    }
    
    public const int ChainOrderIdFieldNumber = 1;
    private bool hasChainOrderId;
    private string chainOrderId_ = "";
    public bool HasChainOrderId {
      get { return hasChainOrderId; }
    }
    public string ChainOrderId {
      get { return chainOrderId_; }
    }
    
    public const int AccountIdFieldNumber = 2;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int TradeLocationIdFieldNumber = 3;
    private bool hasTradeLocationId;
    private string tradeLocationId_ = "";
    public bool HasTradeLocationId {
      get { return hasTradeLocationId; }
    }
    public string TradeLocationId {
      get { return tradeLocationId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _cancelOrderFieldNames;
      if (hasChainOrderId) {
        output.WriteString(1, field_names[1], ChainOrderId);
      }
      if (hasAccountId) {
        output.WriteSInt32(2, field_names[0], AccountId);
      }
      if (hasTradeLocationId) {
        output.WriteString(3, field_names[2], TradeLocationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasChainOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, ChainOrderId);
      }
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(2, AccountId);
      }
      if (hasTradeLocationId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, TradeLocationId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CancelOrder ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelOrder ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelOrder ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelOrder ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelOrder ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelOrder ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CancelOrder ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CancelOrder ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CancelOrder ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelOrder ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CancelOrder MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CancelOrder prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CancelOrder, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CancelOrder cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CancelOrder result;
      
      private CancelOrder PrepareBuilder() {
        if (resultIsReadOnly) {
          CancelOrder original = result;
          result = new CancelOrder();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CancelOrder MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CancelOrder.Descriptor; }
      }
      
      public override CancelOrder DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CancelOrder.DefaultInstance; }
      }
      
      public override CancelOrder BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CancelOrder) {
          return MergeFrom((CancelOrder) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CancelOrder other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CancelOrder.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChainOrderId) {
          ChainOrderId = other.ChainOrderId;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasTradeLocationId) {
          TradeLocationId = other.TradeLocationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cancelOrderFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cancelOrderFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasChainOrderId = input.ReadString(ref result.chainOrderId_);
              break;
            }
            case 16: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 26: {
              result.hasTradeLocationId = input.ReadString(ref result.tradeLocationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChainOrderId {
        get { return result.hasChainOrderId; }
      }
      public string ChainOrderId {
        get { return result.ChainOrderId; }
        set { SetChainOrderId(value); }
      }
      public Builder SetChainOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChainOrderId = true;
        result.chainOrderId_ = value;
        return this;
      }
      public Builder ClearChainOrderId() {
        PrepareBuilder();
        result.hasChainOrderId = false;
        result.chainOrderId_ = "";
        return this;
      }
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasTradeLocationId {
        get { return result.hasTradeLocationId; }
      }
      public string TradeLocationId {
        get { return result.TradeLocationId; }
        set { SetTradeLocationId(value); }
      }
      public Builder SetTradeLocationId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradeLocationId = true;
        result.tradeLocationId_ = value;
        return this;
      }
      public Builder ClearTradeLocationId() {
        PrepareBuilder();
        result.hasTradeLocationId = false;
        result.tradeLocationId_ = "";
        return this;
      }
    }
    static CancelOrder() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReflectAsCanceledOrder : pb::GeneratedMessage<ReflectAsCanceledOrder, ReflectAsCanceledOrder.Builder> {
    private ReflectAsCanceledOrder() { }
    private static readonly ReflectAsCanceledOrder defaultInstance = new ReflectAsCanceledOrder().MakeReadOnly();
    private static readonly string[] _reflectAsCanceledOrderFieldNames = new string[] { "account_id", "chain_order_id", "trade_location_id" };
    private static readonly uint[] _reflectAsCanceledOrderFieldTags = new uint[] { 16, 10, 26 };
    public static ReflectAsCanceledOrder DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReflectAsCanceledOrder DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReflectAsCanceledOrder ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ReflectAsCanceledOrder__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReflectAsCanceledOrder, ReflectAsCanceledOrder.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ReflectAsCanceledOrder__FieldAccessorTable; }
    }
    
    public const int ChainOrderIdFieldNumber = 1;
    private bool hasChainOrderId;
    private string chainOrderId_ = "";
    public bool HasChainOrderId {
      get { return hasChainOrderId; }
    }
    public string ChainOrderId {
      get { return chainOrderId_; }
    }
    
    public const int AccountIdFieldNumber = 2;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int TradeLocationIdFieldNumber = 3;
    private bool hasTradeLocationId;
    private string tradeLocationId_ = "";
    public bool HasTradeLocationId {
      get { return hasTradeLocationId; }
    }
    public string TradeLocationId {
      get { return tradeLocationId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _reflectAsCanceledOrderFieldNames;
      if (hasChainOrderId) {
        output.WriteString(1, field_names[1], ChainOrderId);
      }
      if (hasAccountId) {
        output.WriteSInt32(2, field_names[0], AccountId);
      }
      if (hasTradeLocationId) {
        output.WriteString(3, field_names[2], TradeLocationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasChainOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, ChainOrderId);
      }
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(2, AccountId);
      }
      if (hasTradeLocationId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, TradeLocationId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ReflectAsCanceledOrder ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReflectAsCanceledOrder ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReflectAsCanceledOrder ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReflectAsCanceledOrder ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReflectAsCanceledOrder ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReflectAsCanceledOrder ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReflectAsCanceledOrder ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReflectAsCanceledOrder ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReflectAsCanceledOrder ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReflectAsCanceledOrder ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReflectAsCanceledOrder MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReflectAsCanceledOrder prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReflectAsCanceledOrder, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReflectAsCanceledOrder cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReflectAsCanceledOrder result;
      
      private ReflectAsCanceledOrder PrepareBuilder() {
        if (resultIsReadOnly) {
          ReflectAsCanceledOrder original = result;
          result = new ReflectAsCanceledOrder();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReflectAsCanceledOrder MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder.Descriptor; }
      }
      
      public override ReflectAsCanceledOrder DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder.DefaultInstance; }
      }
      
      public override ReflectAsCanceledOrder BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReflectAsCanceledOrder) {
          return MergeFrom((ReflectAsCanceledOrder) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReflectAsCanceledOrder other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrder.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChainOrderId) {
          ChainOrderId = other.ChainOrderId;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasTradeLocationId) {
          TradeLocationId = other.TradeLocationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reflectAsCanceledOrderFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reflectAsCanceledOrderFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasChainOrderId = input.ReadString(ref result.chainOrderId_);
              break;
            }
            case 16: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 26: {
              result.hasTradeLocationId = input.ReadString(ref result.tradeLocationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChainOrderId {
        get { return result.hasChainOrderId; }
      }
      public string ChainOrderId {
        get { return result.ChainOrderId; }
        set { SetChainOrderId(value); }
      }
      public Builder SetChainOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChainOrderId = true;
        result.chainOrderId_ = value;
        return this;
      }
      public Builder ClearChainOrderId() {
        PrepareBuilder();
        result.hasChainOrderId = false;
        result.chainOrderId_ = "";
        return this;
      }
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasTradeLocationId {
        get { return result.hasTradeLocationId; }
      }
      public string TradeLocationId {
        get { return result.TradeLocationId; }
        set { SetTradeLocationId(value); }
      }
      public Builder SetTradeLocationId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradeLocationId = true;
        result.tradeLocationId_ = value;
        return this;
      }
      public Builder ClearTradeLocationId() {
        PrepareBuilder();
        result.hasTradeLocationId = false;
        result.tradeLocationId_ = "";
        return this;
      }
    }
    static ReflectAsCanceledOrder() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CancelCompoundOrderTree : pb::GeneratedMessage<CancelCompoundOrderTree, CancelCompoundOrderTree.Builder> {
    private CancelCompoundOrderTree() { }
    private static readonly CancelCompoundOrderTree defaultInstance = new CancelCompoundOrderTree().MakeReadOnly();
    private static readonly string[] _cancelCompoundOrderTreeFieldNames = new string[] { "account_id", "compound_tree_id", "trade_location_id" };
    private static readonly uint[] _cancelCompoundOrderTreeFieldTags = new uint[] { 16, 10, 26 };
    public static CancelCompoundOrderTree DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CancelCompoundOrderTree DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CancelCompoundOrderTree ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CancelCompoundOrderTree__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CancelCompoundOrderTree, CancelCompoundOrderTree.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CancelCompoundOrderTree__FieldAccessorTable; }
    }
    
    public const int CompoundTreeIdFieldNumber = 1;
    private bool hasCompoundTreeId;
    private string compoundTreeId_ = "";
    public bool HasCompoundTreeId {
      get { return hasCompoundTreeId; }
    }
    public string CompoundTreeId {
      get { return compoundTreeId_; }
    }
    
    public const int AccountIdFieldNumber = 2;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int TradeLocationIdFieldNumber = 3;
    private bool hasTradeLocationId;
    private string tradeLocationId_ = "";
    public bool HasTradeLocationId {
      get { return hasTradeLocationId; }
    }
    public string TradeLocationId {
      get { return tradeLocationId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _cancelCompoundOrderTreeFieldNames;
      if (hasCompoundTreeId) {
        output.WriteString(1, field_names[1], CompoundTreeId);
      }
      if (hasAccountId) {
        output.WriteSInt32(2, field_names[0], AccountId);
      }
      if (hasTradeLocationId) {
        output.WriteString(3, field_names[2], TradeLocationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCompoundTreeId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, CompoundTreeId);
      }
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(2, AccountId);
      }
      if (hasTradeLocationId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, TradeLocationId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CancelCompoundOrderTree ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelCompoundOrderTree ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelCompoundOrderTree ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelCompoundOrderTree ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelCompoundOrderTree ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelCompoundOrderTree ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CancelCompoundOrderTree ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CancelCompoundOrderTree ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CancelCompoundOrderTree ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelCompoundOrderTree ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CancelCompoundOrderTree MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CancelCompoundOrderTree prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CancelCompoundOrderTree, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CancelCompoundOrderTree cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CancelCompoundOrderTree result;
      
      private CancelCompoundOrderTree PrepareBuilder() {
        if (resultIsReadOnly) {
          CancelCompoundOrderTree original = result;
          result = new CancelCompoundOrderTree();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CancelCompoundOrderTree MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree.Descriptor; }
      }
      
      public override CancelCompoundOrderTree DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree.DefaultInstance; }
      }
      
      public override CancelCompoundOrderTree BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CancelCompoundOrderTree) {
          return MergeFrom((CancelCompoundOrderTree) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CancelCompoundOrderTree other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTree.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCompoundTreeId) {
          CompoundTreeId = other.CompoundTreeId;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasTradeLocationId) {
          TradeLocationId = other.TradeLocationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cancelCompoundOrderTreeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cancelCompoundOrderTreeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCompoundTreeId = input.ReadString(ref result.compoundTreeId_);
              break;
            }
            case 16: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 26: {
              result.hasTradeLocationId = input.ReadString(ref result.tradeLocationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCompoundTreeId {
        get { return result.hasCompoundTreeId; }
      }
      public string CompoundTreeId {
        get { return result.CompoundTreeId; }
        set { SetCompoundTreeId(value); }
      }
      public Builder SetCompoundTreeId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCompoundTreeId = true;
        result.compoundTreeId_ = value;
        return this;
      }
      public Builder ClearCompoundTreeId() {
        PrepareBuilder();
        result.hasCompoundTreeId = false;
        result.compoundTreeId_ = "";
        return this;
      }
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasTradeLocationId {
        get { return result.hasTradeLocationId; }
      }
      public string TradeLocationId {
        get { return result.TradeLocationId; }
        set { SetTradeLocationId(value); }
      }
      public Builder SetTradeLocationId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradeLocationId = true;
        result.tradeLocationId_ = value;
        return this;
      }
      public Builder ClearTradeLocationId() {
        PrepareBuilder();
        result.hasTradeLocationId = false;
        result.tradeLocationId_ = "";
        return this;
      }
    }
    static CancelCompoundOrderTree() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountInfoRequest : pb::GeneratedMessage<AccountInfoRequest, AccountInfoRequest.Builder> {
    private AccountInfoRequest() { }
    private static readonly AccountInfoRequest defaultInstance = new AccountInfoRequest().MakeReadOnly();
    private static readonly string[] _accountInfoRequestFieldNames = new string[] { "account_id", "brokerage_account_number" };
    private static readonly uint[] _accountInfoRequestFieldTags = new uint[] { 8, 18 };
    public static AccountInfoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountInfoRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountInfoRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountInfoRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountInfoRequest, AccountInfoRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountInfoRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int BrokerageAccountNumberFieldNumber = 2;
    private bool hasBrokerageAccountNumber;
    private string brokerageAccountNumber_ = "";
    public bool HasBrokerageAccountNumber {
      get { return hasBrokerageAccountNumber; }
    }
    public string BrokerageAccountNumber {
      get { return brokerageAccountNumber_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountInfoRequestFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasBrokerageAccountNumber) {
        output.WriteString(2, field_names[1], BrokerageAccountNumber);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasBrokerageAccountNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(2, BrokerageAccountNumber);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountInfoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountInfoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountInfoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountInfoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountInfoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountInfoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountInfoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountInfoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountInfoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountInfoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountInfoRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountInfoRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountInfoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountInfoRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountInfoRequest result;
      
      private AccountInfoRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountInfoRequest original = result;
          result = new AccountInfoRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountInfoRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest.Descriptor; }
      }
      
      public override AccountInfoRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest.DefaultInstance; }
      }
      
      public override AccountInfoRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountInfoRequest) {
          return MergeFrom((AccountInfoRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountInfoRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountInfoRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasBrokerageAccountNumber) {
          BrokerageAccountNumber = other.BrokerageAccountNumber;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountInfoRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountInfoRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasBrokerageAccountNumber = input.ReadString(ref result.brokerageAccountNumber_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasBrokerageAccountNumber {
        get { return result.hasBrokerageAccountNumber; }
      }
      public string BrokerageAccountNumber {
        get { return result.BrokerageAccountNumber; }
        set { SetBrokerageAccountNumber(value); }
      }
      public Builder SetBrokerageAccountNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageAccountNumber = true;
        result.brokerageAccountNumber_ = value;
        return this;
      }
      public Builder ClearBrokerageAccountNumber() {
        PrepareBuilder();
        result.hasBrokerageAccountNumber = false;
        result.brokerageAccountNumber_ = "";
        return this;
      }
    }
    static AccountInfoRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BalanceRecordsRequest : pb::GeneratedMessage<BalanceRecordsRequest, BalanceRecordsRequest.Builder> {
    private BalanceRecordsRequest() { }
    private static readonly BalanceRecordsRequest defaultInstance = new BalanceRecordsRequest().MakeReadOnly();
    private static readonly string[] _balanceRecordsRequestFieldNames = new string[] { "account_id", "balance_id", "currency" };
    private static readonly uint[] _balanceRecordsRequestFieldTags = new uint[] { 8, 24, 18 };
    public static BalanceRecordsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BalanceRecordsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BalanceRecordsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_BalanceRecordsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BalanceRecordsRequest, BalanceRecordsRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_BalanceRecordsRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int CurrencyFieldNumber = 2;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int BalanceIdFieldNumber = 3;
    private bool hasBalanceId;
    private int balanceId_;
    public bool HasBalanceId {
      get { return hasBalanceId; }
    }
    public int BalanceId {
      get { return balanceId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _balanceRecordsRequestFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasCurrency) {
        output.WriteString(2, field_names[2], Currency);
      }
      if (hasBalanceId) {
        output.WriteSInt32(3, field_names[1], BalanceId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasCurrency) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Currency);
      }
      if (hasBalanceId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(3, BalanceId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BalanceRecordsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BalanceRecordsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BalanceRecordsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BalanceRecordsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BalanceRecordsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BalanceRecordsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BalanceRecordsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BalanceRecordsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BalanceRecordsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BalanceRecordsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BalanceRecordsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BalanceRecordsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BalanceRecordsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BalanceRecordsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BalanceRecordsRequest result;
      
      private BalanceRecordsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          BalanceRecordsRequest original = result;
          result = new BalanceRecordsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BalanceRecordsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest.Descriptor; }
      }
      
      public override BalanceRecordsRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest.DefaultInstance; }
      }
      
      public override BalanceRecordsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BalanceRecordsRequest) {
          return MergeFrom((BalanceRecordsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BalanceRecordsRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasBalanceId) {
          BalanceId = other.BalanceId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_balanceRecordsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _balanceRecordsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 24: {
              result.hasBalanceId = input.ReadSInt32(ref result.balanceId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasBalanceId {
        get { return result.hasBalanceId; }
      }
      public int BalanceId {
        get { return result.BalanceId; }
        set { SetBalanceId(value); }
      }
      public Builder SetBalanceId(int value) {
        PrepareBuilder();
        result.hasBalanceId = true;
        result.balanceId_ = value;
        return this;
      }
      public Builder ClearBalanceId() {
        PrepareBuilder();
        result.hasBalanceId = false;
        result.balanceId_ = 0;
        return this;
      }
    }
    static BalanceRecordsRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateBalanceRecord : pb::GeneratedMessage<CreateBalanceRecord, CreateBalanceRecord.Builder> {
    private CreateBalanceRecord() { }
    private static readonly CreateBalanceRecord defaultInstance = new CreateBalanceRecord().MakeReadOnly();
    private static readonly string[] _createBalanceRecordFieldNames = new string[] { "account_id", "collateral", "currency", "end_cash_balance", "regulated" };
    private static readonly uint[] _createBalanceRecordFieldTags = new uint[] { 8, 33, 18, 25, 40 };
    public static CreateBalanceRecord DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateBalanceRecord DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateBalanceRecord ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateBalanceRecord__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateBalanceRecord, CreateBalanceRecord.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateBalanceRecord__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int CurrencyFieldNumber = 2;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int EndCashBalanceFieldNumber = 3;
    private bool hasEndCashBalance;
    private double endCashBalance_;
    public bool HasEndCashBalance {
      get { return hasEndCashBalance; }
    }
    public double EndCashBalance {
      get { return endCashBalance_; }
    }
    
    public const int CollateralFieldNumber = 4;
    private bool hasCollateral;
    private double collateral_;
    public bool HasCollateral {
      get { return hasCollateral; }
    }
    public double Collateral {
      get { return collateral_; }
    }
    
    public const int RegulatedFieldNumber = 5;
    private bool hasRegulated;
    private bool regulated_ = true;
    public bool HasRegulated {
      get { return hasRegulated; }
    }
    public bool Regulated {
      get { return regulated_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createBalanceRecordFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasCurrency) {
        output.WriteString(2, field_names[2], Currency);
      }
      if (hasEndCashBalance) {
        output.WriteDouble(3, field_names[3], EndCashBalance);
      }
      if (hasCollateral) {
        output.WriteDouble(4, field_names[1], Collateral);
      }
      if (hasRegulated) {
        output.WriteBool(5, field_names[4], Regulated);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasCurrency) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Currency);
      }
      if (hasEndCashBalance) {
        size += pb::CodedOutputStream.ComputeDoubleSize(3, EndCashBalance);
      }
      if (hasCollateral) {
        size += pb::CodedOutputStream.ComputeDoubleSize(4, Collateral);
      }
      if (hasRegulated) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, Regulated);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateBalanceRecord ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateBalanceRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateBalanceRecord ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateBalanceRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateBalanceRecord ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateBalanceRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateBalanceRecord ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateBalanceRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateBalanceRecord ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateBalanceRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateBalanceRecord MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateBalanceRecord prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateBalanceRecord, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateBalanceRecord cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateBalanceRecord result;
      
      private CreateBalanceRecord PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateBalanceRecord original = result;
          result = new CreateBalanceRecord();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateBalanceRecord MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord.Descriptor; }
      }
      
      public override CreateBalanceRecord DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord.DefaultInstance; }
      }
      
      public override CreateBalanceRecord BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateBalanceRecord) {
          return MergeFrom((CreateBalanceRecord) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateBalanceRecord other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecord.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasEndCashBalance) {
          EndCashBalance = other.EndCashBalance;
        }
        if (other.HasCollateral) {
          Collateral = other.Collateral;
        }
        if (other.HasRegulated) {
          Regulated = other.Regulated;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createBalanceRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createBalanceRecordFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 25: {
              result.hasEndCashBalance = input.ReadDouble(ref result.endCashBalance_);
              break;
            }
            case 33: {
              result.hasCollateral = input.ReadDouble(ref result.collateral_);
              break;
            }
            case 40: {
              result.hasRegulated = input.ReadBool(ref result.regulated_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasEndCashBalance {
        get { return result.hasEndCashBalance; }
      }
      public double EndCashBalance {
        get { return result.EndCashBalance; }
        set { SetEndCashBalance(value); }
      }
      public Builder SetEndCashBalance(double value) {
        PrepareBuilder();
        result.hasEndCashBalance = true;
        result.endCashBalance_ = value;
        return this;
      }
      public Builder ClearEndCashBalance() {
        PrepareBuilder();
        result.hasEndCashBalance = false;
        result.endCashBalance_ = 0D;
        return this;
      }
      
      public bool HasCollateral {
        get { return result.hasCollateral; }
      }
      public double Collateral {
        get { return result.Collateral; }
        set { SetCollateral(value); }
      }
      public Builder SetCollateral(double value) {
        PrepareBuilder();
        result.hasCollateral = true;
        result.collateral_ = value;
        return this;
      }
      public Builder ClearCollateral() {
        PrepareBuilder();
        result.hasCollateral = false;
        result.collateral_ = 0D;
        return this;
      }
      
      public bool HasRegulated {
        get { return result.hasRegulated; }
      }
      public bool Regulated {
        get { return result.Regulated; }
        set { SetRegulated(value); }
      }
      public Builder SetRegulated(bool value) {
        PrepareBuilder();
        result.hasRegulated = true;
        result.regulated_ = value;
        return this;
      }
      public Builder ClearRegulated() {
        PrepareBuilder();
        result.hasRegulated = false;
        result.regulated_ = true;
        return this;
      }
    }
    static CreateBalanceRecord() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateBalanceRecord : pb::GeneratedMessage<UpdateBalanceRecord, UpdateBalanceRecord.Builder> {
    private UpdateBalanceRecord() { }
    private static readonly UpdateBalanceRecord defaultInstance = new UpdateBalanceRecord().MakeReadOnly();
    private static readonly string[] _updateBalanceRecordFieldNames = new string[] { "balance_id", "collateral", "end_cash_balance" };
    private static readonly uint[] _updateBalanceRecordFieldTags = new uint[] { 8, 25, 17 };
    public static UpdateBalanceRecord DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateBalanceRecord DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateBalanceRecord ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateBalanceRecord__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateBalanceRecord, UpdateBalanceRecord.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateBalanceRecord__FieldAccessorTable; }
    }
    
    public const int BalanceIdFieldNumber = 1;
    private bool hasBalanceId;
    private int balanceId_;
    public bool HasBalanceId {
      get { return hasBalanceId; }
    }
    public int BalanceId {
      get { return balanceId_; }
    }
    
    public const int EndCashBalanceFieldNumber = 2;
    private bool hasEndCashBalance;
    private double endCashBalance_;
    public bool HasEndCashBalance {
      get { return hasEndCashBalance; }
    }
    public double EndCashBalance {
      get { return endCashBalance_; }
    }
    
    public const int CollateralFieldNumber = 3;
    private bool hasCollateral;
    private double collateral_;
    public bool HasCollateral {
      get { return hasCollateral; }
    }
    public double Collateral {
      get { return collateral_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBalanceId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateBalanceRecordFieldNames;
      if (hasBalanceId) {
        output.WriteSInt32(1, field_names[0], BalanceId);
      }
      if (hasEndCashBalance) {
        output.WriteDouble(2, field_names[2], EndCashBalance);
      }
      if (hasCollateral) {
        output.WriteDouble(3, field_names[1], Collateral);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBalanceId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, BalanceId);
      }
      if (hasEndCashBalance) {
        size += pb::CodedOutputStream.ComputeDoubleSize(2, EndCashBalance);
      }
      if (hasCollateral) {
        size += pb::CodedOutputStream.ComputeDoubleSize(3, Collateral);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateBalanceRecord ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateBalanceRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateBalanceRecord ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateBalanceRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateBalanceRecord ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateBalanceRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateBalanceRecord ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateBalanceRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateBalanceRecord ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateBalanceRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateBalanceRecord MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateBalanceRecord prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateBalanceRecord, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateBalanceRecord cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateBalanceRecord result;
      
      private UpdateBalanceRecord PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateBalanceRecord original = result;
          result = new UpdateBalanceRecord();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateBalanceRecord MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord.Descriptor; }
      }
      
      public override UpdateBalanceRecord DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord.DefaultInstance; }
      }
      
      public override UpdateBalanceRecord BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateBalanceRecord) {
          return MergeFrom((UpdateBalanceRecord) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateBalanceRecord other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecord.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBalanceId) {
          BalanceId = other.BalanceId;
        }
        if (other.HasEndCashBalance) {
          EndCashBalance = other.EndCashBalance;
        }
        if (other.HasCollateral) {
          Collateral = other.Collateral;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateBalanceRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateBalanceRecordFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBalanceId = input.ReadSInt32(ref result.balanceId_);
              break;
            }
            case 17: {
              result.hasEndCashBalance = input.ReadDouble(ref result.endCashBalance_);
              break;
            }
            case 25: {
              result.hasCollateral = input.ReadDouble(ref result.collateral_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBalanceId {
        get { return result.hasBalanceId; }
      }
      public int BalanceId {
        get { return result.BalanceId; }
        set { SetBalanceId(value); }
      }
      public Builder SetBalanceId(int value) {
        PrepareBuilder();
        result.hasBalanceId = true;
        result.balanceId_ = value;
        return this;
      }
      public Builder ClearBalanceId() {
        PrepareBuilder();
        result.hasBalanceId = false;
        result.balanceId_ = 0;
        return this;
      }
      
      public bool HasEndCashBalance {
        get { return result.hasEndCashBalance; }
      }
      public double EndCashBalance {
        get { return result.EndCashBalance; }
        set { SetEndCashBalance(value); }
      }
      public Builder SetEndCashBalance(double value) {
        PrepareBuilder();
        result.hasEndCashBalance = true;
        result.endCashBalance_ = value;
        return this;
      }
      public Builder ClearEndCashBalance() {
        PrepareBuilder();
        result.hasEndCashBalance = false;
        result.endCashBalance_ = 0D;
        return this;
      }
      
      public bool HasCollateral {
        get { return result.hasCollateral; }
      }
      public double Collateral {
        get { return result.Collateral; }
        set { SetCollateral(value); }
      }
      public Builder SetCollateral(double value) {
        PrepareBuilder();
        result.hasCollateral = true;
        result.collateral_ = value;
        return this;
      }
      public Builder ClearCollateral() {
        PrepareBuilder();
        result.hasCollateral = false;
        result.collateral_ = 0D;
        return this;
      }
    }
    static UpdateBalanceRecord() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountSearchRequest : pb::GeneratedMessage<AccountSearchRequest, AccountSearchRequest.Builder> {
    private AccountSearchRequest() { }
    private static readonly AccountSearchRequest defaultInstance = new AccountSearchRequest().MakeReadOnly();
    private static readonly string[] _accountSearchRequestFieldNames = new string[] { "all_match_mode", "include_removed", "search_criteria", "search_options", "text", "top" };
    private static readonly uint[] _accountSearchRequestFieldTags = new uint[] { 48, 32, 16, 42, 10, 24 };
    public static AccountSearchRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountSearchRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountSearchRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountSearchRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountSearchRequest, AccountSearchRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountSearchRequest__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum SearchCriteria {
        ACCOUNT_ID = 1,
        ACCOUNT_NAME = 2,
        BROKERAGE_NUMBER = 3,
        SALES_SERIES_NUMBER = 4,
        SALES_SERIES_NAME = 5,
        SALES_SERIES_ID = 6,
        CUSTOMER_ID = 7,
        CUSTOMER_NAME = 8,
        ACCOUNT_CLUSTER_ID = 9,
      }
      
    }
    #endregion
    
    public const int TextFieldNumber = 1;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    public const int SearchCriteriaFieldNumber = 2;
    private pbc::PopsicleList<uint> searchCriteria_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> SearchCriteriaList {
      get { return pbc::Lists.AsReadOnly(searchCriteria_); }
    }
    public int SearchCriteriaCount {
      get { return searchCriteria_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetSearchCriteria(int index) {
      return searchCriteria_[index];
    }
    
    public const int TopFieldNumber = 3;
    private bool hasTop;
    private uint top_;
    public bool HasTop {
      get { return hasTop; }
    }
    [global::System.CLSCompliant(false)]
    public uint Top {
      get { return top_; }
    }
    
    public const int IncludeRemovedFieldNumber = 4;
    private bool hasIncludeRemoved;
    private bool includeRemoved_;
    public bool HasIncludeRemoved {
      get { return hasIncludeRemoved; }
    }
    public bool IncludeRemoved {
      get { return includeRemoved_; }
    }
    
    public const int SearchOptionsFieldNumber = 5;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> searchOptions_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> SearchOptionsList {
      get { return searchOptions_; }
    }
    public int SearchOptionsCount {
      get { return searchOptions_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.SearchOption GetSearchOptions(int index) {
      return searchOptions_[index];
    }
    
    public const int AllMatchModeFieldNumber = 6;
    private bool hasAllMatchMode;
    private bool allMatchMode_;
    public bool HasAllMatchMode {
      get { return hasAllMatchMode; }
    }
    public bool AllMatchMode {
      get { return allMatchMode_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountSearchRequestFieldNames;
      if (hasText) {
        output.WriteString(1, field_names[4], Text);
      }
      if (searchCriteria_.Count > 0) {
        output.WriteUInt32Array(2, field_names[2], searchCriteria_);
      }
      if (hasTop) {
        output.WriteUInt32(3, field_names[5], Top);
      }
      if (hasIncludeRemoved) {
        output.WriteBool(4, field_names[1], IncludeRemoved);
      }
      if (searchOptions_.Count > 0) {
        output.WriteMessageArray(5, field_names[3], searchOptions_);
      }
      if (hasAllMatchMode) {
        output.WriteBool(6, field_names[0], AllMatchMode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Text);
      }
      {
        int dataSize = 0;
        foreach (uint element in SearchCriteriaList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * searchCriteria_.Count;
      }
      if (hasTop) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Top);
      }
      if (hasIncludeRemoved) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, IncludeRemoved);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.SearchOption element in SearchOptionsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      if (hasAllMatchMode) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, AllMatchMode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountSearchRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSearchRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSearchRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSearchRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSearchRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSearchRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountSearchRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountSearchRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountSearchRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSearchRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountSearchRequest MakeReadOnly() {
      searchCriteria_.MakeReadOnly();
      searchOptions_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountSearchRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountSearchRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountSearchRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountSearchRequest result;
      
      private AccountSearchRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountSearchRequest original = result;
          result = new AccountSearchRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountSearchRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest.Descriptor; }
      }
      
      public override AccountSearchRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest.DefaultInstance; }
      }
      
      public override AccountSearchRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountSearchRequest) {
          return MergeFrom((AccountSearchRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountSearchRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountSearchRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasText) {
          Text = other.Text;
        }
        if (other.searchCriteria_.Count != 0) {
          result.searchCriteria_.Add(other.searchCriteria_);
        }
        if (other.HasTop) {
          Top = other.Top;
        }
        if (other.HasIncludeRemoved) {
          IncludeRemoved = other.IncludeRemoved;
        }
        if (other.searchOptions_.Count != 0) {
          result.searchOptions_.Add(other.searchOptions_);
        }
        if (other.HasAllMatchMode) {
          AllMatchMode = other.AllMatchMode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountSearchRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountSearchRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt32Array(tag, field_name, result.searchCriteria_);
              break;
            }
            case 24: {
              result.hasTop = input.ReadUInt32(ref result.top_);
              break;
            }
            case 32: {
              result.hasIncludeRemoved = input.ReadBool(ref result.includeRemoved_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.searchOptions_, global::CmsApiSamples.Protocol.CMSApi.SearchOption.DefaultInstance, extensionRegistry);
              break;
            }
            case 48: {
              result.hasAllMatchMode = input.ReadBool(ref result.allMatchMode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> SearchCriteriaList {
        get { return PrepareBuilder().searchCriteria_; }
      }
      public int SearchCriteriaCount {
        get { return result.SearchCriteriaCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetSearchCriteria(int index) {
        return result.GetSearchCriteria(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSearchCriteria(int index, uint value) {
        PrepareBuilder();
        result.searchCriteria_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddSearchCriteria(uint value) {
        PrepareBuilder();
        result.searchCriteria_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeSearchCriteria(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.searchCriteria_.Add(values);
        return this;
      }
      public Builder ClearSearchCriteria() {
        PrepareBuilder();
        result.searchCriteria_.Clear();
        return this;
      }
      
      public bool HasTop {
        get { return result.hasTop; }
      }
      [global::System.CLSCompliant(false)]
      public uint Top {
        get { return result.Top; }
        set { SetTop(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTop(uint value) {
        PrepareBuilder();
        result.hasTop = true;
        result.top_ = value;
        return this;
      }
      public Builder ClearTop() {
        PrepareBuilder();
        result.hasTop = false;
        result.top_ = 0;
        return this;
      }
      
      public bool HasIncludeRemoved {
        get { return result.hasIncludeRemoved; }
      }
      public bool IncludeRemoved {
        get { return result.IncludeRemoved; }
        set { SetIncludeRemoved(value); }
      }
      public Builder SetIncludeRemoved(bool value) {
        PrepareBuilder();
        result.hasIncludeRemoved = true;
        result.includeRemoved_ = value;
        return this;
      }
      public Builder ClearIncludeRemoved() {
        PrepareBuilder();
        result.hasIncludeRemoved = false;
        result.includeRemoved_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.SearchOption> SearchOptionsList {
        get { return PrepareBuilder().searchOptions_; }
      }
      public int SearchOptionsCount {
        get { return result.SearchOptionsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.SearchOption GetSearchOptions(int index) {
        return result.GetSearchOptions(index);
      }
      public Builder SetSearchOptions(int index, global::CmsApiSamples.Protocol.CMSApi.SearchOption value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.searchOptions_[index] = value;
        return this;
      }
      public Builder SetSearchOptions(int index, global::CmsApiSamples.Protocol.CMSApi.SearchOption.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.searchOptions_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSearchOptions(global::CmsApiSamples.Protocol.CMSApi.SearchOption value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.searchOptions_.Add(value);
        return this;
      }
      public Builder AddSearchOptions(global::CmsApiSamples.Protocol.CMSApi.SearchOption.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.searchOptions_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSearchOptions(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.SearchOption> values) {
        PrepareBuilder();
        result.searchOptions_.Add(values);
        return this;
      }
      public Builder ClearSearchOptions() {
        PrepareBuilder();
        result.searchOptions_.Clear();
        return this;
      }
      
      public bool HasAllMatchMode {
        get { return result.hasAllMatchMode; }
      }
      public bool AllMatchMode {
        get { return result.AllMatchMode; }
        set { SetAllMatchMode(value); }
      }
      public Builder SetAllMatchMode(bool value) {
        PrepareBuilder();
        result.hasAllMatchMode = true;
        result.allMatchMode_ = value;
        return this;
      }
      public Builder ClearAllMatchMode() {
        PrepareBuilder();
        result.hasAllMatchMode = false;
        result.allMatchMode_ = false;
        return this;
      }
    }
    static AccountSearchRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountRouteListRequest : pb::GeneratedMessage<AccountRouteListRequest, AccountRouteListRequest.Builder> {
    private AccountRouteListRequest() { }
    private static readonly AccountRouteListRequest defaultInstance = new AccountRouteListRequest().MakeReadOnly();
    private static readonly string[] _accountRouteListRequestFieldNames = new string[] { "account_id" };
    private static readonly uint[] _accountRouteListRequestFieldTags = new uint[] { 8 };
    public static AccountRouteListRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountRouteListRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountRouteListRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRouteListRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountRouteListRequest, AccountRouteListRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRouteListRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountRouteListRequestFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountRouteListRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRouteListRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRouteListRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRouteListRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRouteListRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRouteListRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountRouteListRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountRouteListRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountRouteListRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRouteListRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountRouteListRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountRouteListRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountRouteListRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountRouteListRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountRouteListRequest result;
      
      private AccountRouteListRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountRouteListRequest original = result;
          result = new AccountRouteListRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountRouteListRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest.Descriptor; }
      }
      
      public override AccountRouteListRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest.DefaultInstance; }
      }
      
      public override AccountRouteListRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountRouteListRequest) {
          return MergeFrom((AccountRouteListRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountRouteListRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountRouteListRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountRouteListRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountRouteListRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
    }
    static AccountRouteListRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountUserAuthorizationListRequest : pb::GeneratedMessage<AccountUserAuthorizationListRequest, AccountUserAuthorizationListRequest.Builder> {
    private AccountUserAuthorizationListRequest() { }
    private static readonly AccountUserAuthorizationListRequest defaultInstance = new AccountUserAuthorizationListRequest().MakeReadOnly();
    private static readonly string[] _accountUserAuthorizationListRequestFieldNames = new string[] { "account_id", "top", "user_id" };
    private static readonly uint[] _accountUserAuthorizationListRequestFieldTags = new uint[] { 8, 24, 18 };
    public static AccountUserAuthorizationListRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountUserAuthorizationListRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountUserAuthorizationListRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountUserAuthorizationListRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountUserAuthorizationListRequest, AccountUserAuthorizationListRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountUserAuthorizationListRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int UserIdFieldNumber = 2;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int TopFieldNumber = 3;
    private bool hasTop;
    private uint top_;
    public bool HasTop {
      get { return hasTop; }
    }
    [global::System.CLSCompliant(false)]
    public uint Top {
      get { return top_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountUserAuthorizationListRequestFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasUserId) {
        output.WriteString(2, field_names[2], UserId);
      }
      if (hasTop) {
        output.WriteUInt32(3, field_names[1], Top);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, UserId);
      }
      if (hasTop) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Top);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountUserAuthorizationListRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountUserAuthorizationListRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountUserAuthorizationListRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountUserAuthorizationListRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountUserAuthorizationListRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountUserAuthorizationListRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountUserAuthorizationListRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountUserAuthorizationListRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountUserAuthorizationListRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountUserAuthorizationListRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountUserAuthorizationListRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountUserAuthorizationListRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountUserAuthorizationListRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountUserAuthorizationListRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountUserAuthorizationListRequest result;
      
      private AccountUserAuthorizationListRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountUserAuthorizationListRequest original = result;
          result = new AccountUserAuthorizationListRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountUserAuthorizationListRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest.Descriptor; }
      }
      
      public override AccountUserAuthorizationListRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest.DefaultInstance; }
      }
      
      public override AccountUserAuthorizationListRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountUserAuthorizationListRequest) {
          return MergeFrom((AccountUserAuthorizationListRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountUserAuthorizationListRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasTop) {
          Top = other.Top;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountUserAuthorizationListRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountUserAuthorizationListRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 24: {
              result.hasTop = input.ReadUInt32(ref result.top_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasTop {
        get { return result.hasTop; }
      }
      [global::System.CLSCompliant(false)]
      public uint Top {
        get { return result.Top; }
        set { SetTop(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTop(uint value) {
        PrepareBuilder();
        result.hasTop = true;
        result.top_ = value;
        return this;
      }
      public Builder ClearTop() {
        PrepareBuilder();
        result.hasTop = false;
        result.top_ = 0;
        return this;
      }
    }
    static AccountUserAuthorizationListRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountSettingsRequest : pb::GeneratedMessage<AccountSettingsRequest, AccountSettingsRequest.Builder> {
    private AccountSettingsRequest() { }
    private static readonly AccountSettingsRequest defaultInstance = new AccountSettingsRequest().MakeReadOnly();
    private static readonly string[] _accountSettingsRequestFieldNames = new string[] { "account_id" };
    private static readonly uint[] _accountSettingsRequestFieldTags = new uint[] { 8 };
    public static AccountSettingsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountSettingsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountSettingsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountSettingsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountSettingsRequest, AccountSettingsRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountSettingsRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountSettingsRequestFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountSettingsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSettingsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSettingsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSettingsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSettingsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSettingsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountSettingsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountSettingsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountSettingsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSettingsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountSettingsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountSettingsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountSettingsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountSettingsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountSettingsRequest result;
      
      private AccountSettingsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountSettingsRequest original = result;
          result = new AccountSettingsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountSettingsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest.Descriptor; }
      }
      
      public override AccountSettingsRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest.DefaultInstance; }
      }
      
      public override AccountSettingsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountSettingsRequest) {
          return MergeFrom((AccountSettingsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountSettingsRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountSettingsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountSettingsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountSettingsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
    }
    static AccountSettingsRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountRiskParametersRequest : pb::GeneratedMessage<AccountRiskParametersRequest, AccountRiskParametersRequest.Builder> {
    private AccountRiskParametersRequest() { }
    private static readonly AccountRiskParametersRequest defaultInstance = new AccountRiskParametersRequest().MakeReadOnly();
    private static readonly string[] _accountRiskParametersRequestFieldNames = new string[] { "account_id" };
    private static readonly uint[] _accountRiskParametersRequestFieldTags = new uint[] { 8 };
    public static AccountRiskParametersRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountRiskParametersRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountRiskParametersRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRiskParametersRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountRiskParametersRequest, AccountRiskParametersRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRiskParametersRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountRiskParametersRequestFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountRiskParametersRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRiskParametersRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRiskParametersRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRiskParametersRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRiskParametersRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRiskParametersRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountRiskParametersRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountRiskParametersRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountRiskParametersRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRiskParametersRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountRiskParametersRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountRiskParametersRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountRiskParametersRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountRiskParametersRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountRiskParametersRequest result;
      
      private AccountRiskParametersRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountRiskParametersRequest original = result;
          result = new AccountRiskParametersRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountRiskParametersRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest.Descriptor; }
      }
      
      public override AccountRiskParametersRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest.DefaultInstance; }
      }
      
      public override AccountRiskParametersRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountRiskParametersRequest) {
          return MergeFrom((AccountRiskParametersRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountRiskParametersRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountRiskParametersRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountRiskParametersRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
    }
    static AccountRiskParametersRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateRiskParameters : pb::GeneratedMessage<UpdateRiskParameters, UpdateRiskParameters.Builder> {
    private UpdateRiskParameters() { }
    private static readonly UpdateRiskParameters defaultInstance = new UpdateRiskParameters().MakeReadOnly();
    private static readonly string[] _updateRiskParametersFieldNames = new string[] { "account_id", "allow_futures", "allow_options", "allowable_margin_credit", "liquidation_only" };
    private static readonly uint[] _updateRiskParametersFieldTags = new uint[] { 8, 24, 32, 41, 16 };
    public static UpdateRiskParameters DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateRiskParameters DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateRiskParameters ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateRiskParameters__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateRiskParameters, UpdateRiskParameters.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateRiskParameters__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int LiquidationOnlyFieldNumber = 2;
    private bool hasLiquidationOnly;
    private bool liquidationOnly_;
    public bool HasLiquidationOnly {
      get { return hasLiquidationOnly; }
    }
    public bool LiquidationOnly {
      get { return liquidationOnly_; }
    }
    
    public const int AllowFuturesFieldNumber = 3;
    private bool hasAllowFutures;
    private bool allowFutures_;
    public bool HasAllowFutures {
      get { return hasAllowFutures; }
    }
    public bool AllowFutures {
      get { return allowFutures_; }
    }
    
    public const int AllowOptionsFieldNumber = 4;
    private bool hasAllowOptions;
    private uint allowOptions_;
    public bool HasAllowOptions {
      get { return hasAllowOptions; }
    }
    [global::System.CLSCompliant(false)]
    public uint AllowOptions {
      get { return allowOptions_; }
    }
    
    public const int AllowableMarginCreditFieldNumber = 5;
    private bool hasAllowableMarginCredit;
    private double allowableMarginCredit_;
    public bool HasAllowableMarginCredit {
      get { return hasAllowableMarginCredit; }
    }
    public double AllowableMarginCredit {
      get { return allowableMarginCredit_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateRiskParametersFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasLiquidationOnly) {
        output.WriteBool(2, field_names[4], LiquidationOnly);
      }
      if (hasAllowFutures) {
        output.WriteBool(3, field_names[1], AllowFutures);
      }
      if (hasAllowOptions) {
        output.WriteUInt32(4, field_names[2], AllowOptions);
      }
      if (hasAllowableMarginCredit) {
        output.WriteDouble(5, field_names[3], AllowableMarginCredit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasLiquidationOnly) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, LiquidationOnly);
      }
      if (hasAllowFutures) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, AllowFutures);
      }
      if (hasAllowOptions) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, AllowOptions);
      }
      if (hasAllowableMarginCredit) {
        size += pb::CodedOutputStream.ComputeDoubleSize(5, AllowableMarginCredit);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateRiskParameters ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRiskParameters ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRiskParameters ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRiskParameters ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRiskParameters ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRiskParameters ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateRiskParameters ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateRiskParameters ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateRiskParameters ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRiskParameters ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateRiskParameters MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateRiskParameters prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateRiskParameters, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateRiskParameters cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateRiskParameters result;
      
      private UpdateRiskParameters PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateRiskParameters original = result;
          result = new UpdateRiskParameters();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateRiskParameters MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters.Descriptor; }
      }
      
      public override UpdateRiskParameters DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters.DefaultInstance; }
      }
      
      public override UpdateRiskParameters BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateRiskParameters) {
          return MergeFrom((UpdateRiskParameters) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateRiskParameters other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParameters.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasLiquidationOnly) {
          LiquidationOnly = other.LiquidationOnly;
        }
        if (other.HasAllowFutures) {
          AllowFutures = other.AllowFutures;
        }
        if (other.HasAllowOptions) {
          AllowOptions = other.AllowOptions;
        }
        if (other.HasAllowableMarginCredit) {
          AllowableMarginCredit = other.AllowableMarginCredit;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateRiskParametersFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateRiskParametersFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 16: {
              result.hasLiquidationOnly = input.ReadBool(ref result.liquidationOnly_);
              break;
            }
            case 24: {
              result.hasAllowFutures = input.ReadBool(ref result.allowFutures_);
              break;
            }
            case 32: {
              result.hasAllowOptions = input.ReadUInt32(ref result.allowOptions_);
              break;
            }
            case 41: {
              result.hasAllowableMarginCredit = input.ReadDouble(ref result.allowableMarginCredit_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasLiquidationOnly {
        get { return result.hasLiquidationOnly; }
      }
      public bool LiquidationOnly {
        get { return result.LiquidationOnly; }
        set { SetLiquidationOnly(value); }
      }
      public Builder SetLiquidationOnly(bool value) {
        PrepareBuilder();
        result.hasLiquidationOnly = true;
        result.liquidationOnly_ = value;
        return this;
      }
      public Builder ClearLiquidationOnly() {
        PrepareBuilder();
        result.hasLiquidationOnly = false;
        result.liquidationOnly_ = false;
        return this;
      }
      
      public bool HasAllowFutures {
        get { return result.hasAllowFutures; }
      }
      public bool AllowFutures {
        get { return result.AllowFutures; }
        set { SetAllowFutures(value); }
      }
      public Builder SetAllowFutures(bool value) {
        PrepareBuilder();
        result.hasAllowFutures = true;
        result.allowFutures_ = value;
        return this;
      }
      public Builder ClearAllowFutures() {
        PrepareBuilder();
        result.hasAllowFutures = false;
        result.allowFutures_ = false;
        return this;
      }
      
      public bool HasAllowOptions {
        get { return result.hasAllowOptions; }
      }
      [global::System.CLSCompliant(false)]
      public uint AllowOptions {
        get { return result.AllowOptions; }
        set { SetAllowOptions(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAllowOptions(uint value) {
        PrepareBuilder();
        result.hasAllowOptions = true;
        result.allowOptions_ = value;
        return this;
      }
      public Builder ClearAllowOptions() {
        PrepareBuilder();
        result.hasAllowOptions = false;
        result.allowOptions_ = 0;
        return this;
      }
      
      public bool HasAllowableMarginCredit {
        get { return result.hasAllowableMarginCredit; }
      }
      public double AllowableMarginCredit {
        get { return result.AllowableMarginCredit; }
        set { SetAllowableMarginCredit(value); }
      }
      public Builder SetAllowableMarginCredit(double value) {
        PrepareBuilder();
        result.hasAllowableMarginCredit = true;
        result.allowableMarginCredit_ = value;
        return this;
      }
      public Builder ClearAllowableMarginCredit() {
        PrepareBuilder();
        result.hasAllowableMarginCredit = false;
        result.allowableMarginCredit_ = 0D;
        return this;
      }
    }
    static UpdateRiskParameters() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountAvailableExchangeGroupsRequest : pb::GeneratedMessage<AccountAvailableExchangeGroupsRequest, AccountAvailableExchangeGroupsRequest.Builder> {
    private AccountAvailableExchangeGroupsRequest() { }
    private static readonly AccountAvailableExchangeGroupsRequest defaultInstance = new AccountAvailableExchangeGroupsRequest().MakeReadOnly();
    private static readonly string[] _accountAvailableExchangeGroupsRequestFieldNames = new string[] { "account_id" };
    private static readonly uint[] _accountAvailableExchangeGroupsRequestFieldTags = new uint[] { 8 };
    public static AccountAvailableExchangeGroupsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountAvailableExchangeGroupsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountAvailableExchangeGroupsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountAvailableExchangeGroupsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountAvailableExchangeGroupsRequest, AccountAvailableExchangeGroupsRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountAvailableExchangeGroupsRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountAvailableExchangeGroupsRequestFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountAvailableExchangeGroupsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountAvailableExchangeGroupsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountAvailableExchangeGroupsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountAvailableExchangeGroupsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountAvailableExchangeGroupsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountAvailableExchangeGroupsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountAvailableExchangeGroupsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountAvailableExchangeGroupsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountAvailableExchangeGroupsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountAvailableExchangeGroupsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountAvailableExchangeGroupsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountAvailableExchangeGroupsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountAvailableExchangeGroupsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountAvailableExchangeGroupsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountAvailableExchangeGroupsRequest result;
      
      private AccountAvailableExchangeGroupsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountAvailableExchangeGroupsRequest original = result;
          result = new AccountAvailableExchangeGroupsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountAvailableExchangeGroupsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest.Descriptor; }
      }
      
      public override AccountAvailableExchangeGroupsRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest.DefaultInstance; }
      }
      
      public override AccountAvailableExchangeGroupsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountAvailableExchangeGroupsRequest) {
          return MergeFrom((AccountAvailableExchangeGroupsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountAvailableExchangeGroupsRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountAvailableExchangeGroupsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountAvailableExchangeGroupsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountAvailableExchangeGroupsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
    }
    static AccountAvailableExchangeGroupsRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountMarketLimitsRequest : pb::GeneratedMessage<AccountMarketLimitsRequest, AccountMarketLimitsRequest.Builder> {
    private AccountMarketLimitsRequest() { }
    private static readonly AccountMarketLimitsRequest defaultInstance = new AccountMarketLimitsRequest().MakeReadOnly();
    private static readonly string[] _accountMarketLimitsRequestFieldNames = new string[] { "account_id" };
    private static readonly uint[] _accountMarketLimitsRequestFieldTags = new uint[] { 8 };
    public static AccountMarketLimitsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountMarketLimitsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountMarketLimitsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountMarketLimitsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountMarketLimitsRequest, AccountMarketLimitsRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountMarketLimitsRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountMarketLimitsRequestFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountMarketLimitsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountMarketLimitsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountMarketLimitsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountMarketLimitsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountMarketLimitsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountMarketLimitsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountMarketLimitsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountMarketLimitsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountMarketLimitsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountMarketLimitsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountMarketLimitsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountMarketLimitsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountMarketLimitsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountMarketLimitsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountMarketLimitsRequest result;
      
      private AccountMarketLimitsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountMarketLimitsRequest original = result;
          result = new AccountMarketLimitsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountMarketLimitsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest.Descriptor; }
      }
      
      public override AccountMarketLimitsRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest.DefaultInstance; }
      }
      
      public override AccountMarketLimitsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountMarketLimitsRequest) {
          return MergeFrom((AccountMarketLimitsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountMarketLimitsRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountMarketLimitsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountMarketLimitsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
    }
    static AccountMarketLimitsRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountPositionsRequest : pb::GeneratedMessage<AccountPositionsRequest, AccountPositionsRequest.Builder> {
    private AccountPositionsRequest() { }
    private static readonly AccountPositionsRequest defaultInstance = new AccountPositionsRequest().MakeReadOnly();
    private static readonly string[] _accountPositionsRequestFieldNames = new string[] { "account_id" };
    private static readonly uint[] _accountPositionsRequestFieldTags = new uint[] { 8 };
    public static AccountPositionsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountPositionsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountPositionsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountPositionsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountPositionsRequest, AccountPositionsRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountPositionsRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountPositionsRequestFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountPositionsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountPositionsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountPositionsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountPositionsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountPositionsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountPositionsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountPositionsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountPositionsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountPositionsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountPositionsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountPositionsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountPositionsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountPositionsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountPositionsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountPositionsRequest result;
      
      private AccountPositionsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountPositionsRequest original = result;
          result = new AccountPositionsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountPositionsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest.Descriptor; }
      }
      
      public override AccountPositionsRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest.DefaultInstance; }
      }
      
      public override AccountPositionsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountPositionsRequest) {
          return MergeFrom((AccountPositionsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountPositionsRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountPositionsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountPositionsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountPositionsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
    }
    static AccountPositionsRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountEquityRequest : pb::GeneratedMessage<AccountEquityRequest, AccountEquityRequest.Builder> {
    private AccountEquityRequest() { }
    private static readonly AccountEquityRequest defaultInstance = new AccountEquityRequest().MakeReadOnly();
    private static readonly string[] _accountEquityRequestFieldNames = new string[] { "account_id", "currency" };
    private static readonly uint[] _accountEquityRequestFieldTags = new uint[] { 8, 18 };
    public static AccountEquityRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountEquityRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountEquityRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountEquityRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountEquityRequest, AccountEquityRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountEquityRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int CurrencyFieldNumber = 2;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountEquityRequestFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasCurrency) {
        output.WriteString(2, field_names[1], Currency);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasCurrency) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Currency);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountEquityRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountEquityRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountEquityRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountEquityRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountEquityRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountEquityRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountEquityRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountEquityRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountEquityRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountEquityRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountEquityRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountEquityRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountEquityRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountEquityRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountEquityRequest result;
      
      private AccountEquityRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountEquityRequest original = result;
          result = new AccountEquityRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountEquityRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest.Descriptor; }
      }
      
      public override AccountEquityRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest.DefaultInstance; }
      }
      
      public override AccountEquityRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountEquityRequest) {
          return MergeFrom((AccountEquityRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountEquityRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountEquityRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountEquityRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountEquityRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
    }
    static AccountEquityRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountCollateralRequest : pb::GeneratedMessage<AccountCollateralRequest, AccountCollateralRequest.Builder> {
    private AccountCollateralRequest() { }
    private static readonly AccountCollateralRequest defaultInstance = new AccountCollateralRequest().MakeReadOnly();
    private static readonly string[] _accountCollateralRequestFieldNames = new string[] { "account_id" };
    private static readonly uint[] _accountCollateralRequestFieldTags = new uint[] { 8 };
    public static AccountCollateralRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountCollateralRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountCollateralRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountCollateralRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountCollateralRequest, AccountCollateralRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountCollateralRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountCollateralRequestFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountCollateralRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountCollateralRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountCollateralRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountCollateralRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountCollateralRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountCollateralRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountCollateralRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountCollateralRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountCollateralRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountCollateralRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountCollateralRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountCollateralRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountCollateralRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountCollateralRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountCollateralRequest result;
      
      private AccountCollateralRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountCollateralRequest original = result;
          result = new AccountCollateralRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountCollateralRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest.Descriptor; }
      }
      
      public override AccountCollateralRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest.DefaultInstance; }
      }
      
      public override AccountCollateralRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountCollateralRequest) {
          return MergeFrom((AccountCollateralRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountCollateralRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountCollateralRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountCollateralRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountCollateralRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
    }
    static AccountCollateralRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CloneAccount : pb::GeneratedMessage<CloneAccount, CloneAccount.Builder> {
    private CloneAccount() { }
    private static readonly CloneAccount defaultInstance = new CloneAccount().MakeReadOnly();
    private static readonly string[] _cloneAccountFieldNames = new string[] { "new_account_brokerage_number", "new_account_name", "new_account_user_id", "source_account_id" };
    private static readonly uint[] _cloneAccountFieldTags = new uint[] { 26, 18, 34, 8 };
    public static CloneAccount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CloneAccount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CloneAccount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CloneAccount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CloneAccount, CloneAccount.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CloneAccount__FieldAccessorTable; }
    }
    
    public const int SourceAccountIdFieldNumber = 1;
    private bool hasSourceAccountId;
    private int sourceAccountId_;
    public bool HasSourceAccountId {
      get { return hasSourceAccountId; }
    }
    public int SourceAccountId {
      get { return sourceAccountId_; }
    }
    
    public const int NewAccountNameFieldNumber = 2;
    private bool hasNewAccountName;
    private string newAccountName_ = "";
    public bool HasNewAccountName {
      get { return hasNewAccountName; }
    }
    public string NewAccountName {
      get { return newAccountName_; }
    }
    
    public const int NewAccountBrokerageNumberFieldNumber = 3;
    private bool hasNewAccountBrokerageNumber;
    private string newAccountBrokerageNumber_ = "";
    public bool HasNewAccountBrokerageNumber {
      get { return hasNewAccountBrokerageNumber; }
    }
    public string NewAccountBrokerageNumber {
      get { return newAccountBrokerageNumber_; }
    }
    
    public const int NewAccountUserIdFieldNumber = 4;
    private bool hasNewAccountUserId;
    private string newAccountUserId_ = "";
    public bool HasNewAccountUserId {
      get { return hasNewAccountUserId; }
    }
    public string NewAccountUserId {
      get { return newAccountUserId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSourceAccountId) return false;
        if (!hasNewAccountName) return false;
        if (!hasNewAccountBrokerageNumber) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _cloneAccountFieldNames;
      if (hasSourceAccountId) {
        output.WriteSInt32(1, field_names[3], SourceAccountId);
      }
      if (hasNewAccountName) {
        output.WriteString(2, field_names[1], NewAccountName);
      }
      if (hasNewAccountBrokerageNumber) {
        output.WriteString(3, field_names[0], NewAccountBrokerageNumber);
      }
      if (hasNewAccountUserId) {
        output.WriteString(4, field_names[2], NewAccountUserId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSourceAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, SourceAccountId);
      }
      if (hasNewAccountName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, NewAccountName);
      }
      if (hasNewAccountBrokerageNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(3, NewAccountBrokerageNumber);
      }
      if (hasNewAccountUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(4, NewAccountUserId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CloneAccount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CloneAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CloneAccount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CloneAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CloneAccount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CloneAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CloneAccount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CloneAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CloneAccount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CloneAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CloneAccount MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CloneAccount prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CloneAccount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CloneAccount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CloneAccount result;
      
      private CloneAccount PrepareBuilder() {
        if (resultIsReadOnly) {
          CloneAccount original = result;
          result = new CloneAccount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CloneAccount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CloneAccount.Descriptor; }
      }
      
      public override CloneAccount DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CloneAccount.DefaultInstance; }
      }
      
      public override CloneAccount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CloneAccount) {
          return MergeFrom((CloneAccount) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CloneAccount other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CloneAccount.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSourceAccountId) {
          SourceAccountId = other.SourceAccountId;
        }
        if (other.HasNewAccountName) {
          NewAccountName = other.NewAccountName;
        }
        if (other.HasNewAccountBrokerageNumber) {
          NewAccountBrokerageNumber = other.NewAccountBrokerageNumber;
        }
        if (other.HasNewAccountUserId) {
          NewAccountUserId = other.NewAccountUserId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cloneAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cloneAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSourceAccountId = input.ReadSInt32(ref result.sourceAccountId_);
              break;
            }
            case 18: {
              result.hasNewAccountName = input.ReadString(ref result.newAccountName_);
              break;
            }
            case 26: {
              result.hasNewAccountBrokerageNumber = input.ReadString(ref result.newAccountBrokerageNumber_);
              break;
            }
            case 34: {
              result.hasNewAccountUserId = input.ReadString(ref result.newAccountUserId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSourceAccountId {
        get { return result.hasSourceAccountId; }
      }
      public int SourceAccountId {
        get { return result.SourceAccountId; }
        set { SetSourceAccountId(value); }
      }
      public Builder SetSourceAccountId(int value) {
        PrepareBuilder();
        result.hasSourceAccountId = true;
        result.sourceAccountId_ = value;
        return this;
      }
      public Builder ClearSourceAccountId() {
        PrepareBuilder();
        result.hasSourceAccountId = false;
        result.sourceAccountId_ = 0;
        return this;
      }
      
      public bool HasNewAccountName {
        get { return result.hasNewAccountName; }
      }
      public string NewAccountName {
        get { return result.NewAccountName; }
        set { SetNewAccountName(value); }
      }
      public Builder SetNewAccountName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewAccountName = true;
        result.newAccountName_ = value;
        return this;
      }
      public Builder ClearNewAccountName() {
        PrepareBuilder();
        result.hasNewAccountName = false;
        result.newAccountName_ = "";
        return this;
      }
      
      public bool HasNewAccountBrokerageNumber {
        get { return result.hasNewAccountBrokerageNumber; }
      }
      public string NewAccountBrokerageNumber {
        get { return result.NewAccountBrokerageNumber; }
        set { SetNewAccountBrokerageNumber(value); }
      }
      public Builder SetNewAccountBrokerageNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewAccountBrokerageNumber = true;
        result.newAccountBrokerageNumber_ = value;
        return this;
      }
      public Builder ClearNewAccountBrokerageNumber() {
        PrepareBuilder();
        result.hasNewAccountBrokerageNumber = false;
        result.newAccountBrokerageNumber_ = "";
        return this;
      }
      
      public bool HasNewAccountUserId {
        get { return result.hasNewAccountUserId; }
      }
      public string NewAccountUserId {
        get { return result.NewAccountUserId; }
        set { SetNewAccountUserId(value); }
      }
      public Builder SetNewAccountUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNewAccountUserId = true;
        result.newAccountUserId_ = value;
        return this;
      }
      public Builder ClearNewAccountUserId() {
        PrepareBuilder();
        result.hasNewAccountUserId = false;
        result.newAccountUserId_ = "";
        return this;
      }
    }
    static CloneAccount() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccount : pb::GeneratedMessage<UpdateAccount, UpdateAccount.Builder> {
    private UpdateAccount() { }
    private static readonly UpdateAccount defaultInstance = new UpdateAccount().MakeReadOnly();
    private static readonly string[] _updateAccountFieldNames = new string[] { "account", "original_account" };
    private static readonly uint[] _updateAccountFieldTags = new uint[] { 10, 18 };
    public static UpdateAccount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccount, UpdateAccount.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccount__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private global::CmsApiSamples.Protocol.CMSApi.Account account_;
    public bool HasAccount {
      get { return hasAccount; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Account Account {
      get { return account_ ?? global::CmsApiSamples.Protocol.CMSApi.Account.DefaultInstance; }
    }
    
    public const int OriginalAccountFieldNumber = 2;
    private bool hasOriginalAccount;
    private global::CmsApiSamples.Protocol.CMSApi.Account originalAccount_;
    public bool HasOriginalAccount {
      get { return hasOriginalAccount; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Account OriginalAccount {
      get { return originalAccount_ ?? global::CmsApiSamples.Protocol.CMSApi.Account.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccount) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountFieldNames;
      if (hasAccount) {
        output.WriteMessage(1, field_names[0], Account);
      }
      if (hasOriginalAccount) {
        output.WriteMessage(2, field_names[1], OriginalAccount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccount) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Account);
      }
      if (hasOriginalAccount) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, OriginalAccount);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccount MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccount prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccount result;
      
      private UpdateAccount PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccount original = result;
          result = new UpdateAccount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccount.Descriptor; }
      }
      
      public override UpdateAccount DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccount.DefaultInstance; }
      }
      
      public override UpdateAccount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccount) {
          return MergeFrom((UpdateAccount) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccount other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccount.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          MergeAccount(other.Account);
        }
        if (other.HasOriginalAccount) {
          MergeOriginalAccount(other.OriginalAccount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.Account.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Account.CreateBuilder();
              if (result.hasAccount) {
                subBuilder.MergeFrom(Account);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Account = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.Account.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Account.CreateBuilder();
              if (result.hasOriginalAccount) {
                subBuilder.MergeFrom(OriginalAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OriginalAccount = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
       get { return result.hasAccount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Account Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(global::CmsApiSamples.Protocol.CMSApi.Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder SetAccount(global::CmsApiSamples.Protocol.CMSApi.Account.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccount(global::CmsApiSamples.Protocol.CMSApi.Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccount &&
            result.account_ != global::CmsApiSamples.Protocol.CMSApi.Account.DefaultInstance) {
            result.account_ = global::CmsApiSamples.Protocol.CMSApi.Account.CreateBuilder(result.account_).MergeFrom(value).BuildPartial();
        } else {
          result.account_ = value;
        }
        result.hasAccount = true;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = null;
        return this;
      }
      
      public bool HasOriginalAccount {
       get { return result.hasOriginalAccount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Account OriginalAccount {
        get { return result.OriginalAccount; }
        set { SetOriginalAccount(value); }
      }
      public Builder SetOriginalAccount(global::CmsApiSamples.Protocol.CMSApi.Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOriginalAccount = true;
        result.originalAccount_ = value;
        return this;
      }
      public Builder SetOriginalAccount(global::CmsApiSamples.Protocol.CMSApi.Account.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOriginalAccount = true;
        result.originalAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOriginalAccount(global::CmsApiSamples.Protocol.CMSApi.Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOriginalAccount &&
            result.originalAccount_ != global::CmsApiSamples.Protocol.CMSApi.Account.DefaultInstance) {
            result.originalAccount_ = global::CmsApiSamples.Protocol.CMSApi.Account.CreateBuilder(result.originalAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.originalAccount_ = value;
        }
        result.hasOriginalAccount = true;
        return this;
      }
      public Builder ClearOriginalAccount() {
        PrepareBuilder();
        result.hasOriginalAccount = false;
        result.originalAccount_ = null;
        return this;
      }
    }
    static UpdateAccount() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountClusterRequest : pb::GeneratedMessage<AccountClusterRequest, AccountClusterRequest.Builder> {
    private AccountClusterRequest() { }
    private static readonly AccountClusterRequest defaultInstance = new AccountClusterRequest().MakeReadOnly();
    private static readonly string[] _accountClusterRequestFieldNames = new string[] { "account_cluster_id" };
    private static readonly uint[] _accountClusterRequestFieldTags = new uint[] { 10 };
    public static AccountClusterRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountClusterRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountClusterRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountClusterRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountClusterRequest, AccountClusterRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountClusterRequest__FieldAccessorTable; }
    }
    
    public const int AccountClusterIdFieldNumber = 1;
    private bool hasAccountClusterId;
    private string accountClusterId_ = "";
    public bool HasAccountClusterId {
      get { return hasAccountClusterId; }
    }
    public string AccountClusterId {
      get { return accountClusterId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountClusterRequestFieldNames;
      if (hasAccountClusterId) {
        output.WriteString(1, field_names[0], AccountClusterId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountClusterId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AccountClusterId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountClusterRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountClusterRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountClusterRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountClusterRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountClusterRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountClusterRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountClusterRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountClusterRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountClusterRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountClusterRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountClusterRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountClusterRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountClusterRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountClusterRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountClusterRequest result;
      
      private AccountClusterRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountClusterRequest original = result;
          result = new AccountClusterRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountClusterRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest.Descriptor; }
      }
      
      public override AccountClusterRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest.DefaultInstance; }
      }
      
      public override AccountClusterRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountClusterRequest) {
          return MergeFrom((AccountClusterRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountClusterRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountClusterRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountClusterId) {
          AccountClusterId = other.AccountClusterId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountClusterRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountClusterRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccountClusterId = input.ReadString(ref result.accountClusterId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountClusterId {
        get { return result.hasAccountClusterId; }
      }
      public string AccountClusterId {
        get { return result.AccountClusterId; }
        set { SetAccountClusterId(value); }
      }
      public Builder SetAccountClusterId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountClusterId = true;
        result.accountClusterId_ = value;
        return this;
      }
      public Builder ClearAccountClusterId() {
        PrepareBuilder();
        result.hasAccountClusterId = false;
        result.accountClusterId_ = "";
        return this;
      }
    }
    static AccountClusterRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateAccountCluster : pb::GeneratedMessage<CreateAccountCluster, CreateAccountCluster.Builder> {
    private CreateAccountCluster() { }
    private static readonly CreateAccountCluster defaultInstance = new CreateAccountCluster().MakeReadOnly();
    private static readonly string[] _createAccountClusterFieldNames = new string[] { "account_cluster" };
    private static readonly uint[] _createAccountClusterFieldTags = new uint[] { 10 };
    public static CreateAccountCluster DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateAccountCluster DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateAccountCluster ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateAccountCluster__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateAccountCluster, CreateAccountCluster.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateAccountCluster__FieldAccessorTable; }
    }
    
    public const int AccountClusterFieldNumber = 1;
    private bool hasAccountCluster;
    private global::CmsApiSamples.Protocol.CMSApi.AccountCluster accountCluster_;
    public bool HasAccountCluster {
      get { return hasAccountCluster; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountCluster AccountCluster {
      get { return accountCluster_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountCluster.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createAccountClusterFieldNames;
      if (hasAccountCluster) {
        output.WriteMessage(1, field_names[0], AccountCluster);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountCluster) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, AccountCluster);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateAccountCluster ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateAccountCluster ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateAccountCluster ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateAccountCluster ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateAccountCluster ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateAccountCluster ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateAccountCluster ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateAccountCluster ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateAccountCluster ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateAccountCluster ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateAccountCluster MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateAccountCluster prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateAccountCluster, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateAccountCluster cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateAccountCluster result;
      
      private CreateAccountCluster PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateAccountCluster original = result;
          result = new CreateAccountCluster();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateAccountCluster MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster.Descriptor; }
      }
      
      public override CreateAccountCluster DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster.DefaultInstance; }
      }
      
      public override CreateAccountCluster BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateAccountCluster) {
          return MergeFrom((CreateAccountCluster) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateAccountCluster other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CreateAccountCluster.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountCluster) {
          MergeAccountCluster(other.AccountCluster);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createAccountClusterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createAccountClusterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.AccountCluster.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountCluster.CreateBuilder();
              if (result.hasAccountCluster) {
                subBuilder.MergeFrom(AccountCluster);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountCluster = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountCluster {
       get { return result.hasAccountCluster; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountCluster AccountCluster {
        get { return result.AccountCluster; }
        set { SetAccountCluster(value); }
      }
      public Builder SetAccountCluster(global::CmsApiSamples.Protocol.CMSApi.AccountCluster value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountCluster = true;
        result.accountCluster_ = value;
        return this;
      }
      public Builder SetAccountCluster(global::CmsApiSamples.Protocol.CMSApi.AccountCluster.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountCluster = true;
        result.accountCluster_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountCluster(global::CmsApiSamples.Protocol.CMSApi.AccountCluster value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountCluster &&
            result.accountCluster_ != global::CmsApiSamples.Protocol.CMSApi.AccountCluster.DefaultInstance) {
            result.accountCluster_ = global::CmsApiSamples.Protocol.CMSApi.AccountCluster.CreateBuilder(result.accountCluster_).MergeFrom(value).BuildPartial();
        } else {
          result.accountCluster_ = value;
        }
        result.hasAccountCluster = true;
        return this;
      }
      public Builder ClearAccountCluster() {
        PrepareBuilder();
        result.hasAccountCluster = false;
        result.accountCluster_ = null;
        return this;
      }
    }
    static CreateAccountCluster() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountCluster : pb::GeneratedMessage<UpdateAccountCluster, UpdateAccountCluster.Builder> {
    private UpdateAccountCluster() { }
    private static readonly UpdateAccountCluster defaultInstance = new UpdateAccountCluster().MakeReadOnly();
    private static readonly string[] _updateAccountClusterFieldNames = new string[] { "account_cluster", "original_account_cluster" };
    private static readonly uint[] _updateAccountClusterFieldTags = new uint[] { 10, 18 };
    public static UpdateAccountCluster DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountCluster DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountCluster ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountCluster__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountCluster, UpdateAccountCluster.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountCluster__FieldAccessorTable; }
    }
    
    public const int AccountClusterFieldNumber = 1;
    private bool hasAccountCluster;
    private global::CmsApiSamples.Protocol.CMSApi.AccountCluster accountCluster_;
    public bool HasAccountCluster {
      get { return hasAccountCluster; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountCluster AccountCluster {
      get { return accountCluster_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountCluster.DefaultInstance; }
    }
    
    public const int OriginalAccountClusterFieldNumber = 2;
    private bool hasOriginalAccountCluster;
    private global::CmsApiSamples.Protocol.CMSApi.AccountCluster originalAccountCluster_;
    public bool HasOriginalAccountCluster {
      get { return hasOriginalAccountCluster; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountCluster OriginalAccountCluster {
      get { return originalAccountCluster_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountCluster.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountClusterFieldNames;
      if (hasAccountCluster) {
        output.WriteMessage(1, field_names[0], AccountCluster);
      }
      if (hasOriginalAccountCluster) {
        output.WriteMessage(2, field_names[1], OriginalAccountCluster);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountCluster) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, AccountCluster);
      }
      if (hasOriginalAccountCluster) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, OriginalAccountCluster);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountCluster ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountCluster ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountCluster ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountCluster ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountCluster ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountCluster ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountCluster ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountCluster ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountCluster ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountCluster ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountCluster MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountCluster prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountCluster, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountCluster cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountCluster result;
      
      private UpdateAccountCluster PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountCluster original = result;
          result = new UpdateAccountCluster();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountCluster MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster.Descriptor; }
      }
      
      public override UpdateAccountCluster DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster.DefaultInstance; }
      }
      
      public override UpdateAccountCluster BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountCluster) {
          return MergeFrom((UpdateAccountCluster) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountCluster other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountCluster.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountCluster) {
          MergeAccountCluster(other.AccountCluster);
        }
        if (other.HasOriginalAccountCluster) {
          MergeOriginalAccountCluster(other.OriginalAccountCluster);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountClusterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountClusterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.AccountCluster.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountCluster.CreateBuilder();
              if (result.hasAccountCluster) {
                subBuilder.MergeFrom(AccountCluster);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountCluster = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.AccountCluster.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountCluster.CreateBuilder();
              if (result.hasOriginalAccountCluster) {
                subBuilder.MergeFrom(OriginalAccountCluster);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OriginalAccountCluster = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountCluster {
       get { return result.hasAccountCluster; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountCluster AccountCluster {
        get { return result.AccountCluster; }
        set { SetAccountCluster(value); }
      }
      public Builder SetAccountCluster(global::CmsApiSamples.Protocol.CMSApi.AccountCluster value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountCluster = true;
        result.accountCluster_ = value;
        return this;
      }
      public Builder SetAccountCluster(global::CmsApiSamples.Protocol.CMSApi.AccountCluster.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountCluster = true;
        result.accountCluster_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountCluster(global::CmsApiSamples.Protocol.CMSApi.AccountCluster value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountCluster &&
            result.accountCluster_ != global::CmsApiSamples.Protocol.CMSApi.AccountCluster.DefaultInstance) {
            result.accountCluster_ = global::CmsApiSamples.Protocol.CMSApi.AccountCluster.CreateBuilder(result.accountCluster_).MergeFrom(value).BuildPartial();
        } else {
          result.accountCluster_ = value;
        }
        result.hasAccountCluster = true;
        return this;
      }
      public Builder ClearAccountCluster() {
        PrepareBuilder();
        result.hasAccountCluster = false;
        result.accountCluster_ = null;
        return this;
      }
      
      public bool HasOriginalAccountCluster {
       get { return result.hasOriginalAccountCluster; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountCluster OriginalAccountCluster {
        get { return result.OriginalAccountCluster; }
        set { SetOriginalAccountCluster(value); }
      }
      public Builder SetOriginalAccountCluster(global::CmsApiSamples.Protocol.CMSApi.AccountCluster value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOriginalAccountCluster = true;
        result.originalAccountCluster_ = value;
        return this;
      }
      public Builder SetOriginalAccountCluster(global::CmsApiSamples.Protocol.CMSApi.AccountCluster.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOriginalAccountCluster = true;
        result.originalAccountCluster_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOriginalAccountCluster(global::CmsApiSamples.Protocol.CMSApi.AccountCluster value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOriginalAccountCluster &&
            result.originalAccountCluster_ != global::CmsApiSamples.Protocol.CMSApi.AccountCluster.DefaultInstance) {
            result.originalAccountCluster_ = global::CmsApiSamples.Protocol.CMSApi.AccountCluster.CreateBuilder(result.originalAccountCluster_).MergeFrom(value).BuildPartial();
        } else {
          result.originalAccountCluster_ = value;
        }
        result.hasOriginalAccountCluster = true;
        return this;
      }
      public Builder ClearOriginalAccountCluster() {
        PrepareBuilder();
        result.hasOriginalAccountCluster = false;
        result.originalAccountCluster_ = null;
        return this;
      }
    }
    static UpdateAccountCluster() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountClusterPriceOffsets : pb::GeneratedMessage<UpdateAccountClusterPriceOffsets, UpdateAccountClusterPriceOffsets.Builder> {
    private UpdateAccountClusterPriceOffsets() { }
    private static readonly UpdateAccountClusterPriceOffsets defaultInstance = new UpdateAccountClusterPriceOffsets().MakeReadOnly();
    private static readonly string[] _updateAccountClusterPriceOffsetsFieldNames = new string[] { "account_cluster_id", "offsets_to_remove", "offsets_to_set" };
    private static readonly uint[] _updateAccountClusterPriceOffsetsFieldTags = new uint[] { 10, 26, 18 };
    public static UpdateAccountClusterPriceOffsets DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountClusterPriceOffsets DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountClusterPriceOffsets ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountClusterPriceOffsets__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountClusterPriceOffsets, UpdateAccountClusterPriceOffsets.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountClusterPriceOffsets__FieldAccessorTable; }
    }
    
    public const int AccountClusterIdFieldNumber = 1;
    private bool hasAccountClusterId;
    private string accountClusterId_ = "";
    public bool HasAccountClusterId {
      get { return hasAccountClusterId; }
    }
    public string AccountClusterId {
      get { return accountClusterId_; }
    }
    
    public const int OffsetsToSetFieldNumber = 2;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset> offsetsToSet_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset> OffsetsToSetList {
      get { return offsetsToSet_; }
    }
    public int OffsetsToSetCount {
      get { return offsetsToSet_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset GetOffsetsToSet(int index) {
      return offsetsToSet_[index];
    }
    
    public const int OffsetsToRemoveFieldNumber = 3;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset> offsetsToRemove_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset> OffsetsToRemoveList {
      get { return offsetsToRemove_; }
    }
    public int OffsetsToRemoveCount {
      get { return offsetsToRemove_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset GetOffsetsToRemove(int index) {
      return offsetsToRemove_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountClusterPriceOffsetsFieldNames;
      if (hasAccountClusterId) {
        output.WriteString(1, field_names[0], AccountClusterId);
      }
      if (offsetsToSet_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], offsetsToSet_);
      }
      if (offsetsToRemove_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], offsetsToRemove_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountClusterId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AccountClusterId);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset element in OffsetsToSetList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset element in OffsetsToRemoveList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountClusterPriceOffsets ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsets ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsets ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsets ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsets ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsets ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsets ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsets ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsets ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsets ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountClusterPriceOffsets MakeReadOnly() {
      offsetsToSet_.MakeReadOnly();
      offsetsToRemove_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountClusterPriceOffsets prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountClusterPriceOffsets, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountClusterPriceOffsets cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountClusterPriceOffsets result;
      
      private UpdateAccountClusterPriceOffsets PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountClusterPriceOffsets original = result;
          result = new UpdateAccountClusterPriceOffsets();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountClusterPriceOffsets MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets.Descriptor; }
      }
      
      public override UpdateAccountClusterPriceOffsets DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets.DefaultInstance; }
      }
      
      public override UpdateAccountClusterPriceOffsets BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountClusterPriceOffsets) {
          return MergeFrom((UpdateAccountClusterPriceOffsets) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountClusterPriceOffsets other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsets.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountClusterId) {
          AccountClusterId = other.AccountClusterId;
        }
        if (other.offsetsToSet_.Count != 0) {
          result.offsetsToSet_.Add(other.offsetsToSet_);
        }
        if (other.offsetsToRemove_.Count != 0) {
          result.offsetsToRemove_.Add(other.offsetsToRemove_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountClusterPriceOffsetsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountClusterPriceOffsetsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccountClusterId = input.ReadString(ref result.accountClusterId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.offsetsToSet_, global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.offsetsToRemove_, global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountClusterId {
        get { return result.hasAccountClusterId; }
      }
      public string AccountClusterId {
        get { return result.AccountClusterId; }
        set { SetAccountClusterId(value); }
      }
      public Builder SetAccountClusterId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountClusterId = true;
        result.accountClusterId_ = value;
        return this;
      }
      public Builder ClearAccountClusterId() {
        PrepareBuilder();
        result.hasAccountClusterId = false;
        result.accountClusterId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset> OffsetsToSetList {
        get { return PrepareBuilder().offsetsToSet_; }
      }
      public int OffsetsToSetCount {
        get { return result.OffsetsToSetCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset GetOffsetsToSet(int index) {
        return result.GetOffsetsToSet(index);
      }
      public Builder SetOffsetsToSet(int index, global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.offsetsToSet_[index] = value;
        return this;
      }
      public Builder SetOffsetsToSet(int index, global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.offsetsToSet_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOffsetsToSet(global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.offsetsToSet_.Add(value);
        return this;
      }
      public Builder AddOffsetsToSet(global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.offsetsToSet_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOffsetsToSet(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset> values) {
        PrepareBuilder();
        result.offsetsToSet_.Add(values);
        return this;
      }
      public Builder ClearOffsetsToSet() {
        PrepareBuilder();
        result.offsetsToSet_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset> OffsetsToRemoveList {
        get { return PrepareBuilder().offsetsToRemove_; }
      }
      public int OffsetsToRemoveCount {
        get { return result.OffsetsToRemoveCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset GetOffsetsToRemove(int index) {
        return result.GetOffsetsToRemove(index);
      }
      public Builder SetOffsetsToRemove(int index, global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.offsetsToRemove_[index] = value;
        return this;
      }
      public Builder SetOffsetsToRemove(int index, global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.offsetsToRemove_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOffsetsToRemove(global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.offsetsToRemove_.Add(value);
        return this;
      }
      public Builder AddOffsetsToRemove(global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.offsetsToRemove_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOffsetsToRemove(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset> values) {
        PrepareBuilder();
        result.offsetsToRemove_.Add(values);
        return this;
      }
      public Builder ClearOffsetsToRemove() {
        PrepareBuilder();
        result.offsetsToRemove_.Clear();
        return this;
      }
    }
    static UpdateAccountClusterPriceOffsets() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountSettings : pb::GeneratedMessage<UpdateAccountSettings, UpdateAccountSettings.Builder> {
    private UpdateAccountSettings() { }
    private static readonly UpdateAccountSettings defaultInstance = new UpdateAccountSettings().MakeReadOnly();
    private static readonly string[] _updateAccountSettingsFieldNames = new string[] { "original_settings", "settings" };
    private static readonly uint[] _updateAccountSettingsFieldTags = new uint[] { 18, 10 };
    public static UpdateAccountSettings DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountSettings DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountSettings ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountSettings__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountSettings, UpdateAccountSettings.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountSettings__FieldAccessorTable; }
    }
    
    public const int SettingsFieldNumber = 1;
    private bool hasSettings;
    private global::CmsApiSamples.Protocol.CMSApi.AccountSettings settings_;
    public bool HasSettings {
      get { return hasSettings; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountSettings Settings {
      get { return settings_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountSettings.DefaultInstance; }
    }
    
    public const int OriginalSettingsFieldNumber = 2;
    private bool hasOriginalSettings;
    private global::CmsApiSamples.Protocol.CMSApi.AccountSettings originalSettings_;
    public bool HasOriginalSettings {
      get { return hasOriginalSettings; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountSettings OriginalSettings {
      get { return originalSettings_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountSettings.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSettings) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountSettingsFieldNames;
      if (hasSettings) {
        output.WriteMessage(1, field_names[1], Settings);
      }
      if (hasOriginalSettings) {
        output.WriteMessage(2, field_names[0], OriginalSettings);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSettings) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Settings);
      }
      if (hasOriginalSettings) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, OriginalSettings);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountSettings ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountSettings ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountSettings ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountSettings ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountSettings ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountSettings ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountSettings ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountSettings ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountSettings ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountSettings ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountSettings MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountSettings prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountSettings, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountSettings cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountSettings result;
      
      private UpdateAccountSettings PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountSettings original = result;
          result = new UpdateAccountSettings();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountSettings MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings.Descriptor; }
      }
      
      public override UpdateAccountSettings DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings.DefaultInstance; }
      }
      
      public override UpdateAccountSettings BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountSettings) {
          return MergeFrom((UpdateAccountSettings) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountSettings other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettings.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSettings) {
          MergeSettings(other.Settings);
        }
        if (other.HasOriginalSettings) {
          MergeOriginalSettings(other.OriginalSettings);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountSettingsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountSettingsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.AccountSettings.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountSettings.CreateBuilder();
              if (result.hasSettings) {
                subBuilder.MergeFrom(Settings);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Settings = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.AccountSettings.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountSettings.CreateBuilder();
              if (result.hasOriginalSettings) {
                subBuilder.MergeFrom(OriginalSettings);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OriginalSettings = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSettings {
       get { return result.hasSettings; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountSettings Settings {
        get { return result.Settings; }
        set { SetSettings(value); }
      }
      public Builder SetSettings(global::CmsApiSamples.Protocol.CMSApi.AccountSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSettings = true;
        result.settings_ = value;
        return this;
      }
      public Builder SetSettings(global::CmsApiSamples.Protocol.CMSApi.AccountSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSettings = true;
        result.settings_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSettings(global::CmsApiSamples.Protocol.CMSApi.AccountSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSettings &&
            result.settings_ != global::CmsApiSamples.Protocol.CMSApi.AccountSettings.DefaultInstance) {
            result.settings_ = global::CmsApiSamples.Protocol.CMSApi.AccountSettings.CreateBuilder(result.settings_).MergeFrom(value).BuildPartial();
        } else {
          result.settings_ = value;
        }
        result.hasSettings = true;
        return this;
      }
      public Builder ClearSettings() {
        PrepareBuilder();
        result.hasSettings = false;
        result.settings_ = null;
        return this;
      }
      
      public bool HasOriginalSettings {
       get { return result.hasOriginalSettings; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountSettings OriginalSettings {
        get { return result.OriginalSettings; }
        set { SetOriginalSettings(value); }
      }
      public Builder SetOriginalSettings(global::CmsApiSamples.Protocol.CMSApi.AccountSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOriginalSettings = true;
        result.originalSettings_ = value;
        return this;
      }
      public Builder SetOriginalSettings(global::CmsApiSamples.Protocol.CMSApi.AccountSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOriginalSettings = true;
        result.originalSettings_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOriginalSettings(global::CmsApiSamples.Protocol.CMSApi.AccountSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOriginalSettings &&
            result.originalSettings_ != global::CmsApiSamples.Protocol.CMSApi.AccountSettings.DefaultInstance) {
            result.originalSettings_ = global::CmsApiSamples.Protocol.CMSApi.AccountSettings.CreateBuilder(result.originalSettings_).MergeFrom(value).BuildPartial();
        } else {
          result.originalSettings_ = value;
        }
        result.hasOriginalSettings = true;
        return this;
      }
      public Builder ClearOriginalSettings() {
        PrepareBuilder();
        result.hasOriginalSettings = false;
        result.originalSettings_ = null;
        return this;
      }
    }
    static UpdateAccountSettings() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountGroupRequest : pb::GeneratedMessage<AccountGroupRequest, AccountGroupRequest.Builder> {
    private AccountGroupRequest() { }
    private static readonly AccountGroupRequest defaultInstance = new AccountGroupRequest().MakeReadOnly();
    private static readonly string[] _accountGroupRequestFieldNames = new string[] { "account_id" };
    private static readonly uint[] _accountGroupRequestFieldTags = new uint[] { 10 };
    public static AccountGroupRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountGroupRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountGroupRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountGroupRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountGroupRequest, AccountGroupRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountGroupRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private string accountId_ = "";
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public string AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountGroupRequestFieldNames;
      if (hasAccountId) {
        output.WriteString(1, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountGroupRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountGroupRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountGroupRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountGroupRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountGroupRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountGroupRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountGroupRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountGroupRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountGroupRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountGroupRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountGroupRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountGroupRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountGroupRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountGroupRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountGroupRequest result;
      
      private AccountGroupRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountGroupRequest original = result;
          result = new AccountGroupRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountGroupRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest.Descriptor; }
      }
      
      public override AccountGroupRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest.DefaultInstance; }
      }
      
      public override AccountGroupRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountGroupRequest) {
          return MergeFrom((AccountGroupRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountGroupRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountGroupRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountGroupRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountGroupRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccountId = input.ReadString(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public string AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = "";
        return this;
      }
    }
    static AccountGroupRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountRiskParameters : pb::GeneratedMessage<UpdateAccountRiskParameters, UpdateAccountRiskParameters.Builder> {
    private UpdateAccountRiskParameters() { }
    private static readonly UpdateAccountRiskParameters defaultInstance = new UpdateAccountRiskParameters().MakeReadOnly();
    private static readonly string[] _updateAccountRiskParametersFieldNames = new string[] { "original_risk_parameters", "risk_parameters" };
    private static readonly uint[] _updateAccountRiskParametersFieldTags = new uint[] { 18, 10 };
    public static UpdateAccountRiskParameters DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountRiskParameters DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountRiskParameters ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountRiskParameters__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountRiskParameters, UpdateAccountRiskParameters.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountRiskParameters__FieldAccessorTable; }
    }
    
    public const int RiskParametersFieldNumber = 1;
    private bool hasRiskParameters;
    private global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters riskParameters_;
    public bool HasRiskParameters {
      get { return hasRiskParameters; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters RiskParameters {
      get { return riskParameters_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.DefaultInstance; }
    }
    
    public const int OriginalRiskParametersFieldNumber = 2;
    private bool hasOriginalRiskParameters;
    private global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters originalRiskParameters_;
    public bool HasOriginalRiskParameters {
      get { return hasOriginalRiskParameters; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters OriginalRiskParameters {
      get { return originalRiskParameters_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRiskParameters) return false;
        if (!RiskParameters.IsInitialized) return false;
        if (HasOriginalRiskParameters) {
          if (!OriginalRiskParameters.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountRiskParametersFieldNames;
      if (hasRiskParameters) {
        output.WriteMessage(1, field_names[1], RiskParameters);
      }
      if (hasOriginalRiskParameters) {
        output.WriteMessage(2, field_names[0], OriginalRiskParameters);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRiskParameters) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RiskParameters);
      }
      if (hasOriginalRiskParameters) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, OriginalRiskParameters);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountRiskParameters ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountRiskParameters ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountRiskParameters ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountRiskParameters ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountRiskParameters ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountRiskParameters ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountRiskParameters ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountRiskParameters ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountRiskParameters ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountRiskParameters ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountRiskParameters MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountRiskParameters prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountRiskParameters, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountRiskParameters cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountRiskParameters result;
      
      private UpdateAccountRiskParameters PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountRiskParameters original = result;
          result = new UpdateAccountRiskParameters();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountRiskParameters MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters.Descriptor; }
      }
      
      public override UpdateAccountRiskParameters DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters.DefaultInstance; }
      }
      
      public override UpdateAccountRiskParameters BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountRiskParameters) {
          return MergeFrom((UpdateAccountRiskParameters) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountRiskParameters other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParameters.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRiskParameters) {
          MergeRiskParameters(other.RiskParameters);
        }
        if (other.HasOriginalRiskParameters) {
          MergeOriginalRiskParameters(other.OriginalRiskParameters);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountRiskParametersFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountRiskParametersFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.CreateBuilder();
              if (result.hasRiskParameters) {
                subBuilder.MergeFrom(RiskParameters);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RiskParameters = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.CreateBuilder();
              if (result.hasOriginalRiskParameters) {
                subBuilder.MergeFrom(OriginalRiskParameters);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OriginalRiskParameters = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRiskParameters {
       get { return result.hasRiskParameters; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters RiskParameters {
        get { return result.RiskParameters; }
        set { SetRiskParameters(value); }
      }
      public Builder SetRiskParameters(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRiskParameters = true;
        result.riskParameters_ = value;
        return this;
      }
      public Builder SetRiskParameters(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRiskParameters = true;
        result.riskParameters_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRiskParameters(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRiskParameters &&
            result.riskParameters_ != global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.DefaultInstance) {
            result.riskParameters_ = global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.CreateBuilder(result.riskParameters_).MergeFrom(value).BuildPartial();
        } else {
          result.riskParameters_ = value;
        }
        result.hasRiskParameters = true;
        return this;
      }
      public Builder ClearRiskParameters() {
        PrepareBuilder();
        result.hasRiskParameters = false;
        result.riskParameters_ = null;
        return this;
      }
      
      public bool HasOriginalRiskParameters {
       get { return result.hasOriginalRiskParameters; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters OriginalRiskParameters {
        get { return result.OriginalRiskParameters; }
        set { SetOriginalRiskParameters(value); }
      }
      public Builder SetOriginalRiskParameters(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOriginalRiskParameters = true;
        result.originalRiskParameters_ = value;
        return this;
      }
      public Builder SetOriginalRiskParameters(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOriginalRiskParameters = true;
        result.originalRiskParameters_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOriginalRiskParameters(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOriginalRiskParameters &&
            result.originalRiskParameters_ != global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.DefaultInstance) {
            result.originalRiskParameters_ = global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.CreateBuilder(result.originalRiskParameters_).MergeFrom(value).BuildPartial();
        } else {
          result.originalRiskParameters_ = value;
        }
        result.hasOriginalRiskParameters = true;
        return this;
      }
      public Builder ClearOriginalRiskParameters() {
        PrepareBuilder();
        result.hasOriginalRiskParameters = false;
        result.originalRiskParameters_ = null;
        return this;
      }
    }
    static UpdateAccountRiskParameters() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountRouteList : pb::GeneratedMessage<UpdateAccountRouteList, UpdateAccountRouteList.Builder> {
    private UpdateAccountRouteList() { }
    private static readonly UpdateAccountRouteList defaultInstance = new UpdateAccountRouteList().MakeReadOnly();
    private static readonly string[] _updateAccountRouteListFieldNames = new string[] { "account_id", "route_codes_to_remove", "routes_to_set" };
    private static readonly uint[] _updateAccountRouteListFieldTags = new uint[] { 10, 26, 18 };
    public static UpdateAccountRouteList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountRouteList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountRouteList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountRouteList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountRouteList, UpdateAccountRouteList.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountRouteList__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private string accountId_ = "";
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public string AccountId {
      get { return accountId_; }
    }
    
    public const int RoutesToSetFieldNumber = 2;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord> routesToSet_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord> RoutesToSetList {
      get { return routesToSet_; }
    }
    public int RoutesToSetCount {
      get { return routesToSet_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord GetRoutesToSet(int index) {
      return routesToSet_[index];
    }
    
    public const int RouteCodesToRemoveFieldNumber = 3;
    private pbc::PopsicleList<string> routeCodesToRemove_ = new pbc::PopsicleList<string>();
    public scg::IList<string> RouteCodesToRemoveList {
      get { return pbc::Lists.AsReadOnly(routeCodesToRemove_); }
    }
    public int RouteCodesToRemoveCount {
      get { return routeCodesToRemove_.Count; }
    }
    public string GetRouteCodesToRemove(int index) {
      return routeCodesToRemove_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord element in RoutesToSetList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountRouteListFieldNames;
      if (hasAccountId) {
        output.WriteString(1, field_names[0], AccountId);
      }
      if (routesToSet_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], routesToSet_);
      }
      if (routeCodesToRemove_.Count > 0) {
        output.WriteStringArray(3, field_names[1], routeCodesToRemove_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AccountId);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord element in RoutesToSetList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      {
        int dataSize = 0;
        foreach (string element in RouteCodesToRemoveList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * routeCodesToRemove_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountRouteList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountRouteList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountRouteList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountRouteList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountRouteList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountRouteList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountRouteList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountRouteList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountRouteList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountRouteList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountRouteList MakeReadOnly() {
      routesToSet_.MakeReadOnly();
      routeCodesToRemove_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountRouteList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountRouteList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountRouteList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountRouteList result;
      
      private UpdateAccountRouteList PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountRouteList original = result;
          result = new UpdateAccountRouteList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountRouteList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList.Descriptor; }
      }
      
      public override UpdateAccountRouteList DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList.DefaultInstance; }
      }
      
      public override UpdateAccountRouteList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountRouteList) {
          return MergeFrom((UpdateAccountRouteList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountRouteList other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.routesToSet_.Count != 0) {
          result.routesToSet_.Add(other.routesToSet_);
        }
        if (other.routeCodesToRemove_.Count != 0) {
          result.routeCodesToRemove_.Add(other.routeCodesToRemove_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountRouteListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountRouteListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccountId = input.ReadString(ref result.accountId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.routesToSet_, global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadStringArray(tag, field_name, result.routeCodesToRemove_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public string AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord> RoutesToSetList {
        get { return PrepareBuilder().routesToSet_; }
      }
      public int RoutesToSetCount {
        get { return result.RoutesToSetCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord GetRoutesToSet(int index) {
        return result.GetRoutesToSet(index);
      }
      public Builder SetRoutesToSet(int index, global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routesToSet_[index] = value;
        return this;
      }
      public Builder SetRoutesToSet(int index, global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.routesToSet_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRoutesToSet(global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routesToSet_.Add(value);
        return this;
      }
      public Builder AddRoutesToSet(global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.routesToSet_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRoutesToSet(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord> values) {
        PrepareBuilder();
        result.routesToSet_.Add(values);
        return this;
      }
      public Builder ClearRoutesToSet() {
        PrepareBuilder();
        result.routesToSet_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> RouteCodesToRemoveList {
        get { return PrepareBuilder().routeCodesToRemove_; }
      }
      public int RouteCodesToRemoveCount {
        get { return result.RouteCodesToRemoveCount; }
      }
      public string GetRouteCodesToRemove(int index) {
        return result.GetRouteCodesToRemove(index);
      }
      public Builder SetRouteCodesToRemove(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routeCodesToRemove_[index] = value;
        return this;
      }
      public Builder AddRouteCodesToRemove(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routeCodesToRemove_.Add(value);
        return this;
      }
      public Builder AddRangeRouteCodesToRemove(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.routeCodesToRemove_.Add(values);
        return this;
      }
      public Builder ClearRouteCodesToRemove() {
        PrepareBuilder();
        result.routeCodesToRemove_.Clear();
        return this;
      }
    }
    static UpdateAccountRouteList() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountMarketLimits : pb::GeneratedMessage<UpdateAccountMarketLimits, UpdateAccountMarketLimits.Builder> {
    private UpdateAccountMarketLimits() { }
    private static readonly UpdateAccountMarketLimits defaultInstance = new UpdateAccountMarketLimits().MakeReadOnly();
    private static readonly string[] _updateAccountMarketLimitsFieldNames = new string[] { "account_id", "market_limits", "original_market_limits" };
    private static readonly uint[] _updateAccountMarketLimitsFieldTags = new uint[] { 10, 18, 26 };
    public static UpdateAccountMarketLimits DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountMarketLimits DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountMarketLimits ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountMarketLimits__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountMarketLimits, UpdateAccountMarketLimits.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountMarketLimits__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private string accountId_ = "";
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public string AccountId {
      get { return accountId_; }
    }
    
    public const int MarketLimitsFieldNumber = 2;
    private bool hasMarketLimits;
    private global::CmsApiSamples.Protocol.CMSApi.MarketLimits marketLimits_;
    public bool HasMarketLimits {
      get { return hasMarketLimits; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.MarketLimits MarketLimits {
      get { return marketLimits_ ?? global::CmsApiSamples.Protocol.CMSApi.MarketLimits.DefaultInstance; }
    }
    
    public const int OriginalMarketLimitsFieldNumber = 3;
    private bool hasOriginalMarketLimits;
    private global::CmsApiSamples.Protocol.CMSApi.MarketLimits originalMarketLimits_;
    public bool HasOriginalMarketLimits {
      get { return hasOriginalMarketLimits; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.MarketLimits OriginalMarketLimits {
      get { return originalMarketLimits_ ?? global::CmsApiSamples.Protocol.CMSApi.MarketLimits.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasMarketLimits) {
          if (!MarketLimits.IsInitialized) return false;
        }
        if (HasOriginalMarketLimits) {
          if (!OriginalMarketLimits.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountMarketLimitsFieldNames;
      if (hasAccountId) {
        output.WriteString(1, field_names[0], AccountId);
      }
      if (hasMarketLimits) {
        output.WriteMessage(2, field_names[1], MarketLimits);
      }
      if (hasOriginalMarketLimits) {
        output.WriteMessage(3, field_names[2], OriginalMarketLimits);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AccountId);
      }
      if (hasMarketLimits) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, MarketLimits);
      }
      if (hasOriginalMarketLimits) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, OriginalMarketLimits);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountMarketLimits ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountMarketLimits ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountMarketLimits ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountMarketLimits ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountMarketLimits ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountMarketLimits ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountMarketLimits ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountMarketLimits ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountMarketLimits ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountMarketLimits ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountMarketLimits MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountMarketLimits prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountMarketLimits, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountMarketLimits cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountMarketLimits result;
      
      private UpdateAccountMarketLimits PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountMarketLimits original = result;
          result = new UpdateAccountMarketLimits();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountMarketLimits MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits.Descriptor; }
      }
      
      public override UpdateAccountMarketLimits DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits.DefaultInstance; }
      }
      
      public override UpdateAccountMarketLimits BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountMarketLimits) {
          return MergeFrom((UpdateAccountMarketLimits) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountMarketLimits other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimits.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasMarketLimits) {
          MergeMarketLimits(other.MarketLimits);
        }
        if (other.HasOriginalMarketLimits) {
          MergeOriginalMarketLimits(other.OriginalMarketLimits);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountMarketLimitsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountMarketLimitsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccountId = input.ReadString(ref result.accountId_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.MarketLimits.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.MarketLimits.CreateBuilder();
              if (result.hasMarketLimits) {
                subBuilder.MergeFrom(MarketLimits);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MarketLimits = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.MarketLimits.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.MarketLimits.CreateBuilder();
              if (result.hasOriginalMarketLimits) {
                subBuilder.MergeFrom(OriginalMarketLimits);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OriginalMarketLimits = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public string AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = "";
        return this;
      }
      
      public bool HasMarketLimits {
       get { return result.hasMarketLimits; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.MarketLimits MarketLimits {
        get { return result.MarketLimits; }
        set { SetMarketLimits(value); }
      }
      public Builder SetMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMarketLimits = true;
        result.marketLimits_ = value;
        return this;
      }
      public Builder SetMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimits.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMarketLimits = true;
        result.marketLimits_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMarketLimits &&
            result.marketLimits_ != global::CmsApiSamples.Protocol.CMSApi.MarketLimits.DefaultInstance) {
            result.marketLimits_ = global::CmsApiSamples.Protocol.CMSApi.MarketLimits.CreateBuilder(result.marketLimits_).MergeFrom(value).BuildPartial();
        } else {
          result.marketLimits_ = value;
        }
        result.hasMarketLimits = true;
        return this;
      }
      public Builder ClearMarketLimits() {
        PrepareBuilder();
        result.hasMarketLimits = false;
        result.marketLimits_ = null;
        return this;
      }
      
      public bool HasOriginalMarketLimits {
       get { return result.hasOriginalMarketLimits; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.MarketLimits OriginalMarketLimits {
        get { return result.OriginalMarketLimits; }
        set { SetOriginalMarketLimits(value); }
      }
      public Builder SetOriginalMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOriginalMarketLimits = true;
        result.originalMarketLimits_ = value;
        return this;
      }
      public Builder SetOriginalMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimits.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOriginalMarketLimits = true;
        result.originalMarketLimits_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOriginalMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOriginalMarketLimits &&
            result.originalMarketLimits_ != global::CmsApiSamples.Protocol.CMSApi.MarketLimits.DefaultInstance) {
            result.originalMarketLimits_ = global::CmsApiSamples.Protocol.CMSApi.MarketLimits.CreateBuilder(result.originalMarketLimits_).MergeFrom(value).BuildPartial();
        } else {
          result.originalMarketLimits_ = value;
        }
        result.hasOriginalMarketLimits = true;
        return this;
      }
      public Builder ClearOriginalMarketLimits() {
        PrepareBuilder();
        result.hasOriginalMarketLimits = false;
        result.originalMarketLimits_ = null;
        return this;
      }
    }
    static UpdateAccountMarketLimits() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RouteListRequest : pb::GeneratedMessage<RouteListRequest, RouteListRequest.Builder> {
    private RouteListRequest() { }
    private static readonly RouteListRequest defaultInstance = new RouteListRequest().MakeReadOnly();
    private static readonly string[] _routeListRequestFieldNames = new string[] { "account_id" };
    private static readonly uint[] _routeListRequestFieldTags = new uint[] { 10 };
    public static RouteListRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RouteListRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RouteListRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RouteListRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RouteListRequest, RouteListRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RouteListRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private string accountId_ = "";
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public string AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _routeListRequestFieldNames;
      if (hasAccountId) {
        output.WriteString(1, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RouteListRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RouteListRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RouteListRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RouteListRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RouteListRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RouteListRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RouteListRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RouteListRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RouteListRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RouteListRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RouteListRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RouteListRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RouteListRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RouteListRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RouteListRequest result;
      
      private RouteListRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RouteListRequest original = result;
          result = new RouteListRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RouteListRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RouteListRequest.Descriptor; }
      }
      
      public override RouteListRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RouteListRequest.DefaultInstance; }
      }
      
      public override RouteListRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RouteListRequest) {
          return MergeFrom((RouteListRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RouteListRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RouteListRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_routeListRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _routeListRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccountId = input.ReadString(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public string AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = "";
        return this;
      }
    }
    static RouteListRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateAccount : pb::GeneratedMessage<CreateAccount, CreateAccount.Builder> {
    private CreateAccount() { }
    private static readonly CreateAccount defaultInstance = new CreateAccount().MakeReadOnly();
    private static readonly string[] _createAccountFieldNames = new string[] { "account" };
    private static readonly uint[] _createAccountFieldTags = new uint[] { 10 };
    public static CreateAccount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateAccount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateAccount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateAccount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateAccount, CreateAccount.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateAccount__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private global::CmsApiSamples.Protocol.CMSApi.Account account_;
    public bool HasAccount {
      get { return hasAccount; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Account Account {
      get { return account_ ?? global::CmsApiSamples.Protocol.CMSApi.Account.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createAccountFieldNames;
      if (hasAccount) {
        output.WriteMessage(1, field_names[0], Account);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccount) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Account);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateAccount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateAccount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateAccount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateAccount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateAccount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateAccount MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateAccount prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateAccount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateAccount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateAccount result;
      
      private CreateAccount PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateAccount original = result;
          result = new CreateAccount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateAccount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateAccount.Descriptor; }
      }
      
      public override CreateAccount DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateAccount.DefaultInstance; }
      }
      
      public override CreateAccount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateAccount) {
          return MergeFrom((CreateAccount) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateAccount other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CreateAccount.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          MergeAccount(other.Account);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.Account.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Account.CreateBuilder();
              if (result.hasAccount) {
                subBuilder.MergeFrom(Account);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Account = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
       get { return result.hasAccount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Account Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(global::CmsApiSamples.Protocol.CMSApi.Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder SetAccount(global::CmsApiSamples.Protocol.CMSApi.Account.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccount(global::CmsApiSamples.Protocol.CMSApi.Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccount &&
            result.account_ != global::CmsApiSamples.Protocol.CMSApi.Account.DefaultInstance) {
            result.account_ = global::CmsApiSamples.Protocol.CMSApi.Account.CreateBuilder(result.account_).MergeFrom(value).BuildPartial();
        } else {
          result.account_ = value;
        }
        result.hasAccount = true;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = null;
        return this;
      }
    }
    static CreateAccount() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TradeRoutingResult : pb::GeneratedMessage<TradeRoutingResult, TradeRoutingResult.Builder> {
    private TradeRoutingResult() { }
    private static readonly TradeRoutingResult defaultInstance = new TradeRoutingResult().MakeReadOnly();
    private static readonly string[] _tradeRoutingResultFieldNames = new string[] { "account_scope_result", "error_message", "lookup_property_list_result", "operation_status", "order_scope_result", "request_id" };
    private static readonly uint[] _tradeRoutingResultFieldTags = new uint[] { 34, 26, 50, 16, 42, 8 };
    public static TradeRoutingResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TradeRoutingResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TradeRoutingResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradeRoutingResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TradeRoutingResult, TradeRoutingResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradeRoutingResult__FieldAccessorTable; }
    }
    
    public const int RequestIdFieldNumber = 1;
    private bool hasRequestId;
    private uint requestId_;
    public bool HasRequestId {
      get { return hasRequestId; }
    }
    [global::System.CLSCompliant(false)]
    public uint RequestId {
      get { return requestId_; }
    }
    
    public const int OperationStatusFieldNumber = 2;
    private bool hasOperationStatus;
    private uint operationStatus_;
    public bool HasOperationStatus {
      get { return hasOperationStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint OperationStatus {
      get { return operationStatus_; }
    }
    
    public const int ErrorMessageFieldNumber = 3;
    private bool hasErrorMessage;
    private global::CmsApiSamples.Protocol.CMSApi.Text errorMessage_;
    public bool HasErrorMessage {
      get { return hasErrorMessage; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text ErrorMessage {
      get { return errorMessage_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public const int AccountScopeResultFieldNumber = 4;
    private bool hasAccountScopeResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult accountScopeResult_;
    public bool HasAccountScopeResult {
      get { return hasAccountScopeResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult AccountScopeResult {
      get { return accountScopeResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult.DefaultInstance; }
    }
    
    public const int OrderScopeResultFieldNumber = 5;
    private bool hasOrderScopeResult;
    private global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult orderScopeResult_;
    public bool HasOrderScopeResult {
      get { return hasOrderScopeResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult OrderScopeResult {
      get { return orderScopeResult_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult.DefaultInstance; }
    }
    
    public const int LookupPropertyListResultFieldNumber = 6;
    private bool hasLookupPropertyListResult;
    private global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult lookupPropertyListResult_;
    public bool HasLookupPropertyListResult {
      get { return hasLookupPropertyListResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult LookupPropertyListResult {
      get { return lookupPropertyListResult_ ?? global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRequestId) return false;
        if (!hasOperationStatus) return false;
        if (HasErrorMessage) {
          if (!ErrorMessage.IsInitialized) return false;
        }
        if (HasAccountScopeResult) {
          if (!AccountScopeResult.IsInitialized) return false;
        }
        if (HasOrderScopeResult) {
          if (!OrderScopeResult.IsInitialized) return false;
        }
        if (HasLookupPropertyListResult) {
          if (!LookupPropertyListResult.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tradeRoutingResultFieldNames;
      if (hasRequestId) {
        output.WriteUInt32(1, field_names[5], RequestId);
      }
      if (hasOperationStatus) {
        output.WriteUInt32(2, field_names[3], OperationStatus);
      }
      if (hasErrorMessage) {
        output.WriteMessage(3, field_names[1], ErrorMessage);
      }
      if (hasAccountScopeResult) {
        output.WriteMessage(4, field_names[0], AccountScopeResult);
      }
      if (hasOrderScopeResult) {
        output.WriteMessage(5, field_names[4], OrderScopeResult);
      }
      if (hasLookupPropertyListResult) {
        output.WriteMessage(6, field_names[2], LookupPropertyListResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, RequestId);
      }
      if (hasOperationStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, OperationStatus);
      }
      if (hasErrorMessage) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, ErrorMessage);
      }
      if (hasAccountScopeResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, AccountScopeResult);
      }
      if (hasOrderScopeResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, OrderScopeResult);
      }
      if (hasLookupPropertyListResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, LookupPropertyListResult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TradeRoutingResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradeRoutingResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradeRoutingResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradeRoutingResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradeRoutingResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradeRoutingResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TradeRoutingResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TradeRoutingResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TradeRoutingResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradeRoutingResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TradeRoutingResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TradeRoutingResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TradeRoutingResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TradeRoutingResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TradeRoutingResult result;
      
      private TradeRoutingResult PrepareBuilder() {
        if (resultIsReadOnly) {
          TradeRoutingResult original = result;
          result = new TradeRoutingResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TradeRoutingResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradeRoutingResult.Descriptor; }
      }
      
      public override TradeRoutingResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradeRoutingResult.DefaultInstance; }
      }
      
      public override TradeRoutingResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TradeRoutingResult) {
          return MergeFrom((TradeRoutingResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TradeRoutingResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.TradeRoutingResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRequestId) {
          RequestId = other.RequestId;
        }
        if (other.HasOperationStatus) {
          OperationStatus = other.OperationStatus;
        }
        if (other.HasErrorMessage) {
          MergeErrorMessage(other.ErrorMessage);
        }
        if (other.HasAccountScopeResult) {
          MergeAccountScopeResult(other.AccountScopeResult);
        }
        if (other.HasOrderScopeResult) {
          MergeOrderScopeResult(other.OrderScopeResult);
        }
        if (other.HasLookupPropertyListResult) {
          MergeLookupPropertyListResult(other.LookupPropertyListResult);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tradeRoutingResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tradeRoutingResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRequestId = input.ReadUInt32(ref result.requestId_);
              break;
            }
            case 16: {
              result.hasOperationStatus = input.ReadUInt32(ref result.operationStatus_);
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasErrorMessage) {
                subBuilder.MergeFrom(ErrorMessage);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ErrorMessage = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult.CreateBuilder();
              if (result.hasAccountScopeResult) {
                subBuilder.MergeFrom(AccountScopeResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountScopeResult = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult.CreateBuilder();
              if (result.hasOrderScopeResult) {
                subBuilder.MergeFrom(OrderScopeResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderScopeResult = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult.CreateBuilder();
              if (result.hasLookupPropertyListResult) {
                subBuilder.MergeFrom(LookupPropertyListResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              LookupPropertyListResult = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRequestId {
        get { return result.hasRequestId; }
      }
      [global::System.CLSCompliant(false)]
      public uint RequestId {
        get { return result.RequestId; }
        set { SetRequestId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRequestId(uint value) {
        PrepareBuilder();
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder ClearRequestId() {
        PrepareBuilder();
        result.hasRequestId = false;
        result.requestId_ = 0;
        return this;
      }
      
      public bool HasOperationStatus {
        get { return result.hasOperationStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint OperationStatus {
        get { return result.OperationStatus; }
        set { SetOperationStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOperationStatus(uint value) {
        PrepareBuilder();
        result.hasOperationStatus = true;
        result.operationStatus_ = value;
        return this;
      }
      public Builder ClearOperationStatus() {
        PrepareBuilder();
        result.hasOperationStatus = false;
        result.operationStatus_ = 0;
        return this;
      }
      
      public bool HasErrorMessage {
       get { return result.hasErrorMessage; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text ErrorMessage {
        get { return result.ErrorMessage; }
        set { SetErrorMessage(value); }
      }
      public Builder SetErrorMessage(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder SetErrorMessage(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = builderForValue.Build();
        return this;
      }
      public Builder MergeErrorMessage(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasErrorMessage &&
            result.errorMessage_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.errorMessage_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.errorMessage_).MergeFrom(value).BuildPartial();
        } else {
          result.errorMessage_ = value;
        }
        result.hasErrorMessage = true;
        return this;
      }
      public Builder ClearErrorMessage() {
        PrepareBuilder();
        result.hasErrorMessage = false;
        result.errorMessage_ = null;
        return this;
      }
      
      public bool HasAccountScopeResult {
       get { return result.hasAccountScopeResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult AccountScopeResult {
        get { return result.AccountScopeResult; }
        set { SetAccountScopeResult(value); }
      }
      public Builder SetAccountScopeResult(global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountScopeResult = true;
        result.accountScopeResult_ = value;
        return this;
      }
      public Builder SetAccountScopeResult(global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountScopeResult = true;
        result.accountScopeResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountScopeResult(global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountScopeResult &&
            result.accountScopeResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult.DefaultInstance) {
            result.accountScopeResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult.CreateBuilder(result.accountScopeResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountScopeResult_ = value;
        }
        result.hasAccountScopeResult = true;
        return this;
      }
      public Builder ClearAccountScopeResult() {
        PrepareBuilder();
        result.hasAccountScopeResult = false;
        result.accountScopeResult_ = null;
        return this;
      }
      
      public bool HasOrderScopeResult {
       get { return result.hasOrderScopeResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult OrderScopeResult {
        get { return result.OrderScopeResult; }
        set { SetOrderScopeResult(value); }
      }
      public Builder SetOrderScopeResult(global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderScopeResult = true;
        result.orderScopeResult_ = value;
        return this;
      }
      public Builder SetOrderScopeResult(global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderScopeResult = true;
        result.orderScopeResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderScopeResult(global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderScopeResult &&
            result.orderScopeResult_ != global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult.DefaultInstance) {
            result.orderScopeResult_ = global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult.CreateBuilder(result.orderScopeResult_).MergeFrom(value).BuildPartial();
        } else {
          result.orderScopeResult_ = value;
        }
        result.hasOrderScopeResult = true;
        return this;
      }
      public Builder ClearOrderScopeResult() {
        PrepareBuilder();
        result.hasOrderScopeResult = false;
        result.orderScopeResult_ = null;
        return this;
      }
      
      public bool HasLookupPropertyListResult {
       get { return result.hasLookupPropertyListResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult LookupPropertyListResult {
        get { return result.LookupPropertyListResult; }
        set { SetLookupPropertyListResult(value); }
      }
      public Builder SetLookupPropertyListResult(global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLookupPropertyListResult = true;
        result.lookupPropertyListResult_ = value;
        return this;
      }
      public Builder SetLookupPropertyListResult(global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLookupPropertyListResult = true;
        result.lookupPropertyListResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLookupPropertyListResult(global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLookupPropertyListResult &&
            result.lookupPropertyListResult_ != global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult.DefaultInstance) {
            result.lookupPropertyListResult_ = global::CmsApiSamples.Protocol.CMSApi.LookupPropertyListResult.CreateBuilder(result.lookupPropertyListResult_).MergeFrom(value).BuildPartial();
        } else {
          result.lookupPropertyListResult_ = value;
        }
        result.hasLookupPropertyListResult = true;
        return this;
      }
      public Builder ClearLookupPropertyListResult() {
        PrepareBuilder();
        result.hasLookupPropertyListResult = false;
        result.lookupPropertyListResult_ = null;
        return this;
      }
    }
    static TradeRoutingResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountScopeResult : pb::GeneratedMessage<AccountScopeResult, AccountScopeResult.Builder> {
    private AccountScopeResult() { }
    private static readonly AccountScopeResult defaultInstance = new AccountScopeResult().MakeReadOnly();
    private static readonly string[] _accountScopeResultFieldNames = new string[] { "account_cluster_result", "account_collateral_result", "account_equity_result", "account_exchange_groups_result", "account_group_result", "account_info_result", "account_market_limits_result", "account_positions_result", "account_risk_parameters_result", "account_route_list_result", "account_search_result", "account_settings_result", "account_type_override_list_result", "account_user_authorization_list_result", "balance_records_result", "clone_account_result", "create_account_cluster_result", "create_account_result", "create_balance_record_result", "remove_account_result", "restore_account_result", "route_list_result", "update_account_cluster_price_offsets_result", "update_account_cluster_result", "update_account_market_limits_result", "update_account_result", "update_account_risk_parameters_result", "update_account_route_list_result", "update_account_settings_result", "update_account_type_override_list_result", "update_account_user_authorization_list_result", "update_balance_record_result", "update_risk_parameters_result" };
    private static readonly uint[] _accountScopeResultFieldTags = new uint[] { 202, 122, 114, 90, 154, 10, 98, 106, 42, 66, 58, 82, 242, 74, 18, 130, 210, 194, 26, 266, 234, 170, 226, 218, 186, 138, 162, 178, 146, 250, 258, 34, 50 };
    public static AccountScopeResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountScopeResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountScopeResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountScopeResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountScopeResult, AccountScopeResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountScopeResult__FieldAccessorTable; }
    }
    
    public const int AccountInfoResultFieldNumber = 1;
    private bool hasAccountInfoResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult accountInfoResult_;
    public bool HasAccountInfoResult {
      get { return hasAccountInfoResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult AccountInfoResult {
      get { return accountInfoResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult.DefaultInstance; }
    }
    
    public const int BalanceRecordsResultFieldNumber = 2;
    private bool hasBalanceRecordsResult;
    private global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult balanceRecordsResult_;
    public bool HasBalanceRecordsResult {
      get { return hasBalanceRecordsResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult BalanceRecordsResult {
      get { return balanceRecordsResult_ ?? global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult.DefaultInstance; }
    }
    
    public const int CreateBalanceRecordResultFieldNumber = 3;
    private bool hasCreateBalanceRecordResult;
    private global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult createBalanceRecordResult_;
    public bool HasCreateBalanceRecordResult {
      get { return hasCreateBalanceRecordResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult CreateBalanceRecordResult {
      get { return createBalanceRecordResult_ ?? global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult.DefaultInstance; }
    }
    
    public const int UpdateBalanceRecordResultFieldNumber = 4;
    private bool hasUpdateBalanceRecordResult;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult updateBalanceRecordResult_;
    public bool HasUpdateBalanceRecordResult {
      get { return hasUpdateBalanceRecordResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult UpdateBalanceRecordResult {
      get { return updateBalanceRecordResult_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult.DefaultInstance; }
    }
    
    public const int AccountRiskParametersResultFieldNumber = 5;
    private bool hasAccountRiskParametersResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult accountRiskParametersResult_;
    public bool HasAccountRiskParametersResult {
      get { return hasAccountRiskParametersResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult AccountRiskParametersResult {
      get { return accountRiskParametersResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult.DefaultInstance; }
    }
    
    public const int UpdateRiskParametersResultFieldNumber = 6;
    private bool hasUpdateRiskParametersResult;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult updateRiskParametersResult_;
    public bool HasUpdateRiskParametersResult {
      get { return hasUpdateRiskParametersResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult UpdateRiskParametersResult {
      get { return updateRiskParametersResult_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult.DefaultInstance; }
    }
    
    public const int AccountSearchResultFieldNumber = 7;
    private bool hasAccountSearchResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult accountSearchResult_;
    public bool HasAccountSearchResult {
      get { return hasAccountSearchResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult AccountSearchResult {
      get { return accountSearchResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult.DefaultInstance; }
    }
    
    public const int AccountRouteListResultFieldNumber = 8;
    private bool hasAccountRouteListResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult accountRouteListResult_;
    public bool HasAccountRouteListResult {
      get { return hasAccountRouteListResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult AccountRouteListResult {
      get { return accountRouteListResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult.DefaultInstance; }
    }
    
    public const int AccountUserAuthorizationListResultFieldNumber = 9;
    private bool hasAccountUserAuthorizationListResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult accountUserAuthorizationListResult_;
    public bool HasAccountUserAuthorizationListResult {
      get { return hasAccountUserAuthorizationListResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult AccountUserAuthorizationListResult {
      get { return accountUserAuthorizationListResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult.DefaultInstance; }
    }
    
    public const int AccountSettingsResultFieldNumber = 10;
    private bool hasAccountSettingsResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult accountSettingsResult_;
    public bool HasAccountSettingsResult {
      get { return hasAccountSettingsResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult AccountSettingsResult {
      get { return accountSettingsResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult.DefaultInstance; }
    }
    
    public const int AccountExchangeGroupsResultFieldNumber = 11;
    private bool hasAccountExchangeGroupsResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult accountExchangeGroupsResult_;
    public bool HasAccountExchangeGroupsResult {
      get { return hasAccountExchangeGroupsResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult AccountExchangeGroupsResult {
      get { return accountExchangeGroupsResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult.DefaultInstance; }
    }
    
    public const int AccountMarketLimitsResultFieldNumber = 12;
    private bool hasAccountMarketLimitsResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult accountMarketLimitsResult_;
    public bool HasAccountMarketLimitsResult {
      get { return hasAccountMarketLimitsResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult AccountMarketLimitsResult {
      get { return accountMarketLimitsResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult.DefaultInstance; }
    }
    
    public const int AccountPositionsResultFieldNumber = 13;
    private bool hasAccountPositionsResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult accountPositionsResult_;
    public bool HasAccountPositionsResult {
      get { return hasAccountPositionsResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult AccountPositionsResult {
      get { return accountPositionsResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult.DefaultInstance; }
    }
    
    public const int AccountEquityResultFieldNumber = 14;
    private bool hasAccountEquityResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult accountEquityResult_;
    public bool HasAccountEquityResult {
      get { return hasAccountEquityResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult AccountEquityResult {
      get { return accountEquityResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult.DefaultInstance; }
    }
    
    public const int AccountCollateralResultFieldNumber = 15;
    private bool hasAccountCollateralResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult accountCollateralResult_;
    public bool HasAccountCollateralResult {
      get { return hasAccountCollateralResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult AccountCollateralResult {
      get { return accountCollateralResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult.DefaultInstance; }
    }
    
    public const int CloneAccountResultFieldNumber = 16;
    private bool hasCloneAccountResult;
    private global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult cloneAccountResult_;
    public bool HasCloneAccountResult {
      get { return hasCloneAccountResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult CloneAccountResult {
      get { return cloneAccountResult_ ?? global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult.DefaultInstance; }
    }
    
    public const int UpdateAccountResultFieldNumber = 17;
    private bool hasUpdateAccountResult;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult updateAccountResult_;
    public bool HasUpdateAccountResult {
      get { return hasUpdateAccountResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult UpdateAccountResult {
      get { return updateAccountResult_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult.DefaultInstance; }
    }
    
    public const int UpdateAccountSettingsResultFieldNumber = 18;
    private bool hasUpdateAccountSettingsResult;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult updateAccountSettingsResult_;
    public bool HasUpdateAccountSettingsResult {
      get { return hasUpdateAccountSettingsResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult UpdateAccountSettingsResult {
      get { return updateAccountSettingsResult_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult.DefaultInstance; }
    }
    
    public const int AccountGroupResultFieldNumber = 19;
    private bool hasAccountGroupResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult accountGroupResult_;
    public bool HasAccountGroupResult {
      get { return hasAccountGroupResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult AccountGroupResult {
      get { return accountGroupResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult.DefaultInstance; }
    }
    
    public const int UpdateAccountRiskParametersResultFieldNumber = 20;
    private bool hasUpdateAccountRiskParametersResult;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult updateAccountRiskParametersResult_;
    public bool HasUpdateAccountRiskParametersResult {
      get { return hasUpdateAccountRiskParametersResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult UpdateAccountRiskParametersResult {
      get { return updateAccountRiskParametersResult_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult.DefaultInstance; }
    }
    
    public const int RouteListResultFieldNumber = 21;
    private bool hasRouteListResult;
    private global::CmsApiSamples.Protocol.CMSApi.RouteListResult routeListResult_;
    public bool HasRouteListResult {
      get { return hasRouteListResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RouteListResult RouteListResult {
      get { return routeListResult_ ?? global::CmsApiSamples.Protocol.CMSApi.RouteListResult.DefaultInstance; }
    }
    
    public const int UpdateAccountRouteListResultFieldNumber = 22;
    private bool hasUpdateAccountRouteListResult;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult updateAccountRouteListResult_;
    public bool HasUpdateAccountRouteListResult {
      get { return hasUpdateAccountRouteListResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult UpdateAccountRouteListResult {
      get { return updateAccountRouteListResult_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult.DefaultInstance; }
    }
    
    public const int UpdateAccountMarketLimitsResultFieldNumber = 23;
    private bool hasUpdateAccountMarketLimitsResult;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult updateAccountMarketLimitsResult_;
    public bool HasUpdateAccountMarketLimitsResult {
      get { return hasUpdateAccountMarketLimitsResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult UpdateAccountMarketLimitsResult {
      get { return updateAccountMarketLimitsResult_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult.DefaultInstance; }
    }
    
    public const int CreateAccountResultFieldNumber = 24;
    private bool hasCreateAccountResult;
    private global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult createAccountResult_;
    public bool HasCreateAccountResult {
      get { return hasCreateAccountResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult CreateAccountResult {
      get { return createAccountResult_ ?? global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult.DefaultInstance; }
    }
    
    public const int AccountClusterResultFieldNumber = 25;
    private bool hasAccountClusterResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult accountClusterResult_;
    public bool HasAccountClusterResult {
      get { return hasAccountClusterResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult AccountClusterResult {
      get { return accountClusterResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult.DefaultInstance; }
    }
    
    public const int CreateAccountClusterResultFieldNumber = 26;
    private bool hasCreateAccountClusterResult;
    private global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult createAccountClusterResult_;
    public bool HasCreateAccountClusterResult {
      get { return hasCreateAccountClusterResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult CreateAccountClusterResult {
      get { return createAccountClusterResult_ ?? global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult.DefaultInstance; }
    }
    
    public const int UpdateAccountClusterResultFieldNumber = 27;
    private bool hasUpdateAccountClusterResult;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult updateAccountClusterResult_;
    public bool HasUpdateAccountClusterResult {
      get { return hasUpdateAccountClusterResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult UpdateAccountClusterResult {
      get { return updateAccountClusterResult_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult.DefaultInstance; }
    }
    
    public const int UpdateAccountClusterPriceOffsetsResultFieldNumber = 28;
    private bool hasUpdateAccountClusterPriceOffsetsResult;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult updateAccountClusterPriceOffsetsResult_;
    public bool HasUpdateAccountClusterPriceOffsetsResult {
      get { return hasUpdateAccountClusterPriceOffsetsResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult UpdateAccountClusterPriceOffsetsResult {
      get { return updateAccountClusterPriceOffsetsResult_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult.DefaultInstance; }
    }
    
    public const int RestoreAccountResultFieldNumber = 29;
    private bool hasRestoreAccountResult;
    private global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult restoreAccountResult_;
    public bool HasRestoreAccountResult {
      get { return hasRestoreAccountResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult RestoreAccountResult {
      get { return restoreAccountResult_ ?? global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult.DefaultInstance; }
    }
    
    public const int AccountTypeOverrideListResultFieldNumber = 30;
    private bool hasAccountTypeOverrideListResult;
    private global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult accountTypeOverrideListResult_;
    public bool HasAccountTypeOverrideListResult {
      get { return hasAccountTypeOverrideListResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult AccountTypeOverrideListResult {
      get { return accountTypeOverrideListResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult.DefaultInstance; }
    }
    
    public const int UpdateAccountTypeOverrideListResultFieldNumber = 31;
    private bool hasUpdateAccountTypeOverrideListResult;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult updateAccountTypeOverrideListResult_;
    public bool HasUpdateAccountTypeOverrideListResult {
      get { return hasUpdateAccountTypeOverrideListResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult UpdateAccountTypeOverrideListResult {
      get { return updateAccountTypeOverrideListResult_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult.DefaultInstance; }
    }
    
    public const int UpdateAccountUserAuthorizationListResultFieldNumber = 32;
    private bool hasUpdateAccountUserAuthorizationListResult;
    private global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult updateAccountUserAuthorizationListResult_;
    public bool HasUpdateAccountUserAuthorizationListResult {
      get { return hasUpdateAccountUserAuthorizationListResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult UpdateAccountUserAuthorizationListResult {
      get { return updateAccountUserAuthorizationListResult_ ?? global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult.DefaultInstance; }
    }
    
    public const int RemoveAccountResultFieldNumber = 33;
    private bool hasRemoveAccountResult;
    private global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult removeAccountResult_;
    public bool HasRemoveAccountResult {
      get { return hasRemoveAccountResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult RemoveAccountResult {
      get { return removeAccountResult_ ?? global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAccountInfoResult) {
          if (!AccountInfoResult.IsInitialized) return false;
        }
        if (HasBalanceRecordsResult) {
          if (!BalanceRecordsResult.IsInitialized) return false;
        }
        if (HasCreateBalanceRecordResult) {
          if (!CreateBalanceRecordResult.IsInitialized) return false;
        }
        if (HasAccountRiskParametersResult) {
          if (!AccountRiskParametersResult.IsInitialized) return false;
        }
        if (HasAccountSearchResult) {
          if (!AccountSearchResult.IsInitialized) return false;
        }
        if (HasAccountRouteListResult) {
          if (!AccountRouteListResult.IsInitialized) return false;
        }
        if (HasAccountSettingsResult) {
          if (!AccountSettingsResult.IsInitialized) return false;
        }
        if (HasAccountExchangeGroupsResult) {
          if (!AccountExchangeGroupsResult.IsInitialized) return false;
        }
        if (HasAccountMarketLimitsResult) {
          if (!AccountMarketLimitsResult.IsInitialized) return false;
        }
        if (HasAccountPositionsResult) {
          if (!AccountPositionsResult.IsInitialized) return false;
        }
        if (HasAccountEquityResult) {
          if (!AccountEquityResult.IsInitialized) return false;
        }
        if (HasAccountCollateralResult) {
          if (!AccountCollateralResult.IsInitialized) return false;
        }
        if (HasCloneAccountResult) {
          if (!CloneAccountResult.IsInitialized) return false;
        }
        if (HasRouteListResult) {
          if (!RouteListResult.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountScopeResultFieldNames;
      if (hasAccountInfoResult) {
        output.WriteMessage(1, field_names[5], AccountInfoResult);
      }
      if (hasBalanceRecordsResult) {
        output.WriteMessage(2, field_names[14], BalanceRecordsResult);
      }
      if (hasCreateBalanceRecordResult) {
        output.WriteMessage(3, field_names[18], CreateBalanceRecordResult);
      }
      if (hasUpdateBalanceRecordResult) {
        output.WriteMessage(4, field_names[31], UpdateBalanceRecordResult);
      }
      if (hasAccountRiskParametersResult) {
        output.WriteMessage(5, field_names[8], AccountRiskParametersResult);
      }
      if (hasUpdateRiskParametersResult) {
        output.WriteMessage(6, field_names[32], UpdateRiskParametersResult);
      }
      if (hasAccountSearchResult) {
        output.WriteMessage(7, field_names[10], AccountSearchResult);
      }
      if (hasAccountRouteListResult) {
        output.WriteMessage(8, field_names[9], AccountRouteListResult);
      }
      if (hasAccountUserAuthorizationListResult) {
        output.WriteMessage(9, field_names[13], AccountUserAuthorizationListResult);
      }
      if (hasAccountSettingsResult) {
        output.WriteMessage(10, field_names[11], AccountSettingsResult);
      }
      if (hasAccountExchangeGroupsResult) {
        output.WriteMessage(11, field_names[3], AccountExchangeGroupsResult);
      }
      if (hasAccountMarketLimitsResult) {
        output.WriteMessage(12, field_names[6], AccountMarketLimitsResult);
      }
      if (hasAccountPositionsResult) {
        output.WriteMessage(13, field_names[7], AccountPositionsResult);
      }
      if (hasAccountEquityResult) {
        output.WriteMessage(14, field_names[2], AccountEquityResult);
      }
      if (hasAccountCollateralResult) {
        output.WriteMessage(15, field_names[1], AccountCollateralResult);
      }
      if (hasCloneAccountResult) {
        output.WriteMessage(16, field_names[15], CloneAccountResult);
      }
      if (hasUpdateAccountResult) {
        output.WriteMessage(17, field_names[25], UpdateAccountResult);
      }
      if (hasUpdateAccountSettingsResult) {
        output.WriteMessage(18, field_names[28], UpdateAccountSettingsResult);
      }
      if (hasAccountGroupResult) {
        output.WriteMessage(19, field_names[4], AccountGroupResult);
      }
      if (hasUpdateAccountRiskParametersResult) {
        output.WriteMessage(20, field_names[26], UpdateAccountRiskParametersResult);
      }
      if (hasRouteListResult) {
        output.WriteMessage(21, field_names[21], RouteListResult);
      }
      if (hasUpdateAccountRouteListResult) {
        output.WriteMessage(22, field_names[27], UpdateAccountRouteListResult);
      }
      if (hasUpdateAccountMarketLimitsResult) {
        output.WriteMessage(23, field_names[24], UpdateAccountMarketLimitsResult);
      }
      if (hasCreateAccountResult) {
        output.WriteMessage(24, field_names[17], CreateAccountResult);
      }
      if (hasAccountClusterResult) {
        output.WriteMessage(25, field_names[0], AccountClusterResult);
      }
      if (hasCreateAccountClusterResult) {
        output.WriteMessage(26, field_names[16], CreateAccountClusterResult);
      }
      if (hasUpdateAccountClusterResult) {
        output.WriteMessage(27, field_names[23], UpdateAccountClusterResult);
      }
      if (hasUpdateAccountClusterPriceOffsetsResult) {
        output.WriteMessage(28, field_names[22], UpdateAccountClusterPriceOffsetsResult);
      }
      if (hasRestoreAccountResult) {
        output.WriteMessage(29, field_names[20], RestoreAccountResult);
      }
      if (hasAccountTypeOverrideListResult) {
        output.WriteMessage(30, field_names[12], AccountTypeOverrideListResult);
      }
      if (hasUpdateAccountTypeOverrideListResult) {
        output.WriteMessage(31, field_names[29], UpdateAccountTypeOverrideListResult);
      }
      if (hasUpdateAccountUserAuthorizationListResult) {
        output.WriteMessage(32, field_names[30], UpdateAccountUserAuthorizationListResult);
      }
      if (hasRemoveAccountResult) {
        output.WriteMessage(33, field_names[19], RemoveAccountResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountInfoResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, AccountInfoResult);
      }
      if (hasBalanceRecordsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, BalanceRecordsResult);
      }
      if (hasCreateBalanceRecordResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, CreateBalanceRecordResult);
      }
      if (hasUpdateBalanceRecordResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, UpdateBalanceRecordResult);
      }
      if (hasAccountRiskParametersResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, AccountRiskParametersResult);
      }
      if (hasUpdateRiskParametersResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, UpdateRiskParametersResult);
      }
      if (hasAccountSearchResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, AccountSearchResult);
      }
      if (hasAccountRouteListResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, AccountRouteListResult);
      }
      if (hasAccountUserAuthorizationListResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, AccountUserAuthorizationListResult);
      }
      if (hasAccountSettingsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, AccountSettingsResult);
      }
      if (hasAccountExchangeGroupsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(11, AccountExchangeGroupsResult);
      }
      if (hasAccountMarketLimitsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(12, AccountMarketLimitsResult);
      }
      if (hasAccountPositionsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(13, AccountPositionsResult);
      }
      if (hasAccountEquityResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(14, AccountEquityResult);
      }
      if (hasAccountCollateralResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(15, AccountCollateralResult);
      }
      if (hasCloneAccountResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(16, CloneAccountResult);
      }
      if (hasUpdateAccountResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(17, UpdateAccountResult);
      }
      if (hasUpdateAccountSettingsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(18, UpdateAccountSettingsResult);
      }
      if (hasAccountGroupResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(19, AccountGroupResult);
      }
      if (hasUpdateAccountRiskParametersResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(20, UpdateAccountRiskParametersResult);
      }
      if (hasRouteListResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(21, RouteListResult);
      }
      if (hasUpdateAccountRouteListResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(22, UpdateAccountRouteListResult);
      }
      if (hasUpdateAccountMarketLimitsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(23, UpdateAccountMarketLimitsResult);
      }
      if (hasCreateAccountResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(24, CreateAccountResult);
      }
      if (hasAccountClusterResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(25, AccountClusterResult);
      }
      if (hasCreateAccountClusterResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(26, CreateAccountClusterResult);
      }
      if (hasUpdateAccountClusterResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(27, UpdateAccountClusterResult);
      }
      if (hasUpdateAccountClusterPriceOffsetsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(28, UpdateAccountClusterPriceOffsetsResult);
      }
      if (hasRestoreAccountResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(29, RestoreAccountResult);
      }
      if (hasAccountTypeOverrideListResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(30, AccountTypeOverrideListResult);
      }
      if (hasUpdateAccountTypeOverrideListResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(31, UpdateAccountTypeOverrideListResult);
      }
      if (hasUpdateAccountUserAuthorizationListResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(32, UpdateAccountUserAuthorizationListResult);
      }
      if (hasRemoveAccountResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(33, RemoveAccountResult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountScopeResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountScopeResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountScopeResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountScopeResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountScopeResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountScopeResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountScopeResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountScopeResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountScopeResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountScopeResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountScopeResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountScopeResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountScopeResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountScopeResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountScopeResult result;
      
      private AccountScopeResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountScopeResult original = result;
          result = new AccountScopeResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountScopeResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult.Descriptor; }
      }
      
      public override AccountScopeResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult.DefaultInstance; }
      }
      
      public override AccountScopeResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountScopeResult) {
          return MergeFrom((AccountScopeResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountScopeResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountScopeResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountInfoResult) {
          MergeAccountInfoResult(other.AccountInfoResult);
        }
        if (other.HasBalanceRecordsResult) {
          MergeBalanceRecordsResult(other.BalanceRecordsResult);
        }
        if (other.HasCreateBalanceRecordResult) {
          MergeCreateBalanceRecordResult(other.CreateBalanceRecordResult);
        }
        if (other.HasUpdateBalanceRecordResult) {
          MergeUpdateBalanceRecordResult(other.UpdateBalanceRecordResult);
        }
        if (other.HasAccountRiskParametersResult) {
          MergeAccountRiskParametersResult(other.AccountRiskParametersResult);
        }
        if (other.HasUpdateRiskParametersResult) {
          MergeUpdateRiskParametersResult(other.UpdateRiskParametersResult);
        }
        if (other.HasAccountSearchResult) {
          MergeAccountSearchResult(other.AccountSearchResult);
        }
        if (other.HasAccountRouteListResult) {
          MergeAccountRouteListResult(other.AccountRouteListResult);
        }
        if (other.HasAccountUserAuthorizationListResult) {
          MergeAccountUserAuthorizationListResult(other.AccountUserAuthorizationListResult);
        }
        if (other.HasAccountSettingsResult) {
          MergeAccountSettingsResult(other.AccountSettingsResult);
        }
        if (other.HasAccountExchangeGroupsResult) {
          MergeAccountExchangeGroupsResult(other.AccountExchangeGroupsResult);
        }
        if (other.HasAccountMarketLimitsResult) {
          MergeAccountMarketLimitsResult(other.AccountMarketLimitsResult);
        }
        if (other.HasAccountPositionsResult) {
          MergeAccountPositionsResult(other.AccountPositionsResult);
        }
        if (other.HasAccountEquityResult) {
          MergeAccountEquityResult(other.AccountEquityResult);
        }
        if (other.HasAccountCollateralResult) {
          MergeAccountCollateralResult(other.AccountCollateralResult);
        }
        if (other.HasCloneAccountResult) {
          MergeCloneAccountResult(other.CloneAccountResult);
        }
        if (other.HasUpdateAccountResult) {
          MergeUpdateAccountResult(other.UpdateAccountResult);
        }
        if (other.HasUpdateAccountSettingsResult) {
          MergeUpdateAccountSettingsResult(other.UpdateAccountSettingsResult);
        }
        if (other.HasAccountGroupResult) {
          MergeAccountGroupResult(other.AccountGroupResult);
        }
        if (other.HasUpdateAccountRiskParametersResult) {
          MergeUpdateAccountRiskParametersResult(other.UpdateAccountRiskParametersResult);
        }
        if (other.HasRouteListResult) {
          MergeRouteListResult(other.RouteListResult);
        }
        if (other.HasUpdateAccountRouteListResult) {
          MergeUpdateAccountRouteListResult(other.UpdateAccountRouteListResult);
        }
        if (other.HasUpdateAccountMarketLimitsResult) {
          MergeUpdateAccountMarketLimitsResult(other.UpdateAccountMarketLimitsResult);
        }
        if (other.HasCreateAccountResult) {
          MergeCreateAccountResult(other.CreateAccountResult);
        }
        if (other.HasAccountClusterResult) {
          MergeAccountClusterResult(other.AccountClusterResult);
        }
        if (other.HasCreateAccountClusterResult) {
          MergeCreateAccountClusterResult(other.CreateAccountClusterResult);
        }
        if (other.HasUpdateAccountClusterResult) {
          MergeUpdateAccountClusterResult(other.UpdateAccountClusterResult);
        }
        if (other.HasUpdateAccountClusterPriceOffsetsResult) {
          MergeUpdateAccountClusterPriceOffsetsResult(other.UpdateAccountClusterPriceOffsetsResult);
        }
        if (other.HasRestoreAccountResult) {
          MergeRestoreAccountResult(other.RestoreAccountResult);
        }
        if (other.HasAccountTypeOverrideListResult) {
          MergeAccountTypeOverrideListResult(other.AccountTypeOverrideListResult);
        }
        if (other.HasUpdateAccountTypeOverrideListResult) {
          MergeUpdateAccountTypeOverrideListResult(other.UpdateAccountTypeOverrideListResult);
        }
        if (other.HasUpdateAccountUserAuthorizationListResult) {
          MergeUpdateAccountUserAuthorizationListResult(other.UpdateAccountUserAuthorizationListResult);
        }
        if (other.HasRemoveAccountResult) {
          MergeRemoveAccountResult(other.RemoveAccountResult);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountScopeResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountScopeResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult.CreateBuilder();
              if (result.hasAccountInfoResult) {
                subBuilder.MergeFrom(AccountInfoResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountInfoResult = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult.CreateBuilder();
              if (result.hasBalanceRecordsResult) {
                subBuilder.MergeFrom(BalanceRecordsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BalanceRecordsResult = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult.CreateBuilder();
              if (result.hasCreateBalanceRecordResult) {
                subBuilder.MergeFrom(CreateBalanceRecordResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CreateBalanceRecordResult = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult.CreateBuilder();
              if (result.hasUpdateBalanceRecordResult) {
                subBuilder.MergeFrom(UpdateBalanceRecordResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateBalanceRecordResult = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult.CreateBuilder();
              if (result.hasAccountRiskParametersResult) {
                subBuilder.MergeFrom(AccountRiskParametersResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountRiskParametersResult = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult.CreateBuilder();
              if (result.hasUpdateRiskParametersResult) {
                subBuilder.MergeFrom(UpdateRiskParametersResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateRiskParametersResult = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult.CreateBuilder();
              if (result.hasAccountSearchResult) {
                subBuilder.MergeFrom(AccountSearchResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountSearchResult = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult.CreateBuilder();
              if (result.hasAccountRouteListResult) {
                subBuilder.MergeFrom(AccountRouteListResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountRouteListResult = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult.CreateBuilder();
              if (result.hasAccountUserAuthorizationListResult) {
                subBuilder.MergeFrom(AccountUserAuthorizationListResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountUserAuthorizationListResult = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult.CreateBuilder();
              if (result.hasAccountSettingsResult) {
                subBuilder.MergeFrom(AccountSettingsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountSettingsResult = subBuilder.BuildPartial();
              break;
            }
            case 90: {
              global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult.CreateBuilder();
              if (result.hasAccountExchangeGroupsResult) {
                subBuilder.MergeFrom(AccountExchangeGroupsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountExchangeGroupsResult = subBuilder.BuildPartial();
              break;
            }
            case 98: {
              global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult.CreateBuilder();
              if (result.hasAccountMarketLimitsResult) {
                subBuilder.MergeFrom(AccountMarketLimitsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountMarketLimitsResult = subBuilder.BuildPartial();
              break;
            }
            case 106: {
              global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult.CreateBuilder();
              if (result.hasAccountPositionsResult) {
                subBuilder.MergeFrom(AccountPositionsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountPositionsResult = subBuilder.BuildPartial();
              break;
            }
            case 114: {
              global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult.CreateBuilder();
              if (result.hasAccountEquityResult) {
                subBuilder.MergeFrom(AccountEquityResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountEquityResult = subBuilder.BuildPartial();
              break;
            }
            case 122: {
              global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult.CreateBuilder();
              if (result.hasAccountCollateralResult) {
                subBuilder.MergeFrom(AccountCollateralResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountCollateralResult = subBuilder.BuildPartial();
              break;
            }
            case 130: {
              global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult.CreateBuilder();
              if (result.hasCloneAccountResult) {
                subBuilder.MergeFrom(CloneAccountResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CloneAccountResult = subBuilder.BuildPartial();
              break;
            }
            case 138: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult.CreateBuilder();
              if (result.hasUpdateAccountResult) {
                subBuilder.MergeFrom(UpdateAccountResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountResult = subBuilder.BuildPartial();
              break;
            }
            case 146: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult.CreateBuilder();
              if (result.hasUpdateAccountSettingsResult) {
                subBuilder.MergeFrom(UpdateAccountSettingsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountSettingsResult = subBuilder.BuildPartial();
              break;
            }
            case 154: {
              global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult.CreateBuilder();
              if (result.hasAccountGroupResult) {
                subBuilder.MergeFrom(AccountGroupResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountGroupResult = subBuilder.BuildPartial();
              break;
            }
            case 162: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult.CreateBuilder();
              if (result.hasUpdateAccountRiskParametersResult) {
                subBuilder.MergeFrom(UpdateAccountRiskParametersResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountRiskParametersResult = subBuilder.BuildPartial();
              break;
            }
            case 170: {
              global::CmsApiSamples.Protocol.CMSApi.RouteListResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.RouteListResult.CreateBuilder();
              if (result.hasRouteListResult) {
                subBuilder.MergeFrom(RouteListResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RouteListResult = subBuilder.BuildPartial();
              break;
            }
            case 178: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult.CreateBuilder();
              if (result.hasUpdateAccountRouteListResult) {
                subBuilder.MergeFrom(UpdateAccountRouteListResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountRouteListResult = subBuilder.BuildPartial();
              break;
            }
            case 186: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult.CreateBuilder();
              if (result.hasUpdateAccountMarketLimitsResult) {
                subBuilder.MergeFrom(UpdateAccountMarketLimitsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountMarketLimitsResult = subBuilder.BuildPartial();
              break;
            }
            case 194: {
              global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult.CreateBuilder();
              if (result.hasCreateAccountResult) {
                subBuilder.MergeFrom(CreateAccountResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CreateAccountResult = subBuilder.BuildPartial();
              break;
            }
            case 202: {
              global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult.CreateBuilder();
              if (result.hasAccountClusterResult) {
                subBuilder.MergeFrom(AccountClusterResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountClusterResult = subBuilder.BuildPartial();
              break;
            }
            case 210: {
              global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult.CreateBuilder();
              if (result.hasCreateAccountClusterResult) {
                subBuilder.MergeFrom(CreateAccountClusterResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CreateAccountClusterResult = subBuilder.BuildPartial();
              break;
            }
            case 218: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult.CreateBuilder();
              if (result.hasUpdateAccountClusterResult) {
                subBuilder.MergeFrom(UpdateAccountClusterResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountClusterResult = subBuilder.BuildPartial();
              break;
            }
            case 226: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult.CreateBuilder();
              if (result.hasUpdateAccountClusterPriceOffsetsResult) {
                subBuilder.MergeFrom(UpdateAccountClusterPriceOffsetsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountClusterPriceOffsetsResult = subBuilder.BuildPartial();
              break;
            }
            case 234: {
              global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult.CreateBuilder();
              if (result.hasRestoreAccountResult) {
                subBuilder.MergeFrom(RestoreAccountResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RestoreAccountResult = subBuilder.BuildPartial();
              break;
            }
            case 242: {
              global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult.CreateBuilder();
              if (result.hasAccountTypeOverrideListResult) {
                subBuilder.MergeFrom(AccountTypeOverrideListResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountTypeOverrideListResult = subBuilder.BuildPartial();
              break;
            }
            case 250: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult.CreateBuilder();
              if (result.hasUpdateAccountTypeOverrideListResult) {
                subBuilder.MergeFrom(UpdateAccountTypeOverrideListResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountTypeOverrideListResult = subBuilder.BuildPartial();
              break;
            }
            case 258: {
              global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult.CreateBuilder();
              if (result.hasUpdateAccountUserAuthorizationListResult) {
                subBuilder.MergeFrom(UpdateAccountUserAuthorizationListResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UpdateAccountUserAuthorizationListResult = subBuilder.BuildPartial();
              break;
            }
            case 266: {
              global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult.CreateBuilder();
              if (result.hasRemoveAccountResult) {
                subBuilder.MergeFrom(RemoveAccountResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RemoveAccountResult = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountInfoResult {
       get { return result.hasAccountInfoResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult AccountInfoResult {
        get { return result.AccountInfoResult; }
        set { SetAccountInfoResult(value); }
      }
      public Builder SetAccountInfoResult(global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountInfoResult = true;
        result.accountInfoResult_ = value;
        return this;
      }
      public Builder SetAccountInfoResult(global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountInfoResult = true;
        result.accountInfoResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountInfoResult(global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountInfoResult &&
            result.accountInfoResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult.DefaultInstance) {
            result.accountInfoResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult.CreateBuilder(result.accountInfoResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountInfoResult_ = value;
        }
        result.hasAccountInfoResult = true;
        return this;
      }
      public Builder ClearAccountInfoResult() {
        PrepareBuilder();
        result.hasAccountInfoResult = false;
        result.accountInfoResult_ = null;
        return this;
      }
      
      public bool HasBalanceRecordsResult {
       get { return result.hasBalanceRecordsResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult BalanceRecordsResult {
        get { return result.BalanceRecordsResult; }
        set { SetBalanceRecordsResult(value); }
      }
      public Builder SetBalanceRecordsResult(global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBalanceRecordsResult = true;
        result.balanceRecordsResult_ = value;
        return this;
      }
      public Builder SetBalanceRecordsResult(global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBalanceRecordsResult = true;
        result.balanceRecordsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBalanceRecordsResult(global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBalanceRecordsResult &&
            result.balanceRecordsResult_ != global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult.DefaultInstance) {
            result.balanceRecordsResult_ = global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult.CreateBuilder(result.balanceRecordsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.balanceRecordsResult_ = value;
        }
        result.hasBalanceRecordsResult = true;
        return this;
      }
      public Builder ClearBalanceRecordsResult() {
        PrepareBuilder();
        result.hasBalanceRecordsResult = false;
        result.balanceRecordsResult_ = null;
        return this;
      }
      
      public bool HasCreateBalanceRecordResult {
       get { return result.hasCreateBalanceRecordResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult CreateBalanceRecordResult {
        get { return result.CreateBalanceRecordResult; }
        set { SetCreateBalanceRecordResult(value); }
      }
      public Builder SetCreateBalanceRecordResult(global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateBalanceRecordResult = true;
        result.createBalanceRecordResult_ = value;
        return this;
      }
      public Builder SetCreateBalanceRecordResult(global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreateBalanceRecordResult = true;
        result.createBalanceRecordResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreateBalanceRecordResult(global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreateBalanceRecordResult &&
            result.createBalanceRecordResult_ != global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult.DefaultInstance) {
            result.createBalanceRecordResult_ = global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult.CreateBuilder(result.createBalanceRecordResult_).MergeFrom(value).BuildPartial();
        } else {
          result.createBalanceRecordResult_ = value;
        }
        result.hasCreateBalanceRecordResult = true;
        return this;
      }
      public Builder ClearCreateBalanceRecordResult() {
        PrepareBuilder();
        result.hasCreateBalanceRecordResult = false;
        result.createBalanceRecordResult_ = null;
        return this;
      }
      
      public bool HasUpdateBalanceRecordResult {
       get { return result.hasUpdateBalanceRecordResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult UpdateBalanceRecordResult {
        get { return result.UpdateBalanceRecordResult; }
        set { SetUpdateBalanceRecordResult(value); }
      }
      public Builder SetUpdateBalanceRecordResult(global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateBalanceRecordResult = true;
        result.updateBalanceRecordResult_ = value;
        return this;
      }
      public Builder SetUpdateBalanceRecordResult(global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateBalanceRecordResult = true;
        result.updateBalanceRecordResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateBalanceRecordResult(global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateBalanceRecordResult &&
            result.updateBalanceRecordResult_ != global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult.DefaultInstance) {
            result.updateBalanceRecordResult_ = global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult.CreateBuilder(result.updateBalanceRecordResult_).MergeFrom(value).BuildPartial();
        } else {
          result.updateBalanceRecordResult_ = value;
        }
        result.hasUpdateBalanceRecordResult = true;
        return this;
      }
      public Builder ClearUpdateBalanceRecordResult() {
        PrepareBuilder();
        result.hasUpdateBalanceRecordResult = false;
        result.updateBalanceRecordResult_ = null;
        return this;
      }
      
      public bool HasAccountRiskParametersResult {
       get { return result.hasAccountRiskParametersResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult AccountRiskParametersResult {
        get { return result.AccountRiskParametersResult; }
        set { SetAccountRiskParametersResult(value); }
      }
      public Builder SetAccountRiskParametersResult(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountRiskParametersResult = true;
        result.accountRiskParametersResult_ = value;
        return this;
      }
      public Builder SetAccountRiskParametersResult(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountRiskParametersResult = true;
        result.accountRiskParametersResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountRiskParametersResult(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountRiskParametersResult &&
            result.accountRiskParametersResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult.DefaultInstance) {
            result.accountRiskParametersResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult.CreateBuilder(result.accountRiskParametersResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountRiskParametersResult_ = value;
        }
        result.hasAccountRiskParametersResult = true;
        return this;
      }
      public Builder ClearAccountRiskParametersResult() {
        PrepareBuilder();
        result.hasAccountRiskParametersResult = false;
        result.accountRiskParametersResult_ = null;
        return this;
      }
      
      public bool HasUpdateRiskParametersResult {
       get { return result.hasUpdateRiskParametersResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult UpdateRiskParametersResult {
        get { return result.UpdateRiskParametersResult; }
        set { SetUpdateRiskParametersResult(value); }
      }
      public Builder SetUpdateRiskParametersResult(global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateRiskParametersResult = true;
        result.updateRiskParametersResult_ = value;
        return this;
      }
      public Builder SetUpdateRiskParametersResult(global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateRiskParametersResult = true;
        result.updateRiskParametersResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateRiskParametersResult(global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateRiskParametersResult &&
            result.updateRiskParametersResult_ != global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult.DefaultInstance) {
            result.updateRiskParametersResult_ = global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult.CreateBuilder(result.updateRiskParametersResult_).MergeFrom(value).BuildPartial();
        } else {
          result.updateRiskParametersResult_ = value;
        }
        result.hasUpdateRiskParametersResult = true;
        return this;
      }
      public Builder ClearUpdateRiskParametersResult() {
        PrepareBuilder();
        result.hasUpdateRiskParametersResult = false;
        result.updateRiskParametersResult_ = null;
        return this;
      }
      
      public bool HasAccountSearchResult {
       get { return result.hasAccountSearchResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult AccountSearchResult {
        get { return result.AccountSearchResult; }
        set { SetAccountSearchResult(value); }
      }
      public Builder SetAccountSearchResult(global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountSearchResult = true;
        result.accountSearchResult_ = value;
        return this;
      }
      public Builder SetAccountSearchResult(global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountSearchResult = true;
        result.accountSearchResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountSearchResult(global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountSearchResult &&
            result.accountSearchResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult.DefaultInstance) {
            result.accountSearchResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult.CreateBuilder(result.accountSearchResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountSearchResult_ = value;
        }
        result.hasAccountSearchResult = true;
        return this;
      }
      public Builder ClearAccountSearchResult() {
        PrepareBuilder();
        result.hasAccountSearchResult = false;
        result.accountSearchResult_ = null;
        return this;
      }
      
      public bool HasAccountRouteListResult {
       get { return result.hasAccountRouteListResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult AccountRouteListResult {
        get { return result.AccountRouteListResult; }
        set { SetAccountRouteListResult(value); }
      }
      public Builder SetAccountRouteListResult(global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountRouteListResult = true;
        result.accountRouteListResult_ = value;
        return this;
      }
      public Builder SetAccountRouteListResult(global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountRouteListResult = true;
        result.accountRouteListResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountRouteListResult(global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountRouteListResult &&
            result.accountRouteListResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult.DefaultInstance) {
            result.accountRouteListResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult.CreateBuilder(result.accountRouteListResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountRouteListResult_ = value;
        }
        result.hasAccountRouteListResult = true;
        return this;
      }
      public Builder ClearAccountRouteListResult() {
        PrepareBuilder();
        result.hasAccountRouteListResult = false;
        result.accountRouteListResult_ = null;
        return this;
      }
      
      public bool HasAccountUserAuthorizationListResult {
       get { return result.hasAccountUserAuthorizationListResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult AccountUserAuthorizationListResult {
        get { return result.AccountUserAuthorizationListResult; }
        set { SetAccountUserAuthorizationListResult(value); }
      }
      public Builder SetAccountUserAuthorizationListResult(global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountUserAuthorizationListResult = true;
        result.accountUserAuthorizationListResult_ = value;
        return this;
      }
      public Builder SetAccountUserAuthorizationListResult(global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountUserAuthorizationListResult = true;
        result.accountUserAuthorizationListResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountUserAuthorizationListResult(global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountUserAuthorizationListResult &&
            result.accountUserAuthorizationListResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult.DefaultInstance) {
            result.accountUserAuthorizationListResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult.CreateBuilder(result.accountUserAuthorizationListResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountUserAuthorizationListResult_ = value;
        }
        result.hasAccountUserAuthorizationListResult = true;
        return this;
      }
      public Builder ClearAccountUserAuthorizationListResult() {
        PrepareBuilder();
        result.hasAccountUserAuthorizationListResult = false;
        result.accountUserAuthorizationListResult_ = null;
        return this;
      }
      
      public bool HasAccountSettingsResult {
       get { return result.hasAccountSettingsResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult AccountSettingsResult {
        get { return result.AccountSettingsResult; }
        set { SetAccountSettingsResult(value); }
      }
      public Builder SetAccountSettingsResult(global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountSettingsResult = true;
        result.accountSettingsResult_ = value;
        return this;
      }
      public Builder SetAccountSettingsResult(global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountSettingsResult = true;
        result.accountSettingsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountSettingsResult(global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountSettingsResult &&
            result.accountSettingsResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult.DefaultInstance) {
            result.accountSettingsResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult.CreateBuilder(result.accountSettingsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountSettingsResult_ = value;
        }
        result.hasAccountSettingsResult = true;
        return this;
      }
      public Builder ClearAccountSettingsResult() {
        PrepareBuilder();
        result.hasAccountSettingsResult = false;
        result.accountSettingsResult_ = null;
        return this;
      }
      
      public bool HasAccountExchangeGroupsResult {
       get { return result.hasAccountExchangeGroupsResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult AccountExchangeGroupsResult {
        get { return result.AccountExchangeGroupsResult; }
        set { SetAccountExchangeGroupsResult(value); }
      }
      public Builder SetAccountExchangeGroupsResult(global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountExchangeGroupsResult = true;
        result.accountExchangeGroupsResult_ = value;
        return this;
      }
      public Builder SetAccountExchangeGroupsResult(global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountExchangeGroupsResult = true;
        result.accountExchangeGroupsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountExchangeGroupsResult(global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountExchangeGroupsResult &&
            result.accountExchangeGroupsResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult.DefaultInstance) {
            result.accountExchangeGroupsResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult.CreateBuilder(result.accountExchangeGroupsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountExchangeGroupsResult_ = value;
        }
        result.hasAccountExchangeGroupsResult = true;
        return this;
      }
      public Builder ClearAccountExchangeGroupsResult() {
        PrepareBuilder();
        result.hasAccountExchangeGroupsResult = false;
        result.accountExchangeGroupsResult_ = null;
        return this;
      }
      
      public bool HasAccountMarketLimitsResult {
       get { return result.hasAccountMarketLimitsResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult AccountMarketLimitsResult {
        get { return result.AccountMarketLimitsResult; }
        set { SetAccountMarketLimitsResult(value); }
      }
      public Builder SetAccountMarketLimitsResult(global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountMarketLimitsResult = true;
        result.accountMarketLimitsResult_ = value;
        return this;
      }
      public Builder SetAccountMarketLimitsResult(global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountMarketLimitsResult = true;
        result.accountMarketLimitsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountMarketLimitsResult(global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountMarketLimitsResult &&
            result.accountMarketLimitsResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult.DefaultInstance) {
            result.accountMarketLimitsResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult.CreateBuilder(result.accountMarketLimitsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountMarketLimitsResult_ = value;
        }
        result.hasAccountMarketLimitsResult = true;
        return this;
      }
      public Builder ClearAccountMarketLimitsResult() {
        PrepareBuilder();
        result.hasAccountMarketLimitsResult = false;
        result.accountMarketLimitsResult_ = null;
        return this;
      }
      
      public bool HasAccountPositionsResult {
       get { return result.hasAccountPositionsResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult AccountPositionsResult {
        get { return result.AccountPositionsResult; }
        set { SetAccountPositionsResult(value); }
      }
      public Builder SetAccountPositionsResult(global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountPositionsResult = true;
        result.accountPositionsResult_ = value;
        return this;
      }
      public Builder SetAccountPositionsResult(global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountPositionsResult = true;
        result.accountPositionsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountPositionsResult(global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountPositionsResult &&
            result.accountPositionsResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult.DefaultInstance) {
            result.accountPositionsResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult.CreateBuilder(result.accountPositionsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountPositionsResult_ = value;
        }
        result.hasAccountPositionsResult = true;
        return this;
      }
      public Builder ClearAccountPositionsResult() {
        PrepareBuilder();
        result.hasAccountPositionsResult = false;
        result.accountPositionsResult_ = null;
        return this;
      }
      
      public bool HasAccountEquityResult {
       get { return result.hasAccountEquityResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult AccountEquityResult {
        get { return result.AccountEquityResult; }
        set { SetAccountEquityResult(value); }
      }
      public Builder SetAccountEquityResult(global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountEquityResult = true;
        result.accountEquityResult_ = value;
        return this;
      }
      public Builder SetAccountEquityResult(global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountEquityResult = true;
        result.accountEquityResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountEquityResult(global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountEquityResult &&
            result.accountEquityResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult.DefaultInstance) {
            result.accountEquityResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult.CreateBuilder(result.accountEquityResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountEquityResult_ = value;
        }
        result.hasAccountEquityResult = true;
        return this;
      }
      public Builder ClearAccountEquityResult() {
        PrepareBuilder();
        result.hasAccountEquityResult = false;
        result.accountEquityResult_ = null;
        return this;
      }
      
      public bool HasAccountCollateralResult {
       get { return result.hasAccountCollateralResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult AccountCollateralResult {
        get { return result.AccountCollateralResult; }
        set { SetAccountCollateralResult(value); }
      }
      public Builder SetAccountCollateralResult(global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountCollateralResult = true;
        result.accountCollateralResult_ = value;
        return this;
      }
      public Builder SetAccountCollateralResult(global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountCollateralResult = true;
        result.accountCollateralResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountCollateralResult(global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountCollateralResult &&
            result.accountCollateralResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult.DefaultInstance) {
            result.accountCollateralResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult.CreateBuilder(result.accountCollateralResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountCollateralResult_ = value;
        }
        result.hasAccountCollateralResult = true;
        return this;
      }
      public Builder ClearAccountCollateralResult() {
        PrepareBuilder();
        result.hasAccountCollateralResult = false;
        result.accountCollateralResult_ = null;
        return this;
      }
      
      public bool HasCloneAccountResult {
       get { return result.hasCloneAccountResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult CloneAccountResult {
        get { return result.CloneAccountResult; }
        set { SetCloneAccountResult(value); }
      }
      public Builder SetCloneAccountResult(global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCloneAccountResult = true;
        result.cloneAccountResult_ = value;
        return this;
      }
      public Builder SetCloneAccountResult(global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCloneAccountResult = true;
        result.cloneAccountResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCloneAccountResult(global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCloneAccountResult &&
            result.cloneAccountResult_ != global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult.DefaultInstance) {
            result.cloneAccountResult_ = global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult.CreateBuilder(result.cloneAccountResult_).MergeFrom(value).BuildPartial();
        } else {
          result.cloneAccountResult_ = value;
        }
        result.hasCloneAccountResult = true;
        return this;
      }
      public Builder ClearCloneAccountResult() {
        PrepareBuilder();
        result.hasCloneAccountResult = false;
        result.cloneAccountResult_ = null;
        return this;
      }
      
      public bool HasUpdateAccountResult {
       get { return result.hasUpdateAccountResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult UpdateAccountResult {
        get { return result.UpdateAccountResult; }
        set { SetUpdateAccountResult(value); }
      }
      public Builder SetUpdateAccountResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountResult = true;
        result.updateAccountResult_ = value;
        return this;
      }
      public Builder SetUpdateAccountResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountResult = true;
        result.updateAccountResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountResult &&
            result.updateAccountResult_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult.DefaultInstance) {
            result.updateAccountResult_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult.CreateBuilder(result.updateAccountResult_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountResult_ = value;
        }
        result.hasUpdateAccountResult = true;
        return this;
      }
      public Builder ClearUpdateAccountResult() {
        PrepareBuilder();
        result.hasUpdateAccountResult = false;
        result.updateAccountResult_ = null;
        return this;
      }
      
      public bool HasUpdateAccountSettingsResult {
       get { return result.hasUpdateAccountSettingsResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult UpdateAccountSettingsResult {
        get { return result.UpdateAccountSettingsResult; }
        set { SetUpdateAccountSettingsResult(value); }
      }
      public Builder SetUpdateAccountSettingsResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountSettingsResult = true;
        result.updateAccountSettingsResult_ = value;
        return this;
      }
      public Builder SetUpdateAccountSettingsResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountSettingsResult = true;
        result.updateAccountSettingsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountSettingsResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountSettingsResult &&
            result.updateAccountSettingsResult_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult.DefaultInstance) {
            result.updateAccountSettingsResult_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult.CreateBuilder(result.updateAccountSettingsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountSettingsResult_ = value;
        }
        result.hasUpdateAccountSettingsResult = true;
        return this;
      }
      public Builder ClearUpdateAccountSettingsResult() {
        PrepareBuilder();
        result.hasUpdateAccountSettingsResult = false;
        result.updateAccountSettingsResult_ = null;
        return this;
      }
      
      public bool HasAccountGroupResult {
       get { return result.hasAccountGroupResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult AccountGroupResult {
        get { return result.AccountGroupResult; }
        set { SetAccountGroupResult(value); }
      }
      public Builder SetAccountGroupResult(global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountGroupResult = true;
        result.accountGroupResult_ = value;
        return this;
      }
      public Builder SetAccountGroupResult(global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountGroupResult = true;
        result.accountGroupResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountGroupResult(global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountGroupResult &&
            result.accountGroupResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult.DefaultInstance) {
            result.accountGroupResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult.CreateBuilder(result.accountGroupResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountGroupResult_ = value;
        }
        result.hasAccountGroupResult = true;
        return this;
      }
      public Builder ClearAccountGroupResult() {
        PrepareBuilder();
        result.hasAccountGroupResult = false;
        result.accountGroupResult_ = null;
        return this;
      }
      
      public bool HasUpdateAccountRiskParametersResult {
       get { return result.hasUpdateAccountRiskParametersResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult UpdateAccountRiskParametersResult {
        get { return result.UpdateAccountRiskParametersResult; }
        set { SetUpdateAccountRiskParametersResult(value); }
      }
      public Builder SetUpdateAccountRiskParametersResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountRiskParametersResult = true;
        result.updateAccountRiskParametersResult_ = value;
        return this;
      }
      public Builder SetUpdateAccountRiskParametersResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountRiskParametersResult = true;
        result.updateAccountRiskParametersResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountRiskParametersResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountRiskParametersResult &&
            result.updateAccountRiskParametersResult_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult.DefaultInstance) {
            result.updateAccountRiskParametersResult_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult.CreateBuilder(result.updateAccountRiskParametersResult_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountRiskParametersResult_ = value;
        }
        result.hasUpdateAccountRiskParametersResult = true;
        return this;
      }
      public Builder ClearUpdateAccountRiskParametersResult() {
        PrepareBuilder();
        result.hasUpdateAccountRiskParametersResult = false;
        result.updateAccountRiskParametersResult_ = null;
        return this;
      }
      
      public bool HasRouteListResult {
       get { return result.hasRouteListResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RouteListResult RouteListResult {
        get { return result.RouteListResult; }
        set { SetRouteListResult(value); }
      }
      public Builder SetRouteListResult(global::CmsApiSamples.Protocol.CMSApi.RouteListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRouteListResult = true;
        result.routeListResult_ = value;
        return this;
      }
      public Builder SetRouteListResult(global::CmsApiSamples.Protocol.CMSApi.RouteListResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRouteListResult = true;
        result.routeListResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRouteListResult(global::CmsApiSamples.Protocol.CMSApi.RouteListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRouteListResult &&
            result.routeListResult_ != global::CmsApiSamples.Protocol.CMSApi.RouteListResult.DefaultInstance) {
            result.routeListResult_ = global::CmsApiSamples.Protocol.CMSApi.RouteListResult.CreateBuilder(result.routeListResult_).MergeFrom(value).BuildPartial();
        } else {
          result.routeListResult_ = value;
        }
        result.hasRouteListResult = true;
        return this;
      }
      public Builder ClearRouteListResult() {
        PrepareBuilder();
        result.hasRouteListResult = false;
        result.routeListResult_ = null;
        return this;
      }
      
      public bool HasUpdateAccountRouteListResult {
       get { return result.hasUpdateAccountRouteListResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult UpdateAccountRouteListResult {
        get { return result.UpdateAccountRouteListResult; }
        set { SetUpdateAccountRouteListResult(value); }
      }
      public Builder SetUpdateAccountRouteListResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountRouteListResult = true;
        result.updateAccountRouteListResult_ = value;
        return this;
      }
      public Builder SetUpdateAccountRouteListResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountRouteListResult = true;
        result.updateAccountRouteListResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountRouteListResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountRouteListResult &&
            result.updateAccountRouteListResult_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult.DefaultInstance) {
            result.updateAccountRouteListResult_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult.CreateBuilder(result.updateAccountRouteListResult_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountRouteListResult_ = value;
        }
        result.hasUpdateAccountRouteListResult = true;
        return this;
      }
      public Builder ClearUpdateAccountRouteListResult() {
        PrepareBuilder();
        result.hasUpdateAccountRouteListResult = false;
        result.updateAccountRouteListResult_ = null;
        return this;
      }
      
      public bool HasUpdateAccountMarketLimitsResult {
       get { return result.hasUpdateAccountMarketLimitsResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult UpdateAccountMarketLimitsResult {
        get { return result.UpdateAccountMarketLimitsResult; }
        set { SetUpdateAccountMarketLimitsResult(value); }
      }
      public Builder SetUpdateAccountMarketLimitsResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountMarketLimitsResult = true;
        result.updateAccountMarketLimitsResult_ = value;
        return this;
      }
      public Builder SetUpdateAccountMarketLimitsResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountMarketLimitsResult = true;
        result.updateAccountMarketLimitsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountMarketLimitsResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountMarketLimitsResult &&
            result.updateAccountMarketLimitsResult_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult.DefaultInstance) {
            result.updateAccountMarketLimitsResult_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult.CreateBuilder(result.updateAccountMarketLimitsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountMarketLimitsResult_ = value;
        }
        result.hasUpdateAccountMarketLimitsResult = true;
        return this;
      }
      public Builder ClearUpdateAccountMarketLimitsResult() {
        PrepareBuilder();
        result.hasUpdateAccountMarketLimitsResult = false;
        result.updateAccountMarketLimitsResult_ = null;
        return this;
      }
      
      public bool HasCreateAccountResult {
       get { return result.hasCreateAccountResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult CreateAccountResult {
        get { return result.CreateAccountResult; }
        set { SetCreateAccountResult(value); }
      }
      public Builder SetCreateAccountResult(global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateAccountResult = true;
        result.createAccountResult_ = value;
        return this;
      }
      public Builder SetCreateAccountResult(global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreateAccountResult = true;
        result.createAccountResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreateAccountResult(global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreateAccountResult &&
            result.createAccountResult_ != global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult.DefaultInstance) {
            result.createAccountResult_ = global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult.CreateBuilder(result.createAccountResult_).MergeFrom(value).BuildPartial();
        } else {
          result.createAccountResult_ = value;
        }
        result.hasCreateAccountResult = true;
        return this;
      }
      public Builder ClearCreateAccountResult() {
        PrepareBuilder();
        result.hasCreateAccountResult = false;
        result.createAccountResult_ = null;
        return this;
      }
      
      public bool HasAccountClusterResult {
       get { return result.hasAccountClusterResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult AccountClusterResult {
        get { return result.AccountClusterResult; }
        set { SetAccountClusterResult(value); }
      }
      public Builder SetAccountClusterResult(global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountClusterResult = true;
        result.accountClusterResult_ = value;
        return this;
      }
      public Builder SetAccountClusterResult(global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountClusterResult = true;
        result.accountClusterResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountClusterResult(global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountClusterResult &&
            result.accountClusterResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult.DefaultInstance) {
            result.accountClusterResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult.CreateBuilder(result.accountClusterResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountClusterResult_ = value;
        }
        result.hasAccountClusterResult = true;
        return this;
      }
      public Builder ClearAccountClusterResult() {
        PrepareBuilder();
        result.hasAccountClusterResult = false;
        result.accountClusterResult_ = null;
        return this;
      }
      
      public bool HasCreateAccountClusterResult {
       get { return result.hasCreateAccountClusterResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult CreateAccountClusterResult {
        get { return result.CreateAccountClusterResult; }
        set { SetCreateAccountClusterResult(value); }
      }
      public Builder SetCreateAccountClusterResult(global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateAccountClusterResult = true;
        result.createAccountClusterResult_ = value;
        return this;
      }
      public Builder SetCreateAccountClusterResult(global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreateAccountClusterResult = true;
        result.createAccountClusterResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreateAccountClusterResult(global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreateAccountClusterResult &&
            result.createAccountClusterResult_ != global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult.DefaultInstance) {
            result.createAccountClusterResult_ = global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult.CreateBuilder(result.createAccountClusterResult_).MergeFrom(value).BuildPartial();
        } else {
          result.createAccountClusterResult_ = value;
        }
        result.hasCreateAccountClusterResult = true;
        return this;
      }
      public Builder ClearCreateAccountClusterResult() {
        PrepareBuilder();
        result.hasCreateAccountClusterResult = false;
        result.createAccountClusterResult_ = null;
        return this;
      }
      
      public bool HasUpdateAccountClusterResult {
       get { return result.hasUpdateAccountClusterResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult UpdateAccountClusterResult {
        get { return result.UpdateAccountClusterResult; }
        set { SetUpdateAccountClusterResult(value); }
      }
      public Builder SetUpdateAccountClusterResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountClusterResult = true;
        result.updateAccountClusterResult_ = value;
        return this;
      }
      public Builder SetUpdateAccountClusterResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountClusterResult = true;
        result.updateAccountClusterResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountClusterResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountClusterResult &&
            result.updateAccountClusterResult_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult.DefaultInstance) {
            result.updateAccountClusterResult_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult.CreateBuilder(result.updateAccountClusterResult_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountClusterResult_ = value;
        }
        result.hasUpdateAccountClusterResult = true;
        return this;
      }
      public Builder ClearUpdateAccountClusterResult() {
        PrepareBuilder();
        result.hasUpdateAccountClusterResult = false;
        result.updateAccountClusterResult_ = null;
        return this;
      }
      
      public bool HasUpdateAccountClusterPriceOffsetsResult {
       get { return result.hasUpdateAccountClusterPriceOffsetsResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult UpdateAccountClusterPriceOffsetsResult {
        get { return result.UpdateAccountClusterPriceOffsetsResult; }
        set { SetUpdateAccountClusterPriceOffsetsResult(value); }
      }
      public Builder SetUpdateAccountClusterPriceOffsetsResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountClusterPriceOffsetsResult = true;
        result.updateAccountClusterPriceOffsetsResult_ = value;
        return this;
      }
      public Builder SetUpdateAccountClusterPriceOffsetsResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountClusterPriceOffsetsResult = true;
        result.updateAccountClusterPriceOffsetsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountClusterPriceOffsetsResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountClusterPriceOffsetsResult &&
            result.updateAccountClusterPriceOffsetsResult_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult.DefaultInstance) {
            result.updateAccountClusterPriceOffsetsResult_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult.CreateBuilder(result.updateAccountClusterPriceOffsetsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountClusterPriceOffsetsResult_ = value;
        }
        result.hasUpdateAccountClusterPriceOffsetsResult = true;
        return this;
      }
      public Builder ClearUpdateAccountClusterPriceOffsetsResult() {
        PrepareBuilder();
        result.hasUpdateAccountClusterPriceOffsetsResult = false;
        result.updateAccountClusterPriceOffsetsResult_ = null;
        return this;
      }
      
      public bool HasRestoreAccountResult {
       get { return result.hasRestoreAccountResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult RestoreAccountResult {
        get { return result.RestoreAccountResult; }
        set { SetRestoreAccountResult(value); }
      }
      public Builder SetRestoreAccountResult(global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRestoreAccountResult = true;
        result.restoreAccountResult_ = value;
        return this;
      }
      public Builder SetRestoreAccountResult(global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRestoreAccountResult = true;
        result.restoreAccountResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRestoreAccountResult(global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRestoreAccountResult &&
            result.restoreAccountResult_ != global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult.DefaultInstance) {
            result.restoreAccountResult_ = global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult.CreateBuilder(result.restoreAccountResult_).MergeFrom(value).BuildPartial();
        } else {
          result.restoreAccountResult_ = value;
        }
        result.hasRestoreAccountResult = true;
        return this;
      }
      public Builder ClearRestoreAccountResult() {
        PrepareBuilder();
        result.hasRestoreAccountResult = false;
        result.restoreAccountResult_ = null;
        return this;
      }
      
      public bool HasAccountTypeOverrideListResult {
       get { return result.hasAccountTypeOverrideListResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult AccountTypeOverrideListResult {
        get { return result.AccountTypeOverrideListResult; }
        set { SetAccountTypeOverrideListResult(value); }
      }
      public Builder SetAccountTypeOverrideListResult(global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountTypeOverrideListResult = true;
        result.accountTypeOverrideListResult_ = value;
        return this;
      }
      public Builder SetAccountTypeOverrideListResult(global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountTypeOverrideListResult = true;
        result.accountTypeOverrideListResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountTypeOverrideListResult(global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountTypeOverrideListResult &&
            result.accountTypeOverrideListResult_ != global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult.DefaultInstance) {
            result.accountTypeOverrideListResult_ = global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult.CreateBuilder(result.accountTypeOverrideListResult_).MergeFrom(value).BuildPartial();
        } else {
          result.accountTypeOverrideListResult_ = value;
        }
        result.hasAccountTypeOverrideListResult = true;
        return this;
      }
      public Builder ClearAccountTypeOverrideListResult() {
        PrepareBuilder();
        result.hasAccountTypeOverrideListResult = false;
        result.accountTypeOverrideListResult_ = null;
        return this;
      }
      
      public bool HasUpdateAccountTypeOverrideListResult {
       get { return result.hasUpdateAccountTypeOverrideListResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult UpdateAccountTypeOverrideListResult {
        get { return result.UpdateAccountTypeOverrideListResult; }
        set { SetUpdateAccountTypeOverrideListResult(value); }
      }
      public Builder SetUpdateAccountTypeOverrideListResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountTypeOverrideListResult = true;
        result.updateAccountTypeOverrideListResult_ = value;
        return this;
      }
      public Builder SetUpdateAccountTypeOverrideListResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountTypeOverrideListResult = true;
        result.updateAccountTypeOverrideListResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountTypeOverrideListResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountTypeOverrideListResult &&
            result.updateAccountTypeOverrideListResult_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult.DefaultInstance) {
            result.updateAccountTypeOverrideListResult_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult.CreateBuilder(result.updateAccountTypeOverrideListResult_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountTypeOverrideListResult_ = value;
        }
        result.hasUpdateAccountTypeOverrideListResult = true;
        return this;
      }
      public Builder ClearUpdateAccountTypeOverrideListResult() {
        PrepareBuilder();
        result.hasUpdateAccountTypeOverrideListResult = false;
        result.updateAccountTypeOverrideListResult_ = null;
        return this;
      }
      
      public bool HasUpdateAccountUserAuthorizationListResult {
       get { return result.hasUpdateAccountUserAuthorizationListResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult UpdateAccountUserAuthorizationListResult {
        get { return result.UpdateAccountUserAuthorizationListResult; }
        set { SetUpdateAccountUserAuthorizationListResult(value); }
      }
      public Builder SetUpdateAccountUserAuthorizationListResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUpdateAccountUserAuthorizationListResult = true;
        result.updateAccountUserAuthorizationListResult_ = value;
        return this;
      }
      public Builder SetUpdateAccountUserAuthorizationListResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUpdateAccountUserAuthorizationListResult = true;
        result.updateAccountUserAuthorizationListResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUpdateAccountUserAuthorizationListResult(global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUpdateAccountUserAuthorizationListResult &&
            result.updateAccountUserAuthorizationListResult_ != global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult.DefaultInstance) {
            result.updateAccountUserAuthorizationListResult_ = global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult.CreateBuilder(result.updateAccountUserAuthorizationListResult_).MergeFrom(value).BuildPartial();
        } else {
          result.updateAccountUserAuthorizationListResult_ = value;
        }
        result.hasUpdateAccountUserAuthorizationListResult = true;
        return this;
      }
      public Builder ClearUpdateAccountUserAuthorizationListResult() {
        PrepareBuilder();
        result.hasUpdateAccountUserAuthorizationListResult = false;
        result.updateAccountUserAuthorizationListResult_ = null;
        return this;
      }
      
      public bool HasRemoveAccountResult {
       get { return result.hasRemoveAccountResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult RemoveAccountResult {
        get { return result.RemoveAccountResult; }
        set { SetRemoveAccountResult(value); }
      }
      public Builder SetRemoveAccountResult(global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRemoveAccountResult = true;
        result.removeAccountResult_ = value;
        return this;
      }
      public Builder SetRemoveAccountResult(global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRemoveAccountResult = true;
        result.removeAccountResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRemoveAccountResult(global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRemoveAccountResult &&
            result.removeAccountResult_ != global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult.DefaultInstance) {
            result.removeAccountResult_ = global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult.CreateBuilder(result.removeAccountResult_).MergeFrom(value).BuildPartial();
        } else {
          result.removeAccountResult_ = value;
        }
        result.hasRemoveAccountResult = true;
        return this;
      }
      public Builder ClearRemoveAccountResult() {
        PrepareBuilder();
        result.hasRemoveAccountResult = false;
        result.removeAccountResult_ = null;
        return this;
      }
    }
    static AccountScopeResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderScopeResult : pb::GeneratedMessage<OrderScopeResult, OrderScopeResult.Builder> {
    private OrderScopeResult() { }
    private static readonly OrderScopeResult defaultInstance = new OrderScopeResult().MakeReadOnly();
    private static readonly string[] _orderScopeResultFieldNames = new string[] { "add_fill_result", "cancel_compound_order_tree_result", "cancel_order_result", "compound_order_tree_result", "create_external_order_result", "order_details_result", "order_search_result", "reflect_as_canceled_order_result", "related_order_tree_result", "synthetic_strategy_tree_result" };
    private static readonly uint[] _orderScopeResultFieldTags = new uint[] { 18, 82, 66, 50, 26, 10, 34, 74, 42, 58 };
    public static OrderScopeResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderScopeResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderScopeResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderScopeResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderScopeResult, OrderScopeResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderScopeResult__FieldAccessorTable; }
    }
    
    public const int OrderDetailsResultFieldNumber = 1;
    private bool hasOrderDetailsResult;
    private global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult orderDetailsResult_;
    public bool HasOrderDetailsResult {
      get { return hasOrderDetailsResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult OrderDetailsResult {
      get { return orderDetailsResult_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult.DefaultInstance; }
    }
    
    public const int AddFillResultFieldNumber = 2;
    private bool hasAddFillResult;
    private global::CmsApiSamples.Protocol.CMSApi.AddFillResult addFillResult_;
    public bool HasAddFillResult {
      get { return hasAddFillResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AddFillResult AddFillResult {
      get { return addFillResult_ ?? global::CmsApiSamples.Protocol.CMSApi.AddFillResult.DefaultInstance; }
    }
    
    public const int CreateExternalOrderResultFieldNumber = 3;
    private bool hasCreateExternalOrderResult;
    private global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult createExternalOrderResult_;
    public bool HasCreateExternalOrderResult {
      get { return hasCreateExternalOrderResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult CreateExternalOrderResult {
      get { return createExternalOrderResult_ ?? global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult.DefaultInstance; }
    }
    
    public const int OrderSearchResultFieldNumber = 4;
    private bool hasOrderSearchResult;
    private global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult orderSearchResult_;
    public bool HasOrderSearchResult {
      get { return hasOrderSearchResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult OrderSearchResult {
      get { return orderSearchResult_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult.DefaultInstance; }
    }
    
    public const int RelatedOrderTreeResultFieldNumber = 5;
    private bool hasRelatedOrderTreeResult;
    private global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult relatedOrderTreeResult_;
    public bool HasRelatedOrderTreeResult {
      get { return hasRelatedOrderTreeResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult RelatedOrderTreeResult {
      get { return relatedOrderTreeResult_ ?? global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult.DefaultInstance; }
    }
    
    public const int CompoundOrderTreeResultFieldNumber = 6;
    private bool hasCompoundOrderTreeResult;
    private global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult compoundOrderTreeResult_;
    public bool HasCompoundOrderTreeResult {
      get { return hasCompoundOrderTreeResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult CompoundOrderTreeResult {
      get { return compoundOrderTreeResult_ ?? global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult.DefaultInstance; }
    }
    
    public const int SyntheticStrategyTreeResultFieldNumber = 7;
    private bool hasSyntheticStrategyTreeResult;
    private global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult syntheticStrategyTreeResult_;
    public bool HasSyntheticStrategyTreeResult {
      get { return hasSyntheticStrategyTreeResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult SyntheticStrategyTreeResult {
      get { return syntheticStrategyTreeResult_ ?? global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult.DefaultInstance; }
    }
    
    public const int CancelOrderResultFieldNumber = 8;
    private bool hasCancelOrderResult;
    private global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult cancelOrderResult_;
    public bool HasCancelOrderResult {
      get { return hasCancelOrderResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult CancelOrderResult {
      get { return cancelOrderResult_ ?? global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult.DefaultInstance; }
    }
    
    public const int ReflectAsCanceledOrderResultFieldNumber = 9;
    private bool hasReflectAsCanceledOrderResult;
    private global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult reflectAsCanceledOrderResult_;
    public bool HasReflectAsCanceledOrderResult {
      get { return hasReflectAsCanceledOrderResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult ReflectAsCanceledOrderResult {
      get { return reflectAsCanceledOrderResult_ ?? global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult.DefaultInstance; }
    }
    
    public const int CancelCompoundOrderTreeResultFieldNumber = 10;
    private bool hasCancelCompoundOrderTreeResult;
    private global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult cancelCompoundOrderTreeResult_;
    public bool HasCancelCompoundOrderTreeResult {
      get { return hasCancelCompoundOrderTreeResult; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult CancelCompoundOrderTreeResult {
      get { return cancelCompoundOrderTreeResult_ ?? global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasOrderDetailsResult) {
          if (!OrderDetailsResult.IsInitialized) return false;
        }
        if (HasOrderSearchResult) {
          if (!OrderSearchResult.IsInitialized) return false;
        }
        if (HasRelatedOrderTreeResult) {
          if (!RelatedOrderTreeResult.IsInitialized) return false;
        }
        if (HasCompoundOrderTreeResult) {
          if (!CompoundOrderTreeResult.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderScopeResultFieldNames;
      if (hasOrderDetailsResult) {
        output.WriteMessage(1, field_names[5], OrderDetailsResult);
      }
      if (hasAddFillResult) {
        output.WriteMessage(2, field_names[0], AddFillResult);
      }
      if (hasCreateExternalOrderResult) {
        output.WriteMessage(3, field_names[4], CreateExternalOrderResult);
      }
      if (hasOrderSearchResult) {
        output.WriteMessage(4, field_names[6], OrderSearchResult);
      }
      if (hasRelatedOrderTreeResult) {
        output.WriteMessage(5, field_names[8], RelatedOrderTreeResult);
      }
      if (hasCompoundOrderTreeResult) {
        output.WriteMessage(6, field_names[3], CompoundOrderTreeResult);
      }
      if (hasSyntheticStrategyTreeResult) {
        output.WriteMessage(7, field_names[9], SyntheticStrategyTreeResult);
      }
      if (hasCancelOrderResult) {
        output.WriteMessage(8, field_names[2], CancelOrderResult);
      }
      if (hasReflectAsCanceledOrderResult) {
        output.WriteMessage(9, field_names[7], ReflectAsCanceledOrderResult);
      }
      if (hasCancelCompoundOrderTreeResult) {
        output.WriteMessage(10, field_names[1], CancelCompoundOrderTreeResult);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOrderDetailsResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, OrderDetailsResult);
      }
      if (hasAddFillResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, AddFillResult);
      }
      if (hasCreateExternalOrderResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, CreateExternalOrderResult);
      }
      if (hasOrderSearchResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, OrderSearchResult);
      }
      if (hasRelatedOrderTreeResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, RelatedOrderTreeResult);
      }
      if (hasCompoundOrderTreeResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, CompoundOrderTreeResult);
      }
      if (hasSyntheticStrategyTreeResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, SyntheticStrategyTreeResult);
      }
      if (hasCancelOrderResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, CancelOrderResult);
      }
      if (hasReflectAsCanceledOrderResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, ReflectAsCanceledOrderResult);
      }
      if (hasCancelCompoundOrderTreeResult) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, CancelCompoundOrderTreeResult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderScopeResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderScopeResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderScopeResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderScopeResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderScopeResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderScopeResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderScopeResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderScopeResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderScopeResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderScopeResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderScopeResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderScopeResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderScopeResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderScopeResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderScopeResult result;
      
      private OrderScopeResult PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderScopeResult original = result;
          result = new OrderScopeResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderScopeResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult.Descriptor; }
      }
      
      public override OrderScopeResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult.DefaultInstance; }
      }
      
      public override OrderScopeResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderScopeResult) {
          return MergeFrom((OrderScopeResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderScopeResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderScopeResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderDetailsResult) {
          MergeOrderDetailsResult(other.OrderDetailsResult);
        }
        if (other.HasAddFillResult) {
          MergeAddFillResult(other.AddFillResult);
        }
        if (other.HasCreateExternalOrderResult) {
          MergeCreateExternalOrderResult(other.CreateExternalOrderResult);
        }
        if (other.HasOrderSearchResult) {
          MergeOrderSearchResult(other.OrderSearchResult);
        }
        if (other.HasRelatedOrderTreeResult) {
          MergeRelatedOrderTreeResult(other.RelatedOrderTreeResult);
        }
        if (other.HasCompoundOrderTreeResult) {
          MergeCompoundOrderTreeResult(other.CompoundOrderTreeResult);
        }
        if (other.HasSyntheticStrategyTreeResult) {
          MergeSyntheticStrategyTreeResult(other.SyntheticStrategyTreeResult);
        }
        if (other.HasCancelOrderResult) {
          MergeCancelOrderResult(other.CancelOrderResult);
        }
        if (other.HasReflectAsCanceledOrderResult) {
          MergeReflectAsCanceledOrderResult(other.ReflectAsCanceledOrderResult);
        }
        if (other.HasCancelCompoundOrderTreeResult) {
          MergeCancelCompoundOrderTreeResult(other.CancelCompoundOrderTreeResult);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderScopeResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderScopeResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult.CreateBuilder();
              if (result.hasOrderDetailsResult) {
                subBuilder.MergeFrom(OrderDetailsResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderDetailsResult = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.AddFillResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AddFillResult.CreateBuilder();
              if (result.hasAddFillResult) {
                subBuilder.MergeFrom(AddFillResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AddFillResult = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult.CreateBuilder();
              if (result.hasCreateExternalOrderResult) {
                subBuilder.MergeFrom(CreateExternalOrderResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CreateExternalOrderResult = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult.CreateBuilder();
              if (result.hasOrderSearchResult) {
                subBuilder.MergeFrom(OrderSearchResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderSearchResult = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult.CreateBuilder();
              if (result.hasRelatedOrderTreeResult) {
                subBuilder.MergeFrom(RelatedOrderTreeResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RelatedOrderTreeResult = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult.CreateBuilder();
              if (result.hasCompoundOrderTreeResult) {
                subBuilder.MergeFrom(CompoundOrderTreeResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CompoundOrderTreeResult = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult.CreateBuilder();
              if (result.hasSyntheticStrategyTreeResult) {
                subBuilder.MergeFrom(SyntheticStrategyTreeResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SyntheticStrategyTreeResult = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult.CreateBuilder();
              if (result.hasCancelOrderResult) {
                subBuilder.MergeFrom(CancelOrderResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CancelOrderResult = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult.CreateBuilder();
              if (result.hasReflectAsCanceledOrderResult) {
                subBuilder.MergeFrom(ReflectAsCanceledOrderResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReflectAsCanceledOrderResult = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult.CreateBuilder();
              if (result.hasCancelCompoundOrderTreeResult) {
                subBuilder.MergeFrom(CancelCompoundOrderTreeResult);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CancelCompoundOrderTreeResult = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderDetailsResult {
       get { return result.hasOrderDetailsResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult OrderDetailsResult {
        get { return result.OrderDetailsResult; }
        set { SetOrderDetailsResult(value); }
      }
      public Builder SetOrderDetailsResult(global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderDetailsResult = true;
        result.orderDetailsResult_ = value;
        return this;
      }
      public Builder SetOrderDetailsResult(global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderDetailsResult = true;
        result.orderDetailsResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderDetailsResult(global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderDetailsResult &&
            result.orderDetailsResult_ != global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult.DefaultInstance) {
            result.orderDetailsResult_ = global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult.CreateBuilder(result.orderDetailsResult_).MergeFrom(value).BuildPartial();
        } else {
          result.orderDetailsResult_ = value;
        }
        result.hasOrderDetailsResult = true;
        return this;
      }
      public Builder ClearOrderDetailsResult() {
        PrepareBuilder();
        result.hasOrderDetailsResult = false;
        result.orderDetailsResult_ = null;
        return this;
      }
      
      public bool HasAddFillResult {
       get { return result.hasAddFillResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AddFillResult AddFillResult {
        get { return result.AddFillResult; }
        set { SetAddFillResult(value); }
      }
      public Builder SetAddFillResult(global::CmsApiSamples.Protocol.CMSApi.AddFillResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAddFillResult = true;
        result.addFillResult_ = value;
        return this;
      }
      public Builder SetAddFillResult(global::CmsApiSamples.Protocol.CMSApi.AddFillResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAddFillResult = true;
        result.addFillResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAddFillResult(global::CmsApiSamples.Protocol.CMSApi.AddFillResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAddFillResult &&
            result.addFillResult_ != global::CmsApiSamples.Protocol.CMSApi.AddFillResult.DefaultInstance) {
            result.addFillResult_ = global::CmsApiSamples.Protocol.CMSApi.AddFillResult.CreateBuilder(result.addFillResult_).MergeFrom(value).BuildPartial();
        } else {
          result.addFillResult_ = value;
        }
        result.hasAddFillResult = true;
        return this;
      }
      public Builder ClearAddFillResult() {
        PrepareBuilder();
        result.hasAddFillResult = false;
        result.addFillResult_ = null;
        return this;
      }
      
      public bool HasCreateExternalOrderResult {
       get { return result.hasCreateExternalOrderResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult CreateExternalOrderResult {
        get { return result.CreateExternalOrderResult; }
        set { SetCreateExternalOrderResult(value); }
      }
      public Builder SetCreateExternalOrderResult(global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateExternalOrderResult = true;
        result.createExternalOrderResult_ = value;
        return this;
      }
      public Builder SetCreateExternalOrderResult(global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCreateExternalOrderResult = true;
        result.createExternalOrderResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCreateExternalOrderResult(global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCreateExternalOrderResult &&
            result.createExternalOrderResult_ != global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult.DefaultInstance) {
            result.createExternalOrderResult_ = global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult.CreateBuilder(result.createExternalOrderResult_).MergeFrom(value).BuildPartial();
        } else {
          result.createExternalOrderResult_ = value;
        }
        result.hasCreateExternalOrderResult = true;
        return this;
      }
      public Builder ClearCreateExternalOrderResult() {
        PrepareBuilder();
        result.hasCreateExternalOrderResult = false;
        result.createExternalOrderResult_ = null;
        return this;
      }
      
      public bool HasOrderSearchResult {
       get { return result.hasOrderSearchResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult OrderSearchResult {
        get { return result.OrderSearchResult; }
        set { SetOrderSearchResult(value); }
      }
      public Builder SetOrderSearchResult(global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderSearchResult = true;
        result.orderSearchResult_ = value;
        return this;
      }
      public Builder SetOrderSearchResult(global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderSearchResult = true;
        result.orderSearchResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderSearchResult(global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderSearchResult &&
            result.orderSearchResult_ != global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult.DefaultInstance) {
            result.orderSearchResult_ = global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult.CreateBuilder(result.orderSearchResult_).MergeFrom(value).BuildPartial();
        } else {
          result.orderSearchResult_ = value;
        }
        result.hasOrderSearchResult = true;
        return this;
      }
      public Builder ClearOrderSearchResult() {
        PrepareBuilder();
        result.hasOrderSearchResult = false;
        result.orderSearchResult_ = null;
        return this;
      }
      
      public bool HasRelatedOrderTreeResult {
       get { return result.hasRelatedOrderTreeResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult RelatedOrderTreeResult {
        get { return result.RelatedOrderTreeResult; }
        set { SetRelatedOrderTreeResult(value); }
      }
      public Builder SetRelatedOrderTreeResult(global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRelatedOrderTreeResult = true;
        result.relatedOrderTreeResult_ = value;
        return this;
      }
      public Builder SetRelatedOrderTreeResult(global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRelatedOrderTreeResult = true;
        result.relatedOrderTreeResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRelatedOrderTreeResult(global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRelatedOrderTreeResult &&
            result.relatedOrderTreeResult_ != global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult.DefaultInstance) {
            result.relatedOrderTreeResult_ = global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult.CreateBuilder(result.relatedOrderTreeResult_).MergeFrom(value).BuildPartial();
        } else {
          result.relatedOrderTreeResult_ = value;
        }
        result.hasRelatedOrderTreeResult = true;
        return this;
      }
      public Builder ClearRelatedOrderTreeResult() {
        PrepareBuilder();
        result.hasRelatedOrderTreeResult = false;
        result.relatedOrderTreeResult_ = null;
        return this;
      }
      
      public bool HasCompoundOrderTreeResult {
       get { return result.hasCompoundOrderTreeResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult CompoundOrderTreeResult {
        get { return result.CompoundOrderTreeResult; }
        set { SetCompoundOrderTreeResult(value); }
      }
      public Builder SetCompoundOrderTreeResult(global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCompoundOrderTreeResult = true;
        result.compoundOrderTreeResult_ = value;
        return this;
      }
      public Builder SetCompoundOrderTreeResult(global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCompoundOrderTreeResult = true;
        result.compoundOrderTreeResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCompoundOrderTreeResult(global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCompoundOrderTreeResult &&
            result.compoundOrderTreeResult_ != global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult.DefaultInstance) {
            result.compoundOrderTreeResult_ = global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult.CreateBuilder(result.compoundOrderTreeResult_).MergeFrom(value).BuildPartial();
        } else {
          result.compoundOrderTreeResult_ = value;
        }
        result.hasCompoundOrderTreeResult = true;
        return this;
      }
      public Builder ClearCompoundOrderTreeResult() {
        PrepareBuilder();
        result.hasCompoundOrderTreeResult = false;
        result.compoundOrderTreeResult_ = null;
        return this;
      }
      
      public bool HasSyntheticStrategyTreeResult {
       get { return result.hasSyntheticStrategyTreeResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult SyntheticStrategyTreeResult {
        get { return result.SyntheticStrategyTreeResult; }
        set { SetSyntheticStrategyTreeResult(value); }
      }
      public Builder SetSyntheticStrategyTreeResult(global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSyntheticStrategyTreeResult = true;
        result.syntheticStrategyTreeResult_ = value;
        return this;
      }
      public Builder SetSyntheticStrategyTreeResult(global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSyntheticStrategyTreeResult = true;
        result.syntheticStrategyTreeResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSyntheticStrategyTreeResult(global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSyntheticStrategyTreeResult &&
            result.syntheticStrategyTreeResult_ != global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult.DefaultInstance) {
            result.syntheticStrategyTreeResult_ = global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult.CreateBuilder(result.syntheticStrategyTreeResult_).MergeFrom(value).BuildPartial();
        } else {
          result.syntheticStrategyTreeResult_ = value;
        }
        result.hasSyntheticStrategyTreeResult = true;
        return this;
      }
      public Builder ClearSyntheticStrategyTreeResult() {
        PrepareBuilder();
        result.hasSyntheticStrategyTreeResult = false;
        result.syntheticStrategyTreeResult_ = null;
        return this;
      }
      
      public bool HasCancelOrderResult {
       get { return result.hasCancelOrderResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult CancelOrderResult {
        get { return result.CancelOrderResult; }
        set { SetCancelOrderResult(value); }
      }
      public Builder SetCancelOrderResult(global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCancelOrderResult = true;
        result.cancelOrderResult_ = value;
        return this;
      }
      public Builder SetCancelOrderResult(global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCancelOrderResult = true;
        result.cancelOrderResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCancelOrderResult(global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCancelOrderResult &&
            result.cancelOrderResult_ != global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult.DefaultInstance) {
            result.cancelOrderResult_ = global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult.CreateBuilder(result.cancelOrderResult_).MergeFrom(value).BuildPartial();
        } else {
          result.cancelOrderResult_ = value;
        }
        result.hasCancelOrderResult = true;
        return this;
      }
      public Builder ClearCancelOrderResult() {
        PrepareBuilder();
        result.hasCancelOrderResult = false;
        result.cancelOrderResult_ = null;
        return this;
      }
      
      public bool HasReflectAsCanceledOrderResult {
       get { return result.hasReflectAsCanceledOrderResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult ReflectAsCanceledOrderResult {
        get { return result.ReflectAsCanceledOrderResult; }
        set { SetReflectAsCanceledOrderResult(value); }
      }
      public Builder SetReflectAsCanceledOrderResult(global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReflectAsCanceledOrderResult = true;
        result.reflectAsCanceledOrderResult_ = value;
        return this;
      }
      public Builder SetReflectAsCanceledOrderResult(global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReflectAsCanceledOrderResult = true;
        result.reflectAsCanceledOrderResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReflectAsCanceledOrderResult(global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReflectAsCanceledOrderResult &&
            result.reflectAsCanceledOrderResult_ != global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult.DefaultInstance) {
            result.reflectAsCanceledOrderResult_ = global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult.CreateBuilder(result.reflectAsCanceledOrderResult_).MergeFrom(value).BuildPartial();
        } else {
          result.reflectAsCanceledOrderResult_ = value;
        }
        result.hasReflectAsCanceledOrderResult = true;
        return this;
      }
      public Builder ClearReflectAsCanceledOrderResult() {
        PrepareBuilder();
        result.hasReflectAsCanceledOrderResult = false;
        result.reflectAsCanceledOrderResult_ = null;
        return this;
      }
      
      public bool HasCancelCompoundOrderTreeResult {
       get { return result.hasCancelCompoundOrderTreeResult; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult CancelCompoundOrderTreeResult {
        get { return result.CancelCompoundOrderTreeResult; }
        set { SetCancelCompoundOrderTreeResult(value); }
      }
      public Builder SetCancelCompoundOrderTreeResult(global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCancelCompoundOrderTreeResult = true;
        result.cancelCompoundOrderTreeResult_ = value;
        return this;
      }
      public Builder SetCancelCompoundOrderTreeResult(global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCancelCompoundOrderTreeResult = true;
        result.cancelCompoundOrderTreeResult_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCancelCompoundOrderTreeResult(global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCancelCompoundOrderTreeResult &&
            result.cancelCompoundOrderTreeResult_ != global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult.DefaultInstance) {
            result.cancelCompoundOrderTreeResult_ = global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult.CreateBuilder(result.cancelCompoundOrderTreeResult_).MergeFrom(value).BuildPartial();
        } else {
          result.cancelCompoundOrderTreeResult_ = value;
        }
        result.hasCancelCompoundOrderTreeResult = true;
        return this;
      }
      public Builder ClearCancelCompoundOrderTreeResult() {
        PrepareBuilder();
        result.hasCancelCompoundOrderTreeResult = false;
        result.cancelCompoundOrderTreeResult_ = null;
        return this;
      }
    }
    static OrderScopeResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderDetailsResult : pb::GeneratedMessage<OrderDetailsResult, OrderDetailsResult.Builder> {
    private OrderDetailsResult() { }
    private static readonly OrderDetailsResult defaultInstance = new OrderDetailsResult().MakeReadOnly();
    private static readonly string[] _orderDetailsResultFieldNames = new string[] { "is_complete", "order_chain" };
    private static readonly uint[] _orderDetailsResultFieldTags = new uint[] { 16, 10 };
    public static OrderDetailsResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderDetailsResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderDetailsResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderDetailsResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderDetailsResult, OrderDetailsResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderDetailsResult__FieldAccessorTable; }
    }
    
    public const int OrderChainFieldNumber = 1;
    private bool hasOrderChain;
    private global::CmsApiSamples.Protocol.CMSApi.OrderChain orderChain_;
    public bool HasOrderChain {
      get { return hasOrderChain; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderChain OrderChain {
      get { return orderChain_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderChain.DefaultInstance; }
    }
    
    public const int IsCompleteFieldNumber = 2;
    private bool hasIsComplete;
    private bool isComplete_ = true;
    public bool HasIsComplete {
      get { return hasIsComplete; }
    }
    public bool IsComplete {
      get { return isComplete_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrderChain) return false;
        if (!OrderChain.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderDetailsResultFieldNames;
      if (hasOrderChain) {
        output.WriteMessage(1, field_names[1], OrderChain);
      }
      if (hasIsComplete) {
        output.WriteBool(2, field_names[0], IsComplete);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOrderChain) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, OrderChain);
      }
      if (hasIsComplete) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsComplete);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderDetailsResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderDetailsResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderDetailsResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderDetailsResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderDetailsResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderDetailsResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderDetailsResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderDetailsResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderDetailsResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderDetailsResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderDetailsResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderDetailsResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderDetailsResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderDetailsResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderDetailsResult result;
      
      private OrderDetailsResult PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderDetailsResult original = result;
          result = new OrderDetailsResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderDetailsResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult.Descriptor; }
      }
      
      public override OrderDetailsResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult.DefaultInstance; }
      }
      
      public override OrderDetailsResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderDetailsResult) {
          return MergeFrom((OrderDetailsResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderDetailsResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderDetailsResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderChain) {
          MergeOrderChain(other.OrderChain);
        }
        if (other.HasIsComplete) {
          IsComplete = other.IsComplete;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderDetailsResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderDetailsResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.OrderChain.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderChain.CreateBuilder();
              if (result.hasOrderChain) {
                subBuilder.MergeFrom(OrderChain);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderChain = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasIsComplete = input.ReadBool(ref result.isComplete_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderChain {
       get { return result.hasOrderChain; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderChain OrderChain {
        get { return result.OrderChain; }
        set { SetOrderChain(value); }
      }
      public Builder SetOrderChain(global::CmsApiSamples.Protocol.CMSApi.OrderChain value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderChain = true;
        result.orderChain_ = value;
        return this;
      }
      public Builder SetOrderChain(global::CmsApiSamples.Protocol.CMSApi.OrderChain.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderChain = true;
        result.orderChain_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderChain(global::CmsApiSamples.Protocol.CMSApi.OrderChain value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderChain &&
            result.orderChain_ != global::CmsApiSamples.Protocol.CMSApi.OrderChain.DefaultInstance) {
            result.orderChain_ = global::CmsApiSamples.Protocol.CMSApi.OrderChain.CreateBuilder(result.orderChain_).MergeFrom(value).BuildPartial();
        } else {
          result.orderChain_ = value;
        }
        result.hasOrderChain = true;
        return this;
      }
      public Builder ClearOrderChain() {
        PrepareBuilder();
        result.hasOrderChain = false;
        result.orderChain_ = null;
        return this;
      }
      
      public bool HasIsComplete {
        get { return result.hasIsComplete; }
      }
      public bool IsComplete {
        get { return result.IsComplete; }
        set { SetIsComplete(value); }
      }
      public Builder SetIsComplete(bool value) {
        PrepareBuilder();
        result.hasIsComplete = true;
        result.isComplete_ = value;
        return this;
      }
      public Builder ClearIsComplete() {
        PrepareBuilder();
        result.hasIsComplete = false;
        result.isComplete_ = true;
        return this;
      }
    }
    static OrderDetailsResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AddFillResult : pb::GeneratedMessage<AddFillResult, AddFillResult.Builder> {
    private AddFillResult() { }
    private static readonly AddFillResult defaultInstance = new AddFillResult().MakeReadOnly();
    private static readonly string[] _addFillResultFieldNames = new string[] {  };
    private static readonly uint[] _addFillResultFieldTags = new uint[] {  };
    public static AddFillResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddFillResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddFillResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AddFillResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddFillResult, AddFillResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AddFillResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _addFillResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AddFillResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddFillResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddFillResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddFillResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddFillResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddFillResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddFillResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddFillResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddFillResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddFillResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddFillResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddFillResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AddFillResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddFillResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddFillResult result;
      
      private AddFillResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AddFillResult original = result;
          result = new AddFillResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddFillResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AddFillResult.Descriptor; }
      }
      
      public override AddFillResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AddFillResult.DefaultInstance; }
      }
      
      public override AddFillResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddFillResult) {
          return MergeFrom((AddFillResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddFillResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AddFillResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addFillResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addFillResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static AddFillResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateExternalOrderResult : pb::GeneratedMessage<CreateExternalOrderResult, CreateExternalOrderResult.Builder> {
    private CreateExternalOrderResult() { }
    private static readonly CreateExternalOrderResult defaultInstance = new CreateExternalOrderResult().MakeReadOnly();
    private static readonly string[] _createExternalOrderResultFieldNames = new string[] { "order_id", "trade_location_id" };
    private static readonly uint[] _createExternalOrderResultFieldTags = new uint[] { 26, 34 };
    public static CreateExternalOrderResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateExternalOrderResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateExternalOrderResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateExternalOrderResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateExternalOrderResult, CreateExternalOrderResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateExternalOrderResult__FieldAccessorTable; }
    }
    
    public const int OrderIdFieldNumber = 3;
    private bool hasOrderId;
    private string orderId_ = "";
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public string OrderId {
      get { return orderId_; }
    }
    
    public const int TradeLocationIdFieldNumber = 4;
    private bool hasTradeLocationId;
    private string tradeLocationId_ = "";
    public bool HasTradeLocationId {
      get { return hasTradeLocationId; }
    }
    public string TradeLocationId {
      get { return tradeLocationId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createExternalOrderResultFieldNames;
      if (hasOrderId) {
        output.WriteString(3, field_names[0], OrderId);
      }
      if (hasTradeLocationId) {
        output.WriteString(4, field_names[1], TradeLocationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, OrderId);
      }
      if (hasTradeLocationId) {
        size += pb::CodedOutputStream.ComputeStringSize(4, TradeLocationId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateExternalOrderResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateExternalOrderResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateExternalOrderResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateExternalOrderResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateExternalOrderResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateExternalOrderResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateExternalOrderResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateExternalOrderResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateExternalOrderResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateExternalOrderResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateExternalOrderResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateExternalOrderResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateExternalOrderResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateExternalOrderResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateExternalOrderResult result;
      
      private CreateExternalOrderResult PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateExternalOrderResult original = result;
          result = new CreateExternalOrderResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateExternalOrderResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult.Descriptor; }
      }
      
      public override CreateExternalOrderResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult.DefaultInstance; }
      }
      
      public override CreateExternalOrderResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateExternalOrderResult) {
          return MergeFrom((CreateExternalOrderResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateExternalOrderResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CreateExternalOrderResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasTradeLocationId) {
          TradeLocationId = other.TradeLocationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createExternalOrderResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createExternalOrderResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 26: {
              result.hasOrderId = input.ReadString(ref result.orderId_);
              break;
            }
            case 34: {
              result.hasTradeLocationId = input.ReadString(ref result.tradeLocationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public string OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = "";
        return this;
      }
      
      public bool HasTradeLocationId {
        get { return result.hasTradeLocationId; }
      }
      public string TradeLocationId {
        get { return result.TradeLocationId; }
        set { SetTradeLocationId(value); }
      }
      public Builder SetTradeLocationId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradeLocationId = true;
        result.tradeLocationId_ = value;
        return this;
      }
      public Builder ClearTradeLocationId() {
        PrepareBuilder();
        result.hasTradeLocationId = false;
        result.tradeLocationId_ = "";
        return this;
      }
    }
    static CreateExternalOrderResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderSearchResult : pb::GeneratedMessage<OrderSearchResult, OrderSearchResult.Builder> {
    private OrderSearchResult() { }
    private static readonly OrderSearchResult defaultInstance = new OrderSearchResult().MakeReadOnly();
    private static readonly string[] _orderSearchResultFieldNames = new string[] { "is_complete", "order_record" };
    private static readonly uint[] _orderSearchResultFieldTags = new uint[] { 16, 10 };
    public static OrderSearchResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderSearchResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderSearchResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderSearchResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderSearchResult, OrderSearchResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderSearchResult__FieldAccessorTable; }
    }
    
    public const int OrderRecordFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord> orderRecord_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord> OrderRecordList {
      get { return orderRecord_; }
    }
    public int OrderRecordCount {
      get { return orderRecord_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord GetOrderRecord(int index) {
      return orderRecord_[index];
    }
    
    public const int IsCompleteFieldNumber = 2;
    private bool hasIsComplete;
    private bool isComplete_ = true;
    public bool HasIsComplete {
      get { return hasIsComplete; }
    }
    public bool IsComplete {
      get { return isComplete_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord element in OrderRecordList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderSearchResultFieldNames;
      if (orderRecord_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], orderRecord_);
      }
      if (hasIsComplete) {
        output.WriteBool(2, field_names[0], IsComplete);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord element in OrderRecordList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasIsComplete) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsComplete);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderSearchResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderSearchResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderSearchResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderSearchResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderSearchResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderSearchResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderSearchResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderSearchResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderSearchResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderSearchResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderSearchResult MakeReadOnly() {
      orderRecord_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderSearchResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderSearchResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderSearchResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderSearchResult result;
      
      private OrderSearchResult PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderSearchResult original = result;
          result = new OrderSearchResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderSearchResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult.Descriptor; }
      }
      
      public override OrderSearchResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult.DefaultInstance; }
      }
      
      public override OrderSearchResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderSearchResult) {
          return MergeFrom((OrderSearchResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderSearchResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderSearchResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.orderRecord_.Count != 0) {
          result.orderRecord_.Add(other.orderRecord_);
        }
        if (other.HasIsComplete) {
          IsComplete = other.IsComplete;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderSearchResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderSearchResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.orderRecord_, global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasIsComplete = input.ReadBool(ref result.isComplete_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord> OrderRecordList {
        get { return PrepareBuilder().orderRecord_; }
      }
      public int OrderRecordCount {
        get { return result.OrderRecordCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord GetOrderRecord(int index) {
        return result.GetOrderRecord(index);
      }
      public Builder SetOrderRecord(int index, global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orderRecord_[index] = value;
        return this;
      }
      public Builder SetOrderRecord(int index, global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.orderRecord_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOrderRecord(global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orderRecord_.Add(value);
        return this;
      }
      public Builder AddOrderRecord(global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.orderRecord_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOrderRecord(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord> values) {
        PrepareBuilder();
        result.orderRecord_.Add(values);
        return this;
      }
      public Builder ClearOrderRecord() {
        PrepareBuilder();
        result.orderRecord_.Clear();
        return this;
      }
      
      public bool HasIsComplete {
        get { return result.hasIsComplete; }
      }
      public bool IsComplete {
        get { return result.IsComplete; }
        set { SetIsComplete(value); }
      }
      public Builder SetIsComplete(bool value) {
        PrepareBuilder();
        result.hasIsComplete = true;
        result.isComplete_ = value;
        return this;
      }
      public Builder ClearIsComplete() {
        PrepareBuilder();
        result.hasIsComplete = false;
        result.isComplete_ = true;
        return this;
      }
    }
    static OrderSearchResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RelatedOrderTreeResult : pb::GeneratedMessage<RelatedOrderTreeResult, RelatedOrderTreeResult.Builder> {
    private RelatedOrderTreeResult() { }
    private static readonly RelatedOrderTreeResult defaultInstance = new RelatedOrderTreeResult().MakeReadOnly();
    private static readonly string[] _relatedOrderTreeResultFieldNames = new string[] { "is_complete", "related_order" };
    private static readonly uint[] _relatedOrderTreeResultFieldTags = new uint[] { 16, 10 };
    public static RelatedOrderTreeResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RelatedOrderTreeResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RelatedOrderTreeResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RelatedOrderTreeResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RelatedOrderTreeResult, RelatedOrderTreeResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RelatedOrderTreeResult__FieldAccessorTable; }
    }
    
    public const int RelatedOrderFieldNumber = 1;
    private bool hasRelatedOrder;
    private global::CmsApiSamples.Protocol.CMSApi.RelatedOrder relatedOrder_;
    public bool HasRelatedOrder {
      get { return hasRelatedOrder; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RelatedOrder RelatedOrder {
      get { return relatedOrder_ ?? global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.DefaultInstance; }
    }
    
    public const int IsCompleteFieldNumber = 2;
    private bool hasIsComplete;
    private bool isComplete_ = true;
    public bool HasIsComplete {
      get { return hasIsComplete; }
    }
    public bool IsComplete {
      get { return isComplete_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasRelatedOrder) {
          if (!RelatedOrder.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _relatedOrderTreeResultFieldNames;
      if (hasRelatedOrder) {
        output.WriteMessage(1, field_names[1], RelatedOrder);
      }
      if (hasIsComplete) {
        output.WriteBool(2, field_names[0], IsComplete);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRelatedOrder) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RelatedOrder);
      }
      if (hasIsComplete) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsComplete);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RelatedOrderTreeResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RelatedOrderTreeResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RelatedOrderTreeResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RelatedOrderTreeResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RelatedOrderTreeResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RelatedOrderTreeResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RelatedOrderTreeResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RelatedOrderTreeResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RelatedOrderTreeResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RelatedOrderTreeResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RelatedOrderTreeResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RelatedOrderTreeResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RelatedOrderTreeResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RelatedOrderTreeResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RelatedOrderTreeResult result;
      
      private RelatedOrderTreeResult PrepareBuilder() {
        if (resultIsReadOnly) {
          RelatedOrderTreeResult original = result;
          result = new RelatedOrderTreeResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RelatedOrderTreeResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult.Descriptor; }
      }
      
      public override RelatedOrderTreeResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult.DefaultInstance; }
      }
      
      public override RelatedOrderTreeResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RelatedOrderTreeResult) {
          return MergeFrom((RelatedOrderTreeResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RelatedOrderTreeResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RelatedOrderTreeResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRelatedOrder) {
          MergeRelatedOrder(other.RelatedOrder);
        }
        if (other.HasIsComplete) {
          IsComplete = other.IsComplete;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_relatedOrderTreeResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _relatedOrderTreeResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.CreateBuilder();
              if (result.hasRelatedOrder) {
                subBuilder.MergeFrom(RelatedOrder);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RelatedOrder = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasIsComplete = input.ReadBool(ref result.isComplete_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRelatedOrder {
       get { return result.hasRelatedOrder; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RelatedOrder RelatedOrder {
        get { return result.RelatedOrder; }
        set { SetRelatedOrder(value); }
      }
      public Builder SetRelatedOrder(global::CmsApiSamples.Protocol.CMSApi.RelatedOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRelatedOrder = true;
        result.relatedOrder_ = value;
        return this;
      }
      public Builder SetRelatedOrder(global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRelatedOrder = true;
        result.relatedOrder_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRelatedOrder(global::CmsApiSamples.Protocol.CMSApi.RelatedOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRelatedOrder &&
            result.relatedOrder_ != global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.DefaultInstance) {
            result.relatedOrder_ = global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.CreateBuilder(result.relatedOrder_).MergeFrom(value).BuildPartial();
        } else {
          result.relatedOrder_ = value;
        }
        result.hasRelatedOrder = true;
        return this;
      }
      public Builder ClearRelatedOrder() {
        PrepareBuilder();
        result.hasRelatedOrder = false;
        result.relatedOrder_ = null;
        return this;
      }
      
      public bool HasIsComplete {
        get { return result.hasIsComplete; }
      }
      public bool IsComplete {
        get { return result.IsComplete; }
        set { SetIsComplete(value); }
      }
      public Builder SetIsComplete(bool value) {
        PrepareBuilder();
        result.hasIsComplete = true;
        result.isComplete_ = value;
        return this;
      }
      public Builder ClearIsComplete() {
        PrepareBuilder();
        result.hasIsComplete = false;
        result.isComplete_ = true;
        return this;
      }
    }
    static RelatedOrderTreeResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CompoundOrderTreeResult : pb::GeneratedMessage<CompoundOrderTreeResult, CompoundOrderTreeResult.Builder> {
    private CompoundOrderTreeResult() { }
    private static readonly CompoundOrderTreeResult defaultInstance = new CompoundOrderTreeResult().MakeReadOnly();
    private static readonly string[] _compoundOrderTreeResultFieldNames = new string[] { "compound_order", "is_complete" };
    private static readonly uint[] _compoundOrderTreeResultFieldTags = new uint[] { 10, 16 };
    public static CompoundOrderTreeResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CompoundOrderTreeResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CompoundOrderTreeResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CompoundOrderTreeResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CompoundOrderTreeResult, CompoundOrderTreeResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CompoundOrderTreeResult__FieldAccessorTable; }
    }
    
    public const int CompoundOrderFieldNumber = 1;
    private bool hasCompoundOrder;
    private global::CmsApiSamples.Protocol.CMSApi.CompoundOrder compoundOrder_;
    public bool HasCompoundOrder {
      get { return hasCompoundOrder; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CompoundOrder CompoundOrder {
      get { return compoundOrder_ ?? global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.DefaultInstance; }
    }
    
    public const int IsCompleteFieldNumber = 2;
    private bool hasIsComplete;
    private bool isComplete_ = true;
    public bool HasIsComplete {
      get { return hasIsComplete; }
    }
    public bool IsComplete {
      get { return isComplete_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasCompoundOrder) {
          if (!CompoundOrder.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _compoundOrderTreeResultFieldNames;
      if (hasCompoundOrder) {
        output.WriteMessage(1, field_names[0], CompoundOrder);
      }
      if (hasIsComplete) {
        output.WriteBool(2, field_names[1], IsComplete);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCompoundOrder) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, CompoundOrder);
      }
      if (hasIsComplete) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsComplete);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CompoundOrderTreeResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompoundOrderTreeResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompoundOrderTreeResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompoundOrderTreeResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompoundOrderTreeResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompoundOrderTreeResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CompoundOrderTreeResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CompoundOrderTreeResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CompoundOrderTreeResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompoundOrderTreeResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CompoundOrderTreeResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CompoundOrderTreeResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CompoundOrderTreeResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CompoundOrderTreeResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CompoundOrderTreeResult result;
      
      private CompoundOrderTreeResult PrepareBuilder() {
        if (resultIsReadOnly) {
          CompoundOrderTreeResult original = result;
          result = new CompoundOrderTreeResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CompoundOrderTreeResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult.Descriptor; }
      }
      
      public override CompoundOrderTreeResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult.DefaultInstance; }
      }
      
      public override CompoundOrderTreeResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CompoundOrderTreeResult) {
          return MergeFrom((CompoundOrderTreeResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CompoundOrderTreeResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CompoundOrderTreeResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCompoundOrder) {
          MergeCompoundOrder(other.CompoundOrder);
        }
        if (other.HasIsComplete) {
          IsComplete = other.IsComplete;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_compoundOrderTreeResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _compoundOrderTreeResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.CreateBuilder();
              if (result.hasCompoundOrder) {
                subBuilder.MergeFrom(CompoundOrder);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CompoundOrder = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasIsComplete = input.ReadBool(ref result.isComplete_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCompoundOrder {
       get { return result.hasCompoundOrder; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CompoundOrder CompoundOrder {
        get { return result.CompoundOrder; }
        set { SetCompoundOrder(value); }
      }
      public Builder SetCompoundOrder(global::CmsApiSamples.Protocol.CMSApi.CompoundOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCompoundOrder = true;
        result.compoundOrder_ = value;
        return this;
      }
      public Builder SetCompoundOrder(global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCompoundOrder = true;
        result.compoundOrder_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCompoundOrder(global::CmsApiSamples.Protocol.CMSApi.CompoundOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCompoundOrder &&
            result.compoundOrder_ != global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.DefaultInstance) {
            result.compoundOrder_ = global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.CreateBuilder(result.compoundOrder_).MergeFrom(value).BuildPartial();
        } else {
          result.compoundOrder_ = value;
        }
        result.hasCompoundOrder = true;
        return this;
      }
      public Builder ClearCompoundOrder() {
        PrepareBuilder();
        result.hasCompoundOrder = false;
        result.compoundOrder_ = null;
        return this;
      }
      
      public bool HasIsComplete {
        get { return result.hasIsComplete; }
      }
      public bool IsComplete {
        get { return result.IsComplete; }
        set { SetIsComplete(value); }
      }
      public Builder SetIsComplete(bool value) {
        PrepareBuilder();
        result.hasIsComplete = true;
        result.isComplete_ = value;
        return this;
      }
      public Builder ClearIsComplete() {
        PrepareBuilder();
        result.hasIsComplete = false;
        result.isComplete_ = true;
        return this;
      }
    }
    static CompoundOrderTreeResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SyntheticStrategyTreeResult : pb::GeneratedMessage<SyntheticStrategyTreeResult, SyntheticStrategyTreeResult.Builder> {
    private SyntheticStrategyTreeResult() { }
    private static readonly SyntheticStrategyTreeResult defaultInstance = new SyntheticStrategyTreeResult().MakeReadOnly();
    private static readonly string[] _syntheticStrategyTreeResultFieldNames = new string[] { "legs", "strategy_name" };
    private static readonly uint[] _syntheticStrategyTreeResultFieldTags = new uint[] { 10, 18 };
    public static SyntheticStrategyTreeResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SyntheticStrategyTreeResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SyntheticStrategyTreeResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_SyntheticStrategyTreeResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SyntheticStrategyTreeResult, SyntheticStrategyTreeResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_SyntheticStrategyTreeResult__FieldAccessorTable; }
    }
    
    public const int LegsFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.StrategyLeg> legs_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.StrategyLeg>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.StrategyLeg> LegsList {
      get { return legs_; }
    }
    public int LegsCount {
      get { return legs_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.StrategyLeg GetLegs(int index) {
      return legs_[index];
    }
    
    public const int StrategyNameFieldNumber = 2;
    private bool hasStrategyName;
    private string strategyName_ = "";
    public bool HasStrategyName {
      get { return hasStrategyName; }
    }
    public string StrategyName {
      get { return strategyName_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _syntheticStrategyTreeResultFieldNames;
      if (legs_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], legs_);
      }
      if (hasStrategyName) {
        output.WriteString(2, field_names[1], StrategyName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.StrategyLeg element in LegsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasStrategyName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, StrategyName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SyntheticStrategyTreeResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyntheticStrategyTreeResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyntheticStrategyTreeResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SyntheticStrategyTreeResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SyntheticStrategyTreeResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyntheticStrategyTreeResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SyntheticStrategyTreeResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SyntheticStrategyTreeResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SyntheticStrategyTreeResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SyntheticStrategyTreeResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SyntheticStrategyTreeResult MakeReadOnly() {
      legs_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SyntheticStrategyTreeResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SyntheticStrategyTreeResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SyntheticStrategyTreeResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SyntheticStrategyTreeResult result;
      
      private SyntheticStrategyTreeResult PrepareBuilder() {
        if (resultIsReadOnly) {
          SyntheticStrategyTreeResult original = result;
          result = new SyntheticStrategyTreeResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SyntheticStrategyTreeResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult.Descriptor; }
      }
      
      public override SyntheticStrategyTreeResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult.DefaultInstance; }
      }
      
      public override SyntheticStrategyTreeResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SyntheticStrategyTreeResult) {
          return MergeFrom((SyntheticStrategyTreeResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SyntheticStrategyTreeResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.SyntheticStrategyTreeResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.legs_.Count != 0) {
          result.legs_.Add(other.legs_);
        }
        if (other.HasStrategyName) {
          StrategyName = other.StrategyName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_syntheticStrategyTreeResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _syntheticStrategyTreeResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.legs_, global::CmsApiSamples.Protocol.CMSApi.StrategyLeg.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              result.hasStrategyName = input.ReadString(ref result.strategyName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.StrategyLeg> LegsList {
        get { return PrepareBuilder().legs_; }
      }
      public int LegsCount {
        get { return result.LegsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.StrategyLeg GetLegs(int index) {
        return result.GetLegs(index);
      }
      public Builder SetLegs(int index, global::CmsApiSamples.Protocol.CMSApi.StrategyLeg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.legs_[index] = value;
        return this;
      }
      public Builder SetLegs(int index, global::CmsApiSamples.Protocol.CMSApi.StrategyLeg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.legs_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLegs(global::CmsApiSamples.Protocol.CMSApi.StrategyLeg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.legs_.Add(value);
        return this;
      }
      public Builder AddLegs(global::CmsApiSamples.Protocol.CMSApi.StrategyLeg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.legs_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLegs(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.StrategyLeg> values) {
        PrepareBuilder();
        result.legs_.Add(values);
        return this;
      }
      public Builder ClearLegs() {
        PrepareBuilder();
        result.legs_.Clear();
        return this;
      }
      
      public bool HasStrategyName {
        get { return result.hasStrategyName; }
      }
      public string StrategyName {
        get { return result.StrategyName; }
        set { SetStrategyName(value); }
      }
      public Builder SetStrategyName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStrategyName = true;
        result.strategyName_ = value;
        return this;
      }
      public Builder ClearStrategyName() {
        PrepareBuilder();
        result.hasStrategyName = false;
        result.strategyName_ = "";
        return this;
      }
    }
    static SyntheticStrategyTreeResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CancelOrderResult : pb::GeneratedMessage<CancelOrderResult, CancelOrderResult.Builder> {
    private CancelOrderResult() { }
    private static readonly CancelOrderResult defaultInstance = new CancelOrderResult().MakeReadOnly();
    private static readonly string[] _cancelOrderResultFieldNames = new string[] {  };
    private static readonly uint[] _cancelOrderResultFieldTags = new uint[] {  };
    public static CancelOrderResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CancelOrderResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CancelOrderResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CancelOrderResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CancelOrderResult, CancelOrderResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CancelOrderResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _cancelOrderResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CancelOrderResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelOrderResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelOrderResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelOrderResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelOrderResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelOrderResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CancelOrderResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CancelOrderResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CancelOrderResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelOrderResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CancelOrderResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CancelOrderResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CancelOrderResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CancelOrderResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CancelOrderResult result;
      
      private CancelOrderResult PrepareBuilder() {
        if (resultIsReadOnly) {
          CancelOrderResult original = result;
          result = new CancelOrderResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CancelOrderResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult.Descriptor; }
      }
      
      public override CancelOrderResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult.DefaultInstance; }
      }
      
      public override CancelOrderResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CancelOrderResult) {
          return MergeFrom((CancelOrderResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CancelOrderResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CancelOrderResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cancelOrderResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cancelOrderResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static CancelOrderResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ReflectAsCanceledOrderResult : pb::GeneratedMessage<ReflectAsCanceledOrderResult, ReflectAsCanceledOrderResult.Builder> {
    private ReflectAsCanceledOrderResult() { }
    private static readonly ReflectAsCanceledOrderResult defaultInstance = new ReflectAsCanceledOrderResult().MakeReadOnly();
    private static readonly string[] _reflectAsCanceledOrderResultFieldNames = new string[] {  };
    private static readonly uint[] _reflectAsCanceledOrderResultFieldTags = new uint[] {  };
    public static ReflectAsCanceledOrderResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReflectAsCanceledOrderResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReflectAsCanceledOrderResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ReflectAsCanceledOrderResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReflectAsCanceledOrderResult, ReflectAsCanceledOrderResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ReflectAsCanceledOrderResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _reflectAsCanceledOrderResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ReflectAsCanceledOrderResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReflectAsCanceledOrderResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReflectAsCanceledOrderResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReflectAsCanceledOrderResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReflectAsCanceledOrderResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReflectAsCanceledOrderResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReflectAsCanceledOrderResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReflectAsCanceledOrderResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReflectAsCanceledOrderResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReflectAsCanceledOrderResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReflectAsCanceledOrderResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReflectAsCanceledOrderResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ReflectAsCanceledOrderResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReflectAsCanceledOrderResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReflectAsCanceledOrderResult result;
      
      private ReflectAsCanceledOrderResult PrepareBuilder() {
        if (resultIsReadOnly) {
          ReflectAsCanceledOrderResult original = result;
          result = new ReflectAsCanceledOrderResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReflectAsCanceledOrderResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult.Descriptor; }
      }
      
      public override ReflectAsCanceledOrderResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult.DefaultInstance; }
      }
      
      public override ReflectAsCanceledOrderResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReflectAsCanceledOrderResult) {
          return MergeFrom((ReflectAsCanceledOrderResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReflectAsCanceledOrderResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ReflectAsCanceledOrderResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reflectAsCanceledOrderResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reflectAsCanceledOrderResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static ReflectAsCanceledOrderResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CancelCompoundOrderTreeResult : pb::GeneratedMessage<CancelCompoundOrderTreeResult, CancelCompoundOrderTreeResult.Builder> {
    private CancelCompoundOrderTreeResult() { }
    private static readonly CancelCompoundOrderTreeResult defaultInstance = new CancelCompoundOrderTreeResult().MakeReadOnly();
    private static readonly string[] _cancelCompoundOrderTreeResultFieldNames = new string[] {  };
    private static readonly uint[] _cancelCompoundOrderTreeResultFieldTags = new uint[] {  };
    public static CancelCompoundOrderTreeResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CancelCompoundOrderTreeResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CancelCompoundOrderTreeResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CancelCompoundOrderTreeResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CancelCompoundOrderTreeResult, CancelCompoundOrderTreeResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CancelCompoundOrderTreeResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _cancelCompoundOrderTreeResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CancelCompoundOrderTreeResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelCompoundOrderTreeResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelCompoundOrderTreeResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelCompoundOrderTreeResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelCompoundOrderTreeResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelCompoundOrderTreeResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CancelCompoundOrderTreeResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CancelCompoundOrderTreeResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CancelCompoundOrderTreeResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelCompoundOrderTreeResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CancelCompoundOrderTreeResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CancelCompoundOrderTreeResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CancelCompoundOrderTreeResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CancelCompoundOrderTreeResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CancelCompoundOrderTreeResult result;
      
      private CancelCompoundOrderTreeResult PrepareBuilder() {
        if (resultIsReadOnly) {
          CancelCompoundOrderTreeResult original = result;
          result = new CancelCompoundOrderTreeResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CancelCompoundOrderTreeResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult.Descriptor; }
      }
      
      public override CancelCompoundOrderTreeResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult.DefaultInstance; }
      }
      
      public override CancelCompoundOrderTreeResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CancelCompoundOrderTreeResult) {
          return MergeFrom((CancelCompoundOrderTreeResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CancelCompoundOrderTreeResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CancelCompoundOrderTreeResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cancelCompoundOrderTreeResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cancelCompoundOrderTreeResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static CancelCompoundOrderTreeResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountInfoResult : pb::GeneratedMessage<AccountInfoResult, AccountInfoResult.Builder> {
    private AccountInfoResult() { }
    private static readonly AccountInfoResult defaultInstance = new AccountInfoResult().MakeReadOnly();
    private static readonly string[] _accountInfoResultFieldNames = new string[] { "account" };
    private static readonly uint[] _accountInfoResultFieldTags = new uint[] { 10 };
    public static AccountInfoResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountInfoResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountInfoResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountInfoResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountInfoResult, AccountInfoResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountInfoResult__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private global::CmsApiSamples.Protocol.CMSApi.Account account_;
    public bool HasAccount {
      get { return hasAccount; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Account Account {
      get { return account_ ?? global::CmsApiSamples.Protocol.CMSApi.Account.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccount) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountInfoResultFieldNames;
      if (hasAccount) {
        output.WriteMessage(1, field_names[0], Account);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccount) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Account);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountInfoResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountInfoResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountInfoResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountInfoResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountInfoResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountInfoResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountInfoResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountInfoResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountInfoResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountInfoResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountInfoResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountInfoResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountInfoResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountInfoResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountInfoResult result;
      
      private AccountInfoResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountInfoResult original = result;
          result = new AccountInfoResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountInfoResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult.Descriptor; }
      }
      
      public override AccountInfoResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult.DefaultInstance; }
      }
      
      public override AccountInfoResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountInfoResult) {
          return MergeFrom((AccountInfoResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountInfoResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountInfoResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          MergeAccount(other.Account);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountInfoResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountInfoResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.Account.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Account.CreateBuilder();
              if (result.hasAccount) {
                subBuilder.MergeFrom(Account);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Account = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
       get { return result.hasAccount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Account Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(global::CmsApiSamples.Protocol.CMSApi.Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder SetAccount(global::CmsApiSamples.Protocol.CMSApi.Account.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccount(global::CmsApiSamples.Protocol.CMSApi.Account value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccount &&
            result.account_ != global::CmsApiSamples.Protocol.CMSApi.Account.DefaultInstance) {
            result.account_ = global::CmsApiSamples.Protocol.CMSApi.Account.CreateBuilder(result.account_).MergeFrom(value).BuildPartial();
        } else {
          result.account_ = value;
        }
        result.hasAccount = true;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = null;
        return this;
      }
    }
    static AccountInfoResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BalanceRecordsResult : pb::GeneratedMessage<BalanceRecordsResult, BalanceRecordsResult.Builder> {
    private BalanceRecordsResult() { }
    private static readonly BalanceRecordsResult defaultInstance = new BalanceRecordsResult().MakeReadOnly();
    private static readonly string[] _balanceRecordsResultFieldNames = new string[] { "balance_record" };
    private static readonly uint[] _balanceRecordsResultFieldTags = new uint[] { 10 };
    public static BalanceRecordsResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BalanceRecordsResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BalanceRecordsResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_BalanceRecordsResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BalanceRecordsResult, BalanceRecordsResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_BalanceRecordsResult__FieldAccessorTable; }
    }
    
    public const int BalanceRecordFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.BalanceRecord> balanceRecord_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.BalanceRecord>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.BalanceRecord> BalanceRecordList {
      get { return balanceRecord_; }
    }
    public int BalanceRecordCount {
      get { return balanceRecord_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.BalanceRecord GetBalanceRecord(int index) {
      return balanceRecord_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.BalanceRecord element in BalanceRecordList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _balanceRecordsResultFieldNames;
      if (balanceRecord_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], balanceRecord_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.BalanceRecord element in BalanceRecordList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BalanceRecordsResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BalanceRecordsResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BalanceRecordsResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BalanceRecordsResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BalanceRecordsResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BalanceRecordsResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BalanceRecordsResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BalanceRecordsResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BalanceRecordsResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BalanceRecordsResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BalanceRecordsResult MakeReadOnly() {
      balanceRecord_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BalanceRecordsResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BalanceRecordsResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BalanceRecordsResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BalanceRecordsResult result;
      
      private BalanceRecordsResult PrepareBuilder() {
        if (resultIsReadOnly) {
          BalanceRecordsResult original = result;
          result = new BalanceRecordsResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BalanceRecordsResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult.Descriptor; }
      }
      
      public override BalanceRecordsResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult.DefaultInstance; }
      }
      
      public override BalanceRecordsResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BalanceRecordsResult) {
          return MergeFrom((BalanceRecordsResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BalanceRecordsResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.BalanceRecordsResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.balanceRecord_.Count != 0) {
          result.balanceRecord_.Add(other.balanceRecord_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_balanceRecordsResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _balanceRecordsResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.balanceRecord_, global::CmsApiSamples.Protocol.CMSApi.BalanceRecord.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.BalanceRecord> BalanceRecordList {
        get { return PrepareBuilder().balanceRecord_; }
      }
      public int BalanceRecordCount {
        get { return result.BalanceRecordCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.BalanceRecord GetBalanceRecord(int index) {
        return result.GetBalanceRecord(index);
      }
      public Builder SetBalanceRecord(int index, global::CmsApiSamples.Protocol.CMSApi.BalanceRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.balanceRecord_[index] = value;
        return this;
      }
      public Builder SetBalanceRecord(int index, global::CmsApiSamples.Protocol.CMSApi.BalanceRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.balanceRecord_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBalanceRecord(global::CmsApiSamples.Protocol.CMSApi.BalanceRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.balanceRecord_.Add(value);
        return this;
      }
      public Builder AddBalanceRecord(global::CmsApiSamples.Protocol.CMSApi.BalanceRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.balanceRecord_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBalanceRecord(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.BalanceRecord> values) {
        PrepareBuilder();
        result.balanceRecord_.Add(values);
        return this;
      }
      public Builder ClearBalanceRecord() {
        PrepareBuilder();
        result.balanceRecord_.Clear();
        return this;
      }
    }
    static BalanceRecordsResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateBalanceRecordResult : pb::GeneratedMessage<CreateBalanceRecordResult, CreateBalanceRecordResult.Builder> {
    private CreateBalanceRecordResult() { }
    private static readonly CreateBalanceRecordResult defaultInstance = new CreateBalanceRecordResult().MakeReadOnly();
    private static readonly string[] _createBalanceRecordResultFieldNames = new string[] { "balance_record_id" };
    private static readonly uint[] _createBalanceRecordResultFieldTags = new uint[] { 24 };
    public static CreateBalanceRecordResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateBalanceRecordResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateBalanceRecordResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateBalanceRecordResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateBalanceRecordResult, CreateBalanceRecordResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateBalanceRecordResult__FieldAccessorTable; }
    }
    
    public const int BalanceRecordIdFieldNumber = 3;
    private bool hasBalanceRecordId;
    private int balanceRecordId_;
    public bool HasBalanceRecordId {
      get { return hasBalanceRecordId; }
    }
    public int BalanceRecordId {
      get { return balanceRecordId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBalanceRecordId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createBalanceRecordResultFieldNames;
      if (hasBalanceRecordId) {
        output.WriteSInt32(3, field_names[0], BalanceRecordId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBalanceRecordId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(3, BalanceRecordId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateBalanceRecordResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateBalanceRecordResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateBalanceRecordResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateBalanceRecordResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateBalanceRecordResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateBalanceRecordResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateBalanceRecordResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateBalanceRecordResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateBalanceRecordResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateBalanceRecordResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateBalanceRecordResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateBalanceRecordResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateBalanceRecordResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateBalanceRecordResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateBalanceRecordResult result;
      
      private CreateBalanceRecordResult PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateBalanceRecordResult original = result;
          result = new CreateBalanceRecordResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateBalanceRecordResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult.Descriptor; }
      }
      
      public override CreateBalanceRecordResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult.DefaultInstance; }
      }
      
      public override CreateBalanceRecordResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateBalanceRecordResult) {
          return MergeFrom((CreateBalanceRecordResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateBalanceRecordResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CreateBalanceRecordResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBalanceRecordId) {
          BalanceRecordId = other.BalanceRecordId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createBalanceRecordResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createBalanceRecordResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 24: {
              result.hasBalanceRecordId = input.ReadSInt32(ref result.balanceRecordId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBalanceRecordId {
        get { return result.hasBalanceRecordId; }
      }
      public int BalanceRecordId {
        get { return result.BalanceRecordId; }
        set { SetBalanceRecordId(value); }
      }
      public Builder SetBalanceRecordId(int value) {
        PrepareBuilder();
        result.hasBalanceRecordId = true;
        result.balanceRecordId_ = value;
        return this;
      }
      public Builder ClearBalanceRecordId() {
        PrepareBuilder();
        result.hasBalanceRecordId = false;
        result.balanceRecordId_ = 0;
        return this;
      }
    }
    static CreateBalanceRecordResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateBalanceRecordResult : pb::GeneratedMessage<UpdateBalanceRecordResult, UpdateBalanceRecordResult.Builder> {
    private UpdateBalanceRecordResult() { }
    private static readonly UpdateBalanceRecordResult defaultInstance = new UpdateBalanceRecordResult().MakeReadOnly();
    private static readonly string[] _updateBalanceRecordResultFieldNames = new string[] {  };
    private static readonly uint[] _updateBalanceRecordResultFieldTags = new uint[] {  };
    public static UpdateBalanceRecordResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateBalanceRecordResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateBalanceRecordResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateBalanceRecordResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateBalanceRecordResult, UpdateBalanceRecordResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateBalanceRecordResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateBalanceRecordResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateBalanceRecordResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateBalanceRecordResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateBalanceRecordResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateBalanceRecordResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateBalanceRecordResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateBalanceRecordResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateBalanceRecordResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateBalanceRecordResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateBalanceRecordResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateBalanceRecordResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateBalanceRecordResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateBalanceRecordResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateBalanceRecordResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateBalanceRecordResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateBalanceRecordResult result;
      
      private UpdateBalanceRecordResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateBalanceRecordResult original = result;
          result = new UpdateBalanceRecordResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateBalanceRecordResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult.Descriptor; }
      }
      
      public override UpdateBalanceRecordResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult.DefaultInstance; }
      }
      
      public override UpdateBalanceRecordResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateBalanceRecordResult) {
          return MergeFrom((UpdateBalanceRecordResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateBalanceRecordResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateBalanceRecordResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateBalanceRecordResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateBalanceRecordResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateBalanceRecordResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountSearchResult : pb::GeneratedMessage<AccountSearchResult, AccountSearchResult.Builder> {
    private AccountSearchResult() { }
    private static readonly AccountSearchResult defaultInstance = new AccountSearchResult().MakeReadOnly();
    private static readonly string[] _accountSearchResultFieldNames = new string[] { "account_record", "is_complete" };
    private static readonly uint[] _accountSearchResultFieldTags = new uint[] { 10, 16 };
    public static AccountSearchResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountSearchResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountSearchResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountSearchResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountSearchResult, AccountSearchResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountSearchResult__FieldAccessorTable; }
    }
    
    public const int AccountRecordFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord> accountRecord_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord> AccountRecordList {
      get { return accountRecord_; }
    }
    public int AccountRecordCount {
      get { return accountRecord_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord GetAccountRecord(int index) {
      return accountRecord_[index];
    }
    
    public const int IsCompleteFieldNumber = 2;
    private bool hasIsComplete;
    private bool isComplete_ = true;
    public bool HasIsComplete {
      get { return hasIsComplete; }
    }
    public bool IsComplete {
      get { return isComplete_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord element in AccountRecordList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountSearchResultFieldNames;
      if (accountRecord_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], accountRecord_);
      }
      if (hasIsComplete) {
        output.WriteBool(2, field_names[1], IsComplete);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord element in AccountRecordList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasIsComplete) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsComplete);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountSearchResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSearchResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSearchResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSearchResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSearchResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSearchResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountSearchResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountSearchResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountSearchResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSearchResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountSearchResult MakeReadOnly() {
      accountRecord_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountSearchResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountSearchResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountSearchResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountSearchResult result;
      
      private AccountSearchResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountSearchResult original = result;
          result = new AccountSearchResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountSearchResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult.Descriptor; }
      }
      
      public override AccountSearchResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult.DefaultInstance; }
      }
      
      public override AccountSearchResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountSearchResult) {
          return MergeFrom((AccountSearchResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountSearchResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountSearchResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.accountRecord_.Count != 0) {
          result.accountRecord_.Add(other.accountRecord_);
        }
        if (other.HasIsComplete) {
          IsComplete = other.IsComplete;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountSearchResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountSearchResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.accountRecord_, global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasIsComplete = input.ReadBool(ref result.isComplete_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord> AccountRecordList {
        get { return PrepareBuilder().accountRecord_; }
      }
      public int AccountRecordCount {
        get { return result.AccountRecordCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord GetAccountRecord(int index) {
        return result.GetAccountRecord(index);
      }
      public Builder SetAccountRecord(int index, global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accountRecord_[index] = value;
        return this;
      }
      public Builder SetAccountRecord(int index, global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accountRecord_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAccountRecord(global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accountRecord_.Add(value);
        return this;
      }
      public Builder AddAccountRecord(global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accountRecord_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAccountRecord(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord> values) {
        PrepareBuilder();
        result.accountRecord_.Add(values);
        return this;
      }
      public Builder ClearAccountRecord() {
        PrepareBuilder();
        result.accountRecord_.Clear();
        return this;
      }
      
      public bool HasIsComplete {
        get { return result.hasIsComplete; }
      }
      public bool IsComplete {
        get { return result.IsComplete; }
        set { SetIsComplete(value); }
      }
      public Builder SetIsComplete(bool value) {
        PrepareBuilder();
        result.hasIsComplete = true;
        result.isComplete_ = value;
        return this;
      }
      public Builder ClearIsComplete() {
        PrepareBuilder();
        result.hasIsComplete = false;
        result.isComplete_ = true;
        return this;
      }
    }
    static AccountSearchResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountRouteListResult : pb::GeneratedMessage<AccountRouteListResult, AccountRouteListResult.Builder> {
    private AccountRouteListResult() { }
    private static readonly AccountRouteListResult defaultInstance = new AccountRouteListResult().MakeReadOnly();
    private static readonly string[] _accountRouteListResultFieldNames = new string[] { "account_route_record" };
    private static readonly uint[] _accountRouteListResultFieldTags = new uint[] { 10 };
    public static AccountRouteListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountRouteListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountRouteListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRouteListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountRouteListResult, AccountRouteListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRouteListResult__FieldAccessorTable; }
    }
    
    public const int AccountRouteRecordFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord> accountRouteRecord_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord> AccountRouteRecordList {
      get { return accountRouteRecord_; }
    }
    public int AccountRouteRecordCount {
      get { return accountRouteRecord_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord GetAccountRouteRecord(int index) {
      return accountRouteRecord_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord element in AccountRouteRecordList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountRouteListResultFieldNames;
      if (accountRouteRecord_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], accountRouteRecord_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord element in AccountRouteRecordList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountRouteListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRouteListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRouteListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRouteListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRouteListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRouteListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountRouteListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountRouteListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountRouteListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRouteListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountRouteListResult MakeReadOnly() {
      accountRouteRecord_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountRouteListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountRouteListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountRouteListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountRouteListResult result;
      
      private AccountRouteListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountRouteListResult original = result;
          result = new AccountRouteListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountRouteListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult.Descriptor; }
      }
      
      public override AccountRouteListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult.DefaultInstance; }
      }
      
      public override AccountRouteListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountRouteListResult) {
          return MergeFrom((AccountRouteListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountRouteListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountRouteListResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.accountRouteRecord_.Count != 0) {
          result.accountRouteRecord_.Add(other.accountRouteRecord_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountRouteListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountRouteListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.accountRouteRecord_, global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord> AccountRouteRecordList {
        get { return PrepareBuilder().accountRouteRecord_; }
      }
      public int AccountRouteRecordCount {
        get { return result.AccountRouteRecordCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord GetAccountRouteRecord(int index) {
        return result.GetAccountRouteRecord(index);
      }
      public Builder SetAccountRouteRecord(int index, global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accountRouteRecord_[index] = value;
        return this;
      }
      public Builder SetAccountRouteRecord(int index, global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accountRouteRecord_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAccountRouteRecord(global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accountRouteRecord_.Add(value);
        return this;
      }
      public Builder AddAccountRouteRecord(global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accountRouteRecord_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAccountRouteRecord(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord> values) {
        PrepareBuilder();
        result.accountRouteRecord_.Add(values);
        return this;
      }
      public Builder ClearAccountRouteRecord() {
        PrepareBuilder();
        result.accountRouteRecord_.Clear();
        return this;
      }
    }
    static AccountRouteListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountUserAuthorizationListResult : pb::GeneratedMessage<AccountUserAuthorizationListResult, AccountUserAuthorizationListResult.Builder> {
    private AccountUserAuthorizationListResult() { }
    private static readonly AccountUserAuthorizationListResult defaultInstance = new AccountUserAuthorizationListResult().MakeReadOnly();
    private static readonly string[] _accountUserAuthorizationListResultFieldNames = new string[] { "account_user_link", "is_complete" };
    private static readonly uint[] _accountUserAuthorizationListResultFieldTags = new uint[] { 10, 16 };
    public static AccountUserAuthorizationListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountUserAuthorizationListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountUserAuthorizationListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountUserAuthorizationListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountUserAuthorizationListResult, AccountUserAuthorizationListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountUserAuthorizationListResult__FieldAccessorTable; }
    }
    
    public const int AccountUserLinkFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountUserLink> accountUserLink_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountUserLink>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AccountUserLink> AccountUserLinkList {
      get { return accountUserLink_; }
    }
    public int AccountUserLinkCount {
      get { return accountUserLink_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountUserLink GetAccountUserLink(int index) {
      return accountUserLink_[index];
    }
    
    public const int IsCompleteFieldNumber = 2;
    private bool hasIsComplete;
    private bool isComplete_ = true;
    public bool HasIsComplete {
      get { return hasIsComplete; }
    }
    public bool IsComplete {
      get { return isComplete_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountUserAuthorizationListResultFieldNames;
      if (accountUserLink_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], accountUserLink_);
      }
      if (hasIsComplete) {
        output.WriteBool(2, field_names[1], IsComplete);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.AccountUserLink element in AccountUserLinkList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasIsComplete) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsComplete);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountUserAuthorizationListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountUserAuthorizationListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountUserAuthorizationListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountUserAuthorizationListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountUserAuthorizationListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountUserAuthorizationListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountUserAuthorizationListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountUserAuthorizationListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountUserAuthorizationListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountUserAuthorizationListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountUserAuthorizationListResult MakeReadOnly() {
      accountUserLink_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountUserAuthorizationListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountUserAuthorizationListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountUserAuthorizationListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountUserAuthorizationListResult result;
      
      private AccountUserAuthorizationListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountUserAuthorizationListResult original = result;
          result = new AccountUserAuthorizationListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountUserAuthorizationListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult.Descriptor; }
      }
      
      public override AccountUserAuthorizationListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult.DefaultInstance; }
      }
      
      public override AccountUserAuthorizationListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountUserAuthorizationListResult) {
          return MergeFrom((AccountUserAuthorizationListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountUserAuthorizationListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountUserAuthorizationListResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.accountUserLink_.Count != 0) {
          result.accountUserLink_.Add(other.accountUserLink_);
        }
        if (other.HasIsComplete) {
          IsComplete = other.IsComplete;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountUserAuthorizationListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountUserAuthorizationListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.accountUserLink_, global::CmsApiSamples.Protocol.CMSApi.AccountUserLink.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasIsComplete = input.ReadBool(ref result.isComplete_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountUserLink> AccountUserLinkList {
        get { return PrepareBuilder().accountUserLink_; }
      }
      public int AccountUserLinkCount {
        get { return result.AccountUserLinkCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountUserLink GetAccountUserLink(int index) {
        return result.GetAccountUserLink(index);
      }
      public Builder SetAccountUserLink(int index, global::CmsApiSamples.Protocol.CMSApi.AccountUserLink value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accountUserLink_[index] = value;
        return this;
      }
      public Builder SetAccountUserLink(int index, global::CmsApiSamples.Protocol.CMSApi.AccountUserLink.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accountUserLink_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAccountUserLink(global::CmsApiSamples.Protocol.CMSApi.AccountUserLink value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accountUserLink_.Add(value);
        return this;
      }
      public Builder AddAccountUserLink(global::CmsApiSamples.Protocol.CMSApi.AccountUserLink.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accountUserLink_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAccountUserLink(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AccountUserLink> values) {
        PrepareBuilder();
        result.accountUserLink_.Add(values);
        return this;
      }
      public Builder ClearAccountUserLink() {
        PrepareBuilder();
        result.accountUserLink_.Clear();
        return this;
      }
      
      public bool HasIsComplete {
        get { return result.hasIsComplete; }
      }
      public bool IsComplete {
        get { return result.IsComplete; }
        set { SetIsComplete(value); }
      }
      public Builder SetIsComplete(bool value) {
        PrepareBuilder();
        result.hasIsComplete = true;
        result.isComplete_ = value;
        return this;
      }
      public Builder ClearIsComplete() {
        PrepareBuilder();
        result.hasIsComplete = false;
        result.isComplete_ = true;
        return this;
      }
    }
    static AccountUserAuthorizationListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountSettingsResult : pb::GeneratedMessage<AccountSettingsResult, AccountSettingsResult.Builder> {
    private AccountSettingsResult() { }
    private static readonly AccountSettingsResult defaultInstance = new AccountSettingsResult().MakeReadOnly();
    private static readonly string[] _accountSettingsResultFieldNames = new string[] { "account_settings" };
    private static readonly uint[] _accountSettingsResultFieldTags = new uint[] { 10 };
    public static AccountSettingsResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountSettingsResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountSettingsResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountSettingsResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountSettingsResult, AccountSettingsResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountSettingsResult__FieldAccessorTable; }
    }
    
    public const int AccountSettingsFieldNumber = 1;
    private bool hasAccountSettings;
    private global::CmsApiSamples.Protocol.CMSApi.AccountSettings accountSettings_;
    public bool HasAccountSettings {
      get { return hasAccountSettings; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountSettings AccountSettings {
      get { return accountSettings_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountSettings.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountSettings) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountSettingsResultFieldNames;
      if (hasAccountSettings) {
        output.WriteMessage(1, field_names[0], AccountSettings);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountSettings) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, AccountSettings);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountSettingsResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSettingsResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSettingsResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSettingsResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSettingsResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSettingsResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountSettingsResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountSettingsResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountSettingsResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSettingsResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountSettingsResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountSettingsResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountSettingsResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountSettingsResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountSettingsResult result;
      
      private AccountSettingsResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountSettingsResult original = result;
          result = new AccountSettingsResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountSettingsResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult.Descriptor; }
      }
      
      public override AccountSettingsResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult.DefaultInstance; }
      }
      
      public override AccountSettingsResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountSettingsResult) {
          return MergeFrom((AccountSettingsResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountSettingsResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountSettingsResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountSettings) {
          MergeAccountSettings(other.AccountSettings);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountSettingsResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountSettingsResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.AccountSettings.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountSettings.CreateBuilder();
              if (result.hasAccountSettings) {
                subBuilder.MergeFrom(AccountSettings);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountSettings = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountSettings {
       get { return result.hasAccountSettings; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountSettings AccountSettings {
        get { return result.AccountSettings; }
        set { SetAccountSettings(value); }
      }
      public Builder SetAccountSettings(global::CmsApiSamples.Protocol.CMSApi.AccountSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountSettings = true;
        result.accountSettings_ = value;
        return this;
      }
      public Builder SetAccountSettings(global::CmsApiSamples.Protocol.CMSApi.AccountSettings.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountSettings = true;
        result.accountSettings_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountSettings(global::CmsApiSamples.Protocol.CMSApi.AccountSettings value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountSettings &&
            result.accountSettings_ != global::CmsApiSamples.Protocol.CMSApi.AccountSettings.DefaultInstance) {
            result.accountSettings_ = global::CmsApiSamples.Protocol.CMSApi.AccountSettings.CreateBuilder(result.accountSettings_).MergeFrom(value).BuildPartial();
        } else {
          result.accountSettings_ = value;
        }
        result.hasAccountSettings = true;
        return this;
      }
      public Builder ClearAccountSettings() {
        PrepareBuilder();
        result.hasAccountSettings = false;
        result.accountSettings_ = null;
        return this;
      }
    }
    static AccountSettingsResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountRiskParametersResult : pb::GeneratedMessage<AccountRiskParametersResult, AccountRiskParametersResult.Builder> {
    private AccountRiskParametersResult() { }
    private static readonly AccountRiskParametersResult defaultInstance = new AccountRiskParametersResult().MakeReadOnly();
    private static readonly string[] _accountRiskParametersResultFieldNames = new string[] { "account_risk_parameters" };
    private static readonly uint[] _accountRiskParametersResultFieldTags = new uint[] { 10 };
    public static AccountRiskParametersResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountRiskParametersResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountRiskParametersResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRiskParametersResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountRiskParametersResult, AccountRiskParametersResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRiskParametersResult__FieldAccessorTable; }
    }
    
    public const int AccountRiskParametersFieldNumber = 1;
    private bool hasAccountRiskParameters;
    private global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters accountRiskParameters_;
    public bool HasAccountRiskParameters {
      get { return hasAccountRiskParameters; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters AccountRiskParameters {
      get { return accountRiskParameters_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountRiskParameters) return false;
        if (!AccountRiskParameters.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountRiskParametersResultFieldNames;
      if (hasAccountRiskParameters) {
        output.WriteMessage(1, field_names[0], AccountRiskParameters);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountRiskParameters) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, AccountRiskParameters);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountRiskParametersResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRiskParametersResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRiskParametersResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRiskParametersResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRiskParametersResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRiskParametersResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountRiskParametersResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountRiskParametersResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountRiskParametersResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRiskParametersResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountRiskParametersResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountRiskParametersResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountRiskParametersResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountRiskParametersResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountRiskParametersResult result;
      
      private AccountRiskParametersResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountRiskParametersResult original = result;
          result = new AccountRiskParametersResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountRiskParametersResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult.Descriptor; }
      }
      
      public override AccountRiskParametersResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult.DefaultInstance; }
      }
      
      public override AccountRiskParametersResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountRiskParametersResult) {
          return MergeFrom((AccountRiskParametersResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountRiskParametersResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountRiskParametersResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountRiskParameters) {
          MergeAccountRiskParameters(other.AccountRiskParameters);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountRiskParametersResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountRiskParametersResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.CreateBuilder();
              if (result.hasAccountRiskParameters) {
                subBuilder.MergeFrom(AccountRiskParameters);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountRiskParameters = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountRiskParameters {
       get { return result.hasAccountRiskParameters; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters AccountRiskParameters {
        get { return result.AccountRiskParameters; }
        set { SetAccountRiskParameters(value); }
      }
      public Builder SetAccountRiskParameters(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountRiskParameters = true;
        result.accountRiskParameters_ = value;
        return this;
      }
      public Builder SetAccountRiskParameters(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountRiskParameters = true;
        result.accountRiskParameters_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountRiskParameters(global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountRiskParameters &&
            result.accountRiskParameters_ != global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.DefaultInstance) {
            result.accountRiskParameters_ = global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.CreateBuilder(result.accountRiskParameters_).MergeFrom(value).BuildPartial();
        } else {
          result.accountRiskParameters_ = value;
        }
        result.hasAccountRiskParameters = true;
        return this;
      }
      public Builder ClearAccountRiskParameters() {
        PrepareBuilder();
        result.hasAccountRiskParameters = false;
        result.accountRiskParameters_ = null;
        return this;
      }
    }
    static AccountRiskParametersResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateRiskParametersResult : pb::GeneratedMessage<UpdateRiskParametersResult, UpdateRiskParametersResult.Builder> {
    private UpdateRiskParametersResult() { }
    private static readonly UpdateRiskParametersResult defaultInstance = new UpdateRiskParametersResult().MakeReadOnly();
    private static readonly string[] _updateRiskParametersResultFieldNames = new string[] {  };
    private static readonly uint[] _updateRiskParametersResultFieldTags = new uint[] {  };
    public static UpdateRiskParametersResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateRiskParametersResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateRiskParametersResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateRiskParametersResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateRiskParametersResult, UpdateRiskParametersResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateRiskParametersResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateRiskParametersResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateRiskParametersResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRiskParametersResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRiskParametersResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateRiskParametersResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateRiskParametersResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRiskParametersResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateRiskParametersResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateRiskParametersResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateRiskParametersResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateRiskParametersResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateRiskParametersResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateRiskParametersResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateRiskParametersResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateRiskParametersResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateRiskParametersResult result;
      
      private UpdateRiskParametersResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateRiskParametersResult original = result;
          result = new UpdateRiskParametersResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateRiskParametersResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult.Descriptor; }
      }
      
      public override UpdateRiskParametersResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult.DefaultInstance; }
      }
      
      public override UpdateRiskParametersResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateRiskParametersResult) {
          return MergeFrom((UpdateRiskParametersResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateRiskParametersResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateRiskParametersResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateRiskParametersResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateRiskParametersResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateRiskParametersResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountExchangeGroupsResult : pb::GeneratedMessage<AccountExchangeGroupsResult, AccountExchangeGroupsResult.Builder> {
    private AccountExchangeGroupsResult() { }
    private static readonly AccountExchangeGroupsResult defaultInstance = new AccountExchangeGroupsResult().MakeReadOnly();
    private static readonly string[] _accountExchangeGroupsResultFieldNames = new string[] { "exchange_group", "instrument_type" };
    private static readonly uint[] _accountExchangeGroupsResultFieldTags = new uint[] { 10, 18 };
    public static AccountExchangeGroupsResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountExchangeGroupsResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountExchangeGroupsResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountExchangeGroupsResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountExchangeGroupsResult, AccountExchangeGroupsResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountExchangeGroupsResult__FieldAccessorTable; }
    }
    
    public const int ExchangeGroupFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup> exchangeGroup_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup> ExchangeGroupList {
      get { return exchangeGroup_; }
    }
    public int ExchangeGroupCount {
      get { return exchangeGroup_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup GetExchangeGroup(int index) {
      return exchangeGroup_[index];
    }
    
    public const int InstrumentTypeFieldNumber = 2;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.InstrumentType> instrumentType_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.InstrumentType>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.InstrumentType> InstrumentTypeList {
      get { return instrumentType_; }
    }
    public int InstrumentTypeCount {
      get { return instrumentType_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.InstrumentType GetInstrumentType(int index) {
      return instrumentType_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup element in ExchangeGroupList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::CmsApiSamples.Protocol.CMSApi.InstrumentType element in InstrumentTypeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountExchangeGroupsResultFieldNames;
      if (exchangeGroup_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], exchangeGroup_);
      }
      if (instrumentType_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], instrumentType_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup element in ExchangeGroupList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.InstrumentType element in InstrumentTypeList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountExchangeGroupsResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountExchangeGroupsResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountExchangeGroupsResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountExchangeGroupsResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountExchangeGroupsResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountExchangeGroupsResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountExchangeGroupsResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountExchangeGroupsResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountExchangeGroupsResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountExchangeGroupsResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountExchangeGroupsResult MakeReadOnly() {
      exchangeGroup_.MakeReadOnly();
      instrumentType_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountExchangeGroupsResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountExchangeGroupsResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountExchangeGroupsResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountExchangeGroupsResult result;
      
      private AccountExchangeGroupsResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountExchangeGroupsResult original = result;
          result = new AccountExchangeGroupsResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountExchangeGroupsResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult.Descriptor; }
      }
      
      public override AccountExchangeGroupsResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult.DefaultInstance; }
      }
      
      public override AccountExchangeGroupsResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountExchangeGroupsResult) {
          return MergeFrom((AccountExchangeGroupsResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountExchangeGroupsResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountExchangeGroupsResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.exchangeGroup_.Count != 0) {
          result.exchangeGroup_.Add(other.exchangeGroup_);
        }
        if (other.instrumentType_.Count != 0) {
          result.instrumentType_.Add(other.instrumentType_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountExchangeGroupsResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountExchangeGroupsResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.exchangeGroup_, global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.instrumentType_, global::CmsApiSamples.Protocol.CMSApi.InstrumentType.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup> ExchangeGroupList {
        get { return PrepareBuilder().exchangeGroup_; }
      }
      public int ExchangeGroupCount {
        get { return result.ExchangeGroupCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup GetExchangeGroup(int index) {
        return result.GetExchangeGroup(index);
      }
      public Builder SetExchangeGroup(int index, global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.exchangeGroup_[index] = value;
        return this;
      }
      public Builder SetExchangeGroup(int index, global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.exchangeGroup_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddExchangeGroup(global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.exchangeGroup_.Add(value);
        return this;
      }
      public Builder AddExchangeGroup(global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.exchangeGroup_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeExchangeGroup(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup> values) {
        PrepareBuilder();
        result.exchangeGroup_.Add(values);
        return this;
      }
      public Builder ClearExchangeGroup() {
        PrepareBuilder();
        result.exchangeGroup_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.InstrumentType> InstrumentTypeList {
        get { return PrepareBuilder().instrumentType_; }
      }
      public int InstrumentTypeCount {
        get { return result.InstrumentTypeCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.InstrumentType GetInstrumentType(int index) {
        return result.GetInstrumentType(index);
      }
      public Builder SetInstrumentType(int index, global::CmsApiSamples.Protocol.CMSApi.InstrumentType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.instrumentType_[index] = value;
        return this;
      }
      public Builder SetInstrumentType(int index, global::CmsApiSamples.Protocol.CMSApi.InstrumentType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.instrumentType_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddInstrumentType(global::CmsApiSamples.Protocol.CMSApi.InstrumentType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.instrumentType_.Add(value);
        return this;
      }
      public Builder AddInstrumentType(global::CmsApiSamples.Protocol.CMSApi.InstrumentType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.instrumentType_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeInstrumentType(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.InstrumentType> values) {
        PrepareBuilder();
        result.instrumentType_.Add(values);
        return this;
      }
      public Builder ClearInstrumentType() {
        PrepareBuilder();
        result.instrumentType_.Clear();
        return this;
      }
    }
    static AccountExchangeGroupsResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountMarketLimitsResult : pb::GeneratedMessage<AccountMarketLimitsResult, AccountMarketLimitsResult.Builder> {
    private AccountMarketLimitsResult() { }
    private static readonly AccountMarketLimitsResult defaultInstance = new AccountMarketLimitsResult().MakeReadOnly();
    private static readonly string[] _accountMarketLimitsResultFieldNames = new string[] { "account_market_limits" };
    private static readonly uint[] _accountMarketLimitsResultFieldTags = new uint[] { 10 };
    public static AccountMarketLimitsResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountMarketLimitsResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountMarketLimitsResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountMarketLimitsResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountMarketLimitsResult, AccountMarketLimitsResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountMarketLimitsResult__FieldAccessorTable; }
    }
    
    public const int AccountMarketLimitsFieldNumber = 1;
    private bool hasAccountMarketLimits;
    private global::CmsApiSamples.Protocol.CMSApi.MarketLimits accountMarketLimits_;
    public bool HasAccountMarketLimits {
      get { return hasAccountMarketLimits; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.MarketLimits AccountMarketLimits {
      get { return accountMarketLimits_ ?? global::CmsApiSamples.Protocol.CMSApi.MarketLimits.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountMarketLimits) return false;
        if (!AccountMarketLimits.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountMarketLimitsResultFieldNames;
      if (hasAccountMarketLimits) {
        output.WriteMessage(1, field_names[0], AccountMarketLimits);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountMarketLimits) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, AccountMarketLimits);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountMarketLimitsResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountMarketLimitsResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountMarketLimitsResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountMarketLimitsResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountMarketLimitsResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountMarketLimitsResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountMarketLimitsResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountMarketLimitsResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountMarketLimitsResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountMarketLimitsResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountMarketLimitsResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountMarketLimitsResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountMarketLimitsResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountMarketLimitsResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountMarketLimitsResult result;
      
      private AccountMarketLimitsResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountMarketLimitsResult original = result;
          result = new AccountMarketLimitsResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountMarketLimitsResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult.Descriptor; }
      }
      
      public override AccountMarketLimitsResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult.DefaultInstance; }
      }
      
      public override AccountMarketLimitsResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountMarketLimitsResult) {
          return MergeFrom((AccountMarketLimitsResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountMarketLimitsResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountMarketLimitsResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountMarketLimits) {
          MergeAccountMarketLimits(other.AccountMarketLimits);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountMarketLimitsResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountMarketLimitsResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.MarketLimits.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.MarketLimits.CreateBuilder();
              if (result.hasAccountMarketLimits) {
                subBuilder.MergeFrom(AccountMarketLimits);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountMarketLimits = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountMarketLimits {
       get { return result.hasAccountMarketLimits; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.MarketLimits AccountMarketLimits {
        get { return result.AccountMarketLimits; }
        set { SetAccountMarketLimits(value); }
      }
      public Builder SetAccountMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountMarketLimits = true;
        result.accountMarketLimits_ = value;
        return this;
      }
      public Builder SetAccountMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimits.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountMarketLimits = true;
        result.accountMarketLimits_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountMarketLimits &&
            result.accountMarketLimits_ != global::CmsApiSamples.Protocol.CMSApi.MarketLimits.DefaultInstance) {
            result.accountMarketLimits_ = global::CmsApiSamples.Protocol.CMSApi.MarketLimits.CreateBuilder(result.accountMarketLimits_).MergeFrom(value).BuildPartial();
        } else {
          result.accountMarketLimits_ = value;
        }
        result.hasAccountMarketLimits = true;
        return this;
      }
      public Builder ClearAccountMarketLimits() {
        PrepareBuilder();
        result.hasAccountMarketLimits = false;
        result.accountMarketLimits_ = null;
        return this;
      }
    }
    static AccountMarketLimitsResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountPositionsResult : pb::GeneratedMessage<AccountPositionsResult, AccountPositionsResult.Builder> {
    private AccountPositionsResult() { }
    private static readonly AccountPositionsResult defaultInstance = new AccountPositionsResult().MakeReadOnly();
    private static readonly string[] _accountPositionsResultFieldNames = new string[] { "contract_position" };
    private static readonly uint[] _accountPositionsResultFieldTags = new uint[] { 10 };
    public static AccountPositionsResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountPositionsResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountPositionsResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountPositionsResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountPositionsResult, AccountPositionsResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountPositionsResult__FieldAccessorTable; }
    }
    
    public const int ContractPositionFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.ContractPosition> contractPosition_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.ContractPosition>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.ContractPosition> ContractPositionList {
      get { return contractPosition_; }
    }
    public int ContractPositionCount {
      get { return contractPosition_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.ContractPosition GetContractPosition(int index) {
      return contractPosition_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.ContractPosition element in ContractPositionList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountPositionsResultFieldNames;
      if (contractPosition_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], contractPosition_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.ContractPosition element in ContractPositionList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountPositionsResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountPositionsResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountPositionsResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountPositionsResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountPositionsResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountPositionsResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountPositionsResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountPositionsResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountPositionsResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountPositionsResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountPositionsResult MakeReadOnly() {
      contractPosition_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountPositionsResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountPositionsResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountPositionsResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountPositionsResult result;
      
      private AccountPositionsResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountPositionsResult original = result;
          result = new AccountPositionsResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountPositionsResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult.Descriptor; }
      }
      
      public override AccountPositionsResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult.DefaultInstance; }
      }
      
      public override AccountPositionsResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountPositionsResult) {
          return MergeFrom((AccountPositionsResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountPositionsResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountPositionsResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.contractPosition_.Count != 0) {
          result.contractPosition_.Add(other.contractPosition_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountPositionsResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountPositionsResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.contractPosition_, global::CmsApiSamples.Protocol.CMSApi.ContractPosition.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.ContractPosition> ContractPositionList {
        get { return PrepareBuilder().contractPosition_; }
      }
      public int ContractPositionCount {
        get { return result.ContractPositionCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.ContractPosition GetContractPosition(int index) {
        return result.GetContractPosition(index);
      }
      public Builder SetContractPosition(int index, global::CmsApiSamples.Protocol.CMSApi.ContractPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.contractPosition_[index] = value;
        return this;
      }
      public Builder SetContractPosition(int index, global::CmsApiSamples.Protocol.CMSApi.ContractPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.contractPosition_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddContractPosition(global::CmsApiSamples.Protocol.CMSApi.ContractPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.contractPosition_.Add(value);
        return this;
      }
      public Builder AddContractPosition(global::CmsApiSamples.Protocol.CMSApi.ContractPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.contractPosition_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeContractPosition(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.ContractPosition> values) {
        PrepareBuilder();
        result.contractPosition_.Add(values);
        return this;
      }
      public Builder ClearContractPosition() {
        PrepareBuilder();
        result.contractPosition_.Clear();
        return this;
      }
    }
    static AccountPositionsResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountEquityResult : pb::GeneratedMessage<AccountEquityResult, AccountEquityResult.Builder> {
    private AccountEquityResult() { }
    private static readonly AccountEquityResult defaultInstance = new AccountEquityResult().MakeReadOnly();
    private static readonly string[] _accountEquityResultFieldNames = new string[] { "equity" };
    private static readonly uint[] _accountEquityResultFieldTags = new uint[] { 10 };
    public static AccountEquityResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountEquityResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountEquityResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountEquityResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountEquityResult, AccountEquityResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountEquityResult__FieldAccessorTable; }
    }
    
    public const int EquityFieldNumber = 1;
    private bool hasEquity;
    private global::CmsApiSamples.Protocol.CMSApi.Equity equity_;
    public bool HasEquity {
      get { return hasEquity; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Equity Equity {
      get { return equity_ ?? global::CmsApiSamples.Protocol.CMSApi.Equity.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEquity) return false;
        if (!Equity.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountEquityResultFieldNames;
      if (hasEquity) {
        output.WriteMessage(1, field_names[0], Equity);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEquity) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Equity);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountEquityResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountEquityResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountEquityResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountEquityResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountEquityResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountEquityResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountEquityResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountEquityResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountEquityResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountEquityResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountEquityResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountEquityResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountEquityResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountEquityResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountEquityResult result;
      
      private AccountEquityResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountEquityResult original = result;
          result = new AccountEquityResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountEquityResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult.Descriptor; }
      }
      
      public override AccountEquityResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult.DefaultInstance; }
      }
      
      public override AccountEquityResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountEquityResult) {
          return MergeFrom((AccountEquityResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountEquityResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountEquityResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEquity) {
          MergeEquity(other.Equity);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountEquityResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountEquityResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.Equity.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Equity.CreateBuilder();
              if (result.hasEquity) {
                subBuilder.MergeFrom(Equity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Equity = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEquity {
       get { return result.hasEquity; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Equity Equity {
        get { return result.Equity; }
        set { SetEquity(value); }
      }
      public Builder SetEquity(global::CmsApiSamples.Protocol.CMSApi.Equity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEquity = true;
        result.equity_ = value;
        return this;
      }
      public Builder SetEquity(global::CmsApiSamples.Protocol.CMSApi.Equity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasEquity = true;
        result.equity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeEquity(global::CmsApiSamples.Protocol.CMSApi.Equity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasEquity &&
            result.equity_ != global::CmsApiSamples.Protocol.CMSApi.Equity.DefaultInstance) {
            result.equity_ = global::CmsApiSamples.Protocol.CMSApi.Equity.CreateBuilder(result.equity_).MergeFrom(value).BuildPartial();
        } else {
          result.equity_ = value;
        }
        result.hasEquity = true;
        return this;
      }
      public Builder ClearEquity() {
        PrepareBuilder();
        result.hasEquity = false;
        result.equity_ = null;
        return this;
      }
    }
    static AccountEquityResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountCollateralResult : pb::GeneratedMessage<AccountCollateralResult, AccountCollateralResult.Builder> {
    private AccountCollateralResult() { }
    private static readonly AccountCollateralResult defaultInstance = new AccountCollateralResult().MakeReadOnly();
    private static readonly string[] _accountCollateralResultFieldNames = new string[] { "collateral" };
    private static readonly uint[] _accountCollateralResultFieldTags = new uint[] { 10 };
    public static AccountCollateralResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountCollateralResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountCollateralResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountCollateralResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountCollateralResult, AccountCollateralResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountCollateralResult__FieldAccessorTable; }
    }
    
    public const int CollateralFieldNumber = 1;
    private bool hasCollateral;
    private global::CmsApiSamples.Protocol.CMSApi.Collateral collateral_;
    public bool HasCollateral {
      get { return hasCollateral; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Collateral Collateral {
      get { return collateral_ ?? global::CmsApiSamples.Protocol.CMSApi.Collateral.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCollateral) return false;
        if (!Collateral.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountCollateralResultFieldNames;
      if (hasCollateral) {
        output.WriteMessage(1, field_names[0], Collateral);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCollateral) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Collateral);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountCollateralResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountCollateralResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountCollateralResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountCollateralResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountCollateralResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountCollateralResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountCollateralResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountCollateralResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountCollateralResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountCollateralResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountCollateralResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountCollateralResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountCollateralResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountCollateralResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountCollateralResult result;
      
      private AccountCollateralResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountCollateralResult original = result;
          result = new AccountCollateralResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountCollateralResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult.Descriptor; }
      }
      
      public override AccountCollateralResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult.DefaultInstance; }
      }
      
      public override AccountCollateralResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountCollateralResult) {
          return MergeFrom((AccountCollateralResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountCollateralResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountCollateralResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCollateral) {
          MergeCollateral(other.Collateral);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountCollateralResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountCollateralResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.Collateral.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Collateral.CreateBuilder();
              if (result.hasCollateral) {
                subBuilder.MergeFrom(Collateral);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Collateral = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCollateral {
       get { return result.hasCollateral; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Collateral Collateral {
        get { return result.Collateral; }
        set { SetCollateral(value); }
      }
      public Builder SetCollateral(global::CmsApiSamples.Protocol.CMSApi.Collateral value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCollateral = true;
        result.collateral_ = value;
        return this;
      }
      public Builder SetCollateral(global::CmsApiSamples.Protocol.CMSApi.Collateral.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCollateral = true;
        result.collateral_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCollateral(global::CmsApiSamples.Protocol.CMSApi.Collateral value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCollateral &&
            result.collateral_ != global::CmsApiSamples.Protocol.CMSApi.Collateral.DefaultInstance) {
            result.collateral_ = global::CmsApiSamples.Protocol.CMSApi.Collateral.CreateBuilder(result.collateral_).MergeFrom(value).BuildPartial();
        } else {
          result.collateral_ = value;
        }
        result.hasCollateral = true;
        return this;
      }
      public Builder ClearCollateral() {
        PrepareBuilder();
        result.hasCollateral = false;
        result.collateral_ = null;
        return this;
      }
    }
    static AccountCollateralResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CloneAccountResult : pb::GeneratedMessage<CloneAccountResult, CloneAccountResult.Builder> {
    private CloneAccountResult() { }
    private static readonly CloneAccountResult defaultInstance = new CloneAccountResult().MakeReadOnly();
    private static readonly string[] _cloneAccountResultFieldNames = new string[] { "new_account_id" };
    private static readonly uint[] _cloneAccountResultFieldTags = new uint[] { 8 };
    public static CloneAccountResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CloneAccountResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CloneAccountResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CloneAccountResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CloneAccountResult, CloneAccountResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CloneAccountResult__FieldAccessorTable; }
    }
    
    public const int NewAccountIdFieldNumber = 1;
    private bool hasNewAccountId;
    private int newAccountId_;
    public bool HasNewAccountId {
      get { return hasNewAccountId; }
    }
    public int NewAccountId {
      get { return newAccountId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasNewAccountId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _cloneAccountResultFieldNames;
      if (hasNewAccountId) {
        output.WriteSInt32(1, field_names[0], NewAccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNewAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, NewAccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CloneAccountResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CloneAccountResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CloneAccountResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CloneAccountResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CloneAccountResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CloneAccountResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CloneAccountResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CloneAccountResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CloneAccountResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CloneAccountResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CloneAccountResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CloneAccountResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CloneAccountResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CloneAccountResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CloneAccountResult result;
      
      private CloneAccountResult PrepareBuilder() {
        if (resultIsReadOnly) {
          CloneAccountResult original = result;
          result = new CloneAccountResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CloneAccountResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult.Descriptor; }
      }
      
      public override CloneAccountResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult.DefaultInstance; }
      }
      
      public override CloneAccountResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CloneAccountResult) {
          return MergeFrom((CloneAccountResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CloneAccountResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CloneAccountResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNewAccountId) {
          NewAccountId = other.NewAccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cloneAccountResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cloneAccountResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasNewAccountId = input.ReadSInt32(ref result.newAccountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNewAccountId {
        get { return result.hasNewAccountId; }
      }
      public int NewAccountId {
        get { return result.NewAccountId; }
        set { SetNewAccountId(value); }
      }
      public Builder SetNewAccountId(int value) {
        PrepareBuilder();
        result.hasNewAccountId = true;
        result.newAccountId_ = value;
        return this;
      }
      public Builder ClearNewAccountId() {
        PrepareBuilder();
        result.hasNewAccountId = false;
        result.newAccountId_ = 0;
        return this;
      }
    }
    static CloneAccountResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountResult : pb::GeneratedMessage<UpdateAccountResult, UpdateAccountResult.Builder> {
    private UpdateAccountResult() { }
    private static readonly UpdateAccountResult defaultInstance = new UpdateAccountResult().MakeReadOnly();
    private static readonly string[] _updateAccountResultFieldNames = new string[] {  };
    private static readonly uint[] _updateAccountResultFieldTags = new uint[] {  };
    public static UpdateAccountResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountResult, UpdateAccountResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountResult result;
      
      private UpdateAccountResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountResult original = result;
          result = new UpdateAccountResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult.Descriptor; }
      }
      
      public override UpdateAccountResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult.DefaultInstance; }
      }
      
      public override UpdateAccountResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountResult) {
          return MergeFrom((UpdateAccountResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateAccountResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountSettingsResult : pb::GeneratedMessage<UpdateAccountSettingsResult, UpdateAccountSettingsResult.Builder> {
    private UpdateAccountSettingsResult() { }
    private static readonly UpdateAccountSettingsResult defaultInstance = new UpdateAccountSettingsResult().MakeReadOnly();
    private static readonly string[] _updateAccountSettingsResultFieldNames = new string[] {  };
    private static readonly uint[] _updateAccountSettingsResultFieldTags = new uint[] {  };
    public static UpdateAccountSettingsResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountSettingsResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountSettingsResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountSettingsResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountSettingsResult, UpdateAccountSettingsResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountSettingsResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountSettingsResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountSettingsResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountSettingsResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountSettingsResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountSettingsResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountSettingsResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountSettingsResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountSettingsResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountSettingsResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountSettingsResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountSettingsResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountSettingsResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountSettingsResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountSettingsResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountSettingsResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountSettingsResult result;
      
      private UpdateAccountSettingsResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountSettingsResult original = result;
          result = new UpdateAccountSettingsResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountSettingsResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult.Descriptor; }
      }
      
      public override UpdateAccountSettingsResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult.DefaultInstance; }
      }
      
      public override UpdateAccountSettingsResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountSettingsResult) {
          return MergeFrom((UpdateAccountSettingsResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountSettingsResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountSettingsResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountSettingsResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountSettingsResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateAccountSettingsResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountGroupResult : pb::GeneratedMessage<AccountGroupResult, AccountGroupResult.Builder> {
    private AccountGroupResult() { }
    private static readonly AccountGroupResult defaultInstance = new AccountGroupResult().MakeReadOnly();
    private static readonly string[] _accountGroupResultFieldNames = new string[] { "acount_group" };
    private static readonly uint[] _accountGroupResultFieldTags = new uint[] { 10 };
    public static AccountGroupResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountGroupResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountGroupResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountGroupResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountGroupResult, AccountGroupResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountGroupResult__FieldAccessorTable; }
    }
    
    public const int AcountGroupFieldNumber = 1;
    private bool hasAcountGroup;
    private global::CmsApiSamples.Protocol.CMSApi.AccountGroup acountGroup_;
    public bool HasAcountGroup {
      get { return hasAcountGroup; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountGroup AcountGroup {
      get { return acountGroup_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountGroup.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountGroupResultFieldNames;
      if (hasAcountGroup) {
        output.WriteMessage(1, field_names[0], AcountGroup);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAcountGroup) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, AcountGroup);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountGroupResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountGroupResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountGroupResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountGroupResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountGroupResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountGroupResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountGroupResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountGroupResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountGroupResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountGroupResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountGroupResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountGroupResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountGroupResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountGroupResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountGroupResult result;
      
      private AccountGroupResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountGroupResult original = result;
          result = new AccountGroupResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountGroupResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult.Descriptor; }
      }
      
      public override AccountGroupResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult.DefaultInstance; }
      }
      
      public override AccountGroupResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountGroupResult) {
          return MergeFrom((AccountGroupResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountGroupResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountGroupResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAcountGroup) {
          MergeAcountGroup(other.AcountGroup);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountGroupResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountGroupResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.AccountGroup.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountGroup.CreateBuilder();
              if (result.hasAcountGroup) {
                subBuilder.MergeFrom(AcountGroup);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AcountGroup = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAcountGroup {
       get { return result.hasAcountGroup; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountGroup AcountGroup {
        get { return result.AcountGroup; }
        set { SetAcountGroup(value); }
      }
      public Builder SetAcountGroup(global::CmsApiSamples.Protocol.CMSApi.AccountGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAcountGroup = true;
        result.acountGroup_ = value;
        return this;
      }
      public Builder SetAcountGroup(global::CmsApiSamples.Protocol.CMSApi.AccountGroup.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAcountGroup = true;
        result.acountGroup_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAcountGroup(global::CmsApiSamples.Protocol.CMSApi.AccountGroup value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAcountGroup &&
            result.acountGroup_ != global::CmsApiSamples.Protocol.CMSApi.AccountGroup.DefaultInstance) {
            result.acountGroup_ = global::CmsApiSamples.Protocol.CMSApi.AccountGroup.CreateBuilder(result.acountGroup_).MergeFrom(value).BuildPartial();
        } else {
          result.acountGroup_ = value;
        }
        result.hasAcountGroup = true;
        return this;
      }
      public Builder ClearAcountGroup() {
        PrepareBuilder();
        result.hasAcountGroup = false;
        result.acountGroup_ = null;
        return this;
      }
    }
    static AccountGroupResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountRiskParametersResult : pb::GeneratedMessage<UpdateAccountRiskParametersResult, UpdateAccountRiskParametersResult.Builder> {
    private UpdateAccountRiskParametersResult() { }
    private static readonly UpdateAccountRiskParametersResult defaultInstance = new UpdateAccountRiskParametersResult().MakeReadOnly();
    private static readonly string[] _updateAccountRiskParametersResultFieldNames = new string[] {  };
    private static readonly uint[] _updateAccountRiskParametersResultFieldTags = new uint[] {  };
    public static UpdateAccountRiskParametersResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountRiskParametersResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountRiskParametersResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountRiskParametersResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountRiskParametersResult, UpdateAccountRiskParametersResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountRiskParametersResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountRiskParametersResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountRiskParametersResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountRiskParametersResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountRiskParametersResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountRiskParametersResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountRiskParametersResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountRiskParametersResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountRiskParametersResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountRiskParametersResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountRiskParametersResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountRiskParametersResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountRiskParametersResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountRiskParametersResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountRiskParametersResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountRiskParametersResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountRiskParametersResult result;
      
      private UpdateAccountRiskParametersResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountRiskParametersResult original = result;
          result = new UpdateAccountRiskParametersResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountRiskParametersResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult.Descriptor; }
      }
      
      public override UpdateAccountRiskParametersResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult.DefaultInstance; }
      }
      
      public override UpdateAccountRiskParametersResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountRiskParametersResult) {
          return MergeFrom((UpdateAccountRiskParametersResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountRiskParametersResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRiskParametersResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountRiskParametersResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountRiskParametersResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateAccountRiskParametersResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RouteListResult : pb::GeneratedMessage<RouteListResult, RouteListResult.Builder> {
    private RouteListResult() { }
    private static readonly RouteListResult defaultInstance = new RouteListResult().MakeReadOnly();
    private static readonly string[] _routeListResultFieldNames = new string[] { "routes" };
    private static readonly uint[] _routeListResultFieldTags = new uint[] { 10 };
    public static RouteListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RouteListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RouteListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RouteListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RouteListResult, RouteListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RouteListResult__FieldAccessorTable; }
    }
    
    public const int RoutesFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Route> routes_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Route>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Route> RoutesList {
      get { return routes_; }
    }
    public int RoutesCount {
      get { return routes_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Route GetRoutes(int index) {
      return routes_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.Route element in RoutesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _routeListResultFieldNames;
      if (routes_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], routes_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.Route element in RoutesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RouteListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RouteListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RouteListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RouteListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RouteListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RouteListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RouteListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RouteListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RouteListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RouteListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RouteListResult MakeReadOnly() {
      routes_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RouteListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RouteListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RouteListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RouteListResult result;
      
      private RouteListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          RouteListResult original = result;
          result = new RouteListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RouteListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RouteListResult.Descriptor; }
      }
      
      public override RouteListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RouteListResult.DefaultInstance; }
      }
      
      public override RouteListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RouteListResult) {
          return MergeFrom((RouteListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RouteListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RouteListResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.routes_.Count != 0) {
          result.routes_.Add(other.routes_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_routeListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _routeListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.routes_, global::CmsApiSamples.Protocol.CMSApi.Route.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Route> RoutesList {
        get { return PrepareBuilder().routes_; }
      }
      public int RoutesCount {
        get { return result.RoutesCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Route GetRoutes(int index) {
        return result.GetRoutes(index);
      }
      public Builder SetRoutes(int index, global::CmsApiSamples.Protocol.CMSApi.Route value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routes_[index] = value;
        return this;
      }
      public Builder SetRoutes(int index, global::CmsApiSamples.Protocol.CMSApi.Route.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.routes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRoutes(global::CmsApiSamples.Protocol.CMSApi.Route value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routes_.Add(value);
        return this;
      }
      public Builder AddRoutes(global::CmsApiSamples.Protocol.CMSApi.Route.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.routes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRoutes(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Route> values) {
        PrepareBuilder();
        result.routes_.Add(values);
        return this;
      }
      public Builder ClearRoutes() {
        PrepareBuilder();
        result.routes_.Clear();
        return this;
      }
    }
    static RouteListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountRouteListResult : pb::GeneratedMessage<UpdateAccountRouteListResult, UpdateAccountRouteListResult.Builder> {
    private UpdateAccountRouteListResult() { }
    private static readonly UpdateAccountRouteListResult defaultInstance = new UpdateAccountRouteListResult().MakeReadOnly();
    private static readonly string[] _updateAccountRouteListResultFieldNames = new string[] {  };
    private static readonly uint[] _updateAccountRouteListResultFieldTags = new uint[] {  };
    public static UpdateAccountRouteListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountRouteListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountRouteListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountRouteListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountRouteListResult, UpdateAccountRouteListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountRouteListResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountRouteListResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountRouteListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountRouteListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountRouteListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountRouteListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountRouteListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountRouteListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountRouteListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountRouteListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountRouteListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountRouteListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountRouteListResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountRouteListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountRouteListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountRouteListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountRouteListResult result;
      
      private UpdateAccountRouteListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountRouteListResult original = result;
          result = new UpdateAccountRouteListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountRouteListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult.Descriptor; }
      }
      
      public override UpdateAccountRouteListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult.DefaultInstance; }
      }
      
      public override UpdateAccountRouteListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountRouteListResult) {
          return MergeFrom((UpdateAccountRouteListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountRouteListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountRouteListResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountRouteListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountRouteListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateAccountRouteListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountMarketLimitsResult : pb::GeneratedMessage<UpdateAccountMarketLimitsResult, UpdateAccountMarketLimitsResult.Builder> {
    private UpdateAccountMarketLimitsResult() { }
    private static readonly UpdateAccountMarketLimitsResult defaultInstance = new UpdateAccountMarketLimitsResult().MakeReadOnly();
    private static readonly string[] _updateAccountMarketLimitsResultFieldNames = new string[] {  };
    private static readonly uint[] _updateAccountMarketLimitsResultFieldTags = new uint[] {  };
    public static UpdateAccountMarketLimitsResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountMarketLimitsResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountMarketLimitsResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountMarketLimitsResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountMarketLimitsResult, UpdateAccountMarketLimitsResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountMarketLimitsResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountMarketLimitsResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountMarketLimitsResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountMarketLimitsResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountMarketLimitsResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountMarketLimitsResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountMarketLimitsResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountMarketLimitsResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountMarketLimitsResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountMarketLimitsResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountMarketLimitsResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountMarketLimitsResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountMarketLimitsResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountMarketLimitsResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountMarketLimitsResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountMarketLimitsResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountMarketLimitsResult result;
      
      private UpdateAccountMarketLimitsResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountMarketLimitsResult original = result;
          result = new UpdateAccountMarketLimitsResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountMarketLimitsResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult.Descriptor; }
      }
      
      public override UpdateAccountMarketLimitsResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult.DefaultInstance; }
      }
      
      public override UpdateAccountMarketLimitsResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountMarketLimitsResult) {
          return MergeFrom((UpdateAccountMarketLimitsResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountMarketLimitsResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountMarketLimitsResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountMarketLimitsResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountMarketLimitsResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateAccountMarketLimitsResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateAccountResult : pb::GeneratedMessage<CreateAccountResult, CreateAccountResult.Builder> {
    private CreateAccountResult() { }
    private static readonly CreateAccountResult defaultInstance = new CreateAccountResult().MakeReadOnly();
    private static readonly string[] _createAccountResultFieldNames = new string[] { "id" };
    private static readonly uint[] _createAccountResultFieldTags = new uint[] { 10 };
    public static CreateAccountResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateAccountResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateAccountResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateAccountResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateAccountResult, CreateAccountResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateAccountResult__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createAccountResultFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateAccountResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateAccountResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateAccountResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateAccountResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateAccountResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateAccountResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateAccountResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateAccountResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateAccountResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateAccountResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateAccountResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateAccountResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateAccountResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateAccountResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateAccountResult result;
      
      private CreateAccountResult PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateAccountResult original = result;
          result = new CreateAccountResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateAccountResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult.Descriptor; }
      }
      
      public override CreateAccountResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult.DefaultInstance; }
      }
      
      public override CreateAccountResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateAccountResult) {
          return MergeFrom((CreateAccountResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateAccountResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CreateAccountResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createAccountResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createAccountResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
    }
    static CreateAccountResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountClusterResult : pb::GeneratedMessage<AccountClusterResult, AccountClusterResult.Builder> {
    private AccountClusterResult() { }
    private static readonly AccountClusterResult defaultInstance = new AccountClusterResult().MakeReadOnly();
    private static readonly string[] _accountClusterResultFieldNames = new string[] { "account_cluster", "account_cluster_price_offsets" };
    private static readonly uint[] _accountClusterResultFieldTags = new uint[] { 10, 18 };
    public static AccountClusterResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountClusterResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountClusterResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountClusterResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountClusterResult, AccountClusterResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountClusterResult__FieldAccessorTable; }
    }
    
    public const int AccountClusterFieldNumber = 1;
    private bool hasAccountCluster;
    private global::CmsApiSamples.Protocol.CMSApi.AccountCluster accountCluster_;
    public bool HasAccountCluster {
      get { return hasAccountCluster; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountCluster AccountCluster {
      get { return accountCluster_ ?? global::CmsApiSamples.Protocol.CMSApi.AccountCluster.DefaultInstance; }
    }
    
    public const int AccountClusterPriceOffsetsFieldNumber = 2;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset> accountClusterPriceOffsets_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset> AccountClusterPriceOffsetsList {
      get { return accountClusterPriceOffsets_; }
    }
    public int AccountClusterPriceOffsetsCount {
      get { return accountClusterPriceOffsets_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset GetAccountClusterPriceOffsets(int index) {
      return accountClusterPriceOffsets_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountClusterResultFieldNames;
      if (hasAccountCluster) {
        output.WriteMessage(1, field_names[0], AccountCluster);
      }
      if (accountClusterPriceOffsets_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], accountClusterPriceOffsets_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountCluster) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, AccountCluster);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset element in AccountClusterPriceOffsetsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountClusterResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountClusterResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountClusterResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountClusterResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountClusterResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountClusterResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountClusterResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountClusterResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountClusterResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountClusterResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountClusterResult MakeReadOnly() {
      accountClusterPriceOffsets_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountClusterResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountClusterResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountClusterResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountClusterResult result;
      
      private AccountClusterResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountClusterResult original = result;
          result = new AccountClusterResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountClusterResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult.Descriptor; }
      }
      
      public override AccountClusterResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult.DefaultInstance; }
      }
      
      public override AccountClusterResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountClusterResult) {
          return MergeFrom((AccountClusterResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountClusterResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountClusterResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountCluster) {
          MergeAccountCluster(other.AccountCluster);
        }
        if (other.accountClusterPriceOffsets_.Count != 0) {
          result.accountClusterPriceOffsets_.Add(other.accountClusterPriceOffsets_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountClusterResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountClusterResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.AccountCluster.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.AccountCluster.CreateBuilder();
              if (result.hasAccountCluster) {
                subBuilder.MergeFrom(AccountCluster);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountCluster = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.accountClusterPriceOffsets_, global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountCluster {
       get { return result.hasAccountCluster; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountCluster AccountCluster {
        get { return result.AccountCluster; }
        set { SetAccountCluster(value); }
      }
      public Builder SetAccountCluster(global::CmsApiSamples.Protocol.CMSApi.AccountCluster value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountCluster = true;
        result.accountCluster_ = value;
        return this;
      }
      public Builder SetAccountCluster(global::CmsApiSamples.Protocol.CMSApi.AccountCluster.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountCluster = true;
        result.accountCluster_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountCluster(global::CmsApiSamples.Protocol.CMSApi.AccountCluster value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountCluster &&
            result.accountCluster_ != global::CmsApiSamples.Protocol.CMSApi.AccountCluster.DefaultInstance) {
            result.accountCluster_ = global::CmsApiSamples.Protocol.CMSApi.AccountCluster.CreateBuilder(result.accountCluster_).MergeFrom(value).BuildPartial();
        } else {
          result.accountCluster_ = value;
        }
        result.hasAccountCluster = true;
        return this;
      }
      public Builder ClearAccountCluster() {
        PrepareBuilder();
        result.hasAccountCluster = false;
        result.accountCluster_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset> AccountClusterPriceOffsetsList {
        get { return PrepareBuilder().accountClusterPriceOffsets_; }
      }
      public int AccountClusterPriceOffsetsCount {
        get { return result.AccountClusterPriceOffsetsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset GetAccountClusterPriceOffsets(int index) {
        return result.GetAccountClusterPriceOffsets(index);
      }
      public Builder SetAccountClusterPriceOffsets(int index, global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accountClusterPriceOffsets_[index] = value;
        return this;
      }
      public Builder SetAccountClusterPriceOffsets(int index, global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accountClusterPriceOffsets_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAccountClusterPriceOffsets(global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accountClusterPriceOffsets_.Add(value);
        return this;
      }
      public Builder AddAccountClusterPriceOffsets(global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accountClusterPriceOffsets_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAccountClusterPriceOffsets(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset> values) {
        PrepareBuilder();
        result.accountClusterPriceOffsets_.Add(values);
        return this;
      }
      public Builder ClearAccountClusterPriceOffsets() {
        PrepareBuilder();
        result.accountClusterPriceOffsets_.Clear();
        return this;
      }
    }
    static AccountClusterResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CreateAccountClusterResult : pb::GeneratedMessage<CreateAccountClusterResult, CreateAccountClusterResult.Builder> {
    private CreateAccountClusterResult() { }
    private static readonly CreateAccountClusterResult defaultInstance = new CreateAccountClusterResult().MakeReadOnly();
    private static readonly string[] _createAccountClusterResultFieldNames = new string[] { "id" };
    private static readonly uint[] _createAccountClusterResultFieldTags = new uint[] { 10 };
    public static CreateAccountClusterResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateAccountClusterResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateAccountClusterResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateAccountClusterResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateAccountClusterResult, CreateAccountClusterResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CreateAccountClusterResult__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _createAccountClusterResultFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CreateAccountClusterResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateAccountClusterResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateAccountClusterResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateAccountClusterResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateAccountClusterResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateAccountClusterResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateAccountClusterResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateAccountClusterResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateAccountClusterResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateAccountClusterResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateAccountClusterResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateAccountClusterResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateAccountClusterResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateAccountClusterResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateAccountClusterResult result;
      
      private CreateAccountClusterResult PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateAccountClusterResult original = result;
          result = new CreateAccountClusterResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateAccountClusterResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult.Descriptor; }
      }
      
      public override CreateAccountClusterResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult.DefaultInstance; }
      }
      
      public override CreateAccountClusterResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateAccountClusterResult) {
          return MergeFrom((CreateAccountClusterResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateAccountClusterResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CreateAccountClusterResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createAccountClusterResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createAccountClusterResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
    }
    static CreateAccountClusterResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountClusterResult : pb::GeneratedMessage<UpdateAccountClusterResult, UpdateAccountClusterResult.Builder> {
    private UpdateAccountClusterResult() { }
    private static readonly UpdateAccountClusterResult defaultInstance = new UpdateAccountClusterResult().MakeReadOnly();
    private static readonly string[] _updateAccountClusterResultFieldNames = new string[] {  };
    private static readonly uint[] _updateAccountClusterResultFieldTags = new uint[] {  };
    public static UpdateAccountClusterResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountClusterResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountClusterResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountClusterResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountClusterResult, UpdateAccountClusterResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountClusterResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountClusterResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountClusterResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountClusterResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountClusterResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountClusterResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountClusterResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountClusterResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountClusterResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountClusterResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountClusterResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountClusterResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountClusterResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountClusterResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountClusterResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountClusterResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountClusterResult result;
      
      private UpdateAccountClusterResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountClusterResult original = result;
          result = new UpdateAccountClusterResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountClusterResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult.Descriptor; }
      }
      
      public override UpdateAccountClusterResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult.DefaultInstance; }
      }
      
      public override UpdateAccountClusterResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountClusterResult) {
          return MergeFrom((UpdateAccountClusterResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountClusterResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountClusterResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountClusterResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateAccountClusterResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountClusterPriceOffsetsResult : pb::GeneratedMessage<UpdateAccountClusterPriceOffsetsResult, UpdateAccountClusterPriceOffsetsResult.Builder> {
    private UpdateAccountClusterPriceOffsetsResult() { }
    private static readonly UpdateAccountClusterPriceOffsetsResult defaultInstance = new UpdateAccountClusterPriceOffsetsResult().MakeReadOnly();
    private static readonly string[] _updateAccountClusterPriceOffsetsResultFieldNames = new string[] {  };
    private static readonly uint[] _updateAccountClusterPriceOffsetsResultFieldTags = new uint[] {  };
    public static UpdateAccountClusterPriceOffsetsResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountClusterPriceOffsetsResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountClusterPriceOffsetsResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountClusterPriceOffsetsResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountClusterPriceOffsetsResult, UpdateAccountClusterPriceOffsetsResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountClusterPriceOffsetsResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountClusterPriceOffsetsResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountClusterPriceOffsetsResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsetsResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsetsResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsetsResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsetsResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsetsResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsetsResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsetsResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsetsResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountClusterPriceOffsetsResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountClusterPriceOffsetsResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountClusterPriceOffsetsResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountClusterPriceOffsetsResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountClusterPriceOffsetsResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountClusterPriceOffsetsResult result;
      
      private UpdateAccountClusterPriceOffsetsResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountClusterPriceOffsetsResult original = result;
          result = new UpdateAccountClusterPriceOffsetsResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountClusterPriceOffsetsResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult.Descriptor; }
      }
      
      public override UpdateAccountClusterPriceOffsetsResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult.DefaultInstance; }
      }
      
      public override UpdateAccountClusterPriceOffsetsResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountClusterPriceOffsetsResult) {
          return MergeFrom((UpdateAccountClusterPriceOffsetsResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountClusterPriceOffsetsResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountClusterPriceOffsetsResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountClusterPriceOffsetsResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountClusterPriceOffsetsResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateAccountClusterPriceOffsetsResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderChain : pb::GeneratedMessage<OrderChain, OrderChain.Builder> {
    private OrderChain() { }
    private static readonly OrderChain defaultInstance = new OrderChain().MakeReadOnly();
    private static readonly string[] _orderChainFieldNames = new string[] { "accounts", "algo_strategy", "archived", "chain_order_id", "chain_orig_account_id", "checked", "client_algo_strategy", "compound_tree_id", "contract_description", "contract_symbol", "discretionary_offset", "display_limit_price", "display_stop_price", "duration", "exec_instruction", "execution_account_name", "expiration_time", "good_thru_date", "good_thru_utc_time", "legs", "limit_price", "open_close_type", "order_classes", "order_fill", "order_id", "order_id_at_exchange", "order_request", "order_type", "root_chain_order_id", "route", "side", "size", "sizes", "speculation_type", "status", "stop_price", "submitted_utc_time", "trading_expression", "trailing", "user_attributes" };
    private static readonly uint[] _orderChainFieldTags = new uint[] { 202, 274, 312, 10, 32, 224, 266, 210, 250, 50, 328, 160, 168, 96, 88, 178, 288, 104, 112, 242, 73, 296, 154, 146, 18, 322, 138, 128, 218, 282, 56, 64, 194, 304, 120, 81, 40, 234, 186, 258 };
    public static OrderChain DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderChain DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderChain ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderChain__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderChain, OrderChain.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderChain__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Side {
        BUY = 1,
        SELL = 2,
      }
      
      public enum OrderType {
        MKT = 1,
        LMT = 2,
        STP = 3,
        STL = 4,
      }
      
      public enum ExecInstruction {
        AON = 1,
        ICEBERG = 2,
        QT = 3,
        TRAIL = 4,
        FUNARI = 5,
        MIT = 6,
        MLM = 7,
        MTL = 8,
        AUCTION = 9,
      }
      
      public enum Duration {
        DAY = 1,
        GTC = 2,
        GTD = 3,
        GTT = 4,
        FAK = 5,
        FOK = 6,
        ATO = 7,
        ATC = 8,
      }
      
      public enum Status {
        UNDEFINED = 0,
        IN_TRANSIT = 1,
        REJECTED = 2,
        WORKING = 3,
        EXPIRED = 4,
        IN_CANCEL = 5,
        IN_MODIFY = 6,
        CANCELLED = 7,
        FILLED = 8,
        SUSPENDED = 9,
        DISCONNECTED = 10,
        ACTIVE_AT = 11,
      }
      
      public enum OpenCloseType {
        OPEN = 1,
        CLOSE = 2,
        CLOSE_PREVIOUS = 3,
      }
      
      public enum SpeculationType {
        SPECULATION = 1,
        HEDGE = 2,
        ARBITRAGE = 3,
      }
      
    }
    #endregion
    
    public const int ChainOrderIdFieldNumber = 1;
    private bool hasChainOrderId;
    private string chainOrderId_ = "";
    public bool HasChainOrderId {
      get { return hasChainOrderId; }
    }
    public string ChainOrderId {
      get { return chainOrderId_; }
    }
    
    public const int OrderIdFieldNumber = 2;
    private bool hasOrderId;
    private string orderId_ = "";
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public string OrderId {
      get { return orderId_; }
    }
    
    public const int ChainOrigAccountIdFieldNumber = 4;
    private bool hasChainOrigAccountId;
    private int chainOrigAccountId_;
    public bool HasChainOrigAccountId {
      get { return hasChainOrigAccountId; }
    }
    public int ChainOrigAccountId {
      get { return chainOrigAccountId_; }
    }
    
    public const int SubmittedUtcTimeFieldNumber = 5;
    private bool hasSubmittedUtcTime;
    private long submittedUtcTime_;
    public bool HasSubmittedUtcTime {
      get { return hasSubmittedUtcTime; }
    }
    public long SubmittedUtcTime {
      get { return submittedUtcTime_; }
    }
    
    public const int ContractSymbolFieldNumber = 6;
    private bool hasContractSymbol;
    private string contractSymbol_ = "";
    public bool HasContractSymbol {
      get { return hasContractSymbol; }
    }
    public string ContractSymbol {
      get { return contractSymbol_; }
    }
    
    public const int SideFieldNumber = 7;
    private bool hasSide;
    private uint side_;
    public bool HasSide {
      get { return hasSide; }
    }
    [global::System.CLSCompliant(false)]
    public uint Side {
      get { return side_; }
    }
    
    public const int SizeFieldNumber = 8;
    private bool hasSize;
    private uint size_;
    public bool HasSize {
      get { return hasSize; }
    }
    [global::System.CLSCompliant(false)]
    public uint Size {
      get { return size_; }
    }
    
    public const int LimitPriceFieldNumber = 9;
    private bool hasLimitPrice;
    private double limitPrice_;
    public bool HasLimitPrice {
      get { return hasLimitPrice; }
    }
    public double LimitPrice {
      get { return limitPrice_; }
    }
    
    public const int StopPriceFieldNumber = 10;
    private bool hasStopPrice;
    private double stopPrice_;
    public bool HasStopPrice {
      get { return hasStopPrice; }
    }
    public double StopPrice {
      get { return stopPrice_; }
    }
    
    public const int ExecInstructionFieldNumber = 11;
    private pbc::PopsicleList<uint> execInstruction_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> ExecInstructionList {
      get { return pbc::Lists.AsReadOnly(execInstruction_); }
    }
    public int ExecInstructionCount {
      get { return execInstruction_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetExecInstruction(int index) {
      return execInstruction_[index];
    }
    
    public const int DurationFieldNumber = 12;
    private bool hasDuration;
    private uint duration_;
    public bool HasDuration {
      get { return hasDuration; }
    }
    [global::System.CLSCompliant(false)]
    public uint Duration {
      get { return duration_; }
    }
    
    public const int GoodThruDateFieldNumber = 13;
    private bool hasGoodThruDate;
    private long goodThruDate_;
    public bool HasGoodThruDate {
      get { return hasGoodThruDate; }
    }
    public long GoodThruDate {
      get { return goodThruDate_; }
    }
    
    public const int GoodThruUtcTimeFieldNumber = 14;
    private bool hasGoodThruUtcTime;
    private long goodThruUtcTime_;
    public bool HasGoodThruUtcTime {
      get { return hasGoodThruUtcTime; }
    }
    public long GoodThruUtcTime {
      get { return goodThruUtcTime_; }
    }
    
    public const int StatusFieldNumber = 15;
    private bool hasStatus;
    private uint status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint Status {
      get { return status_; }
    }
    
    public const int OrderTypeFieldNumber = 16;
    private bool hasOrderType;
    private uint orderType_;
    public bool HasOrderType {
      get { return hasOrderType; }
    }
    [global::System.CLSCompliant(false)]
    public uint OrderType {
      get { return orderType_; }
    }
    
    public const int OrderRequestFieldNumber = 17;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderRequest> orderRequest_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderRequest>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.OrderRequest> OrderRequestList {
      get { return orderRequest_; }
    }
    public int OrderRequestCount {
      get { return orderRequest_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderRequest GetOrderRequest(int index) {
      return orderRequest_[index];
    }
    
    public const int OrderFillFieldNumber = 18;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderFill> orderFill_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderFill>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.OrderFill> OrderFillList {
      get { return orderFill_; }
    }
    public int OrderFillCount {
      get { return orderFill_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderFill GetOrderFill(int index) {
      return orderFill_[index];
    }
    
    public const int OrderClassesFieldNumber = 19;
    private pbc::PopsicleList<string> orderClasses_ = new pbc::PopsicleList<string>();
    public scg::IList<string> OrderClassesList {
      get { return pbc::Lists.AsReadOnly(orderClasses_); }
    }
    public int OrderClassesCount {
      get { return orderClasses_.Count; }
    }
    public string GetOrderClasses(int index) {
      return orderClasses_[index];
    }
    
    public const int DisplayLimitPriceFieldNumber = 20;
    private bool hasDisplayLimitPrice;
    private long displayLimitPrice_;
    public bool HasDisplayLimitPrice {
      get { return hasDisplayLimitPrice; }
    }
    public long DisplayLimitPrice {
      get { return displayLimitPrice_; }
    }
    
    public const int DisplayStopPriceFieldNumber = 21;
    private bool hasDisplayStopPrice;
    private long displayStopPrice_;
    public bool HasDisplayStopPrice {
      get { return hasDisplayStopPrice; }
    }
    public long DisplayStopPrice {
      get { return displayStopPrice_; }
    }
    
    public const int ExecutionAccountNameFieldNumber = 22;
    private bool hasExecutionAccountName;
    private string executionAccountName_ = "";
    public bool HasExecutionAccountName {
      get { return hasExecutionAccountName; }
    }
    public string ExecutionAccountName {
      get { return executionAccountName_; }
    }
    
    public const int TrailingFieldNumber = 23;
    private bool hasTrailing;
    private global::CmsApiSamples.Protocol.CMSApi.OrderTrailing trailing_;
    public bool HasTrailing {
      get { return hasTrailing; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderTrailing Trailing {
      get { return trailing_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.DefaultInstance; }
    }
    
    public const int SizesFieldNumber = 24;
    private bool hasSizes;
    private global::CmsApiSamples.Protocol.CMSApi.OrderSizes sizes_;
    public bool HasSizes {
      get { return hasSizes; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderSizes Sizes {
      get { return sizes_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderSizes.DefaultInstance; }
    }
    
    public const int AccountsFieldNumber = 25;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.ChainAccount> accounts_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.ChainAccount>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.ChainAccount> AccountsList {
      get { return accounts_; }
    }
    public int AccountsCount {
      get { return accounts_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.ChainAccount GetAccounts(int index) {
      return accounts_[index];
    }
    
    public const int CompoundTreeIdFieldNumber = 26;
    private bool hasCompoundTreeId;
    private string compoundTreeId_ = "";
    public bool HasCompoundTreeId {
      get { return hasCompoundTreeId; }
    }
    public string CompoundTreeId {
      get { return compoundTreeId_; }
    }
    
    public const int RootChainOrderIdFieldNumber = 27;
    private bool hasRootChainOrderId;
    private string rootChainOrderId_ = "";
    public bool HasRootChainOrderId {
      get { return hasRootChainOrderId; }
    }
    public string RootChainOrderId {
      get { return rootChainOrderId_; }
    }
    
    public const int CheckedFieldNumber = 28;
    private bool hasChecked;
    private bool checked_;
    public bool HasChecked {
      get { return hasChecked; }
    }
    public bool Checked {
      get { return checked_; }
    }
    
    public const int TradingExpressionFieldNumber = 29;
    private bool hasTradingExpression;
    private string tradingExpression_ = "";
    public bool HasTradingExpression {
      get { return hasTradingExpression; }
    }
    public string TradingExpression {
      get { return tradingExpression_; }
    }
    
    public const int LegsFieldNumber = 30;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg> legs_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg> LegsList {
      get { return legs_; }
    }
    public int LegsCount {
      get { return legs_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg GetLegs(int index) {
      return legs_[index];
    }
    
    public const int ContractDescriptionFieldNumber = 31;
    private bool hasContractDescription;
    private string contractDescription_ = "";
    public bool HasContractDescription {
      get { return hasContractDescription; }
    }
    public string ContractDescription {
      get { return contractDescription_; }
    }
    
    public const int UserAttributesFieldNumber = 32;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> userAttributes_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Tuple> UserAttributesList {
      get { return userAttributes_; }
    }
    public int UserAttributesCount {
      get { return userAttributes_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Tuple GetUserAttributes(int index) {
      return userAttributes_[index];
    }
    
    public const int ClientAlgoStrategyFieldNumber = 33;
    private bool hasClientAlgoStrategy;
    private string clientAlgoStrategy_ = "";
    public bool HasClientAlgoStrategy {
      get { return hasClientAlgoStrategy; }
    }
    public string ClientAlgoStrategy {
      get { return clientAlgoStrategy_; }
    }
    
    public const int AlgoStrategyFieldNumber = 34;
    private bool hasAlgoStrategy;
    private string algoStrategy_ = "";
    public bool HasAlgoStrategy {
      get { return hasAlgoStrategy; }
    }
    public string AlgoStrategy {
      get { return algoStrategy_; }
    }
    
    public const int RouteFieldNumber = 35;
    private bool hasRoute;
    private global::CmsApiSamples.Protocol.CMSApi.OrderRoute route_;
    public bool HasRoute {
      get { return hasRoute; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderRoute Route {
      get { return route_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderRoute.DefaultInstance; }
    }
    
    public const int ExpirationTimeFieldNumber = 36;
    private bool hasExpirationTime;
    private long expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public long ExpirationTime {
      get { return expirationTime_; }
    }
    
    public const int OpenCloseTypeFieldNumber = 37;
    private bool hasOpenCloseType;
    private uint openCloseType_;
    public bool HasOpenCloseType {
      get { return hasOpenCloseType; }
    }
    [global::System.CLSCompliant(false)]
    public uint OpenCloseType {
      get { return openCloseType_; }
    }
    
    public const int SpeculationTypeFieldNumber = 38;
    private bool hasSpeculationType;
    private uint speculationType_;
    public bool HasSpeculationType {
      get { return hasSpeculationType; }
    }
    [global::System.CLSCompliant(false)]
    public uint SpeculationType {
      get { return speculationType_; }
    }
    
    public const int ArchivedFieldNumber = 39;
    private bool hasArchived;
    private bool archived_;
    public bool HasArchived {
      get { return hasArchived; }
    }
    public bool Archived {
      get { return archived_; }
    }
    
    public const int OrderIdAtExchangeFieldNumber = 40;
    private bool hasOrderIdAtExchange;
    private string orderIdAtExchange_ = "";
    public bool HasOrderIdAtExchange {
      get { return hasOrderIdAtExchange; }
    }
    public string OrderIdAtExchange {
      get { return orderIdAtExchange_; }
    }
    
    public const int DiscretionaryOffsetFieldNumber = 41;
    private bool hasDiscretionaryOffset;
    private uint discretionaryOffset_;
    public bool HasDiscretionaryOffset {
      get { return hasDiscretionaryOffset; }
    }
    [global::System.CLSCompliant(false)]
    public uint DiscretionaryOffset {
      get { return discretionaryOffset_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasChainOrderId) return false;
        if (!hasOrderId) return false;
        if (!hasChainOrigAccountId) return false;
        if (!hasSubmittedUtcTime) return false;
        if (!hasContractSymbol) return false;
        if (!hasSide) return false;
        if (!hasSize) return false;
        if (!hasDuration) return false;
        if (!hasStatus) return false;
        if (!hasOrderType) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.OrderRequest element in OrderRequestList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderChainFieldNames;
      if (hasChainOrderId) {
        output.WriteString(1, field_names[3], ChainOrderId);
      }
      if (hasOrderId) {
        output.WriteString(2, field_names[24], OrderId);
      }
      if (hasChainOrigAccountId) {
        output.WriteSInt32(4, field_names[4], ChainOrigAccountId);
      }
      if (hasSubmittedUtcTime) {
        output.WriteSInt64(5, field_names[36], SubmittedUtcTime);
      }
      if (hasContractSymbol) {
        output.WriteString(6, field_names[9], ContractSymbol);
      }
      if (hasSide) {
        output.WriteUInt32(7, field_names[30], Side);
      }
      if (hasSize) {
        output.WriteUInt32(8, field_names[31], Size);
      }
      if (hasLimitPrice) {
        output.WriteDouble(9, field_names[20], LimitPrice);
      }
      if (hasStopPrice) {
        output.WriteDouble(10, field_names[35], StopPrice);
      }
      if (execInstruction_.Count > 0) {
        output.WriteUInt32Array(11, field_names[14], execInstruction_);
      }
      if (hasDuration) {
        output.WriteUInt32(12, field_names[13], Duration);
      }
      if (hasGoodThruDate) {
        output.WriteSInt64(13, field_names[17], GoodThruDate);
      }
      if (hasGoodThruUtcTime) {
        output.WriteSInt64(14, field_names[18], GoodThruUtcTime);
      }
      if (hasStatus) {
        output.WriteUInt32(15, field_names[34], Status);
      }
      if (hasOrderType) {
        output.WriteUInt32(16, field_names[27], OrderType);
      }
      if (orderRequest_.Count > 0) {
        output.WriteMessageArray(17, field_names[26], orderRequest_);
      }
      if (orderFill_.Count > 0) {
        output.WriteMessageArray(18, field_names[23], orderFill_);
      }
      if (orderClasses_.Count > 0) {
        output.WriteStringArray(19, field_names[22], orderClasses_);
      }
      if (hasDisplayLimitPrice) {
        output.WriteSInt64(20, field_names[11], DisplayLimitPrice);
      }
      if (hasDisplayStopPrice) {
        output.WriteSInt64(21, field_names[12], DisplayStopPrice);
      }
      if (hasExecutionAccountName) {
        output.WriteString(22, field_names[15], ExecutionAccountName);
      }
      if (hasTrailing) {
        output.WriteMessage(23, field_names[38], Trailing);
      }
      if (hasSizes) {
        output.WriteMessage(24, field_names[32], Sizes);
      }
      if (accounts_.Count > 0) {
        output.WriteMessageArray(25, field_names[0], accounts_);
      }
      if (hasCompoundTreeId) {
        output.WriteString(26, field_names[7], CompoundTreeId);
      }
      if (hasRootChainOrderId) {
        output.WriteString(27, field_names[28], RootChainOrderId);
      }
      if (hasChecked) {
        output.WriteBool(28, field_names[5], Checked);
      }
      if (hasTradingExpression) {
        output.WriteString(29, field_names[37], TradingExpression);
      }
      if (legs_.Count > 0) {
        output.WriteMessageArray(30, field_names[19], legs_);
      }
      if (hasContractDescription) {
        output.WriteString(31, field_names[8], ContractDescription);
      }
      if (userAttributes_.Count > 0) {
        output.WriteMessageArray(32, field_names[39], userAttributes_);
      }
      if (hasClientAlgoStrategy) {
        output.WriteString(33, field_names[6], ClientAlgoStrategy);
      }
      if (hasAlgoStrategy) {
        output.WriteString(34, field_names[1], AlgoStrategy);
      }
      if (hasRoute) {
        output.WriteMessage(35, field_names[29], Route);
      }
      if (hasExpirationTime) {
        output.WriteSInt64(36, field_names[16], ExpirationTime);
      }
      if (hasOpenCloseType) {
        output.WriteUInt32(37, field_names[21], OpenCloseType);
      }
      if (hasSpeculationType) {
        output.WriteUInt32(38, field_names[33], SpeculationType);
      }
      if (hasArchived) {
        output.WriteBool(39, field_names[2], Archived);
      }
      if (hasOrderIdAtExchange) {
        output.WriteString(40, field_names[25], OrderIdAtExchange);
      }
      if (hasDiscretionaryOffset) {
        output.WriteUInt32(41, field_names[10], DiscretionaryOffset);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasChainOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, ChainOrderId);
      }
      if (hasOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, OrderId);
      }
      if (hasChainOrigAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(4, ChainOrigAccountId);
      }
      if (hasSubmittedUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(5, SubmittedUtcTime);
      }
      if (hasContractSymbol) {
        size += pb::CodedOutputStream.ComputeStringSize(6, ContractSymbol);
      }
      if (hasSide) {
        size += pb::CodedOutputStream.ComputeUInt32Size(7, Side);
      }
      if (hasSize) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, Size);
      }
      if (hasLimitPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(9, LimitPrice);
      }
      if (hasStopPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(10, StopPrice);
      }
      {
        int dataSize = 0;
        foreach (uint element in ExecInstructionList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * execInstruction_.Count;
      }
      if (hasDuration) {
        size += pb::CodedOutputStream.ComputeUInt32Size(12, Duration);
      }
      if (hasGoodThruDate) {
        size += pb::CodedOutputStream.ComputeSInt64Size(13, GoodThruDate);
      }
      if (hasGoodThruUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(14, GoodThruUtcTime);
      }
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(15, Status);
      }
      if (hasOrderType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(16, OrderType);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.OrderRequest element in OrderRequestList) {
        size += pb::CodedOutputStream.ComputeMessageSize(17, element);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.OrderFill element in OrderFillList) {
        size += pb::CodedOutputStream.ComputeMessageSize(18, element);
      }
      {
        int dataSize = 0;
        foreach (string element in OrderClassesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 2 * orderClasses_.Count;
      }
      if (hasDisplayLimitPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(20, DisplayLimitPrice);
      }
      if (hasDisplayStopPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(21, DisplayStopPrice);
      }
      if (hasExecutionAccountName) {
        size += pb::CodedOutputStream.ComputeStringSize(22, ExecutionAccountName);
      }
      if (hasTrailing) {
        size += pb::CodedOutputStream.ComputeMessageSize(23, Trailing);
      }
      if (hasSizes) {
        size += pb::CodedOutputStream.ComputeMessageSize(24, Sizes);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.ChainAccount element in AccountsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(25, element);
      }
      if (hasCompoundTreeId) {
        size += pb::CodedOutputStream.ComputeStringSize(26, CompoundTreeId);
      }
      if (hasRootChainOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(27, RootChainOrderId);
      }
      if (hasChecked) {
        size += pb::CodedOutputStream.ComputeBoolSize(28, Checked);
      }
      if (hasTradingExpression) {
        size += pb::CodedOutputStream.ComputeStringSize(29, TradingExpression);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg element in LegsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(30, element);
      }
      if (hasContractDescription) {
        size += pb::CodedOutputStream.ComputeStringSize(31, ContractDescription);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.Tuple element in UserAttributesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(32, element);
      }
      if (hasClientAlgoStrategy) {
        size += pb::CodedOutputStream.ComputeStringSize(33, ClientAlgoStrategy);
      }
      if (hasAlgoStrategy) {
        size += pb::CodedOutputStream.ComputeStringSize(34, AlgoStrategy);
      }
      if (hasRoute) {
        size += pb::CodedOutputStream.ComputeMessageSize(35, Route);
      }
      if (hasExpirationTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(36, ExpirationTime);
      }
      if (hasOpenCloseType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(37, OpenCloseType);
      }
      if (hasSpeculationType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(38, SpeculationType);
      }
      if (hasArchived) {
        size += pb::CodedOutputStream.ComputeBoolSize(39, Archived);
      }
      if (hasOrderIdAtExchange) {
        size += pb::CodedOutputStream.ComputeStringSize(40, OrderIdAtExchange);
      }
      if (hasDiscretionaryOffset) {
        size += pb::CodedOutputStream.ComputeUInt32Size(41, DiscretionaryOffset);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderChain ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderChain ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderChain ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderChain ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderChain ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderChain ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderChain ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderChain ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderChain ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderChain ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderChain MakeReadOnly() {
      execInstruction_.MakeReadOnly();
      orderRequest_.MakeReadOnly();
      orderFill_.MakeReadOnly();
      orderClasses_.MakeReadOnly();
      accounts_.MakeReadOnly();
      legs_.MakeReadOnly();
      userAttributes_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderChain prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderChain, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderChain cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderChain result;
      
      private OrderChain PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderChain original = result;
          result = new OrderChain();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderChain MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderChain.Descriptor; }
      }
      
      public override OrderChain DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderChain.DefaultInstance; }
      }
      
      public override OrderChain BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderChain) {
          return MergeFrom((OrderChain) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderChain other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderChain.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChainOrderId) {
          ChainOrderId = other.ChainOrderId;
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasChainOrigAccountId) {
          ChainOrigAccountId = other.ChainOrigAccountId;
        }
        if (other.HasSubmittedUtcTime) {
          SubmittedUtcTime = other.SubmittedUtcTime;
        }
        if (other.HasContractSymbol) {
          ContractSymbol = other.ContractSymbol;
        }
        if (other.HasSide) {
          Side = other.Side;
        }
        if (other.HasSize) {
          Size = other.Size;
        }
        if (other.HasLimitPrice) {
          LimitPrice = other.LimitPrice;
        }
        if (other.HasStopPrice) {
          StopPrice = other.StopPrice;
        }
        if (other.execInstruction_.Count != 0) {
          result.execInstruction_.Add(other.execInstruction_);
        }
        if (other.HasDuration) {
          Duration = other.Duration;
        }
        if (other.HasGoodThruDate) {
          GoodThruDate = other.GoodThruDate;
        }
        if (other.HasGoodThruUtcTime) {
          GoodThruUtcTime = other.GoodThruUtcTime;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasOrderType) {
          OrderType = other.OrderType;
        }
        if (other.orderRequest_.Count != 0) {
          result.orderRequest_.Add(other.orderRequest_);
        }
        if (other.orderFill_.Count != 0) {
          result.orderFill_.Add(other.orderFill_);
        }
        if (other.orderClasses_.Count != 0) {
          result.orderClasses_.Add(other.orderClasses_);
        }
        if (other.HasDisplayLimitPrice) {
          DisplayLimitPrice = other.DisplayLimitPrice;
        }
        if (other.HasDisplayStopPrice) {
          DisplayStopPrice = other.DisplayStopPrice;
        }
        if (other.HasExecutionAccountName) {
          ExecutionAccountName = other.ExecutionAccountName;
        }
        if (other.HasTrailing) {
          MergeTrailing(other.Trailing);
        }
        if (other.HasSizes) {
          MergeSizes(other.Sizes);
        }
        if (other.accounts_.Count != 0) {
          result.accounts_.Add(other.accounts_);
        }
        if (other.HasCompoundTreeId) {
          CompoundTreeId = other.CompoundTreeId;
        }
        if (other.HasRootChainOrderId) {
          RootChainOrderId = other.RootChainOrderId;
        }
        if (other.HasChecked) {
          Checked = other.Checked;
        }
        if (other.HasTradingExpression) {
          TradingExpression = other.TradingExpression;
        }
        if (other.legs_.Count != 0) {
          result.legs_.Add(other.legs_);
        }
        if (other.HasContractDescription) {
          ContractDescription = other.ContractDescription;
        }
        if (other.userAttributes_.Count != 0) {
          result.userAttributes_.Add(other.userAttributes_);
        }
        if (other.HasClientAlgoStrategy) {
          ClientAlgoStrategy = other.ClientAlgoStrategy;
        }
        if (other.HasAlgoStrategy) {
          AlgoStrategy = other.AlgoStrategy;
        }
        if (other.HasRoute) {
          MergeRoute(other.Route);
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        if (other.HasOpenCloseType) {
          OpenCloseType = other.OpenCloseType;
        }
        if (other.HasSpeculationType) {
          SpeculationType = other.SpeculationType;
        }
        if (other.HasArchived) {
          Archived = other.Archived;
        }
        if (other.HasOrderIdAtExchange) {
          OrderIdAtExchange = other.OrderIdAtExchange;
        }
        if (other.HasDiscretionaryOffset) {
          DiscretionaryOffset = other.DiscretionaryOffset;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderChainFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderChainFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasChainOrderId = input.ReadString(ref result.chainOrderId_);
              break;
            }
            case 18: {
              result.hasOrderId = input.ReadString(ref result.orderId_);
              break;
            }
            case 32: {
              result.hasChainOrigAccountId = input.ReadSInt32(ref result.chainOrigAccountId_);
              break;
            }
            case 40: {
              result.hasSubmittedUtcTime = input.ReadSInt64(ref result.submittedUtcTime_);
              break;
            }
            case 50: {
              result.hasContractSymbol = input.ReadString(ref result.contractSymbol_);
              break;
            }
            case 56: {
              result.hasSide = input.ReadUInt32(ref result.side_);
              break;
            }
            case 64: {
              result.hasSize = input.ReadUInt32(ref result.size_);
              break;
            }
            case 73: {
              result.hasLimitPrice = input.ReadDouble(ref result.limitPrice_);
              break;
            }
            case 81: {
              result.hasStopPrice = input.ReadDouble(ref result.stopPrice_);
              break;
            }
            case 90:
            case 88: {
              input.ReadUInt32Array(tag, field_name, result.execInstruction_);
              break;
            }
            case 96: {
              result.hasDuration = input.ReadUInt32(ref result.duration_);
              break;
            }
            case 104: {
              result.hasGoodThruDate = input.ReadSInt64(ref result.goodThruDate_);
              break;
            }
            case 112: {
              result.hasGoodThruUtcTime = input.ReadSInt64(ref result.goodThruUtcTime_);
              break;
            }
            case 120: {
              result.hasStatus = input.ReadUInt32(ref result.status_);
              break;
            }
            case 128: {
              result.hasOrderType = input.ReadUInt32(ref result.orderType_);
              break;
            }
            case 138: {
              input.ReadMessageArray(tag, field_name, result.orderRequest_, global::CmsApiSamples.Protocol.CMSApi.OrderRequest.DefaultInstance, extensionRegistry);
              break;
            }
            case 146: {
              input.ReadMessageArray(tag, field_name, result.orderFill_, global::CmsApiSamples.Protocol.CMSApi.OrderFill.DefaultInstance, extensionRegistry);
              break;
            }
            case 154: {
              input.ReadStringArray(tag, field_name, result.orderClasses_);
              break;
            }
            case 160: {
              result.hasDisplayLimitPrice = input.ReadSInt64(ref result.displayLimitPrice_);
              break;
            }
            case 168: {
              result.hasDisplayStopPrice = input.ReadSInt64(ref result.displayStopPrice_);
              break;
            }
            case 178: {
              result.hasExecutionAccountName = input.ReadString(ref result.executionAccountName_);
              break;
            }
            case 186: {
              global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.CreateBuilder();
              if (result.hasTrailing) {
                subBuilder.MergeFrom(Trailing);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Trailing = subBuilder.BuildPartial();
              break;
            }
            case 194: {
              global::CmsApiSamples.Protocol.CMSApi.OrderSizes.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderSizes.CreateBuilder();
              if (result.hasSizes) {
                subBuilder.MergeFrom(Sizes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Sizes = subBuilder.BuildPartial();
              break;
            }
            case 202: {
              input.ReadMessageArray(tag, field_name, result.accounts_, global::CmsApiSamples.Protocol.CMSApi.ChainAccount.DefaultInstance, extensionRegistry);
              break;
            }
            case 210: {
              result.hasCompoundTreeId = input.ReadString(ref result.compoundTreeId_);
              break;
            }
            case 218: {
              result.hasRootChainOrderId = input.ReadString(ref result.rootChainOrderId_);
              break;
            }
            case 224: {
              result.hasChecked = input.ReadBool(ref result.checked_);
              break;
            }
            case 234: {
              result.hasTradingExpression = input.ReadString(ref result.tradingExpression_);
              break;
            }
            case 242: {
              input.ReadMessageArray(tag, field_name, result.legs_, global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg.DefaultInstance, extensionRegistry);
              break;
            }
            case 250: {
              result.hasContractDescription = input.ReadString(ref result.contractDescription_);
              break;
            }
            case 258: {
              input.ReadMessageArray(tag, field_name, result.userAttributes_, global::CmsApiSamples.Protocol.CMSApi.Tuple.DefaultInstance, extensionRegistry);
              break;
            }
            case 266: {
              result.hasClientAlgoStrategy = input.ReadString(ref result.clientAlgoStrategy_);
              break;
            }
            case 274: {
              result.hasAlgoStrategy = input.ReadString(ref result.algoStrategy_);
              break;
            }
            case 282: {
              global::CmsApiSamples.Protocol.CMSApi.OrderRoute.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderRoute.CreateBuilder();
              if (result.hasRoute) {
                subBuilder.MergeFrom(Route);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Route = subBuilder.BuildPartial();
              break;
            }
            case 288: {
              result.hasExpirationTime = input.ReadSInt64(ref result.expirationTime_);
              break;
            }
            case 296: {
              result.hasOpenCloseType = input.ReadUInt32(ref result.openCloseType_);
              break;
            }
            case 304: {
              result.hasSpeculationType = input.ReadUInt32(ref result.speculationType_);
              break;
            }
            case 312: {
              result.hasArchived = input.ReadBool(ref result.archived_);
              break;
            }
            case 322: {
              result.hasOrderIdAtExchange = input.ReadString(ref result.orderIdAtExchange_);
              break;
            }
            case 328: {
              result.hasDiscretionaryOffset = input.ReadUInt32(ref result.discretionaryOffset_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChainOrderId {
        get { return result.hasChainOrderId; }
      }
      public string ChainOrderId {
        get { return result.ChainOrderId; }
        set { SetChainOrderId(value); }
      }
      public Builder SetChainOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChainOrderId = true;
        result.chainOrderId_ = value;
        return this;
      }
      public Builder ClearChainOrderId() {
        PrepareBuilder();
        result.hasChainOrderId = false;
        result.chainOrderId_ = "";
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public string OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = "";
        return this;
      }
      
      public bool HasChainOrigAccountId {
        get { return result.hasChainOrigAccountId; }
      }
      public int ChainOrigAccountId {
        get { return result.ChainOrigAccountId; }
        set { SetChainOrigAccountId(value); }
      }
      public Builder SetChainOrigAccountId(int value) {
        PrepareBuilder();
        result.hasChainOrigAccountId = true;
        result.chainOrigAccountId_ = value;
        return this;
      }
      public Builder ClearChainOrigAccountId() {
        PrepareBuilder();
        result.hasChainOrigAccountId = false;
        result.chainOrigAccountId_ = 0;
        return this;
      }
      
      public bool HasSubmittedUtcTime {
        get { return result.hasSubmittedUtcTime; }
      }
      public long SubmittedUtcTime {
        get { return result.SubmittedUtcTime; }
        set { SetSubmittedUtcTime(value); }
      }
      public Builder SetSubmittedUtcTime(long value) {
        PrepareBuilder();
        result.hasSubmittedUtcTime = true;
        result.submittedUtcTime_ = value;
        return this;
      }
      public Builder ClearSubmittedUtcTime() {
        PrepareBuilder();
        result.hasSubmittedUtcTime = false;
        result.submittedUtcTime_ = 0;
        return this;
      }
      
      public bool HasContractSymbol {
        get { return result.hasContractSymbol; }
      }
      public string ContractSymbol {
        get { return result.ContractSymbol; }
        set { SetContractSymbol(value); }
      }
      public Builder SetContractSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContractSymbol = true;
        result.contractSymbol_ = value;
        return this;
      }
      public Builder ClearContractSymbol() {
        PrepareBuilder();
        result.hasContractSymbol = false;
        result.contractSymbol_ = "";
        return this;
      }
      
      public bool HasSide {
        get { return result.hasSide; }
      }
      [global::System.CLSCompliant(false)]
      public uint Side {
        get { return result.Side; }
        set { SetSide(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSide(uint value) {
        PrepareBuilder();
        result.hasSide = true;
        result.side_ = value;
        return this;
      }
      public Builder ClearSide() {
        PrepareBuilder();
        result.hasSide = false;
        result.side_ = 0;
        return this;
      }
      
      public bool HasSize {
        get { return result.hasSize; }
      }
      [global::System.CLSCompliant(false)]
      public uint Size {
        get { return result.Size; }
        set { SetSize(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSize(uint value) {
        PrepareBuilder();
        result.hasSize = true;
        result.size_ = value;
        return this;
      }
      public Builder ClearSize() {
        PrepareBuilder();
        result.hasSize = false;
        result.size_ = 0;
        return this;
      }
      
      public bool HasLimitPrice {
        get { return result.hasLimitPrice; }
      }
      public double LimitPrice {
        get { return result.LimitPrice; }
        set { SetLimitPrice(value); }
      }
      public Builder SetLimitPrice(double value) {
        PrepareBuilder();
        result.hasLimitPrice = true;
        result.limitPrice_ = value;
        return this;
      }
      public Builder ClearLimitPrice() {
        PrepareBuilder();
        result.hasLimitPrice = false;
        result.limitPrice_ = 0D;
        return this;
      }
      
      public bool HasStopPrice {
        get { return result.hasStopPrice; }
      }
      public double StopPrice {
        get { return result.StopPrice; }
        set { SetStopPrice(value); }
      }
      public Builder SetStopPrice(double value) {
        PrepareBuilder();
        result.hasStopPrice = true;
        result.stopPrice_ = value;
        return this;
      }
      public Builder ClearStopPrice() {
        PrepareBuilder();
        result.hasStopPrice = false;
        result.stopPrice_ = 0D;
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> ExecInstructionList {
        get { return PrepareBuilder().execInstruction_; }
      }
      public int ExecInstructionCount {
        get { return result.ExecInstructionCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetExecInstruction(int index) {
        return result.GetExecInstruction(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetExecInstruction(int index, uint value) {
        PrepareBuilder();
        result.execInstruction_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddExecInstruction(uint value) {
        PrepareBuilder();
        result.execInstruction_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeExecInstruction(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.execInstruction_.Add(values);
        return this;
      }
      public Builder ClearExecInstruction() {
        PrepareBuilder();
        result.execInstruction_.Clear();
        return this;
      }
      
      public bool HasDuration {
        get { return result.hasDuration; }
      }
      [global::System.CLSCompliant(false)]
      public uint Duration {
        get { return result.Duration; }
        set { SetDuration(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetDuration(uint value) {
        PrepareBuilder();
        result.hasDuration = true;
        result.duration_ = value;
        return this;
      }
      public Builder ClearDuration() {
        PrepareBuilder();
        result.hasDuration = false;
        result.duration_ = 0;
        return this;
      }
      
      public bool HasGoodThruDate {
        get { return result.hasGoodThruDate; }
      }
      public long GoodThruDate {
        get { return result.GoodThruDate; }
        set { SetGoodThruDate(value); }
      }
      public Builder SetGoodThruDate(long value) {
        PrepareBuilder();
        result.hasGoodThruDate = true;
        result.goodThruDate_ = value;
        return this;
      }
      public Builder ClearGoodThruDate() {
        PrepareBuilder();
        result.hasGoodThruDate = false;
        result.goodThruDate_ = 0;
        return this;
      }
      
      public bool HasGoodThruUtcTime {
        get { return result.hasGoodThruUtcTime; }
      }
      public long GoodThruUtcTime {
        get { return result.GoodThruUtcTime; }
        set { SetGoodThruUtcTime(value); }
      }
      public Builder SetGoodThruUtcTime(long value) {
        PrepareBuilder();
        result.hasGoodThruUtcTime = true;
        result.goodThruUtcTime_ = value;
        return this;
      }
      public Builder ClearGoodThruUtcTime() {
        PrepareBuilder();
        result.hasGoodThruUtcTime = false;
        result.goodThruUtcTime_ = 0;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetStatus(uint value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasOrderType {
        get { return result.hasOrderType; }
      }
      [global::System.CLSCompliant(false)]
      public uint OrderType {
        get { return result.OrderType; }
        set { SetOrderType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOrderType(uint value) {
        PrepareBuilder();
        result.hasOrderType = true;
        result.orderType_ = value;
        return this;
      }
      public Builder ClearOrderType() {
        PrepareBuilder();
        result.hasOrderType = false;
        result.orderType_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderRequest> OrderRequestList {
        get { return PrepareBuilder().orderRequest_; }
      }
      public int OrderRequestCount {
        get { return result.OrderRequestCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderRequest GetOrderRequest(int index) {
        return result.GetOrderRequest(index);
      }
      public Builder SetOrderRequest(int index, global::CmsApiSamples.Protocol.CMSApi.OrderRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orderRequest_[index] = value;
        return this;
      }
      public Builder SetOrderRequest(int index, global::CmsApiSamples.Protocol.CMSApi.OrderRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.orderRequest_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOrderRequest(global::CmsApiSamples.Protocol.CMSApi.OrderRequest value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orderRequest_.Add(value);
        return this;
      }
      public Builder AddOrderRequest(global::CmsApiSamples.Protocol.CMSApi.OrderRequest.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.orderRequest_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOrderRequest(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.OrderRequest> values) {
        PrepareBuilder();
        result.orderRequest_.Add(values);
        return this;
      }
      public Builder ClearOrderRequest() {
        PrepareBuilder();
        result.orderRequest_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderFill> OrderFillList {
        get { return PrepareBuilder().orderFill_; }
      }
      public int OrderFillCount {
        get { return result.OrderFillCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderFill GetOrderFill(int index) {
        return result.GetOrderFill(index);
      }
      public Builder SetOrderFill(int index, global::CmsApiSamples.Protocol.CMSApi.OrderFill value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orderFill_[index] = value;
        return this;
      }
      public Builder SetOrderFill(int index, global::CmsApiSamples.Protocol.CMSApi.OrderFill.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.orderFill_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOrderFill(global::CmsApiSamples.Protocol.CMSApi.OrderFill value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orderFill_.Add(value);
        return this;
      }
      public Builder AddOrderFill(global::CmsApiSamples.Protocol.CMSApi.OrderFill.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.orderFill_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOrderFill(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.OrderFill> values) {
        PrepareBuilder();
        result.orderFill_.Add(values);
        return this;
      }
      public Builder ClearOrderFill() {
        PrepareBuilder();
        result.orderFill_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> OrderClassesList {
        get { return PrepareBuilder().orderClasses_; }
      }
      public int OrderClassesCount {
        get { return result.OrderClassesCount; }
      }
      public string GetOrderClasses(int index) {
        return result.GetOrderClasses(index);
      }
      public Builder SetOrderClasses(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orderClasses_[index] = value;
        return this;
      }
      public Builder AddOrderClasses(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orderClasses_.Add(value);
        return this;
      }
      public Builder AddRangeOrderClasses(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.orderClasses_.Add(values);
        return this;
      }
      public Builder ClearOrderClasses() {
        PrepareBuilder();
        result.orderClasses_.Clear();
        return this;
      }
      
      public bool HasDisplayLimitPrice {
        get { return result.hasDisplayLimitPrice; }
      }
      public long DisplayLimitPrice {
        get { return result.DisplayLimitPrice; }
        set { SetDisplayLimitPrice(value); }
      }
      public Builder SetDisplayLimitPrice(long value) {
        PrepareBuilder();
        result.hasDisplayLimitPrice = true;
        result.displayLimitPrice_ = value;
        return this;
      }
      public Builder ClearDisplayLimitPrice() {
        PrepareBuilder();
        result.hasDisplayLimitPrice = false;
        result.displayLimitPrice_ = 0;
        return this;
      }
      
      public bool HasDisplayStopPrice {
        get { return result.hasDisplayStopPrice; }
      }
      public long DisplayStopPrice {
        get { return result.DisplayStopPrice; }
        set { SetDisplayStopPrice(value); }
      }
      public Builder SetDisplayStopPrice(long value) {
        PrepareBuilder();
        result.hasDisplayStopPrice = true;
        result.displayStopPrice_ = value;
        return this;
      }
      public Builder ClearDisplayStopPrice() {
        PrepareBuilder();
        result.hasDisplayStopPrice = false;
        result.displayStopPrice_ = 0;
        return this;
      }
      
      public bool HasExecutionAccountName {
        get { return result.hasExecutionAccountName; }
      }
      public string ExecutionAccountName {
        get { return result.ExecutionAccountName; }
        set { SetExecutionAccountName(value); }
      }
      public Builder SetExecutionAccountName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExecutionAccountName = true;
        result.executionAccountName_ = value;
        return this;
      }
      public Builder ClearExecutionAccountName() {
        PrepareBuilder();
        result.hasExecutionAccountName = false;
        result.executionAccountName_ = "";
        return this;
      }
      
      public bool HasTrailing {
       get { return result.hasTrailing; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderTrailing Trailing {
        get { return result.Trailing; }
        set { SetTrailing(value); }
      }
      public Builder SetTrailing(global::CmsApiSamples.Protocol.CMSApi.OrderTrailing value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTrailing = true;
        result.trailing_ = value;
        return this;
      }
      public Builder SetTrailing(global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTrailing = true;
        result.trailing_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTrailing(global::CmsApiSamples.Protocol.CMSApi.OrderTrailing value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTrailing &&
            result.trailing_ != global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.DefaultInstance) {
            result.trailing_ = global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.CreateBuilder(result.trailing_).MergeFrom(value).BuildPartial();
        } else {
          result.trailing_ = value;
        }
        result.hasTrailing = true;
        return this;
      }
      public Builder ClearTrailing() {
        PrepareBuilder();
        result.hasTrailing = false;
        result.trailing_ = null;
        return this;
      }
      
      public bool HasSizes {
       get { return result.hasSizes; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderSizes Sizes {
        get { return result.Sizes; }
        set { SetSizes(value); }
      }
      public Builder SetSizes(global::CmsApiSamples.Protocol.CMSApi.OrderSizes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSizes = true;
        result.sizes_ = value;
        return this;
      }
      public Builder SetSizes(global::CmsApiSamples.Protocol.CMSApi.OrderSizes.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSizes = true;
        result.sizes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSizes(global::CmsApiSamples.Protocol.CMSApi.OrderSizes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSizes &&
            result.sizes_ != global::CmsApiSamples.Protocol.CMSApi.OrderSizes.DefaultInstance) {
            result.sizes_ = global::CmsApiSamples.Protocol.CMSApi.OrderSizes.CreateBuilder(result.sizes_).MergeFrom(value).BuildPartial();
        } else {
          result.sizes_ = value;
        }
        result.hasSizes = true;
        return this;
      }
      public Builder ClearSizes() {
        PrepareBuilder();
        result.hasSizes = false;
        result.sizes_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.ChainAccount> AccountsList {
        get { return PrepareBuilder().accounts_; }
      }
      public int AccountsCount {
        get { return result.AccountsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.ChainAccount GetAccounts(int index) {
        return result.GetAccounts(index);
      }
      public Builder SetAccounts(int index, global::CmsApiSamples.Protocol.CMSApi.ChainAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accounts_[index] = value;
        return this;
      }
      public Builder SetAccounts(int index, global::CmsApiSamples.Protocol.CMSApi.ChainAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accounts_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAccounts(global::CmsApiSamples.Protocol.CMSApi.ChainAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accounts_.Add(value);
        return this;
      }
      public Builder AddAccounts(global::CmsApiSamples.Protocol.CMSApi.ChainAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accounts_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAccounts(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.ChainAccount> values) {
        PrepareBuilder();
        result.accounts_.Add(values);
        return this;
      }
      public Builder ClearAccounts() {
        PrepareBuilder();
        result.accounts_.Clear();
        return this;
      }
      
      public bool HasCompoundTreeId {
        get { return result.hasCompoundTreeId; }
      }
      public string CompoundTreeId {
        get { return result.CompoundTreeId; }
        set { SetCompoundTreeId(value); }
      }
      public Builder SetCompoundTreeId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCompoundTreeId = true;
        result.compoundTreeId_ = value;
        return this;
      }
      public Builder ClearCompoundTreeId() {
        PrepareBuilder();
        result.hasCompoundTreeId = false;
        result.compoundTreeId_ = "";
        return this;
      }
      
      public bool HasRootChainOrderId {
        get { return result.hasRootChainOrderId; }
      }
      public string RootChainOrderId {
        get { return result.RootChainOrderId; }
        set { SetRootChainOrderId(value); }
      }
      public Builder SetRootChainOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRootChainOrderId = true;
        result.rootChainOrderId_ = value;
        return this;
      }
      public Builder ClearRootChainOrderId() {
        PrepareBuilder();
        result.hasRootChainOrderId = false;
        result.rootChainOrderId_ = "";
        return this;
      }
      
      public bool HasChecked {
        get { return result.hasChecked; }
      }
      public bool Checked {
        get { return result.Checked; }
        set { SetChecked(value); }
      }
      public Builder SetChecked(bool value) {
        PrepareBuilder();
        result.hasChecked = true;
        result.checked_ = value;
        return this;
      }
      public Builder ClearChecked() {
        PrepareBuilder();
        result.hasChecked = false;
        result.checked_ = false;
        return this;
      }
      
      public bool HasTradingExpression {
        get { return result.hasTradingExpression; }
      }
      public string TradingExpression {
        get { return result.TradingExpression; }
        set { SetTradingExpression(value); }
      }
      public Builder SetTradingExpression(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradingExpression = true;
        result.tradingExpression_ = value;
        return this;
      }
      public Builder ClearTradingExpression() {
        PrepareBuilder();
        result.hasTradingExpression = false;
        result.tradingExpression_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg> LegsList {
        get { return PrepareBuilder().legs_; }
      }
      public int LegsCount {
        get { return result.LegsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg GetLegs(int index) {
        return result.GetLegs(index);
      }
      public Builder SetLegs(int index, global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.legs_[index] = value;
        return this;
      }
      public Builder SetLegs(int index, global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.legs_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLegs(global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.legs_.Add(value);
        return this;
      }
      public Builder AddLegs(global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.legs_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLegs(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg> values) {
        PrepareBuilder();
        result.legs_.Add(values);
        return this;
      }
      public Builder ClearLegs() {
        PrepareBuilder();
        result.legs_.Clear();
        return this;
      }
      
      public bool HasContractDescription {
        get { return result.hasContractDescription; }
      }
      public string ContractDescription {
        get { return result.ContractDescription; }
        set { SetContractDescription(value); }
      }
      public Builder SetContractDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContractDescription = true;
        result.contractDescription_ = value;
        return this;
      }
      public Builder ClearContractDescription() {
        PrepareBuilder();
        result.hasContractDescription = false;
        result.contractDescription_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> UserAttributesList {
        get { return PrepareBuilder().userAttributes_; }
      }
      public int UserAttributesCount {
        get { return result.UserAttributesCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Tuple GetUserAttributes(int index) {
        return result.GetUserAttributes(index);
      }
      public Builder SetUserAttributes(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userAttributes_[index] = value;
        return this;
      }
      public Builder SetUserAttributes(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userAttributes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUserAttributes(global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userAttributes_.Add(value);
        return this;
      }
      public Builder AddUserAttributes(global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userAttributes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUserAttributes(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Tuple> values) {
        PrepareBuilder();
        result.userAttributes_.Add(values);
        return this;
      }
      public Builder ClearUserAttributes() {
        PrepareBuilder();
        result.userAttributes_.Clear();
        return this;
      }
      
      public bool HasClientAlgoStrategy {
        get { return result.hasClientAlgoStrategy; }
      }
      public string ClientAlgoStrategy {
        get { return result.ClientAlgoStrategy; }
        set { SetClientAlgoStrategy(value); }
      }
      public Builder SetClientAlgoStrategy(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientAlgoStrategy = true;
        result.clientAlgoStrategy_ = value;
        return this;
      }
      public Builder ClearClientAlgoStrategy() {
        PrepareBuilder();
        result.hasClientAlgoStrategy = false;
        result.clientAlgoStrategy_ = "";
        return this;
      }
      
      public bool HasAlgoStrategy {
        get { return result.hasAlgoStrategy; }
      }
      public string AlgoStrategy {
        get { return result.AlgoStrategy; }
        set { SetAlgoStrategy(value); }
      }
      public Builder SetAlgoStrategy(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAlgoStrategy = true;
        result.algoStrategy_ = value;
        return this;
      }
      public Builder ClearAlgoStrategy() {
        PrepareBuilder();
        result.hasAlgoStrategy = false;
        result.algoStrategy_ = "";
        return this;
      }
      
      public bool HasRoute {
       get { return result.hasRoute; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderRoute Route {
        get { return result.Route; }
        set { SetRoute(value); }
      }
      public Builder SetRoute(global::CmsApiSamples.Protocol.CMSApi.OrderRoute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoute = true;
        result.route_ = value;
        return this;
      }
      public Builder SetRoute(global::CmsApiSamples.Protocol.CMSApi.OrderRoute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRoute = true;
        result.route_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRoute(global::CmsApiSamples.Protocol.CMSApi.OrderRoute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRoute &&
            result.route_ != global::CmsApiSamples.Protocol.CMSApi.OrderRoute.DefaultInstance) {
            result.route_ = global::CmsApiSamples.Protocol.CMSApi.OrderRoute.CreateBuilder(result.route_).MergeFrom(value).BuildPartial();
        } else {
          result.route_ = value;
        }
        result.hasRoute = true;
        return this;
      }
      public Builder ClearRoute() {
        PrepareBuilder();
        result.hasRoute = false;
        result.route_ = null;
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public long ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(long value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0;
        return this;
      }
      
      public bool HasOpenCloseType {
        get { return result.hasOpenCloseType; }
      }
      [global::System.CLSCompliant(false)]
      public uint OpenCloseType {
        get { return result.OpenCloseType; }
        set { SetOpenCloseType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOpenCloseType(uint value) {
        PrepareBuilder();
        result.hasOpenCloseType = true;
        result.openCloseType_ = value;
        return this;
      }
      public Builder ClearOpenCloseType() {
        PrepareBuilder();
        result.hasOpenCloseType = false;
        result.openCloseType_ = 0;
        return this;
      }
      
      public bool HasSpeculationType {
        get { return result.hasSpeculationType; }
      }
      [global::System.CLSCompliant(false)]
      public uint SpeculationType {
        get { return result.SpeculationType; }
        set { SetSpeculationType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSpeculationType(uint value) {
        PrepareBuilder();
        result.hasSpeculationType = true;
        result.speculationType_ = value;
        return this;
      }
      public Builder ClearSpeculationType() {
        PrepareBuilder();
        result.hasSpeculationType = false;
        result.speculationType_ = 0;
        return this;
      }
      
      public bool HasArchived {
        get { return result.hasArchived; }
      }
      public bool Archived {
        get { return result.Archived; }
        set { SetArchived(value); }
      }
      public Builder SetArchived(bool value) {
        PrepareBuilder();
        result.hasArchived = true;
        result.archived_ = value;
        return this;
      }
      public Builder ClearArchived() {
        PrepareBuilder();
        result.hasArchived = false;
        result.archived_ = false;
        return this;
      }
      
      public bool HasOrderIdAtExchange {
        get { return result.hasOrderIdAtExchange; }
      }
      public string OrderIdAtExchange {
        get { return result.OrderIdAtExchange; }
        set { SetOrderIdAtExchange(value); }
      }
      public Builder SetOrderIdAtExchange(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderIdAtExchange = true;
        result.orderIdAtExchange_ = value;
        return this;
      }
      public Builder ClearOrderIdAtExchange() {
        PrepareBuilder();
        result.hasOrderIdAtExchange = false;
        result.orderIdAtExchange_ = "";
        return this;
      }
      
      public bool HasDiscretionaryOffset {
        get { return result.hasDiscretionaryOffset; }
      }
      [global::System.CLSCompliant(false)]
      public uint DiscretionaryOffset {
        get { return result.DiscretionaryOffset; }
        set { SetDiscretionaryOffset(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetDiscretionaryOffset(uint value) {
        PrepareBuilder();
        result.hasDiscretionaryOffset = true;
        result.discretionaryOffset_ = value;
        return this;
      }
      public Builder ClearDiscretionaryOffset() {
        PrepareBuilder();
        result.hasDiscretionaryOffset = false;
        result.discretionaryOffset_ = 0;
        return this;
      }
    }
    static OrderChain() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ChainAccount : pb::GeneratedMessage<ChainAccount, ChainAccount.Builder> {
    private ChainAccount() { }
    private static readonly ChainAccount defaultInstance = new ChainAccount().MakeReadOnly();
    private static readonly string[] _chainAccountFieldNames = new string[] { "account_id", "account_name", "brokerage_account_number" };
    private static readonly uint[] _chainAccountFieldTags = new uint[] { 10, 18, 26 };
    public static ChainAccount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ChainAccount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ChainAccount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ChainAccount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ChainAccount, ChainAccount.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ChainAccount__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private string accountId_ = "";
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public string AccountId {
      get { return accountId_; }
    }
    
    public const int AccountNameFieldNumber = 2;
    private bool hasAccountName;
    private string accountName_ = "";
    public bool HasAccountName {
      get { return hasAccountName; }
    }
    public string AccountName {
      get { return accountName_; }
    }
    
    public const int BrokerageAccountNumberFieldNumber = 3;
    private bool hasBrokerageAccountNumber;
    private string brokerageAccountNumber_ = "";
    public bool HasBrokerageAccountNumber {
      get { return hasBrokerageAccountNumber; }
    }
    public string BrokerageAccountNumber {
      get { return brokerageAccountNumber_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _chainAccountFieldNames;
      if (hasAccountId) {
        output.WriteString(1, field_names[0], AccountId);
      }
      if (hasAccountName) {
        output.WriteString(2, field_names[1], AccountName);
      }
      if (hasBrokerageAccountNumber) {
        output.WriteString(3, field_names[2], BrokerageAccountNumber);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AccountId);
      }
      if (hasAccountName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, AccountName);
      }
      if (hasBrokerageAccountNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(3, BrokerageAccountNumber);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ChainAccount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChainAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChainAccount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ChainAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ChainAccount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChainAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ChainAccount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ChainAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ChainAccount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ChainAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ChainAccount MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ChainAccount prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ChainAccount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ChainAccount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ChainAccount result;
      
      private ChainAccount PrepareBuilder() {
        if (resultIsReadOnly) {
          ChainAccount original = result;
          result = new ChainAccount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ChainAccount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ChainAccount.Descriptor; }
      }
      
      public override ChainAccount DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ChainAccount.DefaultInstance; }
      }
      
      public override ChainAccount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ChainAccount) {
          return MergeFrom((ChainAccount) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ChainAccount other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ChainAccount.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasAccountName) {
          AccountName = other.AccountName;
        }
        if (other.HasBrokerageAccountNumber) {
          BrokerageAccountNumber = other.BrokerageAccountNumber;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_chainAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _chainAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccountId = input.ReadString(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasAccountName = input.ReadString(ref result.accountName_);
              break;
            }
            case 26: {
              result.hasBrokerageAccountNumber = input.ReadString(ref result.brokerageAccountNumber_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public string AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = "";
        return this;
      }
      
      public bool HasAccountName {
        get { return result.hasAccountName; }
      }
      public string AccountName {
        get { return result.AccountName; }
        set { SetAccountName(value); }
      }
      public Builder SetAccountName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountName = true;
        result.accountName_ = value;
        return this;
      }
      public Builder ClearAccountName() {
        PrepareBuilder();
        result.hasAccountName = false;
        result.accountName_ = "";
        return this;
      }
      
      public bool HasBrokerageAccountNumber {
        get { return result.hasBrokerageAccountNumber; }
      }
      public string BrokerageAccountNumber {
        get { return result.BrokerageAccountNumber; }
        set { SetBrokerageAccountNumber(value); }
      }
      public Builder SetBrokerageAccountNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageAccountNumber = true;
        result.brokerageAccountNumber_ = value;
        return this;
      }
      public Builder ClearBrokerageAccountNumber() {
        PrepareBuilder();
        result.hasBrokerageAccountNumber = false;
        result.brokerageAccountNumber_ = "";
        return this;
      }
    }
    static ChainAccount() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderRoute : pb::GeneratedMessage<OrderRoute, OrderRoute.Builder> {
    private OrderRoute() { }
    private static readonly OrderRoute defaultInstance = new OrderRoute().MakeReadOnly();
    private static readonly string[] _orderRouteFieldNames = new string[] { "code", "name", "order_id" };
    private static readonly uint[] _orderRouteFieldTags = new uint[] { 10, 18, 26 };
    public static OrderRoute DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderRoute DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderRoute ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderRoute__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderRoute, OrderRoute.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderRoute__FieldAccessorTable; }
    }
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private string code_ = "";
    public bool HasCode {
      get { return hasCode; }
    }
    public string Code {
      get { return code_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int OrderIdFieldNumber = 3;
    private bool hasOrderId;
    private string orderId_ = "";
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public string OrderId {
      get { return orderId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderRouteFieldNames;
      if (hasCode) {
        output.WriteString(1, field_names[0], Code);
      }
      if (hasName) {
        output.WriteString(2, field_names[1], Name);
      }
      if (hasOrderId) {
        output.WriteString(3, field_names[2], OrderId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Code);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Name);
      }
      if (hasOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, OrderId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderRoute ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderRoute ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderRoute ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderRoute ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderRoute ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderRoute ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderRoute ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderRoute ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderRoute ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderRoute ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderRoute MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderRoute prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderRoute, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderRoute cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderRoute result;
      
      private OrderRoute PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderRoute original = result;
          result = new OrderRoute();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderRoute MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderRoute.Descriptor; }
      }
      
      public override OrderRoute DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderRoute.DefaultInstance; }
      }
      
      public override OrderRoute BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderRoute) {
          return MergeFrom((OrderRoute) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderRoute other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderRoute.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderRouteFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderRouteFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCode = input.ReadString(ref result.code_);
              break;
            }
            case 18: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 26: {
              result.hasOrderId = input.ReadString(ref result.orderId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      public string Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      public Builder SetCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public string OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = "";
        return this;
      }
    }
    static OrderRoute() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderContractLeg : pb::GeneratedMessage<OrderContractLeg, OrderContractLeg.Builder> {
    private OrderContractLeg() { }
    private static readonly OrderContractLeg defaultInstance = new OrderContractLeg().MakeReadOnly();
    private static readonly string[] _orderContractLegFieldNames = new string[] { "contract_symbol", "number", "side", "size" };
    private static readonly uint[] _orderContractLegFieldTags = new uint[] { 34, 8, 24, 16 };
    public static OrderContractLeg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderContractLeg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderContractLeg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderContractLeg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderContractLeg, OrderContractLeg.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderContractLeg__FieldAccessorTable; }
    }
    
    public const int NumberFieldNumber = 1;
    private bool hasNumber;
    private uint number_;
    public bool HasNumber {
      get { return hasNumber; }
    }
    [global::System.CLSCompliant(false)]
    public uint Number {
      get { return number_; }
    }
    
    public const int SizeFieldNumber = 2;
    private bool hasSize;
    private uint size_;
    public bool HasSize {
      get { return hasSize; }
    }
    [global::System.CLSCompliant(false)]
    public uint Size {
      get { return size_; }
    }
    
    public const int SideFieldNumber = 3;
    private bool hasSide;
    private uint side_;
    public bool HasSide {
      get { return hasSide; }
    }
    [global::System.CLSCompliant(false)]
    public uint Side {
      get { return side_; }
    }
    
    public const int ContractSymbolFieldNumber = 4;
    private bool hasContractSymbol;
    private string contractSymbol_ = "";
    public bool HasContractSymbol {
      get { return hasContractSymbol; }
    }
    public string ContractSymbol {
      get { return contractSymbol_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderContractLegFieldNames;
      if (hasNumber) {
        output.WriteUInt32(1, field_names[1], Number);
      }
      if (hasSize) {
        output.WriteUInt32(2, field_names[3], Size);
      }
      if (hasSide) {
        output.WriteUInt32(3, field_names[2], Side);
      }
      if (hasContractSymbol) {
        output.WriteString(4, field_names[0], ContractSymbol);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNumber) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Number);
      }
      if (hasSize) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Size);
      }
      if (hasSide) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Side);
      }
      if (hasContractSymbol) {
        size += pb::CodedOutputStream.ComputeStringSize(4, ContractSymbol);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderContractLeg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderContractLeg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderContractLeg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderContractLeg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderContractLeg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderContractLeg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderContractLeg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderContractLeg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderContractLeg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderContractLeg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderContractLeg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderContractLeg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderContractLeg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderContractLeg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderContractLeg result;
      
      private OrderContractLeg PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderContractLeg original = result;
          result = new OrderContractLeg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderContractLeg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg.Descriptor; }
      }
      
      public override OrderContractLeg DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg.DefaultInstance; }
      }
      
      public override OrderContractLeg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderContractLeg) {
          return MergeFrom((OrderContractLeg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderContractLeg other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderContractLeg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNumber) {
          Number = other.Number;
        }
        if (other.HasSize) {
          Size = other.Size;
        }
        if (other.HasSide) {
          Side = other.Side;
        }
        if (other.HasContractSymbol) {
          ContractSymbol = other.ContractSymbol;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderContractLegFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderContractLegFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasNumber = input.ReadUInt32(ref result.number_);
              break;
            }
            case 16: {
              result.hasSize = input.ReadUInt32(ref result.size_);
              break;
            }
            case 24: {
              result.hasSide = input.ReadUInt32(ref result.side_);
              break;
            }
            case 34: {
              result.hasContractSymbol = input.ReadString(ref result.contractSymbol_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNumber {
        get { return result.hasNumber; }
      }
      [global::System.CLSCompliant(false)]
      public uint Number {
        get { return result.Number; }
        set { SetNumber(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetNumber(uint value) {
        PrepareBuilder();
        result.hasNumber = true;
        result.number_ = value;
        return this;
      }
      public Builder ClearNumber() {
        PrepareBuilder();
        result.hasNumber = false;
        result.number_ = 0;
        return this;
      }
      
      public bool HasSize {
        get { return result.hasSize; }
      }
      [global::System.CLSCompliant(false)]
      public uint Size {
        get { return result.Size; }
        set { SetSize(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSize(uint value) {
        PrepareBuilder();
        result.hasSize = true;
        result.size_ = value;
        return this;
      }
      public Builder ClearSize() {
        PrepareBuilder();
        result.hasSize = false;
        result.size_ = 0;
        return this;
      }
      
      public bool HasSide {
        get { return result.hasSide; }
      }
      [global::System.CLSCompliant(false)]
      public uint Side {
        get { return result.Side; }
        set { SetSide(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSide(uint value) {
        PrepareBuilder();
        result.hasSide = true;
        result.side_ = value;
        return this;
      }
      public Builder ClearSide() {
        PrepareBuilder();
        result.hasSide = false;
        result.side_ = 0;
        return this;
      }
      
      public bool HasContractSymbol {
        get { return result.hasContractSymbol; }
      }
      public string ContractSymbol {
        get { return result.ContractSymbol; }
        set { SetContractSymbol(value); }
      }
      public Builder SetContractSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContractSymbol = true;
        result.contractSymbol_ = value;
        return this;
      }
      public Builder ClearContractSymbol() {
        PrepareBuilder();
        result.hasContractSymbol = false;
        result.contractSymbol_ = "";
        return this;
      }
    }
    static OrderContractLeg() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountAndUserInfo : pb::GeneratedMessage<AccountAndUserInfo, AccountAndUserInfo.Builder> {
    private AccountAndUserInfo() { }
    private static readonly AccountAndUserInfo defaultInstance = new AccountAndUserInfo().MakeReadOnly();
    private static readonly string[] _accountAndUserInfoFieldNames = new string[] { "account_id", "account_name", "brokerage_account_number", "reject_details", "reject_details_internal", "user_id", "user_info", "user_name" };
    private static readonly uint[] _accountAndUserInfoFieldTags = new uint[] { 8, 58, 66, 26, 34, 42, 18, 50 };
    public static AccountAndUserInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountAndUserInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountAndUserInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountAndUserInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountAndUserInfo, AccountAndUserInfo.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountAndUserInfo__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int UserInfoFieldNumber = 2;
    private bool hasUserInfo;
    private string userInfo_ = "";
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public string UserInfo {
      get { return userInfo_; }
    }
    
    public const int RejectDetailsFieldNumber = 3;
    private bool hasRejectDetails;
    private string rejectDetails_ = "";
    public bool HasRejectDetails {
      get { return hasRejectDetails; }
    }
    public string RejectDetails {
      get { return rejectDetails_; }
    }
    
    public const int RejectDetailsInternalFieldNumber = 4;
    private bool hasRejectDetailsInternal;
    private string rejectDetailsInternal_ = "";
    public bool HasRejectDetailsInternal {
      get { return hasRejectDetailsInternal; }
    }
    public string RejectDetailsInternal {
      get { return rejectDetailsInternal_; }
    }
    
    public const int UserIdFieldNumber = 5;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int UserNameFieldNumber = 6;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int AccountNameFieldNumber = 7;
    private bool hasAccountName;
    private string accountName_ = "";
    public bool HasAccountName {
      get { return hasAccountName; }
    }
    public string AccountName {
      get { return accountName_; }
    }
    
    public const int BrokerageAccountNumberFieldNumber = 8;
    private bool hasBrokerageAccountNumber;
    private string brokerageAccountNumber_ = "";
    public bool HasBrokerageAccountNumber {
      get { return hasBrokerageAccountNumber; }
    }
    public string BrokerageAccountNumber {
      get { return brokerageAccountNumber_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        if (!hasUserInfo) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountAndUserInfoFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasUserInfo) {
        output.WriteString(2, field_names[6], UserInfo);
      }
      if (hasRejectDetails) {
        output.WriteString(3, field_names[3], RejectDetails);
      }
      if (hasRejectDetailsInternal) {
        output.WriteString(4, field_names[4], RejectDetailsInternal);
      }
      if (hasUserId) {
        output.WriteString(5, field_names[5], UserId);
      }
      if (hasUserName) {
        output.WriteString(6, field_names[7], UserName);
      }
      if (hasAccountName) {
        output.WriteString(7, field_names[1], AccountName);
      }
      if (hasBrokerageAccountNumber) {
        output.WriteString(8, field_names[2], BrokerageAccountNumber);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasUserInfo) {
        size += pb::CodedOutputStream.ComputeStringSize(2, UserInfo);
      }
      if (hasRejectDetails) {
        size += pb::CodedOutputStream.ComputeStringSize(3, RejectDetails);
      }
      if (hasRejectDetailsInternal) {
        size += pb::CodedOutputStream.ComputeStringSize(4, RejectDetailsInternal);
      }
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(5, UserId);
      }
      if (hasUserName) {
        size += pb::CodedOutputStream.ComputeStringSize(6, UserName);
      }
      if (hasAccountName) {
        size += pb::CodedOutputStream.ComputeStringSize(7, AccountName);
      }
      if (hasBrokerageAccountNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(8, BrokerageAccountNumber);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountAndUserInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountAndUserInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountAndUserInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountAndUserInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountAndUserInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountAndUserInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountAndUserInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountAndUserInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountAndUserInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountAndUserInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountAndUserInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountAndUserInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountAndUserInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountAndUserInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountAndUserInfo result;
      
      private AccountAndUserInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountAndUserInfo original = result;
          result = new AccountAndUserInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountAndUserInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo.Descriptor; }
      }
      
      public override AccountAndUserInfo DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo.DefaultInstance; }
      }
      
      public override AccountAndUserInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountAndUserInfo) {
          return MergeFrom((AccountAndUserInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountAndUserInfo other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasUserInfo) {
          UserInfo = other.UserInfo;
        }
        if (other.HasRejectDetails) {
          RejectDetails = other.RejectDetails;
        }
        if (other.HasRejectDetailsInternal) {
          RejectDetailsInternal = other.RejectDetailsInternal;
        }
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasAccountName) {
          AccountName = other.AccountName;
        }
        if (other.HasBrokerageAccountNumber) {
          BrokerageAccountNumber = other.BrokerageAccountNumber;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountAndUserInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountAndUserInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasUserInfo = input.ReadString(ref result.userInfo_);
              break;
            }
            case 26: {
              result.hasRejectDetails = input.ReadString(ref result.rejectDetails_);
              break;
            }
            case 34: {
              result.hasRejectDetailsInternal = input.ReadString(ref result.rejectDetailsInternal_);
              break;
            }
            case 42: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 50: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 58: {
              result.hasAccountName = input.ReadString(ref result.accountName_);
              break;
            }
            case 66: {
              result.hasBrokerageAccountNumber = input.ReadString(ref result.brokerageAccountNumber_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasUserInfo {
        get { return result.hasUserInfo; }
      }
      public string UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = "";
        return this;
      }
      
      public bool HasRejectDetails {
        get { return result.hasRejectDetails; }
      }
      public string RejectDetails {
        get { return result.RejectDetails; }
        set { SetRejectDetails(value); }
      }
      public Builder SetRejectDetails(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRejectDetails = true;
        result.rejectDetails_ = value;
        return this;
      }
      public Builder ClearRejectDetails() {
        PrepareBuilder();
        result.hasRejectDetails = false;
        result.rejectDetails_ = "";
        return this;
      }
      
      public bool HasRejectDetailsInternal {
        get { return result.hasRejectDetailsInternal; }
      }
      public string RejectDetailsInternal {
        get { return result.RejectDetailsInternal; }
        set { SetRejectDetailsInternal(value); }
      }
      public Builder SetRejectDetailsInternal(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRejectDetailsInternal = true;
        result.rejectDetailsInternal_ = value;
        return this;
      }
      public Builder ClearRejectDetailsInternal() {
        PrepareBuilder();
        result.hasRejectDetailsInternal = false;
        result.rejectDetailsInternal_ = "";
        return this;
      }
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasAccountName {
        get { return result.hasAccountName; }
      }
      public string AccountName {
        get { return result.AccountName; }
        set { SetAccountName(value); }
      }
      public Builder SetAccountName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountName = true;
        result.accountName_ = value;
        return this;
      }
      public Builder ClearAccountName() {
        PrepareBuilder();
        result.hasAccountName = false;
        result.accountName_ = "";
        return this;
      }
      
      public bool HasBrokerageAccountNumber {
        get { return result.hasBrokerageAccountNumber; }
      }
      public string BrokerageAccountNumber {
        get { return result.BrokerageAccountNumber; }
        set { SetBrokerageAccountNumber(value); }
      }
      public Builder SetBrokerageAccountNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageAccountNumber = true;
        result.brokerageAccountNumber_ = value;
        return this;
      }
      public Builder ClearBrokerageAccountNumber() {
        PrepareBuilder();
        result.hasBrokerageAccountNumber = false;
        result.brokerageAccountNumber_ = "";
        return this;
      }
    }
    static AccountAndUserInfo() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderRequest : pb::GeneratedMessage<OrderRequest, OrderRequest.Builder> {
    private OrderRequest() { }
    private static readonly OrderRequest defaultInstance = new OrderRequest().MakeReadOnly();
    private static readonly string[] _orderRequestFieldNames = new string[] { "account_and_user_info", "activation_time", "client_extra_values", "client_regulatory_algorithm_id", "comments", "discretionary_offset", "display_limit_price", "display_stop_price", "duration", "effective_regulatory_algorithm_id", "expiration_time", "good_thru_date", "good_thru_utc_time", "instructions", "limit_price", "link_order_id", "native_order_type", "operational_details", "order_classes", "order_id", "order_type", "request_type", "route_client_order_id", "routes", "size", "sizes", "state", "stop_price", "submitted_utc_time", "suspension_time", "ticket_number", "trailing", "transaction_status" };
    private static readonly uint[] _orderRequestFieldTags = new uint[] { 122, 200, 290, 234, 178, 304, 128, 136, 72, 242, 216, 80, 88, 282, 57, 106, 192, 274, 186, 10, 32, 24, 298, 226, 48, 162, 96, 65, 16, 208, 170, 154, 114 };
    public static OrderRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderRequest, OrderRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderRequest__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum RequestType {
        PLACE = 1,
        REPLACE = 2,
        CANCEL = 3,
      }
      
      public enum State {
        ACTIVE_AT = 1,
        SUSPENDED = 2,
        PENDING = 3,
        WORKING = 4,
        REPLACED = 5,
        CANCELLED = 6,
        REJECTED = 7,
        FILLED = 8,
        EXPIRED = 9,
      }
      
    }
    #endregion
    
    public const int OrderIdFieldNumber = 1;
    private bool hasOrderId;
    private string orderId_ = "";
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public string OrderId {
      get { return orderId_; }
    }
    
    public const int SubmittedUtcTimeFieldNumber = 2;
    private bool hasSubmittedUtcTime;
    private long submittedUtcTime_;
    public bool HasSubmittedUtcTime {
      get { return hasSubmittedUtcTime; }
    }
    public long SubmittedUtcTime {
      get { return submittedUtcTime_; }
    }
    
    public const int RequestTypeFieldNumber = 3;
    private bool hasRequestType;
    private uint requestType_;
    public bool HasRequestType {
      get { return hasRequestType; }
    }
    [global::System.CLSCompliant(false)]
    public uint RequestType {
      get { return requestType_; }
    }
    
    public const int OrderTypeFieldNumber = 4;
    private bool hasOrderType;
    private uint orderType_;
    public bool HasOrderType {
      get { return hasOrderType; }
    }
    [global::System.CLSCompliant(false)]
    public uint OrderType {
      get { return orderType_; }
    }
    
    public const int SizeFieldNumber = 6;
    private bool hasSize;
    private uint size_;
    public bool HasSize {
      get { return hasSize; }
    }
    [global::System.CLSCompliant(false)]
    public uint Size {
      get { return size_; }
    }
    
    public const int LimitPriceFieldNumber = 7;
    private bool hasLimitPrice;
    private double limitPrice_;
    public bool HasLimitPrice {
      get { return hasLimitPrice; }
    }
    public double LimitPrice {
      get { return limitPrice_; }
    }
    
    public const int StopPriceFieldNumber = 8;
    private bool hasStopPrice;
    private double stopPrice_;
    public bool HasStopPrice {
      get { return hasStopPrice; }
    }
    public double StopPrice {
      get { return stopPrice_; }
    }
    
    public const int DurationFieldNumber = 9;
    private bool hasDuration;
    private uint duration_;
    public bool HasDuration {
      get { return hasDuration; }
    }
    [global::System.CLSCompliant(false)]
    public uint Duration {
      get { return duration_; }
    }
    
    public const int GoodThruDateFieldNumber = 10;
    private bool hasGoodThruDate;
    private long goodThruDate_;
    public bool HasGoodThruDate {
      get { return hasGoodThruDate; }
    }
    public long GoodThruDate {
      get { return goodThruDate_; }
    }
    
    public const int GoodThruUtcTimeFieldNumber = 11;
    private bool hasGoodThruUtcTime;
    private long goodThruUtcTime_;
    public bool HasGoodThruUtcTime {
      get { return hasGoodThruUtcTime; }
    }
    public long GoodThruUtcTime {
      get { return goodThruUtcTime_; }
    }
    
    public const int StateFieldNumber = 12;
    private bool hasState;
    private uint state_;
    public bool HasState {
      get { return hasState; }
    }
    [global::System.CLSCompliant(false)]
    public uint State {
      get { return state_; }
    }
    
    public const int LinkOrderIdFieldNumber = 13;
    private bool hasLinkOrderId;
    private string linkOrderId_ = "";
    public bool HasLinkOrderId {
      get { return hasLinkOrderId; }
    }
    public string LinkOrderId {
      get { return linkOrderId_; }
    }
    
    public const int TransactionStatusFieldNumber = 14;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.TransactionStatus> transactionStatus_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.TransactionStatus>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.TransactionStatus> TransactionStatusList {
      get { return transactionStatus_; }
    }
    public int TransactionStatusCount {
      get { return transactionStatus_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.TransactionStatus GetTransactionStatus(int index) {
      return transactionStatus_[index];
    }
    
    public const int AccountAndUserInfoFieldNumber = 15;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo> accountAndUserInfo_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo> AccountAndUserInfoList {
      get { return accountAndUserInfo_; }
    }
    public int AccountAndUserInfoCount {
      get { return accountAndUserInfo_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo GetAccountAndUserInfo(int index) {
      return accountAndUserInfo_[index];
    }
    
    public const int DisplayLimitPriceFieldNumber = 16;
    private bool hasDisplayLimitPrice;
    private long displayLimitPrice_;
    public bool HasDisplayLimitPrice {
      get { return hasDisplayLimitPrice; }
    }
    public long DisplayLimitPrice {
      get { return displayLimitPrice_; }
    }
    
    public const int DisplayStopPriceFieldNumber = 17;
    private bool hasDisplayStopPrice;
    private long displayStopPrice_;
    public bool HasDisplayStopPrice {
      get { return hasDisplayStopPrice; }
    }
    public long DisplayStopPrice {
      get { return displayStopPrice_; }
    }
    
    public const int TrailingFieldNumber = 19;
    private bool hasTrailing;
    private global::CmsApiSamples.Protocol.CMSApi.OrderTrailing trailing_;
    public bool HasTrailing {
      get { return hasTrailing; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderTrailing Trailing {
      get { return trailing_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.DefaultInstance; }
    }
    
    public const int SizesFieldNumber = 20;
    private bool hasSizes;
    private global::CmsApiSamples.Protocol.CMSApi.OrderSizes sizes_;
    public bool HasSizes {
      get { return hasSizes; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderSizes Sizes {
      get { return sizes_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderSizes.DefaultInstance; }
    }
    
    public const int TicketNumberFieldNumber = 21;
    private bool hasTicketNumber;
    private string ticketNumber_ = "";
    public bool HasTicketNumber {
      get { return hasTicketNumber; }
    }
    public string TicketNumber {
      get { return ticketNumber_; }
    }
    
    public const int CommentsFieldNumber = 22;
    private bool hasComments;
    private string comments_ = "";
    public bool HasComments {
      get { return hasComments; }
    }
    public string Comments {
      get { return comments_; }
    }
    
    public const int OrderClassesFieldNumber = 23;
    private pbc::PopsicleList<string> orderClasses_ = new pbc::PopsicleList<string>();
    public scg::IList<string> OrderClassesList {
      get { return pbc::Lists.AsReadOnly(orderClasses_); }
    }
    public int OrderClassesCount {
      get { return orderClasses_.Count; }
    }
    public string GetOrderClasses(int index) {
      return orderClasses_[index];
    }
    
    public const int NativeOrderTypeFieldNumber = 24;
    private bool hasNativeOrderType;
    private uint nativeOrderType_;
    public bool HasNativeOrderType {
      get { return hasNativeOrderType; }
    }
    [global::System.CLSCompliant(false)]
    public uint NativeOrderType {
      get { return nativeOrderType_; }
    }
    
    public const int ActivationTimeFieldNumber = 25;
    private bool hasActivationTime;
    private long activationTime_;
    public bool HasActivationTime {
      get { return hasActivationTime; }
    }
    public long ActivationTime {
      get { return activationTime_; }
    }
    
    public const int SuspensionTimeFieldNumber = 26;
    private bool hasSuspensionTime;
    private long suspensionTime_;
    public bool HasSuspensionTime {
      get { return hasSuspensionTime; }
    }
    public long SuspensionTime {
      get { return suspensionTime_; }
    }
    
    public const int ExpirationTimeFieldNumber = 27;
    private bool hasExpirationTime;
    private long expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public long ExpirationTime {
      get { return expirationTime_; }
    }
    
    public const int RoutesFieldNumber = 28;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderRoute> routes_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderRoute>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.OrderRoute> RoutesList {
      get { return routes_; }
    }
    public int RoutesCount {
      get { return routes_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderRoute GetRoutes(int index) {
      return routes_[index];
    }
    
    public const int ClientRegulatoryAlgorithmIdFieldNumber = 29;
    private bool hasClientRegulatoryAlgorithmId;
    private string clientRegulatoryAlgorithmId_ = "";
    public bool HasClientRegulatoryAlgorithmId {
      get { return hasClientRegulatoryAlgorithmId; }
    }
    public string ClientRegulatoryAlgorithmId {
      get { return clientRegulatoryAlgorithmId_; }
    }
    
    public const int EffectiveRegulatoryAlgorithmIdFieldNumber = 30;
    private bool hasEffectiveRegulatoryAlgorithmId;
    private string effectiveRegulatoryAlgorithmId_ = "";
    public bool HasEffectiveRegulatoryAlgorithmId {
      get { return hasEffectiveRegulatoryAlgorithmId; }
    }
    public string EffectiveRegulatoryAlgorithmId {
      get { return effectiveRegulatoryAlgorithmId_; }
    }
    
    public const int OperationalDetailsFieldNumber = 34;
    private bool hasOperationalDetails;
    private global::CmsApiSamples.Protocol.CMSApi.OperationalDetails operationalDetails_;
    public bool HasOperationalDetails {
      get { return hasOperationalDetails; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OperationalDetails OperationalDetails {
      get { return operationalDetails_ ?? global::CmsApiSamples.Protocol.CMSApi.OperationalDetails.DefaultInstance; }
    }
    
    public const int InstructionsFieldNumber = 35;
    private bool hasInstructions;
    private string instructions_ = "";
    public bool HasInstructions {
      get { return hasInstructions; }
    }
    public string Instructions {
      get { return instructions_; }
    }
    
    public const int ClientExtraValuesFieldNumber = 36;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> clientExtraValues_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Tuple> ClientExtraValuesList {
      get { return clientExtraValues_; }
    }
    public int ClientExtraValuesCount {
      get { return clientExtraValues_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Tuple GetClientExtraValues(int index) {
      return clientExtraValues_[index];
    }
    
    public const int RouteClientOrderIdFieldNumber = 37;
    private bool hasRouteClientOrderId;
    private string routeClientOrderId_ = "";
    public bool HasRouteClientOrderId {
      get { return hasRouteClientOrderId; }
    }
    public string RouteClientOrderId {
      get { return routeClientOrderId_; }
    }
    
    public const int DiscretionaryOffsetFieldNumber = 38;
    private bool hasDiscretionaryOffset;
    private uint discretionaryOffset_;
    public bool HasDiscretionaryOffset {
      get { return hasDiscretionaryOffset; }
    }
    [global::System.CLSCompliant(false)]
    public uint DiscretionaryOffset {
      get { return discretionaryOffset_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrderId) return false;
        if (!hasSubmittedUtcTime) return false;
        if (!hasRequestType) return false;
        if (!hasState) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.TransactionStatus element in TransactionStatusList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo element in AccountAndUserInfoList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderRequestFieldNames;
      if (hasOrderId) {
        output.WriteString(1, field_names[19], OrderId);
      }
      if (hasSubmittedUtcTime) {
        output.WriteSInt64(2, field_names[28], SubmittedUtcTime);
      }
      if (hasRequestType) {
        output.WriteUInt32(3, field_names[21], RequestType);
      }
      if (hasOrderType) {
        output.WriteUInt32(4, field_names[20], OrderType);
      }
      if (hasSize) {
        output.WriteUInt32(6, field_names[24], Size);
      }
      if (hasLimitPrice) {
        output.WriteDouble(7, field_names[14], LimitPrice);
      }
      if (hasStopPrice) {
        output.WriteDouble(8, field_names[27], StopPrice);
      }
      if (hasDuration) {
        output.WriteUInt32(9, field_names[8], Duration);
      }
      if (hasGoodThruDate) {
        output.WriteSInt64(10, field_names[11], GoodThruDate);
      }
      if (hasGoodThruUtcTime) {
        output.WriteSInt64(11, field_names[12], GoodThruUtcTime);
      }
      if (hasState) {
        output.WriteUInt32(12, field_names[26], State);
      }
      if (hasLinkOrderId) {
        output.WriteString(13, field_names[15], LinkOrderId);
      }
      if (transactionStatus_.Count > 0) {
        output.WriteMessageArray(14, field_names[32], transactionStatus_);
      }
      if (accountAndUserInfo_.Count > 0) {
        output.WriteMessageArray(15, field_names[0], accountAndUserInfo_);
      }
      if (hasDisplayLimitPrice) {
        output.WriteSInt64(16, field_names[6], DisplayLimitPrice);
      }
      if (hasDisplayStopPrice) {
        output.WriteSInt64(17, field_names[7], DisplayStopPrice);
      }
      if (hasTrailing) {
        output.WriteMessage(19, field_names[31], Trailing);
      }
      if (hasSizes) {
        output.WriteMessage(20, field_names[25], Sizes);
      }
      if (hasTicketNumber) {
        output.WriteString(21, field_names[30], TicketNumber);
      }
      if (hasComments) {
        output.WriteString(22, field_names[4], Comments);
      }
      if (orderClasses_.Count > 0) {
        output.WriteStringArray(23, field_names[18], orderClasses_);
      }
      if (hasNativeOrderType) {
        output.WriteUInt32(24, field_names[16], NativeOrderType);
      }
      if (hasActivationTime) {
        output.WriteSInt64(25, field_names[1], ActivationTime);
      }
      if (hasSuspensionTime) {
        output.WriteSInt64(26, field_names[29], SuspensionTime);
      }
      if (hasExpirationTime) {
        output.WriteSInt64(27, field_names[10], ExpirationTime);
      }
      if (routes_.Count > 0) {
        output.WriteMessageArray(28, field_names[23], routes_);
      }
      if (hasClientRegulatoryAlgorithmId) {
        output.WriteString(29, field_names[3], ClientRegulatoryAlgorithmId);
      }
      if (hasEffectiveRegulatoryAlgorithmId) {
        output.WriteString(30, field_names[9], EffectiveRegulatoryAlgorithmId);
      }
      if (hasOperationalDetails) {
        output.WriteMessage(34, field_names[17], OperationalDetails);
      }
      if (hasInstructions) {
        output.WriteString(35, field_names[13], Instructions);
      }
      if (clientExtraValues_.Count > 0) {
        output.WriteMessageArray(36, field_names[2], clientExtraValues_);
      }
      if (hasRouteClientOrderId) {
        output.WriteString(37, field_names[22], RouteClientOrderId);
      }
      if (hasDiscretionaryOffset) {
        output.WriteUInt32(38, field_names[5], DiscretionaryOffset);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, OrderId);
      }
      if (hasSubmittedUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(2, SubmittedUtcTime);
      }
      if (hasRequestType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, RequestType);
      }
      if (hasOrderType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, OrderType);
      }
      if (hasSize) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, Size);
      }
      if (hasLimitPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(7, LimitPrice);
      }
      if (hasStopPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(8, StopPrice);
      }
      if (hasDuration) {
        size += pb::CodedOutputStream.ComputeUInt32Size(9, Duration);
      }
      if (hasGoodThruDate) {
        size += pb::CodedOutputStream.ComputeSInt64Size(10, GoodThruDate);
      }
      if (hasGoodThruUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(11, GoodThruUtcTime);
      }
      if (hasState) {
        size += pb::CodedOutputStream.ComputeUInt32Size(12, State);
      }
      if (hasLinkOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(13, LinkOrderId);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.TransactionStatus element in TransactionStatusList) {
        size += pb::CodedOutputStream.ComputeMessageSize(14, element);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo element in AccountAndUserInfoList) {
        size += pb::CodedOutputStream.ComputeMessageSize(15, element);
      }
      if (hasDisplayLimitPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(16, DisplayLimitPrice);
      }
      if (hasDisplayStopPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(17, DisplayStopPrice);
      }
      if (hasTrailing) {
        size += pb::CodedOutputStream.ComputeMessageSize(19, Trailing);
      }
      if (hasSizes) {
        size += pb::CodedOutputStream.ComputeMessageSize(20, Sizes);
      }
      if (hasTicketNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(21, TicketNumber);
      }
      if (hasComments) {
        size += pb::CodedOutputStream.ComputeStringSize(22, Comments);
      }
      {
        int dataSize = 0;
        foreach (string element in OrderClassesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 2 * orderClasses_.Count;
      }
      if (hasNativeOrderType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(24, NativeOrderType);
      }
      if (hasActivationTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(25, ActivationTime);
      }
      if (hasSuspensionTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(26, SuspensionTime);
      }
      if (hasExpirationTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(27, ExpirationTime);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.OrderRoute element in RoutesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(28, element);
      }
      if (hasClientRegulatoryAlgorithmId) {
        size += pb::CodedOutputStream.ComputeStringSize(29, ClientRegulatoryAlgorithmId);
      }
      if (hasEffectiveRegulatoryAlgorithmId) {
        size += pb::CodedOutputStream.ComputeStringSize(30, EffectiveRegulatoryAlgorithmId);
      }
      if (hasOperationalDetails) {
        size += pb::CodedOutputStream.ComputeMessageSize(34, OperationalDetails);
      }
      if (hasInstructions) {
        size += pb::CodedOutputStream.ComputeStringSize(35, Instructions);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.Tuple element in ClientExtraValuesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(36, element);
      }
      if (hasRouteClientOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(37, RouteClientOrderId);
      }
      if (hasDiscretionaryOffset) {
        size += pb::CodedOutputStream.ComputeUInt32Size(38, DiscretionaryOffset);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderRequest MakeReadOnly() {
      transactionStatus_.MakeReadOnly();
      accountAndUserInfo_.MakeReadOnly();
      orderClasses_.MakeReadOnly();
      routes_.MakeReadOnly();
      clientExtraValues_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderRequest result;
      
      private OrderRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderRequest original = result;
          result = new OrderRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderRequest.Descriptor; }
      }
      
      public override OrderRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderRequest.DefaultInstance; }
      }
      
      public override OrderRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderRequest) {
          return MergeFrom((OrderRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasSubmittedUtcTime) {
          SubmittedUtcTime = other.SubmittedUtcTime;
        }
        if (other.HasRequestType) {
          RequestType = other.RequestType;
        }
        if (other.HasOrderType) {
          OrderType = other.OrderType;
        }
        if (other.HasSize) {
          Size = other.Size;
        }
        if (other.HasLimitPrice) {
          LimitPrice = other.LimitPrice;
        }
        if (other.HasStopPrice) {
          StopPrice = other.StopPrice;
        }
        if (other.HasDuration) {
          Duration = other.Duration;
        }
        if (other.HasGoodThruDate) {
          GoodThruDate = other.GoodThruDate;
        }
        if (other.HasGoodThruUtcTime) {
          GoodThruUtcTime = other.GoodThruUtcTime;
        }
        if (other.HasState) {
          State = other.State;
        }
        if (other.HasLinkOrderId) {
          LinkOrderId = other.LinkOrderId;
        }
        if (other.transactionStatus_.Count != 0) {
          result.transactionStatus_.Add(other.transactionStatus_);
        }
        if (other.accountAndUserInfo_.Count != 0) {
          result.accountAndUserInfo_.Add(other.accountAndUserInfo_);
        }
        if (other.HasDisplayLimitPrice) {
          DisplayLimitPrice = other.DisplayLimitPrice;
        }
        if (other.HasDisplayStopPrice) {
          DisplayStopPrice = other.DisplayStopPrice;
        }
        if (other.HasTrailing) {
          MergeTrailing(other.Trailing);
        }
        if (other.HasSizes) {
          MergeSizes(other.Sizes);
        }
        if (other.HasTicketNumber) {
          TicketNumber = other.TicketNumber;
        }
        if (other.HasComments) {
          Comments = other.Comments;
        }
        if (other.orderClasses_.Count != 0) {
          result.orderClasses_.Add(other.orderClasses_);
        }
        if (other.HasNativeOrderType) {
          NativeOrderType = other.NativeOrderType;
        }
        if (other.HasActivationTime) {
          ActivationTime = other.ActivationTime;
        }
        if (other.HasSuspensionTime) {
          SuspensionTime = other.SuspensionTime;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
        if (other.routes_.Count != 0) {
          result.routes_.Add(other.routes_);
        }
        if (other.HasClientRegulatoryAlgorithmId) {
          ClientRegulatoryAlgorithmId = other.ClientRegulatoryAlgorithmId;
        }
        if (other.HasEffectiveRegulatoryAlgorithmId) {
          EffectiveRegulatoryAlgorithmId = other.EffectiveRegulatoryAlgorithmId;
        }
        if (other.HasOperationalDetails) {
          MergeOperationalDetails(other.OperationalDetails);
        }
        if (other.HasInstructions) {
          Instructions = other.Instructions;
        }
        if (other.clientExtraValues_.Count != 0) {
          result.clientExtraValues_.Add(other.clientExtraValues_);
        }
        if (other.HasRouteClientOrderId) {
          RouteClientOrderId = other.RouteClientOrderId;
        }
        if (other.HasDiscretionaryOffset) {
          DiscretionaryOffset = other.DiscretionaryOffset;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasOrderId = input.ReadString(ref result.orderId_);
              break;
            }
            case 16: {
              result.hasSubmittedUtcTime = input.ReadSInt64(ref result.submittedUtcTime_);
              break;
            }
            case 24: {
              result.hasRequestType = input.ReadUInt32(ref result.requestType_);
              break;
            }
            case 32: {
              result.hasOrderType = input.ReadUInt32(ref result.orderType_);
              break;
            }
            case 48: {
              result.hasSize = input.ReadUInt32(ref result.size_);
              break;
            }
            case 57: {
              result.hasLimitPrice = input.ReadDouble(ref result.limitPrice_);
              break;
            }
            case 65: {
              result.hasStopPrice = input.ReadDouble(ref result.stopPrice_);
              break;
            }
            case 72: {
              result.hasDuration = input.ReadUInt32(ref result.duration_);
              break;
            }
            case 80: {
              result.hasGoodThruDate = input.ReadSInt64(ref result.goodThruDate_);
              break;
            }
            case 88: {
              result.hasGoodThruUtcTime = input.ReadSInt64(ref result.goodThruUtcTime_);
              break;
            }
            case 96: {
              result.hasState = input.ReadUInt32(ref result.state_);
              break;
            }
            case 106: {
              result.hasLinkOrderId = input.ReadString(ref result.linkOrderId_);
              break;
            }
            case 114: {
              input.ReadMessageArray(tag, field_name, result.transactionStatus_, global::CmsApiSamples.Protocol.CMSApi.TransactionStatus.DefaultInstance, extensionRegistry);
              break;
            }
            case 122: {
              input.ReadMessageArray(tag, field_name, result.accountAndUserInfo_, global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 128: {
              result.hasDisplayLimitPrice = input.ReadSInt64(ref result.displayLimitPrice_);
              break;
            }
            case 136: {
              result.hasDisplayStopPrice = input.ReadSInt64(ref result.displayStopPrice_);
              break;
            }
            case 154: {
              global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.CreateBuilder();
              if (result.hasTrailing) {
                subBuilder.MergeFrom(Trailing);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Trailing = subBuilder.BuildPartial();
              break;
            }
            case 162: {
              global::CmsApiSamples.Protocol.CMSApi.OrderSizes.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderSizes.CreateBuilder();
              if (result.hasSizes) {
                subBuilder.MergeFrom(Sizes);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Sizes = subBuilder.BuildPartial();
              break;
            }
            case 170: {
              result.hasTicketNumber = input.ReadString(ref result.ticketNumber_);
              break;
            }
            case 178: {
              result.hasComments = input.ReadString(ref result.comments_);
              break;
            }
            case 186: {
              input.ReadStringArray(tag, field_name, result.orderClasses_);
              break;
            }
            case 192: {
              result.hasNativeOrderType = input.ReadUInt32(ref result.nativeOrderType_);
              break;
            }
            case 200: {
              result.hasActivationTime = input.ReadSInt64(ref result.activationTime_);
              break;
            }
            case 208: {
              result.hasSuspensionTime = input.ReadSInt64(ref result.suspensionTime_);
              break;
            }
            case 216: {
              result.hasExpirationTime = input.ReadSInt64(ref result.expirationTime_);
              break;
            }
            case 226: {
              input.ReadMessageArray(tag, field_name, result.routes_, global::CmsApiSamples.Protocol.CMSApi.OrderRoute.DefaultInstance, extensionRegistry);
              break;
            }
            case 234: {
              result.hasClientRegulatoryAlgorithmId = input.ReadString(ref result.clientRegulatoryAlgorithmId_);
              break;
            }
            case 242: {
              result.hasEffectiveRegulatoryAlgorithmId = input.ReadString(ref result.effectiveRegulatoryAlgorithmId_);
              break;
            }
            case 274: {
              global::CmsApiSamples.Protocol.CMSApi.OperationalDetails.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OperationalDetails.CreateBuilder();
              if (result.hasOperationalDetails) {
                subBuilder.MergeFrom(OperationalDetails);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OperationalDetails = subBuilder.BuildPartial();
              break;
            }
            case 282: {
              result.hasInstructions = input.ReadString(ref result.instructions_);
              break;
            }
            case 290: {
              input.ReadMessageArray(tag, field_name, result.clientExtraValues_, global::CmsApiSamples.Protocol.CMSApi.Tuple.DefaultInstance, extensionRegistry);
              break;
            }
            case 298: {
              result.hasRouteClientOrderId = input.ReadString(ref result.routeClientOrderId_);
              break;
            }
            case 304: {
              result.hasDiscretionaryOffset = input.ReadUInt32(ref result.discretionaryOffset_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public string OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = "";
        return this;
      }
      
      public bool HasSubmittedUtcTime {
        get { return result.hasSubmittedUtcTime; }
      }
      public long SubmittedUtcTime {
        get { return result.SubmittedUtcTime; }
        set { SetSubmittedUtcTime(value); }
      }
      public Builder SetSubmittedUtcTime(long value) {
        PrepareBuilder();
        result.hasSubmittedUtcTime = true;
        result.submittedUtcTime_ = value;
        return this;
      }
      public Builder ClearSubmittedUtcTime() {
        PrepareBuilder();
        result.hasSubmittedUtcTime = false;
        result.submittedUtcTime_ = 0;
        return this;
      }
      
      public bool HasRequestType {
        get { return result.hasRequestType; }
      }
      [global::System.CLSCompliant(false)]
      public uint RequestType {
        get { return result.RequestType; }
        set { SetRequestType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRequestType(uint value) {
        PrepareBuilder();
        result.hasRequestType = true;
        result.requestType_ = value;
        return this;
      }
      public Builder ClearRequestType() {
        PrepareBuilder();
        result.hasRequestType = false;
        result.requestType_ = 0;
        return this;
      }
      
      public bool HasOrderType {
        get { return result.hasOrderType; }
      }
      [global::System.CLSCompliant(false)]
      public uint OrderType {
        get { return result.OrderType; }
        set { SetOrderType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOrderType(uint value) {
        PrepareBuilder();
        result.hasOrderType = true;
        result.orderType_ = value;
        return this;
      }
      public Builder ClearOrderType() {
        PrepareBuilder();
        result.hasOrderType = false;
        result.orderType_ = 0;
        return this;
      }
      
      public bool HasSize {
        get { return result.hasSize; }
      }
      [global::System.CLSCompliant(false)]
      public uint Size {
        get { return result.Size; }
        set { SetSize(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSize(uint value) {
        PrepareBuilder();
        result.hasSize = true;
        result.size_ = value;
        return this;
      }
      public Builder ClearSize() {
        PrepareBuilder();
        result.hasSize = false;
        result.size_ = 0;
        return this;
      }
      
      public bool HasLimitPrice {
        get { return result.hasLimitPrice; }
      }
      public double LimitPrice {
        get { return result.LimitPrice; }
        set { SetLimitPrice(value); }
      }
      public Builder SetLimitPrice(double value) {
        PrepareBuilder();
        result.hasLimitPrice = true;
        result.limitPrice_ = value;
        return this;
      }
      public Builder ClearLimitPrice() {
        PrepareBuilder();
        result.hasLimitPrice = false;
        result.limitPrice_ = 0D;
        return this;
      }
      
      public bool HasStopPrice {
        get { return result.hasStopPrice; }
      }
      public double StopPrice {
        get { return result.StopPrice; }
        set { SetStopPrice(value); }
      }
      public Builder SetStopPrice(double value) {
        PrepareBuilder();
        result.hasStopPrice = true;
        result.stopPrice_ = value;
        return this;
      }
      public Builder ClearStopPrice() {
        PrepareBuilder();
        result.hasStopPrice = false;
        result.stopPrice_ = 0D;
        return this;
      }
      
      public bool HasDuration {
        get { return result.hasDuration; }
      }
      [global::System.CLSCompliant(false)]
      public uint Duration {
        get { return result.Duration; }
        set { SetDuration(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetDuration(uint value) {
        PrepareBuilder();
        result.hasDuration = true;
        result.duration_ = value;
        return this;
      }
      public Builder ClearDuration() {
        PrepareBuilder();
        result.hasDuration = false;
        result.duration_ = 0;
        return this;
      }
      
      public bool HasGoodThruDate {
        get { return result.hasGoodThruDate; }
      }
      public long GoodThruDate {
        get { return result.GoodThruDate; }
        set { SetGoodThruDate(value); }
      }
      public Builder SetGoodThruDate(long value) {
        PrepareBuilder();
        result.hasGoodThruDate = true;
        result.goodThruDate_ = value;
        return this;
      }
      public Builder ClearGoodThruDate() {
        PrepareBuilder();
        result.hasGoodThruDate = false;
        result.goodThruDate_ = 0;
        return this;
      }
      
      public bool HasGoodThruUtcTime {
        get { return result.hasGoodThruUtcTime; }
      }
      public long GoodThruUtcTime {
        get { return result.GoodThruUtcTime; }
        set { SetGoodThruUtcTime(value); }
      }
      public Builder SetGoodThruUtcTime(long value) {
        PrepareBuilder();
        result.hasGoodThruUtcTime = true;
        result.goodThruUtcTime_ = value;
        return this;
      }
      public Builder ClearGoodThruUtcTime() {
        PrepareBuilder();
        result.hasGoodThruUtcTime = false;
        result.goodThruUtcTime_ = 0;
        return this;
      }
      
      public bool HasState {
        get { return result.hasState; }
      }
      [global::System.CLSCompliant(false)]
      public uint State {
        get { return result.State; }
        set { SetState(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetState(uint value) {
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = 0;
        return this;
      }
      
      public bool HasLinkOrderId {
        get { return result.hasLinkOrderId; }
      }
      public string LinkOrderId {
        get { return result.LinkOrderId; }
        set { SetLinkOrderId(value); }
      }
      public Builder SetLinkOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLinkOrderId = true;
        result.linkOrderId_ = value;
        return this;
      }
      public Builder ClearLinkOrderId() {
        PrepareBuilder();
        result.hasLinkOrderId = false;
        result.linkOrderId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.TransactionStatus> TransactionStatusList {
        get { return PrepareBuilder().transactionStatus_; }
      }
      public int TransactionStatusCount {
        get { return result.TransactionStatusCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.TransactionStatus GetTransactionStatus(int index) {
        return result.GetTransactionStatus(index);
      }
      public Builder SetTransactionStatus(int index, global::CmsApiSamples.Protocol.CMSApi.TransactionStatus value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.transactionStatus_[index] = value;
        return this;
      }
      public Builder SetTransactionStatus(int index, global::CmsApiSamples.Protocol.CMSApi.TransactionStatus.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.transactionStatus_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTransactionStatus(global::CmsApiSamples.Protocol.CMSApi.TransactionStatus value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.transactionStatus_.Add(value);
        return this;
      }
      public Builder AddTransactionStatus(global::CmsApiSamples.Protocol.CMSApi.TransactionStatus.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.transactionStatus_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTransactionStatus(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.TransactionStatus> values) {
        PrepareBuilder();
        result.transactionStatus_.Add(values);
        return this;
      }
      public Builder ClearTransactionStatus() {
        PrepareBuilder();
        result.transactionStatus_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo> AccountAndUserInfoList {
        get { return PrepareBuilder().accountAndUserInfo_; }
      }
      public int AccountAndUserInfoCount {
        get { return result.AccountAndUserInfoCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo GetAccountAndUserInfo(int index) {
        return result.GetAccountAndUserInfo(index);
      }
      public Builder SetAccountAndUserInfo(int index, global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accountAndUserInfo_[index] = value;
        return this;
      }
      public Builder SetAccountAndUserInfo(int index, global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accountAndUserInfo_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAccountAndUserInfo(global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.accountAndUserInfo_.Add(value);
        return this;
      }
      public Builder AddAccountAndUserInfo(global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.accountAndUserInfo_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAccountAndUserInfo(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AccountAndUserInfo> values) {
        PrepareBuilder();
        result.accountAndUserInfo_.Add(values);
        return this;
      }
      public Builder ClearAccountAndUserInfo() {
        PrepareBuilder();
        result.accountAndUserInfo_.Clear();
        return this;
      }
      
      public bool HasDisplayLimitPrice {
        get { return result.hasDisplayLimitPrice; }
      }
      public long DisplayLimitPrice {
        get { return result.DisplayLimitPrice; }
        set { SetDisplayLimitPrice(value); }
      }
      public Builder SetDisplayLimitPrice(long value) {
        PrepareBuilder();
        result.hasDisplayLimitPrice = true;
        result.displayLimitPrice_ = value;
        return this;
      }
      public Builder ClearDisplayLimitPrice() {
        PrepareBuilder();
        result.hasDisplayLimitPrice = false;
        result.displayLimitPrice_ = 0;
        return this;
      }
      
      public bool HasDisplayStopPrice {
        get { return result.hasDisplayStopPrice; }
      }
      public long DisplayStopPrice {
        get { return result.DisplayStopPrice; }
        set { SetDisplayStopPrice(value); }
      }
      public Builder SetDisplayStopPrice(long value) {
        PrepareBuilder();
        result.hasDisplayStopPrice = true;
        result.displayStopPrice_ = value;
        return this;
      }
      public Builder ClearDisplayStopPrice() {
        PrepareBuilder();
        result.hasDisplayStopPrice = false;
        result.displayStopPrice_ = 0;
        return this;
      }
      
      public bool HasTrailing {
       get { return result.hasTrailing; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderTrailing Trailing {
        get { return result.Trailing; }
        set { SetTrailing(value); }
      }
      public Builder SetTrailing(global::CmsApiSamples.Protocol.CMSApi.OrderTrailing value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTrailing = true;
        result.trailing_ = value;
        return this;
      }
      public Builder SetTrailing(global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTrailing = true;
        result.trailing_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTrailing(global::CmsApiSamples.Protocol.CMSApi.OrderTrailing value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTrailing &&
            result.trailing_ != global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.DefaultInstance) {
            result.trailing_ = global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.CreateBuilder(result.trailing_).MergeFrom(value).BuildPartial();
        } else {
          result.trailing_ = value;
        }
        result.hasTrailing = true;
        return this;
      }
      public Builder ClearTrailing() {
        PrepareBuilder();
        result.hasTrailing = false;
        result.trailing_ = null;
        return this;
      }
      
      public bool HasSizes {
       get { return result.hasSizes; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderSizes Sizes {
        get { return result.Sizes; }
        set { SetSizes(value); }
      }
      public Builder SetSizes(global::CmsApiSamples.Protocol.CMSApi.OrderSizes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSizes = true;
        result.sizes_ = value;
        return this;
      }
      public Builder SetSizes(global::CmsApiSamples.Protocol.CMSApi.OrderSizes.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSizes = true;
        result.sizes_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSizes(global::CmsApiSamples.Protocol.CMSApi.OrderSizes value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSizes &&
            result.sizes_ != global::CmsApiSamples.Protocol.CMSApi.OrderSizes.DefaultInstance) {
            result.sizes_ = global::CmsApiSamples.Protocol.CMSApi.OrderSizes.CreateBuilder(result.sizes_).MergeFrom(value).BuildPartial();
        } else {
          result.sizes_ = value;
        }
        result.hasSizes = true;
        return this;
      }
      public Builder ClearSizes() {
        PrepareBuilder();
        result.hasSizes = false;
        result.sizes_ = null;
        return this;
      }
      
      public bool HasTicketNumber {
        get { return result.hasTicketNumber; }
      }
      public string TicketNumber {
        get { return result.TicketNumber; }
        set { SetTicketNumber(value); }
      }
      public Builder SetTicketNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTicketNumber = true;
        result.ticketNumber_ = value;
        return this;
      }
      public Builder ClearTicketNumber() {
        PrepareBuilder();
        result.hasTicketNumber = false;
        result.ticketNumber_ = "";
        return this;
      }
      
      public bool HasComments {
        get { return result.hasComments; }
      }
      public string Comments {
        get { return result.Comments; }
        set { SetComments(value); }
      }
      public Builder SetComments(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasComments = true;
        result.comments_ = value;
        return this;
      }
      public Builder ClearComments() {
        PrepareBuilder();
        result.hasComments = false;
        result.comments_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> OrderClassesList {
        get { return PrepareBuilder().orderClasses_; }
      }
      public int OrderClassesCount {
        get { return result.OrderClassesCount; }
      }
      public string GetOrderClasses(int index) {
        return result.GetOrderClasses(index);
      }
      public Builder SetOrderClasses(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orderClasses_[index] = value;
        return this;
      }
      public Builder AddOrderClasses(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orderClasses_.Add(value);
        return this;
      }
      public Builder AddRangeOrderClasses(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.orderClasses_.Add(values);
        return this;
      }
      public Builder ClearOrderClasses() {
        PrepareBuilder();
        result.orderClasses_.Clear();
        return this;
      }
      
      public bool HasNativeOrderType {
        get { return result.hasNativeOrderType; }
      }
      [global::System.CLSCompliant(false)]
      public uint NativeOrderType {
        get { return result.NativeOrderType; }
        set { SetNativeOrderType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetNativeOrderType(uint value) {
        PrepareBuilder();
        result.hasNativeOrderType = true;
        result.nativeOrderType_ = value;
        return this;
      }
      public Builder ClearNativeOrderType() {
        PrepareBuilder();
        result.hasNativeOrderType = false;
        result.nativeOrderType_ = 0;
        return this;
      }
      
      public bool HasActivationTime {
        get { return result.hasActivationTime; }
      }
      public long ActivationTime {
        get { return result.ActivationTime; }
        set { SetActivationTime(value); }
      }
      public Builder SetActivationTime(long value) {
        PrepareBuilder();
        result.hasActivationTime = true;
        result.activationTime_ = value;
        return this;
      }
      public Builder ClearActivationTime() {
        PrepareBuilder();
        result.hasActivationTime = false;
        result.activationTime_ = 0;
        return this;
      }
      
      public bool HasSuspensionTime {
        get { return result.hasSuspensionTime; }
      }
      public long SuspensionTime {
        get { return result.SuspensionTime; }
        set { SetSuspensionTime(value); }
      }
      public Builder SetSuspensionTime(long value) {
        PrepareBuilder();
        result.hasSuspensionTime = true;
        result.suspensionTime_ = value;
        return this;
      }
      public Builder ClearSuspensionTime() {
        PrepareBuilder();
        result.hasSuspensionTime = false;
        result.suspensionTime_ = 0;
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public long ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(long value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.OrderRoute> RoutesList {
        get { return PrepareBuilder().routes_; }
      }
      public int RoutesCount {
        get { return result.RoutesCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderRoute GetRoutes(int index) {
        return result.GetRoutes(index);
      }
      public Builder SetRoutes(int index, global::CmsApiSamples.Protocol.CMSApi.OrderRoute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routes_[index] = value;
        return this;
      }
      public Builder SetRoutes(int index, global::CmsApiSamples.Protocol.CMSApi.OrderRoute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.routes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRoutes(global::CmsApiSamples.Protocol.CMSApi.OrderRoute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.routes_.Add(value);
        return this;
      }
      public Builder AddRoutes(global::CmsApiSamples.Protocol.CMSApi.OrderRoute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.routes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRoutes(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.OrderRoute> values) {
        PrepareBuilder();
        result.routes_.Add(values);
        return this;
      }
      public Builder ClearRoutes() {
        PrepareBuilder();
        result.routes_.Clear();
        return this;
      }
      
      public bool HasClientRegulatoryAlgorithmId {
        get { return result.hasClientRegulatoryAlgorithmId; }
      }
      public string ClientRegulatoryAlgorithmId {
        get { return result.ClientRegulatoryAlgorithmId; }
        set { SetClientRegulatoryAlgorithmId(value); }
      }
      public Builder SetClientRegulatoryAlgorithmId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientRegulatoryAlgorithmId = true;
        result.clientRegulatoryAlgorithmId_ = value;
        return this;
      }
      public Builder ClearClientRegulatoryAlgorithmId() {
        PrepareBuilder();
        result.hasClientRegulatoryAlgorithmId = false;
        result.clientRegulatoryAlgorithmId_ = "";
        return this;
      }
      
      public bool HasEffectiveRegulatoryAlgorithmId {
        get { return result.hasEffectiveRegulatoryAlgorithmId; }
      }
      public string EffectiveRegulatoryAlgorithmId {
        get { return result.EffectiveRegulatoryAlgorithmId; }
        set { SetEffectiveRegulatoryAlgorithmId(value); }
      }
      public Builder SetEffectiveRegulatoryAlgorithmId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEffectiveRegulatoryAlgorithmId = true;
        result.effectiveRegulatoryAlgorithmId_ = value;
        return this;
      }
      public Builder ClearEffectiveRegulatoryAlgorithmId() {
        PrepareBuilder();
        result.hasEffectiveRegulatoryAlgorithmId = false;
        result.effectiveRegulatoryAlgorithmId_ = "";
        return this;
      }
      
      public bool HasOperationalDetails {
       get { return result.hasOperationalDetails; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OperationalDetails OperationalDetails {
        get { return result.OperationalDetails; }
        set { SetOperationalDetails(value); }
      }
      public Builder SetOperationalDetails(global::CmsApiSamples.Protocol.CMSApi.OperationalDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOperationalDetails = true;
        result.operationalDetails_ = value;
        return this;
      }
      public Builder SetOperationalDetails(global::CmsApiSamples.Protocol.CMSApi.OperationalDetails.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOperationalDetails = true;
        result.operationalDetails_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOperationalDetails(global::CmsApiSamples.Protocol.CMSApi.OperationalDetails value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOperationalDetails &&
            result.operationalDetails_ != global::CmsApiSamples.Protocol.CMSApi.OperationalDetails.DefaultInstance) {
            result.operationalDetails_ = global::CmsApiSamples.Protocol.CMSApi.OperationalDetails.CreateBuilder(result.operationalDetails_).MergeFrom(value).BuildPartial();
        } else {
          result.operationalDetails_ = value;
        }
        result.hasOperationalDetails = true;
        return this;
      }
      public Builder ClearOperationalDetails() {
        PrepareBuilder();
        result.hasOperationalDetails = false;
        result.operationalDetails_ = null;
        return this;
      }
      
      public bool HasInstructions {
        get { return result.hasInstructions; }
      }
      public string Instructions {
        get { return result.Instructions; }
        set { SetInstructions(value); }
      }
      public Builder SetInstructions(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInstructions = true;
        result.instructions_ = value;
        return this;
      }
      public Builder ClearInstructions() {
        PrepareBuilder();
        result.hasInstructions = false;
        result.instructions_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> ClientExtraValuesList {
        get { return PrepareBuilder().clientExtraValues_; }
      }
      public int ClientExtraValuesCount {
        get { return result.ClientExtraValuesCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Tuple GetClientExtraValues(int index) {
        return result.GetClientExtraValues(index);
      }
      public Builder SetClientExtraValues(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.clientExtraValues_[index] = value;
        return this;
      }
      public Builder SetClientExtraValues(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.clientExtraValues_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddClientExtraValues(global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.clientExtraValues_.Add(value);
        return this;
      }
      public Builder AddClientExtraValues(global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.clientExtraValues_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeClientExtraValues(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Tuple> values) {
        PrepareBuilder();
        result.clientExtraValues_.Add(values);
        return this;
      }
      public Builder ClearClientExtraValues() {
        PrepareBuilder();
        result.clientExtraValues_.Clear();
        return this;
      }
      
      public bool HasRouteClientOrderId {
        get { return result.hasRouteClientOrderId; }
      }
      public string RouteClientOrderId {
        get { return result.RouteClientOrderId; }
        set { SetRouteClientOrderId(value); }
      }
      public Builder SetRouteClientOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRouteClientOrderId = true;
        result.routeClientOrderId_ = value;
        return this;
      }
      public Builder ClearRouteClientOrderId() {
        PrepareBuilder();
        result.hasRouteClientOrderId = false;
        result.routeClientOrderId_ = "";
        return this;
      }
      
      public bool HasDiscretionaryOffset {
        get { return result.hasDiscretionaryOffset; }
      }
      [global::System.CLSCompliant(false)]
      public uint DiscretionaryOffset {
        get { return result.DiscretionaryOffset; }
        set { SetDiscretionaryOffset(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetDiscretionaryOffset(uint value) {
        PrepareBuilder();
        result.hasDiscretionaryOffset = true;
        result.discretionaryOffset_ = value;
        return this;
      }
      public Builder ClearDiscretionaryOffset() {
        PrepareBuilder();
        result.hasDiscretionaryOffset = false;
        result.discretionaryOffset_ = 0;
        return this;
      }
    }
    static OrderRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderSizes : pb::GeneratedMessage<OrderSizes, OrderSizes.Builder> {
    private OrderSizes() { }
    private static readonly OrderSizes defaultInstance = new OrderSizes().MakeReadOnly();
    private static readonly string[] _orderSizesFieldNames = new string[] { "min_visible_size", "remaining_size", "trigger_size", "visible_size" };
    private static readonly uint[] _orderSizesFieldTags = new uint[] { 24, 32, 8, 16 };
    public static OrderSizes DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderSizes DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderSizes ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderSizes__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderSizes, OrderSizes.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderSizes__FieldAccessorTable; }
    }
    
    public const int TriggerSizeFieldNumber = 1;
    private bool hasTriggerSize;
    private uint triggerSize_;
    public bool HasTriggerSize {
      get { return hasTriggerSize; }
    }
    [global::System.CLSCompliant(false)]
    public uint TriggerSize {
      get { return triggerSize_; }
    }
    
    public const int VisibleSizeFieldNumber = 2;
    private bool hasVisibleSize;
    private uint visibleSize_;
    public bool HasVisibleSize {
      get { return hasVisibleSize; }
    }
    [global::System.CLSCompliant(false)]
    public uint VisibleSize {
      get { return visibleSize_; }
    }
    
    public const int MinVisibleSizeFieldNumber = 3;
    private bool hasMinVisibleSize;
    private uint minVisibleSize_;
    public bool HasMinVisibleSize {
      get { return hasMinVisibleSize; }
    }
    [global::System.CLSCompliant(false)]
    public uint MinVisibleSize {
      get { return minVisibleSize_; }
    }
    
    public const int RemainingSizeFieldNumber = 4;
    private bool hasRemainingSize;
    private uint remainingSize_;
    public bool HasRemainingSize {
      get { return hasRemainingSize; }
    }
    [global::System.CLSCompliant(false)]
    public uint RemainingSize {
      get { return remainingSize_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderSizesFieldNames;
      if (hasTriggerSize) {
        output.WriteUInt32(1, field_names[2], TriggerSize);
      }
      if (hasVisibleSize) {
        output.WriteUInt32(2, field_names[3], VisibleSize);
      }
      if (hasMinVisibleSize) {
        output.WriteUInt32(3, field_names[0], MinVisibleSize);
      }
      if (hasRemainingSize) {
        output.WriteUInt32(4, field_names[1], RemainingSize);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTriggerSize) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, TriggerSize);
      }
      if (hasVisibleSize) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, VisibleSize);
      }
      if (hasMinVisibleSize) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, MinVisibleSize);
      }
      if (hasRemainingSize) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, RemainingSize);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderSizes ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderSizes ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderSizes ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderSizes ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderSizes ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderSizes ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderSizes ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderSizes ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderSizes ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderSizes ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderSizes MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderSizes prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderSizes, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderSizes cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderSizes result;
      
      private OrderSizes PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderSizes original = result;
          result = new OrderSizes();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderSizes MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderSizes.Descriptor; }
      }
      
      public override OrderSizes DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderSizes.DefaultInstance; }
      }
      
      public override OrderSizes BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderSizes) {
          return MergeFrom((OrderSizes) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderSizes other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderSizes.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTriggerSize) {
          TriggerSize = other.TriggerSize;
        }
        if (other.HasVisibleSize) {
          VisibleSize = other.VisibleSize;
        }
        if (other.HasMinVisibleSize) {
          MinVisibleSize = other.MinVisibleSize;
        }
        if (other.HasRemainingSize) {
          RemainingSize = other.RemainingSize;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderSizesFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderSizesFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTriggerSize = input.ReadUInt32(ref result.triggerSize_);
              break;
            }
            case 16: {
              result.hasVisibleSize = input.ReadUInt32(ref result.visibleSize_);
              break;
            }
            case 24: {
              result.hasMinVisibleSize = input.ReadUInt32(ref result.minVisibleSize_);
              break;
            }
            case 32: {
              result.hasRemainingSize = input.ReadUInt32(ref result.remainingSize_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTriggerSize {
        get { return result.hasTriggerSize; }
      }
      [global::System.CLSCompliant(false)]
      public uint TriggerSize {
        get { return result.TriggerSize; }
        set { SetTriggerSize(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTriggerSize(uint value) {
        PrepareBuilder();
        result.hasTriggerSize = true;
        result.triggerSize_ = value;
        return this;
      }
      public Builder ClearTriggerSize() {
        PrepareBuilder();
        result.hasTriggerSize = false;
        result.triggerSize_ = 0;
        return this;
      }
      
      public bool HasVisibleSize {
        get { return result.hasVisibleSize; }
      }
      [global::System.CLSCompliant(false)]
      public uint VisibleSize {
        get { return result.VisibleSize; }
        set { SetVisibleSize(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetVisibleSize(uint value) {
        PrepareBuilder();
        result.hasVisibleSize = true;
        result.visibleSize_ = value;
        return this;
      }
      public Builder ClearVisibleSize() {
        PrepareBuilder();
        result.hasVisibleSize = false;
        result.visibleSize_ = 0;
        return this;
      }
      
      public bool HasMinVisibleSize {
        get { return result.hasMinVisibleSize; }
      }
      [global::System.CLSCompliant(false)]
      public uint MinVisibleSize {
        get { return result.MinVisibleSize; }
        set { SetMinVisibleSize(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMinVisibleSize(uint value) {
        PrepareBuilder();
        result.hasMinVisibleSize = true;
        result.minVisibleSize_ = value;
        return this;
      }
      public Builder ClearMinVisibleSize() {
        PrepareBuilder();
        result.hasMinVisibleSize = false;
        result.minVisibleSize_ = 0;
        return this;
      }
      
      public bool HasRemainingSize {
        get { return result.hasRemainingSize; }
      }
      [global::System.CLSCompliant(false)]
      public uint RemainingSize {
        get { return result.RemainingSize; }
        set { SetRemainingSize(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRemainingSize(uint value) {
        PrepareBuilder();
        result.hasRemainingSize = true;
        result.remainingSize_ = value;
        return this;
      }
      public Builder ClearRemainingSize() {
        PrepareBuilder();
        result.hasRemainingSize = false;
        result.remainingSize_ = 0;
        return this;
      }
    }
    static OrderSizes() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderTrailing : pb::GeneratedMessage<OrderTrailing, OrderTrailing.Builder> {
    private OrderTrailing() { }
    private static readonly OrderTrailing defaultInstance = new OrderTrailing().MakeReadOnly();
    private static readonly string[] _orderTrailingFieldNames = new string[] { "display_limit_price", "display_offset", "display_stop_price", "limit_price", "offset", "stop_price", "trail_type", "update_time" };
    private static readonly uint[] _orderTrailingFieldTags = new uint[] { 56, 40, 48, 33, 17, 25, 8, 64 };
    public static OrderTrailing DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderTrailing DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderTrailing ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderTrailing__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderTrailing, OrderTrailing.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderTrailing__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum TrailType {
        BEST_BID = 1,
        BEST_ASK = 2,
        LAST_TRADE = 3,
      }
      
    }
    #endregion
    
    public const int TrailTypeFieldNumber = 1;
    private bool hasTrailType;
    private uint trailType_;
    public bool HasTrailType {
      get { return hasTrailType; }
    }
    [global::System.CLSCompliant(false)]
    public uint TrailType {
      get { return trailType_; }
    }
    
    public const int OffsetFieldNumber = 2;
    private bool hasOffset;
    private double offset_;
    public bool HasOffset {
      get { return hasOffset; }
    }
    public double Offset {
      get { return offset_; }
    }
    
    public const int StopPriceFieldNumber = 3;
    private bool hasStopPrice;
    private double stopPrice_;
    public bool HasStopPrice {
      get { return hasStopPrice; }
    }
    public double StopPrice {
      get { return stopPrice_; }
    }
    
    public const int LimitPriceFieldNumber = 4;
    private bool hasLimitPrice;
    private double limitPrice_;
    public bool HasLimitPrice {
      get { return hasLimitPrice; }
    }
    public double LimitPrice {
      get { return limitPrice_; }
    }
    
    public const int DisplayOffsetFieldNumber = 5;
    private bool hasDisplayOffset;
    private long displayOffset_;
    public bool HasDisplayOffset {
      get { return hasDisplayOffset; }
    }
    public long DisplayOffset {
      get { return displayOffset_; }
    }
    
    public const int DisplayStopPriceFieldNumber = 6;
    private bool hasDisplayStopPrice;
    private long displayStopPrice_;
    public bool HasDisplayStopPrice {
      get { return hasDisplayStopPrice; }
    }
    public long DisplayStopPrice {
      get { return displayStopPrice_; }
    }
    
    public const int DisplayLimitPriceFieldNumber = 7;
    private bool hasDisplayLimitPrice;
    private long displayLimitPrice_;
    public bool HasDisplayLimitPrice {
      get { return hasDisplayLimitPrice; }
    }
    public long DisplayLimitPrice {
      get { return displayLimitPrice_; }
    }
    
    public const int UpdateTimeFieldNumber = 8;
    private bool hasUpdateTime;
    private long updateTime_;
    public bool HasUpdateTime {
      get { return hasUpdateTime; }
    }
    public long UpdateTime {
      get { return updateTime_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderTrailingFieldNames;
      if (hasTrailType) {
        output.WriteUInt32(1, field_names[6], TrailType);
      }
      if (hasOffset) {
        output.WriteDouble(2, field_names[4], Offset);
      }
      if (hasStopPrice) {
        output.WriteDouble(3, field_names[5], StopPrice);
      }
      if (hasLimitPrice) {
        output.WriteDouble(4, field_names[3], LimitPrice);
      }
      if (hasDisplayOffset) {
        output.WriteSInt64(5, field_names[1], DisplayOffset);
      }
      if (hasDisplayStopPrice) {
        output.WriteSInt64(6, field_names[2], DisplayStopPrice);
      }
      if (hasDisplayLimitPrice) {
        output.WriteSInt64(7, field_names[0], DisplayLimitPrice);
      }
      if (hasUpdateTime) {
        output.WriteSInt64(8, field_names[7], UpdateTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTrailType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, TrailType);
      }
      if (hasOffset) {
        size += pb::CodedOutputStream.ComputeDoubleSize(2, Offset);
      }
      if (hasStopPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(3, StopPrice);
      }
      if (hasLimitPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(4, LimitPrice);
      }
      if (hasDisplayOffset) {
        size += pb::CodedOutputStream.ComputeSInt64Size(5, DisplayOffset);
      }
      if (hasDisplayStopPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(6, DisplayStopPrice);
      }
      if (hasDisplayLimitPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(7, DisplayLimitPrice);
      }
      if (hasUpdateTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(8, UpdateTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderTrailing ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderTrailing ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderTrailing ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderTrailing ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderTrailing ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderTrailing ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderTrailing ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderTrailing ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderTrailing ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderTrailing ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderTrailing MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderTrailing prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderTrailing, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderTrailing cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderTrailing result;
      
      private OrderTrailing PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderTrailing original = result;
          result = new OrderTrailing();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderTrailing MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.Descriptor; }
      }
      
      public override OrderTrailing DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.DefaultInstance; }
      }
      
      public override OrderTrailing BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderTrailing) {
          return MergeFrom((OrderTrailing) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderTrailing other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderTrailing.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTrailType) {
          TrailType = other.TrailType;
        }
        if (other.HasOffset) {
          Offset = other.Offset;
        }
        if (other.HasStopPrice) {
          StopPrice = other.StopPrice;
        }
        if (other.HasLimitPrice) {
          LimitPrice = other.LimitPrice;
        }
        if (other.HasDisplayOffset) {
          DisplayOffset = other.DisplayOffset;
        }
        if (other.HasDisplayStopPrice) {
          DisplayStopPrice = other.DisplayStopPrice;
        }
        if (other.HasDisplayLimitPrice) {
          DisplayLimitPrice = other.DisplayLimitPrice;
        }
        if (other.HasUpdateTime) {
          UpdateTime = other.UpdateTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderTrailingFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderTrailingFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTrailType = input.ReadUInt32(ref result.trailType_);
              break;
            }
            case 17: {
              result.hasOffset = input.ReadDouble(ref result.offset_);
              break;
            }
            case 25: {
              result.hasStopPrice = input.ReadDouble(ref result.stopPrice_);
              break;
            }
            case 33: {
              result.hasLimitPrice = input.ReadDouble(ref result.limitPrice_);
              break;
            }
            case 40: {
              result.hasDisplayOffset = input.ReadSInt64(ref result.displayOffset_);
              break;
            }
            case 48: {
              result.hasDisplayStopPrice = input.ReadSInt64(ref result.displayStopPrice_);
              break;
            }
            case 56: {
              result.hasDisplayLimitPrice = input.ReadSInt64(ref result.displayLimitPrice_);
              break;
            }
            case 64: {
              result.hasUpdateTime = input.ReadSInt64(ref result.updateTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTrailType {
        get { return result.hasTrailType; }
      }
      [global::System.CLSCompliant(false)]
      public uint TrailType {
        get { return result.TrailType; }
        set { SetTrailType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTrailType(uint value) {
        PrepareBuilder();
        result.hasTrailType = true;
        result.trailType_ = value;
        return this;
      }
      public Builder ClearTrailType() {
        PrepareBuilder();
        result.hasTrailType = false;
        result.trailType_ = 0;
        return this;
      }
      
      public bool HasOffset {
        get { return result.hasOffset; }
      }
      public double Offset {
        get { return result.Offset; }
        set { SetOffset(value); }
      }
      public Builder SetOffset(double value) {
        PrepareBuilder();
        result.hasOffset = true;
        result.offset_ = value;
        return this;
      }
      public Builder ClearOffset() {
        PrepareBuilder();
        result.hasOffset = false;
        result.offset_ = 0D;
        return this;
      }
      
      public bool HasStopPrice {
        get { return result.hasStopPrice; }
      }
      public double StopPrice {
        get { return result.StopPrice; }
        set { SetStopPrice(value); }
      }
      public Builder SetStopPrice(double value) {
        PrepareBuilder();
        result.hasStopPrice = true;
        result.stopPrice_ = value;
        return this;
      }
      public Builder ClearStopPrice() {
        PrepareBuilder();
        result.hasStopPrice = false;
        result.stopPrice_ = 0D;
        return this;
      }
      
      public bool HasLimitPrice {
        get { return result.hasLimitPrice; }
      }
      public double LimitPrice {
        get { return result.LimitPrice; }
        set { SetLimitPrice(value); }
      }
      public Builder SetLimitPrice(double value) {
        PrepareBuilder();
        result.hasLimitPrice = true;
        result.limitPrice_ = value;
        return this;
      }
      public Builder ClearLimitPrice() {
        PrepareBuilder();
        result.hasLimitPrice = false;
        result.limitPrice_ = 0D;
        return this;
      }
      
      public bool HasDisplayOffset {
        get { return result.hasDisplayOffset; }
      }
      public long DisplayOffset {
        get { return result.DisplayOffset; }
        set { SetDisplayOffset(value); }
      }
      public Builder SetDisplayOffset(long value) {
        PrepareBuilder();
        result.hasDisplayOffset = true;
        result.displayOffset_ = value;
        return this;
      }
      public Builder ClearDisplayOffset() {
        PrepareBuilder();
        result.hasDisplayOffset = false;
        result.displayOffset_ = 0;
        return this;
      }
      
      public bool HasDisplayStopPrice {
        get { return result.hasDisplayStopPrice; }
      }
      public long DisplayStopPrice {
        get { return result.DisplayStopPrice; }
        set { SetDisplayStopPrice(value); }
      }
      public Builder SetDisplayStopPrice(long value) {
        PrepareBuilder();
        result.hasDisplayStopPrice = true;
        result.displayStopPrice_ = value;
        return this;
      }
      public Builder ClearDisplayStopPrice() {
        PrepareBuilder();
        result.hasDisplayStopPrice = false;
        result.displayStopPrice_ = 0;
        return this;
      }
      
      public bool HasDisplayLimitPrice {
        get { return result.hasDisplayLimitPrice; }
      }
      public long DisplayLimitPrice {
        get { return result.DisplayLimitPrice; }
        set { SetDisplayLimitPrice(value); }
      }
      public Builder SetDisplayLimitPrice(long value) {
        PrepareBuilder();
        result.hasDisplayLimitPrice = true;
        result.displayLimitPrice_ = value;
        return this;
      }
      public Builder ClearDisplayLimitPrice() {
        PrepareBuilder();
        result.hasDisplayLimitPrice = false;
        result.displayLimitPrice_ = 0;
        return this;
      }
      
      public bool HasUpdateTime {
        get { return result.hasUpdateTime; }
      }
      public long UpdateTime {
        get { return result.UpdateTime; }
        set { SetUpdateTime(value); }
      }
      public Builder SetUpdateTime(long value) {
        PrepareBuilder();
        result.hasUpdateTime = true;
        result.updateTime_ = value;
        return this;
      }
      public Builder ClearUpdateTime() {
        PrepareBuilder();
        result.hasUpdateTime = false;
        result.updateTime_ = 0;
        return this;
      }
    }
    static OrderTrailing() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OperationalDetails : pb::GeneratedMessage<OperationalDetails, OperationalDetails.Builder> {
    private OperationalDetails() { }
    private static readonly OperationalDetails defaultInstance = new OperationalDetails().MakeReadOnly();
    private static readonly string[] _operationalDetailsFieldNames = new string[] { "client_guid", "client_ip", "client_order_id", "client_system_id", "client_version", "trade_location_id" };
    private static readonly uint[] _operationalDetailsFieldTags = new uint[] { 18, 34, 10, 26, 42, 50 };
    public static OperationalDetails DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OperationalDetails DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OperationalDetails ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OperationalDetails__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OperationalDetails, OperationalDetails.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OperationalDetails__FieldAccessorTable; }
    }
    
    public const int ClientOrderIdFieldNumber = 1;
    private bool hasClientOrderId;
    private string clientOrderId_ = "";
    public bool HasClientOrderId {
      get { return hasClientOrderId; }
    }
    public string ClientOrderId {
      get { return clientOrderId_; }
    }
    
    public const int ClientGuidFieldNumber = 2;
    private bool hasClientGuid;
    private string clientGuid_ = "";
    public bool HasClientGuid {
      get { return hasClientGuid; }
    }
    public string ClientGuid {
      get { return clientGuid_; }
    }
    
    public const int ClientSystemIdFieldNumber = 3;
    private bool hasClientSystemId;
    private string clientSystemId_ = "";
    public bool HasClientSystemId {
      get { return hasClientSystemId; }
    }
    public string ClientSystemId {
      get { return clientSystemId_; }
    }
    
    public const int ClientIpFieldNumber = 4;
    private bool hasClientIp;
    private string clientIp_ = "";
    public bool HasClientIp {
      get { return hasClientIp; }
    }
    public string ClientIp {
      get { return clientIp_; }
    }
    
    public const int ClientVersionFieldNumber = 5;
    private bool hasClientVersion;
    private string clientVersion_ = "";
    public bool HasClientVersion {
      get { return hasClientVersion; }
    }
    public string ClientVersion {
      get { return clientVersion_; }
    }
    
    public const int TradeLocationIdFieldNumber = 6;
    private bool hasTradeLocationId;
    private string tradeLocationId_ = "";
    public bool HasTradeLocationId {
      get { return hasTradeLocationId; }
    }
    public string TradeLocationId {
      get { return tradeLocationId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _operationalDetailsFieldNames;
      if (hasClientOrderId) {
        output.WriteString(1, field_names[2], ClientOrderId);
      }
      if (hasClientGuid) {
        output.WriteString(2, field_names[0], ClientGuid);
      }
      if (hasClientSystemId) {
        output.WriteString(3, field_names[3], ClientSystemId);
      }
      if (hasClientIp) {
        output.WriteString(4, field_names[1], ClientIp);
      }
      if (hasClientVersion) {
        output.WriteString(5, field_names[4], ClientVersion);
      }
      if (hasTradeLocationId) {
        output.WriteString(6, field_names[5], TradeLocationId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasClientOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, ClientOrderId);
      }
      if (hasClientGuid) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ClientGuid);
      }
      if (hasClientSystemId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, ClientSystemId);
      }
      if (hasClientIp) {
        size += pb::CodedOutputStream.ComputeStringSize(4, ClientIp);
      }
      if (hasClientVersion) {
        size += pb::CodedOutputStream.ComputeStringSize(5, ClientVersion);
      }
      if (hasTradeLocationId) {
        size += pb::CodedOutputStream.ComputeStringSize(6, TradeLocationId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OperationalDetails ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OperationalDetails ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OperationalDetails ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OperationalDetails ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OperationalDetails ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OperationalDetails ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OperationalDetails ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OperationalDetails ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OperationalDetails ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OperationalDetails ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OperationalDetails MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OperationalDetails prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OperationalDetails, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OperationalDetails cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OperationalDetails result;
      
      private OperationalDetails PrepareBuilder() {
        if (resultIsReadOnly) {
          OperationalDetails original = result;
          result = new OperationalDetails();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OperationalDetails MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OperationalDetails.Descriptor; }
      }
      
      public override OperationalDetails DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OperationalDetails.DefaultInstance; }
      }
      
      public override OperationalDetails BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OperationalDetails) {
          return MergeFrom((OperationalDetails) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OperationalDetails other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OperationalDetails.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasClientOrderId) {
          ClientOrderId = other.ClientOrderId;
        }
        if (other.HasClientGuid) {
          ClientGuid = other.ClientGuid;
        }
        if (other.HasClientSystemId) {
          ClientSystemId = other.ClientSystemId;
        }
        if (other.HasClientIp) {
          ClientIp = other.ClientIp;
        }
        if (other.HasClientVersion) {
          ClientVersion = other.ClientVersion;
        }
        if (other.HasTradeLocationId) {
          TradeLocationId = other.TradeLocationId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_operationalDetailsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _operationalDetailsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasClientOrderId = input.ReadString(ref result.clientOrderId_);
              break;
            }
            case 18: {
              result.hasClientGuid = input.ReadString(ref result.clientGuid_);
              break;
            }
            case 26: {
              result.hasClientSystemId = input.ReadString(ref result.clientSystemId_);
              break;
            }
            case 34: {
              result.hasClientIp = input.ReadString(ref result.clientIp_);
              break;
            }
            case 42: {
              result.hasClientVersion = input.ReadString(ref result.clientVersion_);
              break;
            }
            case 50: {
              result.hasTradeLocationId = input.ReadString(ref result.tradeLocationId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasClientOrderId {
        get { return result.hasClientOrderId; }
      }
      public string ClientOrderId {
        get { return result.ClientOrderId; }
        set { SetClientOrderId(value); }
      }
      public Builder SetClientOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientOrderId = true;
        result.clientOrderId_ = value;
        return this;
      }
      public Builder ClearClientOrderId() {
        PrepareBuilder();
        result.hasClientOrderId = false;
        result.clientOrderId_ = "";
        return this;
      }
      
      public bool HasClientGuid {
        get { return result.hasClientGuid; }
      }
      public string ClientGuid {
        get { return result.ClientGuid; }
        set { SetClientGuid(value); }
      }
      public Builder SetClientGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientGuid = true;
        result.clientGuid_ = value;
        return this;
      }
      public Builder ClearClientGuid() {
        PrepareBuilder();
        result.hasClientGuid = false;
        result.clientGuid_ = "";
        return this;
      }
      
      public bool HasClientSystemId {
        get { return result.hasClientSystemId; }
      }
      public string ClientSystemId {
        get { return result.ClientSystemId; }
        set { SetClientSystemId(value); }
      }
      public Builder SetClientSystemId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientSystemId = true;
        result.clientSystemId_ = value;
        return this;
      }
      public Builder ClearClientSystemId() {
        PrepareBuilder();
        result.hasClientSystemId = false;
        result.clientSystemId_ = "";
        return this;
      }
      
      public bool HasClientIp {
        get { return result.hasClientIp; }
      }
      public string ClientIp {
        get { return result.ClientIp; }
        set { SetClientIp(value); }
      }
      public Builder SetClientIp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientIp = true;
        result.clientIp_ = value;
        return this;
      }
      public Builder ClearClientIp() {
        PrepareBuilder();
        result.hasClientIp = false;
        result.clientIp_ = "";
        return this;
      }
      
      public bool HasClientVersion {
        get { return result.hasClientVersion; }
      }
      public string ClientVersion {
        get { return result.ClientVersion; }
        set { SetClientVersion(value); }
      }
      public Builder SetClientVersion(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientVersion = true;
        result.clientVersion_ = value;
        return this;
      }
      public Builder ClearClientVersion() {
        PrepareBuilder();
        result.hasClientVersion = false;
        result.clientVersion_ = "";
        return this;
      }
      
      public bool HasTradeLocationId {
        get { return result.hasTradeLocationId; }
      }
      public string TradeLocationId {
        get { return result.TradeLocationId; }
        set { SetTradeLocationId(value); }
      }
      public Builder SetTradeLocationId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradeLocationId = true;
        result.tradeLocationId_ = value;
        return this;
      }
      public Builder ClearTradeLocationId() {
        PrepareBuilder();
        result.hasTradeLocationId = false;
        result.tradeLocationId_ = "";
        return this;
      }
    }
    static OperationalDetails() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TransactionStatus : pb::GeneratedMessage<TransactionStatus, TransactionStatus.Builder> {
    private TransactionStatus() { }
    private static readonly TransactionStatus defaultInstance = new TransactionStatus().MakeReadOnly();
    private static readonly string[] _transactionStatusFieldNames = new string[] { "new_discretionary_offset", "order_chain_status", "order_state", "prev_discretionary_offset", "status", "text_message", "trans_id", "trans_utc_time" };
    private static readonly uint[] _transactionStatusFieldTags = new uint[] { 56, 40, 32, 64, 8, 50, 16, 24 };
    public static TransactionStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TransactionStatus DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TransactionStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TransactionStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TransactionStatus, TransactionStatus.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TransactionStatus__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Status {
        UNDEFINED = 0,
        IN_TRANSIT = 1,
        REJECTED = 2,
        ACK_PLACE = 3,
        EXPIRED = 4,
        IN_CANCEL = 5,
        ACK_CANCEL = 6,
        REJECT_CANCEL = 7,
        IN_MODIFY = 8,
        ACK_MODIFY = 9,
        REJECT_MODIFY = 10,
        FILL = 11,
        SUSPEND = 12,
        FILL_CORRECT = 13,
        FILL_CANCEL = 14,
        FILL_BUST = 15,
        ACTIVEAT = 16,
        DISCONNECT = 17,
        SYNTHETIC_ACTIVATED = 18,
        UPDATE = 19,
      }
      
    }
    #endregion
    
    public const int StatusFieldNumber = 1;
    private bool hasStatus;
    private uint status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint Status {
      get { return status_; }
    }
    
    public const int TransIdFieldNumber = 2;
    private bool hasTransId;
    private ulong transId_;
    public bool HasTransId {
      get { return hasTransId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong TransId {
      get { return transId_; }
    }
    
    public const int TransUtcTimeFieldNumber = 3;
    private bool hasTransUtcTime;
    private long transUtcTime_;
    public bool HasTransUtcTime {
      get { return hasTransUtcTime; }
    }
    public long TransUtcTime {
      get { return transUtcTime_; }
    }
    
    public const int OrderStateFieldNumber = 4;
    private bool hasOrderState;
    private uint orderState_;
    public bool HasOrderState {
      get { return hasOrderState; }
    }
    [global::System.CLSCompliant(false)]
    public uint OrderState {
      get { return orderState_; }
    }
    
    public const int OrderChainStatusFieldNumber = 5;
    private bool hasOrderChainStatus;
    private uint orderChainStatus_;
    public bool HasOrderChainStatus {
      get { return hasOrderChainStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint OrderChainStatus {
      get { return orderChainStatus_; }
    }
    
    public const int TextMessageFieldNumber = 6;
    private bool hasTextMessage;
    private string textMessage_ = "";
    public bool HasTextMessage {
      get { return hasTextMessage; }
    }
    public string TextMessage {
      get { return textMessage_; }
    }
    
    public const int NewDiscretionaryOffsetFieldNumber = 7;
    private bool hasNewDiscretionaryOffset;
    private uint newDiscretionaryOffset_;
    public bool HasNewDiscretionaryOffset {
      get { return hasNewDiscretionaryOffset; }
    }
    [global::System.CLSCompliant(false)]
    public uint NewDiscretionaryOffset {
      get { return newDiscretionaryOffset_; }
    }
    
    public const int PrevDiscretionaryOffsetFieldNumber = 8;
    private bool hasPrevDiscretionaryOffset;
    private uint prevDiscretionaryOffset_;
    public bool HasPrevDiscretionaryOffset {
      get { return hasPrevDiscretionaryOffset; }
    }
    [global::System.CLSCompliant(false)]
    public uint PrevDiscretionaryOffset {
      get { return prevDiscretionaryOffset_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStatus) return false;
        if (!hasTransId) return false;
        if (!hasTransUtcTime) return false;
        if (!hasOrderState) return false;
        if (!hasOrderChainStatus) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _transactionStatusFieldNames;
      if (hasStatus) {
        output.WriteUInt32(1, field_names[4], Status);
      }
      if (hasTransId) {
        output.WriteUInt64(2, field_names[6], TransId);
      }
      if (hasTransUtcTime) {
        output.WriteSInt64(3, field_names[7], TransUtcTime);
      }
      if (hasOrderState) {
        output.WriteUInt32(4, field_names[2], OrderState);
      }
      if (hasOrderChainStatus) {
        output.WriteUInt32(5, field_names[1], OrderChainStatus);
      }
      if (hasTextMessage) {
        output.WriteString(6, field_names[5], TextMessage);
      }
      if (hasNewDiscretionaryOffset) {
        output.WriteUInt32(7, field_names[0], NewDiscretionaryOffset);
      }
      if (hasPrevDiscretionaryOffset) {
        output.WriteUInt32(8, field_names[3], PrevDiscretionaryOffset);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Status);
      }
      if (hasTransId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, TransId);
      }
      if (hasTransUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(3, TransUtcTime);
      }
      if (hasOrderState) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, OrderState);
      }
      if (hasOrderChainStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, OrderChainStatus);
      }
      if (hasTextMessage) {
        size += pb::CodedOutputStream.ComputeStringSize(6, TextMessage);
      }
      if (hasNewDiscretionaryOffset) {
        size += pb::CodedOutputStream.ComputeUInt32Size(7, NewDiscretionaryOffset);
      }
      if (hasPrevDiscretionaryOffset) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, PrevDiscretionaryOffset);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TransactionStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TransactionStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TransactionStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TransactionStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TransactionStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TransactionStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TransactionStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TransactionStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TransactionStatus ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TransactionStatus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TransactionStatus MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TransactionStatus prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TransactionStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TransactionStatus cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TransactionStatus result;
      
      private TransactionStatus PrepareBuilder() {
        if (resultIsReadOnly) {
          TransactionStatus original = result;
          result = new TransactionStatus();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TransactionStatus MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TransactionStatus.Descriptor; }
      }
      
      public override TransactionStatus DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TransactionStatus.DefaultInstance; }
      }
      
      public override TransactionStatus BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TransactionStatus) {
          return MergeFrom((TransactionStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TransactionStatus other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.TransactionStatus.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasTransId) {
          TransId = other.TransId;
        }
        if (other.HasTransUtcTime) {
          TransUtcTime = other.TransUtcTime;
        }
        if (other.HasOrderState) {
          OrderState = other.OrderState;
        }
        if (other.HasOrderChainStatus) {
          OrderChainStatus = other.OrderChainStatus;
        }
        if (other.HasTextMessage) {
          TextMessage = other.TextMessage;
        }
        if (other.HasNewDiscretionaryOffset) {
          NewDiscretionaryOffset = other.NewDiscretionaryOffset;
        }
        if (other.HasPrevDiscretionaryOffset) {
          PrevDiscretionaryOffset = other.PrevDiscretionaryOffset;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_transactionStatusFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _transactionStatusFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasStatus = input.ReadUInt32(ref result.status_);
              break;
            }
            case 16: {
              result.hasTransId = input.ReadUInt64(ref result.transId_);
              break;
            }
            case 24: {
              result.hasTransUtcTime = input.ReadSInt64(ref result.transUtcTime_);
              break;
            }
            case 32: {
              result.hasOrderState = input.ReadUInt32(ref result.orderState_);
              break;
            }
            case 40: {
              result.hasOrderChainStatus = input.ReadUInt32(ref result.orderChainStatus_);
              break;
            }
            case 50: {
              result.hasTextMessage = input.ReadString(ref result.textMessage_);
              break;
            }
            case 56: {
              result.hasNewDiscretionaryOffset = input.ReadUInt32(ref result.newDiscretionaryOffset_);
              break;
            }
            case 64: {
              result.hasPrevDiscretionaryOffset = input.ReadUInt32(ref result.prevDiscretionaryOffset_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetStatus(uint value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasTransId {
        get { return result.hasTransId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong TransId {
        get { return result.TransId; }
        set { SetTransId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTransId(ulong value) {
        PrepareBuilder();
        result.hasTransId = true;
        result.transId_ = value;
        return this;
      }
      public Builder ClearTransId() {
        PrepareBuilder();
        result.hasTransId = false;
        result.transId_ = 0UL;
        return this;
      }
      
      public bool HasTransUtcTime {
        get { return result.hasTransUtcTime; }
      }
      public long TransUtcTime {
        get { return result.TransUtcTime; }
        set { SetTransUtcTime(value); }
      }
      public Builder SetTransUtcTime(long value) {
        PrepareBuilder();
        result.hasTransUtcTime = true;
        result.transUtcTime_ = value;
        return this;
      }
      public Builder ClearTransUtcTime() {
        PrepareBuilder();
        result.hasTransUtcTime = false;
        result.transUtcTime_ = 0;
        return this;
      }
      
      public bool HasOrderState {
        get { return result.hasOrderState; }
      }
      [global::System.CLSCompliant(false)]
      public uint OrderState {
        get { return result.OrderState; }
        set { SetOrderState(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOrderState(uint value) {
        PrepareBuilder();
        result.hasOrderState = true;
        result.orderState_ = value;
        return this;
      }
      public Builder ClearOrderState() {
        PrepareBuilder();
        result.hasOrderState = false;
        result.orderState_ = 0;
        return this;
      }
      
      public bool HasOrderChainStatus {
        get { return result.hasOrderChainStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint OrderChainStatus {
        get { return result.OrderChainStatus; }
        set { SetOrderChainStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOrderChainStatus(uint value) {
        PrepareBuilder();
        result.hasOrderChainStatus = true;
        result.orderChainStatus_ = value;
        return this;
      }
      public Builder ClearOrderChainStatus() {
        PrepareBuilder();
        result.hasOrderChainStatus = false;
        result.orderChainStatus_ = 0;
        return this;
      }
      
      public bool HasTextMessage {
        get { return result.hasTextMessage; }
      }
      public string TextMessage {
        get { return result.TextMessage; }
        set { SetTextMessage(value); }
      }
      public Builder SetTextMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTextMessage = true;
        result.textMessage_ = value;
        return this;
      }
      public Builder ClearTextMessage() {
        PrepareBuilder();
        result.hasTextMessage = false;
        result.textMessage_ = "";
        return this;
      }
      
      public bool HasNewDiscretionaryOffset {
        get { return result.hasNewDiscretionaryOffset; }
      }
      [global::System.CLSCompliant(false)]
      public uint NewDiscretionaryOffset {
        get { return result.NewDiscretionaryOffset; }
        set { SetNewDiscretionaryOffset(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetNewDiscretionaryOffset(uint value) {
        PrepareBuilder();
        result.hasNewDiscretionaryOffset = true;
        result.newDiscretionaryOffset_ = value;
        return this;
      }
      public Builder ClearNewDiscretionaryOffset() {
        PrepareBuilder();
        result.hasNewDiscretionaryOffset = false;
        result.newDiscretionaryOffset_ = 0;
        return this;
      }
      
      public bool HasPrevDiscretionaryOffset {
        get { return result.hasPrevDiscretionaryOffset; }
      }
      [global::System.CLSCompliant(false)]
      public uint PrevDiscretionaryOffset {
        get { return result.PrevDiscretionaryOffset; }
        set { SetPrevDiscretionaryOffset(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetPrevDiscretionaryOffset(uint value) {
        PrepareBuilder();
        result.hasPrevDiscretionaryOffset = true;
        result.prevDiscretionaryOffset_ = value;
        return this;
      }
      public Builder ClearPrevDiscretionaryOffset() {
        PrepareBuilder();
        result.hasPrevDiscretionaryOffset = false;
        result.prevDiscretionaryOffset_ = 0;
        return this;
      }
    }
    static TransactionStatus() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderFill : pb::GeneratedMessage<OrderFill, OrderFill.Builder> {
    private OrderFill() { }
    private static readonly OrderFill defaultInstance = new OrderFill().MakeReadOnly();
    private static readonly string[] _orderFillFieldNames = new string[] { "commission", "commission_currency", "display_price", "exec_id", "fill_care_order_request_id", "fill_status", "fill_utc_time", "id", "is_aggressive", "leg_fills", "open_close_type", "order_id", "price", "quantity", "speculation_type" };
    private static readonly uint[] _orderFillFieldTags = new uint[] { 113, 122, 88, 18, 82, 72, 40, 8, 48, 58, 96, 66, 33, 24, 104 };
    public static OrderFill DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderFill DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderFill ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderFill__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderFill, OrderFill.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderFill__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum FillStatus {
        VALID = 1,
        BUSTED = 2,
        CORRECTED = 3,
        CANCELLED = 4,
      }
      
    }
    #endregion
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private long id_;
    public bool HasId {
      get { return hasId; }
    }
    public long Id {
      get { return id_; }
    }
    
    public const int ExecIdFieldNumber = 2;
    private bool hasExecId;
    private string execId_ = "";
    public bool HasExecId {
      get { return hasExecId; }
    }
    public string ExecId {
      get { return execId_; }
    }
    
    public const int QuantityFieldNumber = 3;
    private bool hasQuantity;
    private uint quantity_;
    public bool HasQuantity {
      get { return hasQuantity; }
    }
    [global::System.CLSCompliant(false)]
    public uint Quantity {
      get { return quantity_; }
    }
    
    public const int PriceFieldNumber = 4;
    private bool hasPrice;
    private double price_;
    public bool HasPrice {
      get { return hasPrice; }
    }
    public double Price {
      get { return price_; }
    }
    
    public const int FillUtcTimeFieldNumber = 5;
    private bool hasFillUtcTime;
    private long fillUtcTime_;
    public bool HasFillUtcTime {
      get { return hasFillUtcTime; }
    }
    public long FillUtcTime {
      get { return fillUtcTime_; }
    }
    
    public const int IsAggressiveFieldNumber = 6;
    private bool hasIsAggressive;
    private bool isAggressive_;
    public bool HasIsAggressive {
      get { return hasIsAggressive; }
    }
    public bool IsAggressive {
      get { return isAggressive_; }
    }
    
    public const int LegFillsFieldNumber = 7;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.LegFill> legFills_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.LegFill>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.LegFill> LegFillsList {
      get { return legFills_; }
    }
    public int LegFillsCount {
      get { return legFills_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LegFill GetLegFills(int index) {
      return legFills_[index];
    }
    
    public const int OrderIdFieldNumber = 8;
    private bool hasOrderId;
    private string orderId_ = "";
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public string OrderId {
      get { return orderId_; }
    }
    
    public const int FillStatusFieldNumber = 9;
    private bool hasFillStatus;
    private uint fillStatus_;
    public bool HasFillStatus {
      get { return hasFillStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint FillStatus {
      get { return fillStatus_; }
    }
    
    public const int FillCareOrderRequestIdFieldNumber = 10;
    private bool hasFillCareOrderRequestId;
    private string fillCareOrderRequestId_ = "";
    public bool HasFillCareOrderRequestId {
      get { return hasFillCareOrderRequestId; }
    }
    public string FillCareOrderRequestId {
      get { return fillCareOrderRequestId_; }
    }
    
    public const int DisplayPriceFieldNumber = 11;
    private bool hasDisplayPrice;
    private long displayPrice_;
    public bool HasDisplayPrice {
      get { return hasDisplayPrice; }
    }
    public long DisplayPrice {
      get { return displayPrice_; }
    }
    
    public const int OpenCloseTypeFieldNumber = 12;
    private bool hasOpenCloseType;
    private uint openCloseType_;
    public bool HasOpenCloseType {
      get { return hasOpenCloseType; }
    }
    [global::System.CLSCompliant(false)]
    public uint OpenCloseType {
      get { return openCloseType_; }
    }
    
    public const int SpeculationTypeFieldNumber = 13;
    private bool hasSpeculationType;
    private uint speculationType_;
    public bool HasSpeculationType {
      get { return hasSpeculationType; }
    }
    [global::System.CLSCompliant(false)]
    public uint SpeculationType {
      get { return speculationType_; }
    }
    
    public const int CommissionFieldNumber = 14;
    private bool hasCommission;
    private double commission_;
    public bool HasCommission {
      get { return hasCommission; }
    }
    public double Commission {
      get { return commission_; }
    }
    
    public const int CommissionCurrencyFieldNumber = 15;
    private bool hasCommissionCurrency;
    private string commissionCurrency_ = "";
    public bool HasCommissionCurrency {
      get { return hasCommissionCurrency; }
    }
    public string CommissionCurrency {
      get { return commissionCurrency_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderFillFieldNames;
      if (hasId) {
        output.WriteSInt64(1, field_names[7], Id);
      }
      if (hasExecId) {
        output.WriteString(2, field_names[3], ExecId);
      }
      if (hasQuantity) {
        output.WriteUInt32(3, field_names[13], Quantity);
      }
      if (hasPrice) {
        output.WriteDouble(4, field_names[12], Price);
      }
      if (hasFillUtcTime) {
        output.WriteSInt64(5, field_names[6], FillUtcTime);
      }
      if (hasIsAggressive) {
        output.WriteBool(6, field_names[8], IsAggressive);
      }
      if (legFills_.Count > 0) {
        output.WriteMessageArray(7, field_names[9], legFills_);
      }
      if (hasOrderId) {
        output.WriteString(8, field_names[11], OrderId);
      }
      if (hasFillStatus) {
        output.WriteUInt32(9, field_names[5], FillStatus);
      }
      if (hasFillCareOrderRequestId) {
        output.WriteString(10, field_names[4], FillCareOrderRequestId);
      }
      if (hasDisplayPrice) {
        output.WriteSInt64(11, field_names[2], DisplayPrice);
      }
      if (hasOpenCloseType) {
        output.WriteUInt32(12, field_names[10], OpenCloseType);
      }
      if (hasSpeculationType) {
        output.WriteUInt32(13, field_names[14], SpeculationType);
      }
      if (hasCommission) {
        output.WriteDouble(14, field_names[0], Commission);
      }
      if (hasCommissionCurrency) {
        output.WriteString(15, field_names[1], CommissionCurrency);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeSInt64Size(1, Id);
      }
      if (hasExecId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ExecId);
      }
      if (hasQuantity) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Quantity);
      }
      if (hasPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(4, Price);
      }
      if (hasFillUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(5, FillUtcTime);
      }
      if (hasIsAggressive) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, IsAggressive);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.LegFill element in LegFillsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, element);
      }
      if (hasOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(8, OrderId);
      }
      if (hasFillStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(9, FillStatus);
      }
      if (hasFillCareOrderRequestId) {
        size += pb::CodedOutputStream.ComputeStringSize(10, FillCareOrderRequestId);
      }
      if (hasDisplayPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(11, DisplayPrice);
      }
      if (hasOpenCloseType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(12, OpenCloseType);
      }
      if (hasSpeculationType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(13, SpeculationType);
      }
      if (hasCommission) {
        size += pb::CodedOutputStream.ComputeDoubleSize(14, Commission);
      }
      if (hasCommissionCurrency) {
        size += pb::CodedOutputStream.ComputeStringSize(15, CommissionCurrency);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderFill ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderFill ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderFill ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderFill ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderFill ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderFill ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderFill ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderFill ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderFill ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderFill ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderFill MakeReadOnly() {
      legFills_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderFill prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderFill, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderFill cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderFill result;
      
      private OrderFill PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderFill original = result;
          result = new OrderFill();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderFill MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderFill.Descriptor; }
      }
      
      public override OrderFill DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderFill.DefaultInstance; }
      }
      
      public override OrderFill BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderFill) {
          return MergeFrom((OrderFill) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderFill other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderFill.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasExecId) {
          ExecId = other.ExecId;
        }
        if (other.HasQuantity) {
          Quantity = other.Quantity;
        }
        if (other.HasPrice) {
          Price = other.Price;
        }
        if (other.HasFillUtcTime) {
          FillUtcTime = other.FillUtcTime;
        }
        if (other.HasIsAggressive) {
          IsAggressive = other.IsAggressive;
        }
        if (other.legFills_.Count != 0) {
          result.legFills_.Add(other.legFills_);
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasFillStatus) {
          FillStatus = other.FillStatus;
        }
        if (other.HasFillCareOrderRequestId) {
          FillCareOrderRequestId = other.FillCareOrderRequestId;
        }
        if (other.HasDisplayPrice) {
          DisplayPrice = other.DisplayPrice;
        }
        if (other.HasOpenCloseType) {
          OpenCloseType = other.OpenCloseType;
        }
        if (other.HasSpeculationType) {
          SpeculationType = other.SpeculationType;
        }
        if (other.HasCommission) {
          Commission = other.Commission;
        }
        if (other.HasCommissionCurrency) {
          CommissionCurrency = other.CommissionCurrency;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderFillFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderFillFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadSInt64(ref result.id_);
              break;
            }
            case 18: {
              result.hasExecId = input.ReadString(ref result.execId_);
              break;
            }
            case 24: {
              result.hasQuantity = input.ReadUInt32(ref result.quantity_);
              break;
            }
            case 33: {
              result.hasPrice = input.ReadDouble(ref result.price_);
              break;
            }
            case 40: {
              result.hasFillUtcTime = input.ReadSInt64(ref result.fillUtcTime_);
              break;
            }
            case 48: {
              result.hasIsAggressive = input.ReadBool(ref result.isAggressive_);
              break;
            }
            case 58: {
              input.ReadMessageArray(tag, field_name, result.legFills_, global::CmsApiSamples.Protocol.CMSApi.LegFill.DefaultInstance, extensionRegistry);
              break;
            }
            case 66: {
              result.hasOrderId = input.ReadString(ref result.orderId_);
              break;
            }
            case 72: {
              result.hasFillStatus = input.ReadUInt32(ref result.fillStatus_);
              break;
            }
            case 82: {
              result.hasFillCareOrderRequestId = input.ReadString(ref result.fillCareOrderRequestId_);
              break;
            }
            case 88: {
              result.hasDisplayPrice = input.ReadSInt64(ref result.displayPrice_);
              break;
            }
            case 96: {
              result.hasOpenCloseType = input.ReadUInt32(ref result.openCloseType_);
              break;
            }
            case 104: {
              result.hasSpeculationType = input.ReadUInt32(ref result.speculationType_);
              break;
            }
            case 113: {
              result.hasCommission = input.ReadDouble(ref result.commission_);
              break;
            }
            case 122: {
              result.hasCommissionCurrency = input.ReadString(ref result.commissionCurrency_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public long Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(long value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasExecId {
        get { return result.hasExecId; }
      }
      public string ExecId {
        get { return result.ExecId; }
        set { SetExecId(value); }
      }
      public Builder SetExecId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExecId = true;
        result.execId_ = value;
        return this;
      }
      public Builder ClearExecId() {
        PrepareBuilder();
        result.hasExecId = false;
        result.execId_ = "";
        return this;
      }
      
      public bool HasQuantity {
        get { return result.hasQuantity; }
      }
      [global::System.CLSCompliant(false)]
      public uint Quantity {
        get { return result.Quantity; }
        set { SetQuantity(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetQuantity(uint value) {
        PrepareBuilder();
        result.hasQuantity = true;
        result.quantity_ = value;
        return this;
      }
      public Builder ClearQuantity() {
        PrepareBuilder();
        result.hasQuantity = false;
        result.quantity_ = 0;
        return this;
      }
      
      public bool HasPrice {
        get { return result.hasPrice; }
      }
      public double Price {
        get { return result.Price; }
        set { SetPrice(value); }
      }
      public Builder SetPrice(double value) {
        PrepareBuilder();
        result.hasPrice = true;
        result.price_ = value;
        return this;
      }
      public Builder ClearPrice() {
        PrepareBuilder();
        result.hasPrice = false;
        result.price_ = 0D;
        return this;
      }
      
      public bool HasFillUtcTime {
        get { return result.hasFillUtcTime; }
      }
      public long FillUtcTime {
        get { return result.FillUtcTime; }
        set { SetFillUtcTime(value); }
      }
      public Builder SetFillUtcTime(long value) {
        PrepareBuilder();
        result.hasFillUtcTime = true;
        result.fillUtcTime_ = value;
        return this;
      }
      public Builder ClearFillUtcTime() {
        PrepareBuilder();
        result.hasFillUtcTime = false;
        result.fillUtcTime_ = 0;
        return this;
      }
      
      public bool HasIsAggressive {
        get { return result.hasIsAggressive; }
      }
      public bool IsAggressive {
        get { return result.IsAggressive; }
        set { SetIsAggressive(value); }
      }
      public Builder SetIsAggressive(bool value) {
        PrepareBuilder();
        result.hasIsAggressive = true;
        result.isAggressive_ = value;
        return this;
      }
      public Builder ClearIsAggressive() {
        PrepareBuilder();
        result.hasIsAggressive = false;
        result.isAggressive_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.LegFill> LegFillsList {
        get { return PrepareBuilder().legFills_; }
      }
      public int LegFillsCount {
        get { return result.LegFillsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LegFill GetLegFills(int index) {
        return result.GetLegFills(index);
      }
      public Builder SetLegFills(int index, global::CmsApiSamples.Protocol.CMSApi.LegFill value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.legFills_[index] = value;
        return this;
      }
      public Builder SetLegFills(int index, global::CmsApiSamples.Protocol.CMSApi.LegFill.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.legFills_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLegFills(global::CmsApiSamples.Protocol.CMSApi.LegFill value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.legFills_.Add(value);
        return this;
      }
      public Builder AddLegFills(global::CmsApiSamples.Protocol.CMSApi.LegFill.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.legFills_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLegFills(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.LegFill> values) {
        PrepareBuilder();
        result.legFills_.Add(values);
        return this;
      }
      public Builder ClearLegFills() {
        PrepareBuilder();
        result.legFills_.Clear();
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public string OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = "";
        return this;
      }
      
      public bool HasFillStatus {
        get { return result.hasFillStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint FillStatus {
        get { return result.FillStatus; }
        set { SetFillStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetFillStatus(uint value) {
        PrepareBuilder();
        result.hasFillStatus = true;
        result.fillStatus_ = value;
        return this;
      }
      public Builder ClearFillStatus() {
        PrepareBuilder();
        result.hasFillStatus = false;
        result.fillStatus_ = 0;
        return this;
      }
      
      public bool HasFillCareOrderRequestId {
        get { return result.hasFillCareOrderRequestId; }
      }
      public string FillCareOrderRequestId {
        get { return result.FillCareOrderRequestId; }
        set { SetFillCareOrderRequestId(value); }
      }
      public Builder SetFillCareOrderRequestId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFillCareOrderRequestId = true;
        result.fillCareOrderRequestId_ = value;
        return this;
      }
      public Builder ClearFillCareOrderRequestId() {
        PrepareBuilder();
        result.hasFillCareOrderRequestId = false;
        result.fillCareOrderRequestId_ = "";
        return this;
      }
      
      public bool HasDisplayPrice {
        get { return result.hasDisplayPrice; }
      }
      public long DisplayPrice {
        get { return result.DisplayPrice; }
        set { SetDisplayPrice(value); }
      }
      public Builder SetDisplayPrice(long value) {
        PrepareBuilder();
        result.hasDisplayPrice = true;
        result.displayPrice_ = value;
        return this;
      }
      public Builder ClearDisplayPrice() {
        PrepareBuilder();
        result.hasDisplayPrice = false;
        result.displayPrice_ = 0;
        return this;
      }
      
      public bool HasOpenCloseType {
        get { return result.hasOpenCloseType; }
      }
      [global::System.CLSCompliant(false)]
      public uint OpenCloseType {
        get { return result.OpenCloseType; }
        set { SetOpenCloseType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOpenCloseType(uint value) {
        PrepareBuilder();
        result.hasOpenCloseType = true;
        result.openCloseType_ = value;
        return this;
      }
      public Builder ClearOpenCloseType() {
        PrepareBuilder();
        result.hasOpenCloseType = false;
        result.openCloseType_ = 0;
        return this;
      }
      
      public bool HasSpeculationType {
        get { return result.hasSpeculationType; }
      }
      [global::System.CLSCompliant(false)]
      public uint SpeculationType {
        get { return result.SpeculationType; }
        set { SetSpeculationType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSpeculationType(uint value) {
        PrepareBuilder();
        result.hasSpeculationType = true;
        result.speculationType_ = value;
        return this;
      }
      public Builder ClearSpeculationType() {
        PrepareBuilder();
        result.hasSpeculationType = false;
        result.speculationType_ = 0;
        return this;
      }
      
      public bool HasCommission {
        get { return result.hasCommission; }
      }
      public double Commission {
        get { return result.Commission; }
        set { SetCommission(value); }
      }
      public Builder SetCommission(double value) {
        PrepareBuilder();
        result.hasCommission = true;
        result.commission_ = value;
        return this;
      }
      public Builder ClearCommission() {
        PrepareBuilder();
        result.hasCommission = false;
        result.commission_ = 0D;
        return this;
      }
      
      public bool HasCommissionCurrency {
        get { return result.hasCommissionCurrency; }
      }
      public string CommissionCurrency {
        get { return result.CommissionCurrency; }
        set { SetCommissionCurrency(value); }
      }
      public Builder SetCommissionCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCommissionCurrency = true;
        result.commissionCurrency_ = value;
        return this;
      }
      public Builder ClearCommissionCurrency() {
        PrepareBuilder();
        result.hasCommissionCurrency = false;
        result.commissionCurrency_ = "";
        return this;
      }
    }
    static OrderFill() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LegFill : pb::GeneratedMessage<LegFill, LegFill.Builder> {
    private LegFill() { }
    private static readonly LegFill defaultInstance = new LegFill().MakeReadOnly();
    private static readonly string[] _legFillFieldNames = new string[] { "contract_symbol", "display_price", "exec_id", "fill_status", "fill_utc_time", "id", "is_aggressive", "open_close_type", "price", "quantity", "side", "speculation_type" };
    private static readonly uint[] _legFillFieldTags = new uint[] { 26, 72, 18, 64, 56, 8, 96, 80, 49, 32, 40, 88 };
    public static LegFill DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LegFill DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LegFill ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_LegFill__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LegFill, LegFill.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_LegFill__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private long id_;
    public bool HasId {
      get { return hasId; }
    }
    public long Id {
      get { return id_; }
    }
    
    public const int ExecIdFieldNumber = 2;
    private bool hasExecId;
    private string execId_ = "";
    public bool HasExecId {
      get { return hasExecId; }
    }
    public string ExecId {
      get { return execId_; }
    }
    
    public const int ContractSymbolFieldNumber = 3;
    private bool hasContractSymbol;
    private string contractSymbol_ = "";
    public bool HasContractSymbol {
      get { return hasContractSymbol; }
    }
    public string ContractSymbol {
      get { return contractSymbol_; }
    }
    
    public const int QuantityFieldNumber = 4;
    private bool hasQuantity;
    private uint quantity_;
    public bool HasQuantity {
      get { return hasQuantity; }
    }
    [global::System.CLSCompliant(false)]
    public uint Quantity {
      get { return quantity_; }
    }
    
    public const int SideFieldNumber = 5;
    private bool hasSide;
    private uint side_;
    public bool HasSide {
      get { return hasSide; }
    }
    [global::System.CLSCompliant(false)]
    public uint Side {
      get { return side_; }
    }
    
    public const int PriceFieldNumber = 6;
    private bool hasPrice;
    private double price_;
    public bool HasPrice {
      get { return hasPrice; }
    }
    public double Price {
      get { return price_; }
    }
    
    public const int FillUtcTimeFieldNumber = 7;
    private bool hasFillUtcTime;
    private long fillUtcTime_;
    public bool HasFillUtcTime {
      get { return hasFillUtcTime; }
    }
    public long FillUtcTime {
      get { return fillUtcTime_; }
    }
    
    public const int FillStatusFieldNumber = 8;
    private bool hasFillStatus;
    private uint fillStatus_;
    public bool HasFillStatus {
      get { return hasFillStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint FillStatus {
      get { return fillStatus_; }
    }
    
    public const int DisplayPriceFieldNumber = 9;
    private bool hasDisplayPrice;
    private long displayPrice_;
    public bool HasDisplayPrice {
      get { return hasDisplayPrice; }
    }
    public long DisplayPrice {
      get { return displayPrice_; }
    }
    
    public const int OpenCloseTypeFieldNumber = 10;
    private bool hasOpenCloseType;
    private uint openCloseType_;
    public bool HasOpenCloseType {
      get { return hasOpenCloseType; }
    }
    [global::System.CLSCompliant(false)]
    public uint OpenCloseType {
      get { return openCloseType_; }
    }
    
    public const int SpeculationTypeFieldNumber = 11;
    private bool hasSpeculationType;
    private uint speculationType_;
    public bool HasSpeculationType {
      get { return hasSpeculationType; }
    }
    [global::System.CLSCompliant(false)]
    public uint SpeculationType {
      get { return speculationType_; }
    }
    
    public const int IsAggressiveFieldNumber = 12;
    private bool hasIsAggressive;
    private bool isAggressive_;
    public bool HasIsAggressive {
      get { return hasIsAggressive; }
    }
    public bool IsAggressive {
      get { return isAggressive_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _legFillFieldNames;
      if (hasId) {
        output.WriteSInt64(1, field_names[5], Id);
      }
      if (hasExecId) {
        output.WriteString(2, field_names[2], ExecId);
      }
      if (hasContractSymbol) {
        output.WriteString(3, field_names[0], ContractSymbol);
      }
      if (hasQuantity) {
        output.WriteUInt32(4, field_names[9], Quantity);
      }
      if (hasSide) {
        output.WriteUInt32(5, field_names[10], Side);
      }
      if (hasPrice) {
        output.WriteDouble(6, field_names[8], Price);
      }
      if (hasFillUtcTime) {
        output.WriteSInt64(7, field_names[4], FillUtcTime);
      }
      if (hasFillStatus) {
        output.WriteUInt32(8, field_names[3], FillStatus);
      }
      if (hasDisplayPrice) {
        output.WriteSInt64(9, field_names[1], DisplayPrice);
      }
      if (hasOpenCloseType) {
        output.WriteUInt32(10, field_names[7], OpenCloseType);
      }
      if (hasSpeculationType) {
        output.WriteUInt32(11, field_names[11], SpeculationType);
      }
      if (hasIsAggressive) {
        output.WriteBool(12, field_names[6], IsAggressive);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeSInt64Size(1, Id);
      }
      if (hasExecId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ExecId);
      }
      if (hasContractSymbol) {
        size += pb::CodedOutputStream.ComputeStringSize(3, ContractSymbol);
      }
      if (hasQuantity) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Quantity);
      }
      if (hasSide) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, Side);
      }
      if (hasPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(6, Price);
      }
      if (hasFillUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(7, FillUtcTime);
      }
      if (hasFillStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, FillStatus);
      }
      if (hasDisplayPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(9, DisplayPrice);
      }
      if (hasOpenCloseType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(10, OpenCloseType);
      }
      if (hasSpeculationType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(11, SpeculationType);
      }
      if (hasIsAggressive) {
        size += pb::CodedOutputStream.ComputeBoolSize(12, IsAggressive);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LegFill ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LegFill ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LegFill ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LegFill ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LegFill ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LegFill ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LegFill ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LegFill ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LegFill ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LegFill ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LegFill MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LegFill prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LegFill, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LegFill cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LegFill result;
      
      private LegFill PrepareBuilder() {
        if (resultIsReadOnly) {
          LegFill original = result;
          result = new LegFill();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LegFill MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LegFill.Descriptor; }
      }
      
      public override LegFill DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LegFill.DefaultInstance; }
      }
      
      public override LegFill BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LegFill) {
          return MergeFrom((LegFill) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LegFill other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LegFill.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasExecId) {
          ExecId = other.ExecId;
        }
        if (other.HasContractSymbol) {
          ContractSymbol = other.ContractSymbol;
        }
        if (other.HasQuantity) {
          Quantity = other.Quantity;
        }
        if (other.HasSide) {
          Side = other.Side;
        }
        if (other.HasPrice) {
          Price = other.Price;
        }
        if (other.HasFillUtcTime) {
          FillUtcTime = other.FillUtcTime;
        }
        if (other.HasFillStatus) {
          FillStatus = other.FillStatus;
        }
        if (other.HasDisplayPrice) {
          DisplayPrice = other.DisplayPrice;
        }
        if (other.HasOpenCloseType) {
          OpenCloseType = other.OpenCloseType;
        }
        if (other.HasSpeculationType) {
          SpeculationType = other.SpeculationType;
        }
        if (other.HasIsAggressive) {
          IsAggressive = other.IsAggressive;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_legFillFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _legFillFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadSInt64(ref result.id_);
              break;
            }
            case 18: {
              result.hasExecId = input.ReadString(ref result.execId_);
              break;
            }
            case 26: {
              result.hasContractSymbol = input.ReadString(ref result.contractSymbol_);
              break;
            }
            case 32: {
              result.hasQuantity = input.ReadUInt32(ref result.quantity_);
              break;
            }
            case 40: {
              result.hasSide = input.ReadUInt32(ref result.side_);
              break;
            }
            case 49: {
              result.hasPrice = input.ReadDouble(ref result.price_);
              break;
            }
            case 56: {
              result.hasFillUtcTime = input.ReadSInt64(ref result.fillUtcTime_);
              break;
            }
            case 64: {
              result.hasFillStatus = input.ReadUInt32(ref result.fillStatus_);
              break;
            }
            case 72: {
              result.hasDisplayPrice = input.ReadSInt64(ref result.displayPrice_);
              break;
            }
            case 80: {
              result.hasOpenCloseType = input.ReadUInt32(ref result.openCloseType_);
              break;
            }
            case 88: {
              result.hasSpeculationType = input.ReadUInt32(ref result.speculationType_);
              break;
            }
            case 96: {
              result.hasIsAggressive = input.ReadBool(ref result.isAggressive_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public long Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(long value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasExecId {
        get { return result.hasExecId; }
      }
      public string ExecId {
        get { return result.ExecId; }
        set { SetExecId(value); }
      }
      public Builder SetExecId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExecId = true;
        result.execId_ = value;
        return this;
      }
      public Builder ClearExecId() {
        PrepareBuilder();
        result.hasExecId = false;
        result.execId_ = "";
        return this;
      }
      
      public bool HasContractSymbol {
        get { return result.hasContractSymbol; }
      }
      public string ContractSymbol {
        get { return result.ContractSymbol; }
        set { SetContractSymbol(value); }
      }
      public Builder SetContractSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContractSymbol = true;
        result.contractSymbol_ = value;
        return this;
      }
      public Builder ClearContractSymbol() {
        PrepareBuilder();
        result.hasContractSymbol = false;
        result.contractSymbol_ = "";
        return this;
      }
      
      public bool HasQuantity {
        get { return result.hasQuantity; }
      }
      [global::System.CLSCompliant(false)]
      public uint Quantity {
        get { return result.Quantity; }
        set { SetQuantity(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetQuantity(uint value) {
        PrepareBuilder();
        result.hasQuantity = true;
        result.quantity_ = value;
        return this;
      }
      public Builder ClearQuantity() {
        PrepareBuilder();
        result.hasQuantity = false;
        result.quantity_ = 0;
        return this;
      }
      
      public bool HasSide {
        get { return result.hasSide; }
      }
      [global::System.CLSCompliant(false)]
      public uint Side {
        get { return result.Side; }
        set { SetSide(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSide(uint value) {
        PrepareBuilder();
        result.hasSide = true;
        result.side_ = value;
        return this;
      }
      public Builder ClearSide() {
        PrepareBuilder();
        result.hasSide = false;
        result.side_ = 0;
        return this;
      }
      
      public bool HasPrice {
        get { return result.hasPrice; }
      }
      public double Price {
        get { return result.Price; }
        set { SetPrice(value); }
      }
      public Builder SetPrice(double value) {
        PrepareBuilder();
        result.hasPrice = true;
        result.price_ = value;
        return this;
      }
      public Builder ClearPrice() {
        PrepareBuilder();
        result.hasPrice = false;
        result.price_ = 0D;
        return this;
      }
      
      public bool HasFillUtcTime {
        get { return result.hasFillUtcTime; }
      }
      public long FillUtcTime {
        get { return result.FillUtcTime; }
        set { SetFillUtcTime(value); }
      }
      public Builder SetFillUtcTime(long value) {
        PrepareBuilder();
        result.hasFillUtcTime = true;
        result.fillUtcTime_ = value;
        return this;
      }
      public Builder ClearFillUtcTime() {
        PrepareBuilder();
        result.hasFillUtcTime = false;
        result.fillUtcTime_ = 0;
        return this;
      }
      
      public bool HasFillStatus {
        get { return result.hasFillStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint FillStatus {
        get { return result.FillStatus; }
        set { SetFillStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetFillStatus(uint value) {
        PrepareBuilder();
        result.hasFillStatus = true;
        result.fillStatus_ = value;
        return this;
      }
      public Builder ClearFillStatus() {
        PrepareBuilder();
        result.hasFillStatus = false;
        result.fillStatus_ = 0;
        return this;
      }
      
      public bool HasDisplayPrice {
        get { return result.hasDisplayPrice; }
      }
      public long DisplayPrice {
        get { return result.DisplayPrice; }
        set { SetDisplayPrice(value); }
      }
      public Builder SetDisplayPrice(long value) {
        PrepareBuilder();
        result.hasDisplayPrice = true;
        result.displayPrice_ = value;
        return this;
      }
      public Builder ClearDisplayPrice() {
        PrepareBuilder();
        result.hasDisplayPrice = false;
        result.displayPrice_ = 0;
        return this;
      }
      
      public bool HasOpenCloseType {
        get { return result.hasOpenCloseType; }
      }
      [global::System.CLSCompliant(false)]
      public uint OpenCloseType {
        get { return result.OpenCloseType; }
        set { SetOpenCloseType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOpenCloseType(uint value) {
        PrepareBuilder();
        result.hasOpenCloseType = true;
        result.openCloseType_ = value;
        return this;
      }
      public Builder ClearOpenCloseType() {
        PrepareBuilder();
        result.hasOpenCloseType = false;
        result.openCloseType_ = 0;
        return this;
      }
      
      public bool HasSpeculationType {
        get { return result.hasSpeculationType; }
      }
      [global::System.CLSCompliant(false)]
      public uint SpeculationType {
        get { return result.SpeculationType; }
        set { SetSpeculationType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSpeculationType(uint value) {
        PrepareBuilder();
        result.hasSpeculationType = true;
        result.speculationType_ = value;
        return this;
      }
      public Builder ClearSpeculationType() {
        PrepareBuilder();
        result.hasSpeculationType = false;
        result.speculationType_ = 0;
        return this;
      }
      
      public bool HasIsAggressive {
        get { return result.hasIsAggressive; }
      }
      public bool IsAggressive {
        get { return result.IsAggressive; }
        set { SetIsAggressive(value); }
      }
      public Builder SetIsAggressive(bool value) {
        PrepareBuilder();
        result.hasIsAggressive = true;
        result.isAggressive_ = value;
        return this;
      }
      public Builder ClearIsAggressive() {
        PrepareBuilder();
        result.hasIsAggressive = false;
        result.isAggressive_ = false;
        return this;
      }
    }
    static LegFill() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RelatedOrder : pb::GeneratedMessage<RelatedOrder, RelatedOrder.Builder> {
    private RelatedOrder() { }
    private static readonly RelatedOrder defaultInstance = new RelatedOrder().MakeReadOnly();
    private static readonly string[] _relatedOrderFieldNames = new string[] { "children", "leg_path", "order_chain" };
    private static readonly uint[] _relatedOrderFieldTags = new uint[] { 18, 26, 10 };
    public static RelatedOrder DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RelatedOrder DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RelatedOrder ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RelatedOrder__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RelatedOrder, RelatedOrder.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RelatedOrder__FieldAccessorTable; }
    }
    
    public const int OrderChainFieldNumber = 1;
    private bool hasOrderChain;
    private global::CmsApiSamples.Protocol.CMSApi.OrderChain orderChain_;
    public bool HasOrderChain {
      get { return hasOrderChain; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderChain OrderChain {
      get { return orderChain_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderChain.DefaultInstance; }
    }
    
    public const int ChildrenFieldNumber = 2;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.RelatedOrder> children_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.RelatedOrder>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.RelatedOrder> ChildrenList {
      get { return children_; }
    }
    public int ChildrenCount {
      get { return children_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RelatedOrder GetChildren(int index) {
      return children_[index];
    }
    
    public const int LegPathFieldNumber = 3;
    private bool hasLegPath;
    private string legPath_ = "";
    public bool HasLegPath {
      get { return hasLegPath; }
    }
    public string LegPath {
      get { return legPath_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasOrderChain) {
          if (!OrderChain.IsInitialized) return false;
        }
        foreach (global::CmsApiSamples.Protocol.CMSApi.RelatedOrder element in ChildrenList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _relatedOrderFieldNames;
      if (hasOrderChain) {
        output.WriteMessage(1, field_names[2], OrderChain);
      }
      if (children_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], children_);
      }
      if (hasLegPath) {
        output.WriteString(3, field_names[1], LegPath);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOrderChain) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, OrderChain);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.RelatedOrder element in ChildrenList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      if (hasLegPath) {
        size += pb::CodedOutputStream.ComputeStringSize(3, LegPath);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RelatedOrder ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RelatedOrder ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RelatedOrder ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RelatedOrder ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RelatedOrder ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RelatedOrder ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RelatedOrder ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RelatedOrder ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RelatedOrder ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RelatedOrder ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RelatedOrder MakeReadOnly() {
      children_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RelatedOrder prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RelatedOrder, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RelatedOrder cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RelatedOrder result;
      
      private RelatedOrder PrepareBuilder() {
        if (resultIsReadOnly) {
          RelatedOrder original = result;
          result = new RelatedOrder();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RelatedOrder MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.Descriptor; }
      }
      
      public override RelatedOrder DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.DefaultInstance; }
      }
      
      public override RelatedOrder BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RelatedOrder) {
          return MergeFrom((RelatedOrder) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RelatedOrder other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderChain) {
          MergeOrderChain(other.OrderChain);
        }
        if (other.children_.Count != 0) {
          result.children_.Add(other.children_);
        }
        if (other.HasLegPath) {
          LegPath = other.LegPath;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_relatedOrderFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _relatedOrderFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.OrderChain.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderChain.CreateBuilder();
              if (result.hasOrderChain) {
                subBuilder.MergeFrom(OrderChain);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderChain = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.children_, global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              result.hasLegPath = input.ReadString(ref result.legPath_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderChain {
       get { return result.hasOrderChain; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderChain OrderChain {
        get { return result.OrderChain; }
        set { SetOrderChain(value); }
      }
      public Builder SetOrderChain(global::CmsApiSamples.Protocol.CMSApi.OrderChain value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderChain = true;
        result.orderChain_ = value;
        return this;
      }
      public Builder SetOrderChain(global::CmsApiSamples.Protocol.CMSApi.OrderChain.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderChain = true;
        result.orderChain_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderChain(global::CmsApiSamples.Protocol.CMSApi.OrderChain value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderChain &&
            result.orderChain_ != global::CmsApiSamples.Protocol.CMSApi.OrderChain.DefaultInstance) {
            result.orderChain_ = global::CmsApiSamples.Protocol.CMSApi.OrderChain.CreateBuilder(result.orderChain_).MergeFrom(value).BuildPartial();
        } else {
          result.orderChain_ = value;
        }
        result.hasOrderChain = true;
        return this;
      }
      public Builder ClearOrderChain() {
        PrepareBuilder();
        result.hasOrderChain = false;
        result.orderChain_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.RelatedOrder> ChildrenList {
        get { return PrepareBuilder().children_; }
      }
      public int ChildrenCount {
        get { return result.ChildrenCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RelatedOrder GetChildren(int index) {
        return result.GetChildren(index);
      }
      public Builder SetChildren(int index, global::CmsApiSamples.Protocol.CMSApi.RelatedOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.children_[index] = value;
        return this;
      }
      public Builder SetChildren(int index, global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.children_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddChildren(global::CmsApiSamples.Protocol.CMSApi.RelatedOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.children_.Add(value);
        return this;
      }
      public Builder AddChildren(global::CmsApiSamples.Protocol.CMSApi.RelatedOrder.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.children_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeChildren(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.RelatedOrder> values) {
        PrepareBuilder();
        result.children_.Add(values);
        return this;
      }
      public Builder ClearChildren() {
        PrepareBuilder();
        result.children_.Clear();
        return this;
      }
      
      public bool HasLegPath {
        get { return result.hasLegPath; }
      }
      public string LegPath {
        get { return result.LegPath; }
        set { SetLegPath(value); }
      }
      public Builder SetLegPath(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLegPath = true;
        result.legPath_ = value;
        return this;
      }
      public Builder ClearLegPath() {
        PrepareBuilder();
        result.hasLegPath = false;
        result.legPath_ = "";
        return this;
      }
    }
    static RelatedOrder() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CompoundOrder : pb::GeneratedMessage<CompoundOrder, CompoundOrder.Builder> {
    private CompoundOrder() { }
    private static readonly CompoundOrder defaultInstance = new CompoundOrder().MakeReadOnly();
    private static readonly string[] _compoundOrderFieldNames = new string[] { "children", "client_guid", "id", "node_role", "order_chain", "trigger_type", "type" };
    private static readonly uint[] _compoundOrderFieldTags = new uint[] { 66, 42, 10, 16, 58, 48, 24 };
    public static CompoundOrder DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CompoundOrder DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CompoundOrder ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CompoundOrder__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CompoundOrder, CompoundOrder.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CompoundOrder__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CompoundOrderNodeRole {
        ROOT = 1,
        OPO_PRIMARY = 2,
        OPO_SECONDARY = 3,
        OCO_ROLE = 4,
      }
      
      public enum CompoundOrderType {
        OCO = 1,
        OPO = 2,
        ORDER = 3,
      }
      
      public enum CompoundOrderTriggerType {
        Working = 1,
        Filled = 2,
        Cancelled = 3,
      }
      
    }
    #endregion
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int NodeRoleFieldNumber = 2;
    private bool hasNodeRole;
    private uint nodeRole_;
    public bool HasNodeRole {
      get { return hasNodeRole; }
    }
    [global::System.CLSCompliant(false)]
    public uint NodeRole {
      get { return nodeRole_; }
    }
    
    public const int TypeFieldNumber = 3;
    private bool hasType;
    private uint type_;
    public bool HasType {
      get { return hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return type_; }
    }
    
    public const int ClientGuidFieldNumber = 5;
    private bool hasClientGuid;
    private string clientGuid_ = "";
    public bool HasClientGuid {
      get { return hasClientGuid; }
    }
    public string ClientGuid {
      get { return clientGuid_; }
    }
    
    public const int TriggerTypeFieldNumber = 6;
    private bool hasTriggerType;
    private uint triggerType_;
    public bool HasTriggerType {
      get { return hasTriggerType; }
    }
    [global::System.CLSCompliant(false)]
    public uint TriggerType {
      get { return triggerType_; }
    }
    
    public const int OrderChainFieldNumber = 7;
    private bool hasOrderChain;
    private global::CmsApiSamples.Protocol.CMSApi.OrderChain orderChain_;
    public bool HasOrderChain {
      get { return hasOrderChain; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OrderChain OrderChain {
      get { return orderChain_ ?? global::CmsApiSamples.Protocol.CMSApi.OrderChain.DefaultInstance; }
    }
    
    public const int ChildrenFieldNumber = 8;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.CompoundOrder> children_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.CompoundOrder>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.CompoundOrder> ChildrenList {
      get { return children_; }
    }
    public int ChildrenCount {
      get { return children_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CompoundOrder GetChildren(int index) {
      return children_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasOrderChain) {
          if (!OrderChain.IsInitialized) return false;
        }
        foreach (global::CmsApiSamples.Protocol.CMSApi.CompoundOrder element in ChildrenList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _compoundOrderFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[2], Id);
      }
      if (hasNodeRole) {
        output.WriteUInt32(2, field_names[3], NodeRole);
      }
      if (hasType) {
        output.WriteUInt32(3, field_names[6], Type);
      }
      if (hasClientGuid) {
        output.WriteString(5, field_names[1], ClientGuid);
      }
      if (hasTriggerType) {
        output.WriteUInt32(6, field_names[5], TriggerType);
      }
      if (hasOrderChain) {
        output.WriteMessage(7, field_names[4], OrderChain);
      }
      if (children_.Count > 0) {
        output.WriteMessageArray(8, field_names[0], children_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      if (hasNodeRole) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, NodeRole);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Type);
      }
      if (hasClientGuid) {
        size += pb::CodedOutputStream.ComputeStringSize(5, ClientGuid);
      }
      if (hasTriggerType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, TriggerType);
      }
      if (hasOrderChain) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, OrderChain);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.CompoundOrder element in ChildrenList) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CompoundOrder ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompoundOrder ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompoundOrder ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CompoundOrder ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CompoundOrder ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompoundOrder ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CompoundOrder ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CompoundOrder ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CompoundOrder ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CompoundOrder ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CompoundOrder MakeReadOnly() {
      children_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CompoundOrder prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CompoundOrder, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CompoundOrder cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CompoundOrder result;
      
      private CompoundOrder PrepareBuilder() {
        if (resultIsReadOnly) {
          CompoundOrder original = result;
          result = new CompoundOrder();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CompoundOrder MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.Descriptor; }
      }
      
      public override CompoundOrder DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.DefaultInstance; }
      }
      
      public override CompoundOrder BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CompoundOrder) {
          return MergeFrom((CompoundOrder) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CompoundOrder other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasNodeRole) {
          NodeRole = other.NodeRole;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasClientGuid) {
          ClientGuid = other.ClientGuid;
        }
        if (other.HasTriggerType) {
          TriggerType = other.TriggerType;
        }
        if (other.HasOrderChain) {
          MergeOrderChain(other.OrderChain);
        }
        if (other.children_.Count != 0) {
          result.children_.Add(other.children_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_compoundOrderFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _compoundOrderFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 16: {
              result.hasNodeRole = input.ReadUInt32(ref result.nodeRole_);
              break;
            }
            case 24: {
              result.hasType = input.ReadUInt32(ref result.type_);
              break;
            }
            case 42: {
              result.hasClientGuid = input.ReadString(ref result.clientGuid_);
              break;
            }
            case 48: {
              result.hasTriggerType = input.ReadUInt32(ref result.triggerType_);
              break;
            }
            case 58: {
              global::CmsApiSamples.Protocol.CMSApi.OrderChain.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.OrderChain.CreateBuilder();
              if (result.hasOrderChain) {
                subBuilder.MergeFrom(OrderChain);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderChain = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              input.ReadMessageArray(tag, field_name, result.children_, global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasNodeRole {
        get { return result.hasNodeRole; }
      }
      [global::System.CLSCompliant(false)]
      public uint NodeRole {
        get { return result.NodeRole; }
        set { SetNodeRole(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetNodeRole(uint value) {
        PrepareBuilder();
        result.hasNodeRole = true;
        result.nodeRole_ = value;
        return this;
      }
      public Builder ClearNodeRole() {
        PrepareBuilder();
        result.hasNodeRole = false;
        result.nodeRole_ = 0;
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      [global::System.CLSCompliant(false)]
      public uint Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetType(uint value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasClientGuid {
        get { return result.hasClientGuid; }
      }
      public string ClientGuid {
        get { return result.ClientGuid; }
        set { SetClientGuid(value); }
      }
      public Builder SetClientGuid(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientGuid = true;
        result.clientGuid_ = value;
        return this;
      }
      public Builder ClearClientGuid() {
        PrepareBuilder();
        result.hasClientGuid = false;
        result.clientGuid_ = "";
        return this;
      }
      
      public bool HasTriggerType {
        get { return result.hasTriggerType; }
      }
      [global::System.CLSCompliant(false)]
      public uint TriggerType {
        get { return result.TriggerType; }
        set { SetTriggerType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTriggerType(uint value) {
        PrepareBuilder();
        result.hasTriggerType = true;
        result.triggerType_ = value;
        return this;
      }
      public Builder ClearTriggerType() {
        PrepareBuilder();
        result.hasTriggerType = false;
        result.triggerType_ = 0;
        return this;
      }
      
      public bool HasOrderChain {
       get { return result.hasOrderChain; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OrderChain OrderChain {
        get { return result.OrderChain; }
        set { SetOrderChain(value); }
      }
      public Builder SetOrderChain(global::CmsApiSamples.Protocol.CMSApi.OrderChain value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderChain = true;
        result.orderChain_ = value;
        return this;
      }
      public Builder SetOrderChain(global::CmsApiSamples.Protocol.CMSApi.OrderChain.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderChain = true;
        result.orderChain_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderChain(global::CmsApiSamples.Protocol.CMSApi.OrderChain value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderChain &&
            result.orderChain_ != global::CmsApiSamples.Protocol.CMSApi.OrderChain.DefaultInstance) {
            result.orderChain_ = global::CmsApiSamples.Protocol.CMSApi.OrderChain.CreateBuilder(result.orderChain_).MergeFrom(value).BuildPartial();
        } else {
          result.orderChain_ = value;
        }
        result.hasOrderChain = true;
        return this;
      }
      public Builder ClearOrderChain() {
        PrepareBuilder();
        result.hasOrderChain = false;
        result.orderChain_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.CompoundOrder> ChildrenList {
        get { return PrepareBuilder().children_; }
      }
      public int ChildrenCount {
        get { return result.ChildrenCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CompoundOrder GetChildren(int index) {
        return result.GetChildren(index);
      }
      public Builder SetChildren(int index, global::CmsApiSamples.Protocol.CMSApi.CompoundOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.children_[index] = value;
        return this;
      }
      public Builder SetChildren(int index, global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.children_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddChildren(global::CmsApiSamples.Protocol.CMSApi.CompoundOrder value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.children_.Add(value);
        return this;
      }
      public Builder AddChildren(global::CmsApiSamples.Protocol.CMSApi.CompoundOrder.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.children_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeChildren(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.CompoundOrder> values) {
        PrepareBuilder();
        result.children_.Add(values);
        return this;
      }
      public Builder ClearChildren() {
        PrepareBuilder();
        result.children_.Clear();
        return this;
      }
    }
    static CompoundOrder() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class StrategyLeg : pb::GeneratedMessage<StrategyLeg, StrategyLeg.Builder> {
    private StrategyLeg() { }
    private static readonly StrategyLeg defaultInstance = new StrategyLeg().MakeReadOnly();
    private static readonly string[] _strategyLegFieldNames = new string[] { "account", "contract_symbol", "leg_path", "legs", "mode", "open_close_type", "price_ratio", "quantity_ratio", "speculation_type", "yield_model" };
    private static readonly uint[] _strategyLegFieldTags = new uint[] { 50, 18, 10, 66, 40, 72, 33, 25, 80, 58 };
    public static StrategyLeg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override StrategyLeg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override StrategyLeg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_StrategyLeg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<StrategyLeg, StrategyLeg.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_StrategyLeg__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum StrategyMode {
        ALL = 1,
        AGGR = 2,
        MUL = 3,
      }
      
    }
    #endregion
    
    public const int LegPathFieldNumber = 1;
    private bool hasLegPath;
    private string legPath_ = "";
    public bool HasLegPath {
      get { return hasLegPath; }
    }
    public string LegPath {
      get { return legPath_; }
    }
    
    public const int ContractSymbolFieldNumber = 2;
    private bool hasContractSymbol;
    private string contractSymbol_ = "";
    public bool HasContractSymbol {
      get { return hasContractSymbol; }
    }
    public string ContractSymbol {
      get { return contractSymbol_; }
    }
    
    public const int QuantityRatioFieldNumber = 3;
    private bool hasQuantityRatio;
    private double quantityRatio_;
    public bool HasQuantityRatio {
      get { return hasQuantityRatio; }
    }
    public double QuantityRatio {
      get { return quantityRatio_; }
    }
    
    public const int PriceRatioFieldNumber = 4;
    private bool hasPriceRatio;
    private double priceRatio_;
    public bool HasPriceRatio {
      get { return hasPriceRatio; }
    }
    public double PriceRatio {
      get { return priceRatio_; }
    }
    
    public const int ModeFieldNumber = 5;
    private bool hasMode;
    private uint mode_;
    public bool HasMode {
      get { return hasMode; }
    }
    [global::System.CLSCompliant(false)]
    public uint Mode {
      get { return mode_; }
    }
    
    public const int AccountFieldNumber = 6;
    private bool hasAccount;
    private global::CmsApiSamples.Protocol.CMSApi.ChainAccount account_;
    public bool HasAccount {
      get { return hasAccount; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.ChainAccount Account {
      get { return account_ ?? global::CmsApiSamples.Protocol.CMSApi.ChainAccount.DefaultInstance; }
    }
    
    public const int YieldModelFieldNumber = 7;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> yieldModel_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Tuple> YieldModelList {
      get { return yieldModel_; }
    }
    public int YieldModelCount {
      get { return yieldModel_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Tuple GetYieldModel(int index) {
      return yieldModel_[index];
    }
    
    public const int LegsFieldNumber = 8;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.StrategyLeg> legs_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.StrategyLeg>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.StrategyLeg> LegsList {
      get { return legs_; }
    }
    public int LegsCount {
      get { return legs_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.StrategyLeg GetLegs(int index) {
      return legs_[index];
    }
    
    public const int OpenCloseTypeFieldNumber = 9;
    private bool hasOpenCloseType;
    private uint openCloseType_;
    public bool HasOpenCloseType {
      get { return hasOpenCloseType; }
    }
    [global::System.CLSCompliant(false)]
    public uint OpenCloseType {
      get { return openCloseType_; }
    }
    
    public const int SpeculationTypeFieldNumber = 10;
    private bool hasSpeculationType;
    private uint speculationType_;
    public bool HasSpeculationType {
      get { return hasSpeculationType; }
    }
    [global::System.CLSCompliant(false)]
    public uint SpeculationType {
      get { return speculationType_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _strategyLegFieldNames;
      if (hasLegPath) {
        output.WriteString(1, field_names[2], LegPath);
      }
      if (hasContractSymbol) {
        output.WriteString(2, field_names[1], ContractSymbol);
      }
      if (hasQuantityRatio) {
        output.WriteDouble(3, field_names[7], QuantityRatio);
      }
      if (hasPriceRatio) {
        output.WriteDouble(4, field_names[6], PriceRatio);
      }
      if (hasMode) {
        output.WriteUInt32(5, field_names[4], Mode);
      }
      if (hasAccount) {
        output.WriteMessage(6, field_names[0], Account);
      }
      if (yieldModel_.Count > 0) {
        output.WriteMessageArray(7, field_names[9], yieldModel_);
      }
      if (legs_.Count > 0) {
        output.WriteMessageArray(8, field_names[3], legs_);
      }
      if (hasOpenCloseType) {
        output.WriteUInt32(9, field_names[5], OpenCloseType);
      }
      if (hasSpeculationType) {
        output.WriteUInt32(10, field_names[8], SpeculationType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLegPath) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LegPath);
      }
      if (hasContractSymbol) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ContractSymbol);
      }
      if (hasQuantityRatio) {
        size += pb::CodedOutputStream.ComputeDoubleSize(3, QuantityRatio);
      }
      if (hasPriceRatio) {
        size += pb::CodedOutputStream.ComputeDoubleSize(4, PriceRatio);
      }
      if (hasMode) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, Mode);
      }
      if (hasAccount) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, Account);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.Tuple element in YieldModelList) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, element);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.StrategyLeg element in LegsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, element);
      }
      if (hasOpenCloseType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(9, OpenCloseType);
      }
      if (hasSpeculationType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(10, SpeculationType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static StrategyLeg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StrategyLeg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StrategyLeg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static StrategyLeg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static StrategyLeg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StrategyLeg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static StrategyLeg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static StrategyLeg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static StrategyLeg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static StrategyLeg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private StrategyLeg MakeReadOnly() {
      yieldModel_.MakeReadOnly();
      legs_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(StrategyLeg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<StrategyLeg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(StrategyLeg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private StrategyLeg result;
      
      private StrategyLeg PrepareBuilder() {
        if (resultIsReadOnly) {
          StrategyLeg original = result;
          result = new StrategyLeg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override StrategyLeg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.StrategyLeg.Descriptor; }
      }
      
      public override StrategyLeg DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.StrategyLeg.DefaultInstance; }
      }
      
      public override StrategyLeg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is StrategyLeg) {
          return MergeFrom((StrategyLeg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(StrategyLeg other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.StrategyLeg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLegPath) {
          LegPath = other.LegPath;
        }
        if (other.HasContractSymbol) {
          ContractSymbol = other.ContractSymbol;
        }
        if (other.HasQuantityRatio) {
          QuantityRatio = other.QuantityRatio;
        }
        if (other.HasPriceRatio) {
          PriceRatio = other.PriceRatio;
        }
        if (other.HasMode) {
          Mode = other.Mode;
        }
        if (other.HasAccount) {
          MergeAccount(other.Account);
        }
        if (other.yieldModel_.Count != 0) {
          result.yieldModel_.Add(other.yieldModel_);
        }
        if (other.legs_.Count != 0) {
          result.legs_.Add(other.legs_);
        }
        if (other.HasOpenCloseType) {
          OpenCloseType = other.OpenCloseType;
        }
        if (other.HasSpeculationType) {
          SpeculationType = other.SpeculationType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_strategyLegFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _strategyLegFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLegPath = input.ReadString(ref result.legPath_);
              break;
            }
            case 18: {
              result.hasContractSymbol = input.ReadString(ref result.contractSymbol_);
              break;
            }
            case 25: {
              result.hasQuantityRatio = input.ReadDouble(ref result.quantityRatio_);
              break;
            }
            case 33: {
              result.hasPriceRatio = input.ReadDouble(ref result.priceRatio_);
              break;
            }
            case 40: {
              result.hasMode = input.ReadUInt32(ref result.mode_);
              break;
            }
            case 50: {
              global::CmsApiSamples.Protocol.CMSApi.ChainAccount.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.ChainAccount.CreateBuilder();
              if (result.hasAccount) {
                subBuilder.MergeFrom(Account);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Account = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              input.ReadMessageArray(tag, field_name, result.yieldModel_, global::CmsApiSamples.Protocol.CMSApi.Tuple.DefaultInstance, extensionRegistry);
              break;
            }
            case 66: {
              input.ReadMessageArray(tag, field_name, result.legs_, global::CmsApiSamples.Protocol.CMSApi.StrategyLeg.DefaultInstance, extensionRegistry);
              break;
            }
            case 72: {
              result.hasOpenCloseType = input.ReadUInt32(ref result.openCloseType_);
              break;
            }
            case 80: {
              result.hasSpeculationType = input.ReadUInt32(ref result.speculationType_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLegPath {
        get { return result.hasLegPath; }
      }
      public string LegPath {
        get { return result.LegPath; }
        set { SetLegPath(value); }
      }
      public Builder SetLegPath(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLegPath = true;
        result.legPath_ = value;
        return this;
      }
      public Builder ClearLegPath() {
        PrepareBuilder();
        result.hasLegPath = false;
        result.legPath_ = "";
        return this;
      }
      
      public bool HasContractSymbol {
        get { return result.hasContractSymbol; }
      }
      public string ContractSymbol {
        get { return result.ContractSymbol; }
        set { SetContractSymbol(value); }
      }
      public Builder SetContractSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContractSymbol = true;
        result.contractSymbol_ = value;
        return this;
      }
      public Builder ClearContractSymbol() {
        PrepareBuilder();
        result.hasContractSymbol = false;
        result.contractSymbol_ = "";
        return this;
      }
      
      public bool HasQuantityRatio {
        get { return result.hasQuantityRatio; }
      }
      public double QuantityRatio {
        get { return result.QuantityRatio; }
        set { SetQuantityRatio(value); }
      }
      public Builder SetQuantityRatio(double value) {
        PrepareBuilder();
        result.hasQuantityRatio = true;
        result.quantityRatio_ = value;
        return this;
      }
      public Builder ClearQuantityRatio() {
        PrepareBuilder();
        result.hasQuantityRatio = false;
        result.quantityRatio_ = 0D;
        return this;
      }
      
      public bool HasPriceRatio {
        get { return result.hasPriceRatio; }
      }
      public double PriceRatio {
        get { return result.PriceRatio; }
        set { SetPriceRatio(value); }
      }
      public Builder SetPriceRatio(double value) {
        PrepareBuilder();
        result.hasPriceRatio = true;
        result.priceRatio_ = value;
        return this;
      }
      public Builder ClearPriceRatio() {
        PrepareBuilder();
        result.hasPriceRatio = false;
        result.priceRatio_ = 0D;
        return this;
      }
      
      public bool HasMode {
        get { return result.hasMode; }
      }
      [global::System.CLSCompliant(false)]
      public uint Mode {
        get { return result.Mode; }
        set { SetMode(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMode(uint value) {
        PrepareBuilder();
        result.hasMode = true;
        result.mode_ = value;
        return this;
      }
      public Builder ClearMode() {
        PrepareBuilder();
        result.hasMode = false;
        result.mode_ = 0;
        return this;
      }
      
      public bool HasAccount {
       get { return result.hasAccount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.ChainAccount Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(global::CmsApiSamples.Protocol.CMSApi.ChainAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder SetAccount(global::CmsApiSamples.Protocol.CMSApi.ChainAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccount(global::CmsApiSamples.Protocol.CMSApi.ChainAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccount &&
            result.account_ != global::CmsApiSamples.Protocol.CMSApi.ChainAccount.DefaultInstance) {
            result.account_ = global::CmsApiSamples.Protocol.CMSApi.ChainAccount.CreateBuilder(result.account_).MergeFrom(value).BuildPartial();
        } else {
          result.account_ = value;
        }
        result.hasAccount = true;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> YieldModelList {
        get { return PrepareBuilder().yieldModel_; }
      }
      public int YieldModelCount {
        get { return result.YieldModelCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Tuple GetYieldModel(int index) {
        return result.GetYieldModel(index);
      }
      public Builder SetYieldModel(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.yieldModel_[index] = value;
        return this;
      }
      public Builder SetYieldModel(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.yieldModel_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddYieldModel(global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.yieldModel_.Add(value);
        return this;
      }
      public Builder AddYieldModel(global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.yieldModel_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeYieldModel(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Tuple> values) {
        PrepareBuilder();
        result.yieldModel_.Add(values);
        return this;
      }
      public Builder ClearYieldModel() {
        PrepareBuilder();
        result.yieldModel_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.StrategyLeg> LegsList {
        get { return PrepareBuilder().legs_; }
      }
      public int LegsCount {
        get { return result.LegsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.StrategyLeg GetLegs(int index) {
        return result.GetLegs(index);
      }
      public Builder SetLegs(int index, global::CmsApiSamples.Protocol.CMSApi.StrategyLeg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.legs_[index] = value;
        return this;
      }
      public Builder SetLegs(int index, global::CmsApiSamples.Protocol.CMSApi.StrategyLeg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.legs_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLegs(global::CmsApiSamples.Protocol.CMSApi.StrategyLeg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.legs_.Add(value);
        return this;
      }
      public Builder AddLegs(global::CmsApiSamples.Protocol.CMSApi.StrategyLeg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.legs_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLegs(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.StrategyLeg> values) {
        PrepareBuilder();
        result.legs_.Add(values);
        return this;
      }
      public Builder ClearLegs() {
        PrepareBuilder();
        result.legs_.Clear();
        return this;
      }
      
      public bool HasOpenCloseType {
        get { return result.hasOpenCloseType; }
      }
      [global::System.CLSCompliant(false)]
      public uint OpenCloseType {
        get { return result.OpenCloseType; }
        set { SetOpenCloseType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOpenCloseType(uint value) {
        PrepareBuilder();
        result.hasOpenCloseType = true;
        result.openCloseType_ = value;
        return this;
      }
      public Builder ClearOpenCloseType() {
        PrepareBuilder();
        result.hasOpenCloseType = false;
        result.openCloseType_ = 0;
        return this;
      }
      
      public bool HasSpeculationType {
        get { return result.hasSpeculationType; }
      }
      [global::System.CLSCompliant(false)]
      public uint SpeculationType {
        get { return result.SpeculationType; }
        set { SetSpeculationType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSpeculationType(uint value) {
        PrepareBuilder();
        result.hasSpeculationType = true;
        result.speculationType_ = value;
        return this;
      }
      public Builder ClearSpeculationType() {
        PrepareBuilder();
        result.hasSpeculationType = false;
        result.speculationType_ = 0;
        return this;
      }
    }
    static StrategyLeg() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Account : pb::GeneratedMessage<Account, Account.Builder> {
    private Account() { }
    private static readonly Account defaultInstance = new Account().MakeReadOnly();
    private static readonly string[] _accountFieldNames = new string[] { "account_cluster_id", "account_type_id", "brokerage_account_number", "brokerage_id", "brokerage_name", "class", "currency", "customer_id", "group_relation_type", "id", "is_collection", "is_master", "name", "removed", "risk_server_instance", "risk_server_instance_id", "sales_series_id", "sales_series_name", "sales_series_number", "sub_class" };
    private static readonly uint[] _accountFieldTags = new uint[] { 138, 90, 26, 106, 50, 64, 114, 74, 160, 8, 168, 152, 18, 144, 82, 130, 98, 42, 34, 120 };
    public static Account DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Account DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Account ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_Account__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Account, Account.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_Account__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Class {
        REGULAR = 1,
        TEMPLATE = 2,
        OMNIBUS = 3,
      }
      
      public enum SubClass {
        SUB_CLASS_REGULAR = 1,
        SUB_CLASS_INTERNAL = 2,
      }
      
    }
    #endregion
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int BrokerageAccountNumberFieldNumber = 3;
    private bool hasBrokerageAccountNumber;
    private string brokerageAccountNumber_ = "";
    public bool HasBrokerageAccountNumber {
      get { return hasBrokerageAccountNumber; }
    }
    public string BrokerageAccountNumber {
      get { return brokerageAccountNumber_; }
    }
    
    public const int SalesSeriesNumberFieldNumber = 4;
    private bool hasSalesSeriesNumber;
    private string salesSeriesNumber_ = "";
    public bool HasSalesSeriesNumber {
      get { return hasSalesSeriesNumber; }
    }
    public string SalesSeriesNumber {
      get { return salesSeriesNumber_; }
    }
    
    public const int SalesSeriesNameFieldNumber = 5;
    private bool hasSalesSeriesName;
    private string salesSeriesName_ = "";
    public bool HasSalesSeriesName {
      get { return hasSalesSeriesName; }
    }
    public string SalesSeriesName {
      get { return salesSeriesName_; }
    }
    
    public const int BrokerageNameFieldNumber = 6;
    private bool hasBrokerageName;
    private string brokerageName_ = "";
    public bool HasBrokerageName {
      get { return hasBrokerageName; }
    }
    public string BrokerageName {
      get { return brokerageName_; }
    }
    
    public const int ClassFieldNumber = 8;
    private bool hasClass;
    private uint class_;
    public bool HasClass {
      get { return hasClass; }
    }
    [global::System.CLSCompliant(false)]
    public uint Class {
      get { return class_; }
    }
    
    public const int CustomerIdFieldNumber = 9;
    private bool hasCustomerId;
    private string customerId_ = "";
    public bool HasCustomerId {
      get { return hasCustomerId; }
    }
    public string CustomerId {
      get { return customerId_; }
    }
    
    public const int RiskServerInstanceFieldNumber = 10;
    private bool hasRiskServerInstance;
    private string riskServerInstance_ = "";
    public bool HasRiskServerInstance {
      get { return hasRiskServerInstance; }
    }
    public string RiskServerInstance {
      get { return riskServerInstance_; }
    }
    
    public const int AccountTypeIdFieldNumber = 11;
    private bool hasAccountTypeId;
    private string accountTypeId_ = "";
    public bool HasAccountTypeId {
      get { return hasAccountTypeId; }
    }
    public string AccountTypeId {
      get { return accountTypeId_; }
    }
    
    public const int SalesSeriesIdFieldNumber = 12;
    private bool hasSalesSeriesId;
    private string salesSeriesId_ = "";
    public bool HasSalesSeriesId {
      get { return hasSalesSeriesId; }
    }
    public string SalesSeriesId {
      get { return salesSeriesId_; }
    }
    
    public const int BrokerageIdFieldNumber = 13;
    private bool hasBrokerageId;
    private string brokerageId_ = "";
    public bool HasBrokerageId {
      get { return hasBrokerageId; }
    }
    public string BrokerageId {
      get { return brokerageId_; }
    }
    
    public const int CurrencyFieldNumber = 14;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int SubClassFieldNumber = 15;
    private bool hasSubClass;
    private uint subClass_;
    public bool HasSubClass {
      get { return hasSubClass; }
    }
    [global::System.CLSCompliant(false)]
    public uint SubClass {
      get { return subClass_; }
    }
    
    public const int RiskServerInstanceIdFieldNumber = 16;
    private bool hasRiskServerInstanceId;
    private string riskServerInstanceId_ = "";
    public bool HasRiskServerInstanceId {
      get { return hasRiskServerInstanceId; }
    }
    public string RiskServerInstanceId {
      get { return riskServerInstanceId_; }
    }
    
    public const int AccountClusterIdFieldNumber = 17;
    private bool hasAccountClusterId;
    private string accountClusterId_ = "";
    public bool HasAccountClusterId {
      get { return hasAccountClusterId; }
    }
    public string AccountClusterId {
      get { return accountClusterId_; }
    }
    
    public const int RemovedFieldNumber = 18;
    private bool hasRemoved;
    private bool removed_;
    public bool HasRemoved {
      get { return hasRemoved; }
    }
    public bool Removed {
      get { return removed_; }
    }
    
    public const int IsMasterFieldNumber = 19;
    private bool hasIsMaster;
    private bool isMaster_;
    public bool HasIsMaster {
      get { return hasIsMaster; }
    }
    public bool IsMaster {
      get { return isMaster_; }
    }
    
    public const int GroupRelationTypeFieldNumber = 20;
    private bool hasGroupRelationType;
    private uint groupRelationType_;
    public bool HasGroupRelationType {
      get { return hasGroupRelationType; }
    }
    [global::System.CLSCompliant(false)]
    public uint GroupRelationType {
      get { return groupRelationType_; }
    }
    
    public const int IsCollectionFieldNumber = 21;
    private bool hasIsCollection;
    private bool isCollection_;
    public bool HasIsCollection {
      get { return hasIsCollection; }
    }
    public bool IsCollection {
      get { return isCollection_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountFieldNames;
      if (hasId) {
        output.WriteSInt32(1, field_names[9], Id);
      }
      if (hasName) {
        output.WriteString(2, field_names[12], Name);
      }
      if (hasBrokerageAccountNumber) {
        output.WriteString(3, field_names[2], BrokerageAccountNumber);
      }
      if (hasSalesSeriesNumber) {
        output.WriteString(4, field_names[18], SalesSeriesNumber);
      }
      if (hasSalesSeriesName) {
        output.WriteString(5, field_names[17], SalesSeriesName);
      }
      if (hasBrokerageName) {
        output.WriteString(6, field_names[4], BrokerageName);
      }
      if (hasClass) {
        output.WriteUInt32(8, field_names[5], Class);
      }
      if (hasCustomerId) {
        output.WriteString(9, field_names[7], CustomerId);
      }
      if (hasRiskServerInstance) {
        output.WriteString(10, field_names[14], RiskServerInstance);
      }
      if (hasAccountTypeId) {
        output.WriteString(11, field_names[1], AccountTypeId);
      }
      if (hasSalesSeriesId) {
        output.WriteString(12, field_names[16], SalesSeriesId);
      }
      if (hasBrokerageId) {
        output.WriteString(13, field_names[3], BrokerageId);
      }
      if (hasCurrency) {
        output.WriteString(14, field_names[6], Currency);
      }
      if (hasSubClass) {
        output.WriteUInt32(15, field_names[19], SubClass);
      }
      if (hasRiskServerInstanceId) {
        output.WriteString(16, field_names[15], RiskServerInstanceId);
      }
      if (hasAccountClusterId) {
        output.WriteString(17, field_names[0], AccountClusterId);
      }
      if (hasRemoved) {
        output.WriteBool(18, field_names[13], Removed);
      }
      if (hasIsMaster) {
        output.WriteBool(19, field_names[11], IsMaster);
      }
      if (hasGroupRelationType) {
        output.WriteUInt32(20, field_names[8], GroupRelationType);
      }
      if (hasIsCollection) {
        output.WriteBool(21, field_names[10], IsCollection);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, Id);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Name);
      }
      if (hasBrokerageAccountNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(3, BrokerageAccountNumber);
      }
      if (hasSalesSeriesNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(4, SalesSeriesNumber);
      }
      if (hasSalesSeriesName) {
        size += pb::CodedOutputStream.ComputeStringSize(5, SalesSeriesName);
      }
      if (hasBrokerageName) {
        size += pb::CodedOutputStream.ComputeStringSize(6, BrokerageName);
      }
      if (hasClass) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, Class);
      }
      if (hasCustomerId) {
        size += pb::CodedOutputStream.ComputeStringSize(9, CustomerId);
      }
      if (hasRiskServerInstance) {
        size += pb::CodedOutputStream.ComputeStringSize(10, RiskServerInstance);
      }
      if (hasAccountTypeId) {
        size += pb::CodedOutputStream.ComputeStringSize(11, AccountTypeId);
      }
      if (hasSalesSeriesId) {
        size += pb::CodedOutputStream.ComputeStringSize(12, SalesSeriesId);
      }
      if (hasBrokerageId) {
        size += pb::CodedOutputStream.ComputeStringSize(13, BrokerageId);
      }
      if (hasCurrency) {
        size += pb::CodedOutputStream.ComputeStringSize(14, Currency);
      }
      if (hasSubClass) {
        size += pb::CodedOutputStream.ComputeUInt32Size(15, SubClass);
      }
      if (hasRiskServerInstanceId) {
        size += pb::CodedOutputStream.ComputeStringSize(16, RiskServerInstanceId);
      }
      if (hasAccountClusterId) {
        size += pb::CodedOutputStream.ComputeStringSize(17, AccountClusterId);
      }
      if (hasRemoved) {
        size += pb::CodedOutputStream.ComputeBoolSize(18, Removed);
      }
      if (hasIsMaster) {
        size += pb::CodedOutputStream.ComputeBoolSize(19, IsMaster);
      }
      if (hasGroupRelationType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(20, GroupRelationType);
      }
      if (hasIsCollection) {
        size += pb::CodedOutputStream.ComputeBoolSize(21, IsCollection);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Account ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Account ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Account ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Account ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Account ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Account ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Account ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Account ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Account ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Account ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Account MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Account prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Account, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Account cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Account result;
      
      private Account PrepareBuilder() {
        if (resultIsReadOnly) {
          Account original = result;
          result = new Account();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Account MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Account.Descriptor; }
      }
      
      public override Account DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Account.DefaultInstance; }
      }
      
      public override Account BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Account) {
          return MergeFrom((Account) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Account other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Account.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasBrokerageAccountNumber) {
          BrokerageAccountNumber = other.BrokerageAccountNumber;
        }
        if (other.HasSalesSeriesNumber) {
          SalesSeriesNumber = other.SalesSeriesNumber;
        }
        if (other.HasSalesSeriesName) {
          SalesSeriesName = other.SalesSeriesName;
        }
        if (other.HasBrokerageName) {
          BrokerageName = other.BrokerageName;
        }
        if (other.HasClass) {
          Class = other.Class;
        }
        if (other.HasCustomerId) {
          CustomerId = other.CustomerId;
        }
        if (other.HasRiskServerInstance) {
          RiskServerInstance = other.RiskServerInstance;
        }
        if (other.HasAccountTypeId) {
          AccountTypeId = other.AccountTypeId;
        }
        if (other.HasSalesSeriesId) {
          SalesSeriesId = other.SalesSeriesId;
        }
        if (other.HasBrokerageId) {
          BrokerageId = other.BrokerageId;
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasSubClass) {
          SubClass = other.SubClass;
        }
        if (other.HasRiskServerInstanceId) {
          RiskServerInstanceId = other.RiskServerInstanceId;
        }
        if (other.HasAccountClusterId) {
          AccountClusterId = other.AccountClusterId;
        }
        if (other.HasRemoved) {
          Removed = other.Removed;
        }
        if (other.HasIsMaster) {
          IsMaster = other.IsMaster;
        }
        if (other.HasGroupRelationType) {
          GroupRelationType = other.GroupRelationType;
        }
        if (other.HasIsCollection) {
          IsCollection = other.IsCollection;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadSInt32(ref result.id_);
              break;
            }
            case 18: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 26: {
              result.hasBrokerageAccountNumber = input.ReadString(ref result.brokerageAccountNumber_);
              break;
            }
            case 34: {
              result.hasSalesSeriesNumber = input.ReadString(ref result.salesSeriesNumber_);
              break;
            }
            case 42: {
              result.hasSalesSeriesName = input.ReadString(ref result.salesSeriesName_);
              break;
            }
            case 50: {
              result.hasBrokerageName = input.ReadString(ref result.brokerageName_);
              break;
            }
            case 64: {
              result.hasClass = input.ReadUInt32(ref result.class_);
              break;
            }
            case 74: {
              result.hasCustomerId = input.ReadString(ref result.customerId_);
              break;
            }
            case 82: {
              result.hasRiskServerInstance = input.ReadString(ref result.riskServerInstance_);
              break;
            }
            case 90: {
              result.hasAccountTypeId = input.ReadString(ref result.accountTypeId_);
              break;
            }
            case 98: {
              result.hasSalesSeriesId = input.ReadString(ref result.salesSeriesId_);
              break;
            }
            case 106: {
              result.hasBrokerageId = input.ReadString(ref result.brokerageId_);
              break;
            }
            case 114: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 120: {
              result.hasSubClass = input.ReadUInt32(ref result.subClass_);
              break;
            }
            case 130: {
              result.hasRiskServerInstanceId = input.ReadString(ref result.riskServerInstanceId_);
              break;
            }
            case 138: {
              result.hasAccountClusterId = input.ReadString(ref result.accountClusterId_);
              break;
            }
            case 144: {
              result.hasRemoved = input.ReadBool(ref result.removed_);
              break;
            }
            case 152: {
              result.hasIsMaster = input.ReadBool(ref result.isMaster_);
              break;
            }
            case 160: {
              result.hasGroupRelationType = input.ReadUInt32(ref result.groupRelationType_);
              break;
            }
            case 168: {
              result.hasIsCollection = input.ReadBool(ref result.isCollection_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasBrokerageAccountNumber {
        get { return result.hasBrokerageAccountNumber; }
      }
      public string BrokerageAccountNumber {
        get { return result.BrokerageAccountNumber; }
        set { SetBrokerageAccountNumber(value); }
      }
      public Builder SetBrokerageAccountNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageAccountNumber = true;
        result.brokerageAccountNumber_ = value;
        return this;
      }
      public Builder ClearBrokerageAccountNumber() {
        PrepareBuilder();
        result.hasBrokerageAccountNumber = false;
        result.brokerageAccountNumber_ = "";
        return this;
      }
      
      public bool HasSalesSeriesNumber {
        get { return result.hasSalesSeriesNumber; }
      }
      public string SalesSeriesNumber {
        get { return result.SalesSeriesNumber; }
        set { SetSalesSeriesNumber(value); }
      }
      public Builder SetSalesSeriesNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesNumber = true;
        result.salesSeriesNumber_ = value;
        return this;
      }
      public Builder ClearSalesSeriesNumber() {
        PrepareBuilder();
        result.hasSalesSeriesNumber = false;
        result.salesSeriesNumber_ = "";
        return this;
      }
      
      public bool HasSalesSeriesName {
        get { return result.hasSalesSeriesName; }
      }
      public string SalesSeriesName {
        get { return result.SalesSeriesName; }
        set { SetSalesSeriesName(value); }
      }
      public Builder SetSalesSeriesName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesName = true;
        result.salesSeriesName_ = value;
        return this;
      }
      public Builder ClearSalesSeriesName() {
        PrepareBuilder();
        result.hasSalesSeriesName = false;
        result.salesSeriesName_ = "";
        return this;
      }
      
      public bool HasBrokerageName {
        get { return result.hasBrokerageName; }
      }
      public string BrokerageName {
        get { return result.BrokerageName; }
        set { SetBrokerageName(value); }
      }
      public Builder SetBrokerageName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageName = true;
        result.brokerageName_ = value;
        return this;
      }
      public Builder ClearBrokerageName() {
        PrepareBuilder();
        result.hasBrokerageName = false;
        result.brokerageName_ = "";
        return this;
      }
      
      public bool HasClass {
        get { return result.hasClass; }
      }
      [global::System.CLSCompliant(false)]
      public uint Class {
        get { return result.Class; }
        set { SetClass(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetClass(uint value) {
        PrepareBuilder();
        result.hasClass = true;
        result.class_ = value;
        return this;
      }
      public Builder ClearClass() {
        PrepareBuilder();
        result.hasClass = false;
        result.class_ = 0;
        return this;
      }
      
      public bool HasCustomerId {
        get { return result.hasCustomerId; }
      }
      public string CustomerId {
        get { return result.CustomerId; }
        set { SetCustomerId(value); }
      }
      public Builder SetCustomerId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomerId = true;
        result.customerId_ = value;
        return this;
      }
      public Builder ClearCustomerId() {
        PrepareBuilder();
        result.hasCustomerId = false;
        result.customerId_ = "";
        return this;
      }
      
      public bool HasRiskServerInstance {
        get { return result.hasRiskServerInstance; }
      }
      public string RiskServerInstance {
        get { return result.RiskServerInstance; }
        set { SetRiskServerInstance(value); }
      }
      public Builder SetRiskServerInstance(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRiskServerInstance = true;
        result.riskServerInstance_ = value;
        return this;
      }
      public Builder ClearRiskServerInstance() {
        PrepareBuilder();
        result.hasRiskServerInstance = false;
        result.riskServerInstance_ = "";
        return this;
      }
      
      public bool HasAccountTypeId {
        get { return result.hasAccountTypeId; }
      }
      public string AccountTypeId {
        get { return result.AccountTypeId; }
        set { SetAccountTypeId(value); }
      }
      public Builder SetAccountTypeId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountTypeId = true;
        result.accountTypeId_ = value;
        return this;
      }
      public Builder ClearAccountTypeId() {
        PrepareBuilder();
        result.hasAccountTypeId = false;
        result.accountTypeId_ = "";
        return this;
      }
      
      public bool HasSalesSeriesId {
        get { return result.hasSalesSeriesId; }
      }
      public string SalesSeriesId {
        get { return result.SalesSeriesId; }
        set { SetSalesSeriesId(value); }
      }
      public Builder SetSalesSeriesId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesId = true;
        result.salesSeriesId_ = value;
        return this;
      }
      public Builder ClearSalesSeriesId() {
        PrepareBuilder();
        result.hasSalesSeriesId = false;
        result.salesSeriesId_ = "";
        return this;
      }
      
      public bool HasBrokerageId {
        get { return result.hasBrokerageId; }
      }
      public string BrokerageId {
        get { return result.BrokerageId; }
        set { SetBrokerageId(value); }
      }
      public Builder SetBrokerageId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageId = true;
        result.brokerageId_ = value;
        return this;
      }
      public Builder ClearBrokerageId() {
        PrepareBuilder();
        result.hasBrokerageId = false;
        result.brokerageId_ = "";
        return this;
      }
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasSubClass {
        get { return result.hasSubClass; }
      }
      [global::System.CLSCompliant(false)]
      public uint SubClass {
        get { return result.SubClass; }
        set { SetSubClass(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSubClass(uint value) {
        PrepareBuilder();
        result.hasSubClass = true;
        result.subClass_ = value;
        return this;
      }
      public Builder ClearSubClass() {
        PrepareBuilder();
        result.hasSubClass = false;
        result.subClass_ = 0;
        return this;
      }
      
      public bool HasRiskServerInstanceId {
        get { return result.hasRiskServerInstanceId; }
      }
      public string RiskServerInstanceId {
        get { return result.RiskServerInstanceId; }
        set { SetRiskServerInstanceId(value); }
      }
      public Builder SetRiskServerInstanceId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRiskServerInstanceId = true;
        result.riskServerInstanceId_ = value;
        return this;
      }
      public Builder ClearRiskServerInstanceId() {
        PrepareBuilder();
        result.hasRiskServerInstanceId = false;
        result.riskServerInstanceId_ = "";
        return this;
      }
      
      public bool HasAccountClusterId {
        get { return result.hasAccountClusterId; }
      }
      public string AccountClusterId {
        get { return result.AccountClusterId; }
        set { SetAccountClusterId(value); }
      }
      public Builder SetAccountClusterId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountClusterId = true;
        result.accountClusterId_ = value;
        return this;
      }
      public Builder ClearAccountClusterId() {
        PrepareBuilder();
        result.hasAccountClusterId = false;
        result.accountClusterId_ = "";
        return this;
      }
      
      public bool HasRemoved {
        get { return result.hasRemoved; }
      }
      public bool Removed {
        get { return result.Removed; }
        set { SetRemoved(value); }
      }
      public Builder SetRemoved(bool value) {
        PrepareBuilder();
        result.hasRemoved = true;
        result.removed_ = value;
        return this;
      }
      public Builder ClearRemoved() {
        PrepareBuilder();
        result.hasRemoved = false;
        result.removed_ = false;
        return this;
      }
      
      public bool HasIsMaster {
        get { return result.hasIsMaster; }
      }
      public bool IsMaster {
        get { return result.IsMaster; }
        set { SetIsMaster(value); }
      }
      public Builder SetIsMaster(bool value) {
        PrepareBuilder();
        result.hasIsMaster = true;
        result.isMaster_ = value;
        return this;
      }
      public Builder ClearIsMaster() {
        PrepareBuilder();
        result.hasIsMaster = false;
        result.isMaster_ = false;
        return this;
      }
      
      public bool HasGroupRelationType {
        get { return result.hasGroupRelationType; }
      }
      [global::System.CLSCompliant(false)]
      public uint GroupRelationType {
        get { return result.GroupRelationType; }
        set { SetGroupRelationType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetGroupRelationType(uint value) {
        PrepareBuilder();
        result.hasGroupRelationType = true;
        result.groupRelationType_ = value;
        return this;
      }
      public Builder ClearGroupRelationType() {
        PrepareBuilder();
        result.hasGroupRelationType = false;
        result.groupRelationType_ = 0;
        return this;
      }
      
      public bool HasIsCollection {
        get { return result.hasIsCollection; }
      }
      public bool IsCollection {
        get { return result.IsCollection; }
        set { SetIsCollection(value); }
      }
      public Builder SetIsCollection(bool value) {
        PrepareBuilder();
        result.hasIsCollection = true;
        result.isCollection_ = value;
        return this;
      }
      public Builder ClearIsCollection() {
        PrepareBuilder();
        result.hasIsCollection = false;
        result.isCollection_ = false;
        return this;
      }
    }
    static Account() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BalanceRecord : pb::GeneratedMessage<BalanceRecord, BalanceRecord.Builder> {
    private BalanceRecord() { }
    private static readonly BalanceRecord defaultInstance = new BalanceRecord().MakeReadOnly();
    private static readonly string[] _balanceRecordFieldNames = new string[] { "account_id", "as_of_date", "balance_record_id", "collateral", "currency", "end_cash_balance", "origin", "regulated" };
    private static readonly uint[] _balanceRecordFieldTags = new uint[] { 8, 48, 16, 41, 26, 33, 56, 64 };
    public static BalanceRecord DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BalanceRecord DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BalanceRecord ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_BalanceRecord__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BalanceRecord, BalanceRecord.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_BalanceRecord__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum BalanceOrigin {
        NA = 1,
        LOCAL = 2,
        OVERSEAS = 3,
      }
      
    }
    #endregion
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int BalanceRecordIdFieldNumber = 2;
    private bool hasBalanceRecordId;
    private int balanceRecordId_;
    public bool HasBalanceRecordId {
      get { return hasBalanceRecordId; }
    }
    public int BalanceRecordId {
      get { return balanceRecordId_; }
    }
    
    public const int CurrencyFieldNumber = 3;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int EndCashBalanceFieldNumber = 4;
    private bool hasEndCashBalance;
    private double endCashBalance_;
    public bool HasEndCashBalance {
      get { return hasEndCashBalance; }
    }
    public double EndCashBalance {
      get { return endCashBalance_; }
    }
    
    public const int CollateralFieldNumber = 5;
    private bool hasCollateral;
    private double collateral_;
    public bool HasCollateral {
      get { return hasCollateral; }
    }
    public double Collateral {
      get { return collateral_; }
    }
    
    public const int AsOfDateFieldNumber = 6;
    private bool hasAsOfDate;
    private long asOfDate_;
    public bool HasAsOfDate {
      get { return hasAsOfDate; }
    }
    public long AsOfDate {
      get { return asOfDate_; }
    }
    
    public const int OriginFieldNumber = 7;
    private bool hasOrigin;
    private uint origin_;
    public bool HasOrigin {
      get { return hasOrigin; }
    }
    [global::System.CLSCompliant(false)]
    public uint Origin {
      get { return origin_; }
    }
    
    public const int RegulatedFieldNumber = 8;
    private bool hasRegulated;
    private bool regulated_;
    public bool HasRegulated {
      get { return hasRegulated; }
    }
    public bool Regulated {
      get { return regulated_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        if (!hasBalanceRecordId) return false;
        if (!hasCurrency) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _balanceRecordFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasBalanceRecordId) {
        output.WriteSInt32(2, field_names[2], BalanceRecordId);
      }
      if (hasCurrency) {
        output.WriteString(3, field_names[4], Currency);
      }
      if (hasEndCashBalance) {
        output.WriteDouble(4, field_names[5], EndCashBalance);
      }
      if (hasCollateral) {
        output.WriteDouble(5, field_names[3], Collateral);
      }
      if (hasAsOfDate) {
        output.WriteSInt64(6, field_names[1], AsOfDate);
      }
      if (hasOrigin) {
        output.WriteUInt32(7, field_names[6], Origin);
      }
      if (hasRegulated) {
        output.WriteBool(8, field_names[7], Regulated);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasBalanceRecordId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(2, BalanceRecordId);
      }
      if (hasCurrency) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Currency);
      }
      if (hasEndCashBalance) {
        size += pb::CodedOutputStream.ComputeDoubleSize(4, EndCashBalance);
      }
      if (hasCollateral) {
        size += pb::CodedOutputStream.ComputeDoubleSize(5, Collateral);
      }
      if (hasAsOfDate) {
        size += pb::CodedOutputStream.ComputeSInt64Size(6, AsOfDate);
      }
      if (hasOrigin) {
        size += pb::CodedOutputStream.ComputeUInt32Size(7, Origin);
      }
      if (hasRegulated) {
        size += pb::CodedOutputStream.ComputeBoolSize(8, Regulated);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BalanceRecord ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BalanceRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BalanceRecord ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BalanceRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BalanceRecord ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BalanceRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BalanceRecord ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BalanceRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BalanceRecord ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BalanceRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BalanceRecord MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BalanceRecord prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BalanceRecord, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BalanceRecord cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BalanceRecord result;
      
      private BalanceRecord PrepareBuilder() {
        if (resultIsReadOnly) {
          BalanceRecord original = result;
          result = new BalanceRecord();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BalanceRecord MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.BalanceRecord.Descriptor; }
      }
      
      public override BalanceRecord DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.BalanceRecord.DefaultInstance; }
      }
      
      public override BalanceRecord BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BalanceRecord) {
          return MergeFrom((BalanceRecord) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BalanceRecord other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.BalanceRecord.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasBalanceRecordId) {
          BalanceRecordId = other.BalanceRecordId;
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasEndCashBalance) {
          EndCashBalance = other.EndCashBalance;
        }
        if (other.HasCollateral) {
          Collateral = other.Collateral;
        }
        if (other.HasAsOfDate) {
          AsOfDate = other.AsOfDate;
        }
        if (other.HasOrigin) {
          Origin = other.Origin;
        }
        if (other.HasRegulated) {
          Regulated = other.Regulated;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_balanceRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _balanceRecordFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 16: {
              result.hasBalanceRecordId = input.ReadSInt32(ref result.balanceRecordId_);
              break;
            }
            case 26: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 33: {
              result.hasEndCashBalance = input.ReadDouble(ref result.endCashBalance_);
              break;
            }
            case 41: {
              result.hasCollateral = input.ReadDouble(ref result.collateral_);
              break;
            }
            case 48: {
              result.hasAsOfDate = input.ReadSInt64(ref result.asOfDate_);
              break;
            }
            case 56: {
              result.hasOrigin = input.ReadUInt32(ref result.origin_);
              break;
            }
            case 64: {
              result.hasRegulated = input.ReadBool(ref result.regulated_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasBalanceRecordId {
        get { return result.hasBalanceRecordId; }
      }
      public int BalanceRecordId {
        get { return result.BalanceRecordId; }
        set { SetBalanceRecordId(value); }
      }
      public Builder SetBalanceRecordId(int value) {
        PrepareBuilder();
        result.hasBalanceRecordId = true;
        result.balanceRecordId_ = value;
        return this;
      }
      public Builder ClearBalanceRecordId() {
        PrepareBuilder();
        result.hasBalanceRecordId = false;
        result.balanceRecordId_ = 0;
        return this;
      }
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasEndCashBalance {
        get { return result.hasEndCashBalance; }
      }
      public double EndCashBalance {
        get { return result.EndCashBalance; }
        set { SetEndCashBalance(value); }
      }
      public Builder SetEndCashBalance(double value) {
        PrepareBuilder();
        result.hasEndCashBalance = true;
        result.endCashBalance_ = value;
        return this;
      }
      public Builder ClearEndCashBalance() {
        PrepareBuilder();
        result.hasEndCashBalance = false;
        result.endCashBalance_ = 0D;
        return this;
      }
      
      public bool HasCollateral {
        get { return result.hasCollateral; }
      }
      public double Collateral {
        get { return result.Collateral; }
        set { SetCollateral(value); }
      }
      public Builder SetCollateral(double value) {
        PrepareBuilder();
        result.hasCollateral = true;
        result.collateral_ = value;
        return this;
      }
      public Builder ClearCollateral() {
        PrepareBuilder();
        result.hasCollateral = false;
        result.collateral_ = 0D;
        return this;
      }
      
      public bool HasAsOfDate {
        get { return result.hasAsOfDate; }
      }
      public long AsOfDate {
        get { return result.AsOfDate; }
        set { SetAsOfDate(value); }
      }
      public Builder SetAsOfDate(long value) {
        PrepareBuilder();
        result.hasAsOfDate = true;
        result.asOfDate_ = value;
        return this;
      }
      public Builder ClearAsOfDate() {
        PrepareBuilder();
        result.hasAsOfDate = false;
        result.asOfDate_ = 0;
        return this;
      }
      
      public bool HasOrigin {
        get { return result.hasOrigin; }
      }
      [global::System.CLSCompliant(false)]
      public uint Origin {
        get { return result.Origin; }
        set { SetOrigin(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOrigin(uint value) {
        PrepareBuilder();
        result.hasOrigin = true;
        result.origin_ = value;
        return this;
      }
      public Builder ClearOrigin() {
        PrepareBuilder();
        result.hasOrigin = false;
        result.origin_ = 0;
        return this;
      }
      
      public bool HasRegulated {
        get { return result.hasRegulated; }
      }
      public bool Regulated {
        get { return result.Regulated; }
        set { SetRegulated(value); }
      }
      public Builder SetRegulated(bool value) {
        PrepareBuilder();
        result.hasRegulated = true;
        result.regulated_ = value;
        return this;
      }
      public Builder ClearRegulated() {
        PrepareBuilder();
        result.hasRegulated = false;
        result.regulated_ = false;
        return this;
      }
    }
    static BalanceRecord() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountSearchResultRecord : pb::GeneratedMessage<AccountSearchResultRecord, AccountSearchResultRecord.Builder> {
    private AccountSearchResultRecord() { }
    private static readonly AccountSearchResultRecord defaultInstance = new AccountSearchResultRecord().MakeReadOnly();
    private static readonly string[] _accountSearchResultRecordFieldNames = new string[] { "account_id", "brokerage_account_number", "brokerage_name", "customer_id", "customer_name", "name", "removed", "sales_series_id", "sales_series_name", "sales_series_number" };
    private static readonly uint[] _accountSearchResultRecordFieldTags = new uint[] { 8, 26, 50, 58, 66, 18, 72, 82, 42, 34 };
    public static AccountSearchResultRecord DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountSearchResultRecord DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountSearchResultRecord ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountSearchResultRecord__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountSearchResultRecord, AccountSearchResultRecord.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountSearchResultRecord__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int BrokerageAccountNumberFieldNumber = 3;
    private bool hasBrokerageAccountNumber;
    private string brokerageAccountNumber_ = "";
    public bool HasBrokerageAccountNumber {
      get { return hasBrokerageAccountNumber; }
    }
    public string BrokerageAccountNumber {
      get { return brokerageAccountNumber_; }
    }
    
    public const int SalesSeriesNumberFieldNumber = 4;
    private bool hasSalesSeriesNumber;
    private string salesSeriesNumber_ = "";
    public bool HasSalesSeriesNumber {
      get { return hasSalesSeriesNumber; }
    }
    public string SalesSeriesNumber {
      get { return salesSeriesNumber_; }
    }
    
    public const int SalesSeriesNameFieldNumber = 5;
    private bool hasSalesSeriesName;
    private string salesSeriesName_ = "";
    public bool HasSalesSeriesName {
      get { return hasSalesSeriesName; }
    }
    public string SalesSeriesName {
      get { return salesSeriesName_; }
    }
    
    public const int BrokerageNameFieldNumber = 6;
    private bool hasBrokerageName;
    private string brokerageName_ = "";
    public bool HasBrokerageName {
      get { return hasBrokerageName; }
    }
    public string BrokerageName {
      get { return brokerageName_; }
    }
    
    public const int CustomerIdFieldNumber = 7;
    private bool hasCustomerId;
    private string customerId_ = "";
    public bool HasCustomerId {
      get { return hasCustomerId; }
    }
    public string CustomerId {
      get { return customerId_; }
    }
    
    public const int CustomerNameFieldNumber = 8;
    private bool hasCustomerName;
    private string customerName_ = "";
    public bool HasCustomerName {
      get { return hasCustomerName; }
    }
    public string CustomerName {
      get { return customerName_; }
    }
    
    public const int RemovedFieldNumber = 9;
    private bool hasRemoved;
    private bool removed_;
    public bool HasRemoved {
      get { return hasRemoved; }
    }
    public bool Removed {
      get { return removed_; }
    }
    
    public const int SalesSeriesIdFieldNumber = 10;
    private bool hasSalesSeriesId;
    private string salesSeriesId_ = "";
    public bool HasSalesSeriesId {
      get { return hasSalesSeriesId; }
    }
    public string SalesSeriesId {
      get { return salesSeriesId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountId) return false;
        if (!hasName) return false;
        if (!hasBrokerageAccountNumber) return false;
        if (!hasSalesSeriesNumber) return false;
        if (!hasSalesSeriesName) return false;
        if (!hasBrokerageName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountSearchResultRecordFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasName) {
        output.WriteString(2, field_names[5], Name);
      }
      if (hasBrokerageAccountNumber) {
        output.WriteString(3, field_names[1], BrokerageAccountNumber);
      }
      if (hasSalesSeriesNumber) {
        output.WriteString(4, field_names[9], SalesSeriesNumber);
      }
      if (hasSalesSeriesName) {
        output.WriteString(5, field_names[8], SalesSeriesName);
      }
      if (hasBrokerageName) {
        output.WriteString(6, field_names[2], BrokerageName);
      }
      if (hasCustomerId) {
        output.WriteString(7, field_names[3], CustomerId);
      }
      if (hasCustomerName) {
        output.WriteString(8, field_names[4], CustomerName);
      }
      if (hasRemoved) {
        output.WriteBool(9, field_names[6], Removed);
      }
      if (hasSalesSeriesId) {
        output.WriteString(10, field_names[7], SalesSeriesId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Name);
      }
      if (hasBrokerageAccountNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(3, BrokerageAccountNumber);
      }
      if (hasSalesSeriesNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(4, SalesSeriesNumber);
      }
      if (hasSalesSeriesName) {
        size += pb::CodedOutputStream.ComputeStringSize(5, SalesSeriesName);
      }
      if (hasBrokerageName) {
        size += pb::CodedOutputStream.ComputeStringSize(6, BrokerageName);
      }
      if (hasCustomerId) {
        size += pb::CodedOutputStream.ComputeStringSize(7, CustomerId);
      }
      if (hasCustomerName) {
        size += pb::CodedOutputStream.ComputeStringSize(8, CustomerName);
      }
      if (hasRemoved) {
        size += pb::CodedOutputStream.ComputeBoolSize(9, Removed);
      }
      if (hasSalesSeriesId) {
        size += pb::CodedOutputStream.ComputeStringSize(10, SalesSeriesId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountSearchResultRecord ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSearchResultRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSearchResultRecord ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSearchResultRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSearchResultRecord ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSearchResultRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountSearchResultRecord ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountSearchResultRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountSearchResultRecord ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSearchResultRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountSearchResultRecord MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountSearchResultRecord prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountSearchResultRecord, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountSearchResultRecord cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountSearchResultRecord result;
      
      private AccountSearchResultRecord PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountSearchResultRecord original = result;
          result = new AccountSearchResultRecord();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountSearchResultRecord MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord.Descriptor; }
      }
      
      public override AccountSearchResultRecord DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord.DefaultInstance; }
      }
      
      public override AccountSearchResultRecord BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountSearchResultRecord) {
          return MergeFrom((AccountSearchResultRecord) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountSearchResultRecord other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountSearchResultRecord.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasBrokerageAccountNumber) {
          BrokerageAccountNumber = other.BrokerageAccountNumber;
        }
        if (other.HasSalesSeriesNumber) {
          SalesSeriesNumber = other.SalesSeriesNumber;
        }
        if (other.HasSalesSeriesName) {
          SalesSeriesName = other.SalesSeriesName;
        }
        if (other.HasBrokerageName) {
          BrokerageName = other.BrokerageName;
        }
        if (other.HasCustomerId) {
          CustomerId = other.CustomerId;
        }
        if (other.HasCustomerName) {
          CustomerName = other.CustomerName;
        }
        if (other.HasRemoved) {
          Removed = other.Removed;
        }
        if (other.HasSalesSeriesId) {
          SalesSeriesId = other.SalesSeriesId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountSearchResultRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountSearchResultRecordFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 26: {
              result.hasBrokerageAccountNumber = input.ReadString(ref result.brokerageAccountNumber_);
              break;
            }
            case 34: {
              result.hasSalesSeriesNumber = input.ReadString(ref result.salesSeriesNumber_);
              break;
            }
            case 42: {
              result.hasSalesSeriesName = input.ReadString(ref result.salesSeriesName_);
              break;
            }
            case 50: {
              result.hasBrokerageName = input.ReadString(ref result.brokerageName_);
              break;
            }
            case 58: {
              result.hasCustomerId = input.ReadString(ref result.customerId_);
              break;
            }
            case 66: {
              result.hasCustomerName = input.ReadString(ref result.customerName_);
              break;
            }
            case 72: {
              result.hasRemoved = input.ReadBool(ref result.removed_);
              break;
            }
            case 82: {
              result.hasSalesSeriesId = input.ReadString(ref result.salesSeriesId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasBrokerageAccountNumber {
        get { return result.hasBrokerageAccountNumber; }
      }
      public string BrokerageAccountNumber {
        get { return result.BrokerageAccountNumber; }
        set { SetBrokerageAccountNumber(value); }
      }
      public Builder SetBrokerageAccountNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageAccountNumber = true;
        result.brokerageAccountNumber_ = value;
        return this;
      }
      public Builder ClearBrokerageAccountNumber() {
        PrepareBuilder();
        result.hasBrokerageAccountNumber = false;
        result.brokerageAccountNumber_ = "";
        return this;
      }
      
      public bool HasSalesSeriesNumber {
        get { return result.hasSalesSeriesNumber; }
      }
      public string SalesSeriesNumber {
        get { return result.SalesSeriesNumber; }
        set { SetSalesSeriesNumber(value); }
      }
      public Builder SetSalesSeriesNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesNumber = true;
        result.salesSeriesNumber_ = value;
        return this;
      }
      public Builder ClearSalesSeriesNumber() {
        PrepareBuilder();
        result.hasSalesSeriesNumber = false;
        result.salesSeriesNumber_ = "";
        return this;
      }
      
      public bool HasSalesSeriesName {
        get { return result.hasSalesSeriesName; }
      }
      public string SalesSeriesName {
        get { return result.SalesSeriesName; }
        set { SetSalesSeriesName(value); }
      }
      public Builder SetSalesSeriesName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesName = true;
        result.salesSeriesName_ = value;
        return this;
      }
      public Builder ClearSalesSeriesName() {
        PrepareBuilder();
        result.hasSalesSeriesName = false;
        result.salesSeriesName_ = "";
        return this;
      }
      
      public bool HasBrokerageName {
        get { return result.hasBrokerageName; }
      }
      public string BrokerageName {
        get { return result.BrokerageName; }
        set { SetBrokerageName(value); }
      }
      public Builder SetBrokerageName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageName = true;
        result.brokerageName_ = value;
        return this;
      }
      public Builder ClearBrokerageName() {
        PrepareBuilder();
        result.hasBrokerageName = false;
        result.brokerageName_ = "";
        return this;
      }
      
      public bool HasCustomerId {
        get { return result.hasCustomerId; }
      }
      public string CustomerId {
        get { return result.CustomerId; }
        set { SetCustomerId(value); }
      }
      public Builder SetCustomerId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomerId = true;
        result.customerId_ = value;
        return this;
      }
      public Builder ClearCustomerId() {
        PrepareBuilder();
        result.hasCustomerId = false;
        result.customerId_ = "";
        return this;
      }
      
      public bool HasCustomerName {
        get { return result.hasCustomerName; }
      }
      public string CustomerName {
        get { return result.CustomerName; }
        set { SetCustomerName(value); }
      }
      public Builder SetCustomerName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomerName = true;
        result.customerName_ = value;
        return this;
      }
      public Builder ClearCustomerName() {
        PrepareBuilder();
        result.hasCustomerName = false;
        result.customerName_ = "";
        return this;
      }
      
      public bool HasRemoved {
        get { return result.hasRemoved; }
      }
      public bool Removed {
        get { return result.Removed; }
        set { SetRemoved(value); }
      }
      public Builder SetRemoved(bool value) {
        PrepareBuilder();
        result.hasRemoved = true;
        result.removed_ = value;
        return this;
      }
      public Builder ClearRemoved() {
        PrepareBuilder();
        result.hasRemoved = false;
        result.removed_ = false;
        return this;
      }
      
      public bool HasSalesSeriesId {
        get { return result.hasSalesSeriesId; }
      }
      public string SalesSeriesId {
        get { return result.SalesSeriesId; }
        set { SetSalesSeriesId(value); }
      }
      public Builder SetSalesSeriesId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesId = true;
        result.salesSeriesId_ = value;
        return this;
      }
      public Builder ClearSalesSeriesId() {
        PrepareBuilder();
        result.hasSalesSeriesId = false;
        result.salesSeriesId_ = "";
        return this;
      }
    }
    static AccountSearchResultRecord() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountRouteRecord : pb::GeneratedMessage<AccountRouteRecord, AccountRouteRecord.Builder> {
    private AccountRouteRecord() { }
    private static readonly AccountRouteRecord defaultInstance = new AccountRouteRecord().MakeReadOnly();
    private static readonly string[] _accountRouteRecordFieldNames = new string[] { "attributes", "is_in_use", "omnibus_account_id", "omnibus_account_name", "priority", "route_code", "route_name" };
    private static readonly uint[] _accountRouteRecordFieldTags = new uint[] { 50, 56, 32, 42, 24, 8, 18 };
    public static AccountRouteRecord DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountRouteRecord DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountRouteRecord ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRouteRecord__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountRouteRecord, AccountRouteRecord.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRouteRecord__FieldAccessorTable; }
    }
    
    public const int RouteCodeFieldNumber = 1;
    private bool hasRouteCode;
    private int routeCode_;
    public bool HasRouteCode {
      get { return hasRouteCode; }
    }
    public int RouteCode {
      get { return routeCode_; }
    }
    
    public const int RouteNameFieldNumber = 2;
    private bool hasRouteName;
    private string routeName_ = "";
    public bool HasRouteName {
      get { return hasRouteName; }
    }
    public string RouteName {
      get { return routeName_; }
    }
    
    public const int PriorityFieldNumber = 3;
    private bool hasPriority;
    private int priority_;
    public bool HasPriority {
      get { return hasPriority; }
    }
    public int Priority {
      get { return priority_; }
    }
    
    public const int OmnibusAccountIdFieldNumber = 4;
    private bool hasOmnibusAccountId;
    private int omnibusAccountId_;
    public bool HasOmnibusAccountId {
      get { return hasOmnibusAccountId; }
    }
    public int OmnibusAccountId {
      get { return omnibusAccountId_; }
    }
    
    public const int OmnibusAccountNameFieldNumber = 5;
    private bool hasOmnibusAccountName;
    private string omnibusAccountName_ = "";
    public bool HasOmnibusAccountName {
      get { return hasOmnibusAccountName; }
    }
    public string OmnibusAccountName {
      get { return omnibusAccountName_; }
    }
    
    public const int AttributesFieldNumber = 6;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute> attributes_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute> AttributesList {
      get { return attributes_; }
    }
    public int AttributesCount {
      get { return attributes_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute GetAttributes(int index) {
      return attributes_[index];
    }
    
    public const int IsInUseFieldNumber = 7;
    private bool hasIsInUse;
    private bool isInUse_;
    public bool HasIsInUse {
      get { return hasIsInUse; }
    }
    public bool IsInUse {
      get { return isInUse_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute element in AttributesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountRouteRecordFieldNames;
      if (hasRouteCode) {
        output.WriteSInt32(1, field_names[5], RouteCode);
      }
      if (hasRouteName) {
        output.WriteString(2, field_names[6], RouteName);
      }
      if (hasPriority) {
        output.WriteSInt32(3, field_names[4], Priority);
      }
      if (hasOmnibusAccountId) {
        output.WriteSInt32(4, field_names[2], OmnibusAccountId);
      }
      if (hasOmnibusAccountName) {
        output.WriteString(5, field_names[3], OmnibusAccountName);
      }
      if (attributes_.Count > 0) {
        output.WriteMessageArray(6, field_names[0], attributes_);
      }
      if (hasIsInUse) {
        output.WriteBool(7, field_names[1], IsInUse);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRouteCode) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, RouteCode);
      }
      if (hasRouteName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, RouteName);
      }
      if (hasPriority) {
        size += pb::CodedOutputStream.ComputeSInt32Size(3, Priority);
      }
      if (hasOmnibusAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(4, OmnibusAccountId);
      }
      if (hasOmnibusAccountName) {
        size += pb::CodedOutputStream.ComputeStringSize(5, OmnibusAccountName);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute element in AttributesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, element);
      }
      if (hasIsInUse) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, IsInUse);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountRouteRecord ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRouteRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRouteRecord ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRouteRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRouteRecord ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRouteRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountRouteRecord ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountRouteRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountRouteRecord ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRouteRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountRouteRecord MakeReadOnly() {
      attributes_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountRouteRecord prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountRouteRecord, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountRouteRecord cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountRouteRecord result;
      
      private AccountRouteRecord PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountRouteRecord original = result;
          result = new AccountRouteRecord();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountRouteRecord MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord.Descriptor; }
      }
      
      public override AccountRouteRecord DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord.DefaultInstance; }
      }
      
      public override AccountRouteRecord BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountRouteRecord) {
          return MergeFrom((AccountRouteRecord) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountRouteRecord other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountRouteRecord.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRouteCode) {
          RouteCode = other.RouteCode;
        }
        if (other.HasRouteName) {
          RouteName = other.RouteName;
        }
        if (other.HasPriority) {
          Priority = other.Priority;
        }
        if (other.HasOmnibusAccountId) {
          OmnibusAccountId = other.OmnibusAccountId;
        }
        if (other.HasOmnibusAccountName) {
          OmnibusAccountName = other.OmnibusAccountName;
        }
        if (other.attributes_.Count != 0) {
          result.attributes_.Add(other.attributes_);
        }
        if (other.HasIsInUse) {
          IsInUse = other.IsInUse;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountRouteRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountRouteRecordFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRouteCode = input.ReadSInt32(ref result.routeCode_);
              break;
            }
            case 18: {
              result.hasRouteName = input.ReadString(ref result.routeName_);
              break;
            }
            case 24: {
              result.hasPriority = input.ReadSInt32(ref result.priority_);
              break;
            }
            case 32: {
              result.hasOmnibusAccountId = input.ReadSInt32(ref result.omnibusAccountId_);
              break;
            }
            case 42: {
              result.hasOmnibusAccountName = input.ReadString(ref result.omnibusAccountName_);
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.attributes_, global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 56: {
              result.hasIsInUse = input.ReadBool(ref result.isInUse_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRouteCode {
        get { return result.hasRouteCode; }
      }
      public int RouteCode {
        get { return result.RouteCode; }
        set { SetRouteCode(value); }
      }
      public Builder SetRouteCode(int value) {
        PrepareBuilder();
        result.hasRouteCode = true;
        result.routeCode_ = value;
        return this;
      }
      public Builder ClearRouteCode() {
        PrepareBuilder();
        result.hasRouteCode = false;
        result.routeCode_ = 0;
        return this;
      }
      
      public bool HasRouteName {
        get { return result.hasRouteName; }
      }
      public string RouteName {
        get { return result.RouteName; }
        set { SetRouteName(value); }
      }
      public Builder SetRouteName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRouteName = true;
        result.routeName_ = value;
        return this;
      }
      public Builder ClearRouteName() {
        PrepareBuilder();
        result.hasRouteName = false;
        result.routeName_ = "";
        return this;
      }
      
      public bool HasPriority {
        get { return result.hasPriority; }
      }
      public int Priority {
        get { return result.Priority; }
        set { SetPriority(value); }
      }
      public Builder SetPriority(int value) {
        PrepareBuilder();
        result.hasPriority = true;
        result.priority_ = value;
        return this;
      }
      public Builder ClearPriority() {
        PrepareBuilder();
        result.hasPriority = false;
        result.priority_ = 0;
        return this;
      }
      
      public bool HasOmnibusAccountId {
        get { return result.hasOmnibusAccountId; }
      }
      public int OmnibusAccountId {
        get { return result.OmnibusAccountId; }
        set { SetOmnibusAccountId(value); }
      }
      public Builder SetOmnibusAccountId(int value) {
        PrepareBuilder();
        result.hasOmnibusAccountId = true;
        result.omnibusAccountId_ = value;
        return this;
      }
      public Builder ClearOmnibusAccountId() {
        PrepareBuilder();
        result.hasOmnibusAccountId = false;
        result.omnibusAccountId_ = 0;
        return this;
      }
      
      public bool HasOmnibusAccountName {
        get { return result.hasOmnibusAccountName; }
      }
      public string OmnibusAccountName {
        get { return result.OmnibusAccountName; }
        set { SetOmnibusAccountName(value); }
      }
      public Builder SetOmnibusAccountName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOmnibusAccountName = true;
        result.omnibusAccountName_ = value;
        return this;
      }
      public Builder ClearOmnibusAccountName() {
        PrepareBuilder();
        result.hasOmnibusAccountName = false;
        result.omnibusAccountName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute> AttributesList {
        get { return PrepareBuilder().attributes_; }
      }
      public int AttributesCount {
        get { return result.AttributesCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute GetAttributes(int index) {
        return result.GetAttributes(index);
      }
      public Builder SetAttributes(int index, global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributes_[index] = value;
        return this;
      }
      public Builder SetAttributes(int index, global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttributes(global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributes_.Add(value);
        return this;
      }
      public Builder AddAttributes(global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttributes(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute> values) {
        PrepareBuilder();
        result.attributes_.Add(values);
        return this;
      }
      public Builder ClearAttributes() {
        PrepareBuilder();
        result.attributes_.Clear();
        return this;
      }
      
      public bool HasIsInUse {
        get { return result.hasIsInUse; }
      }
      public bool IsInUse {
        get { return result.IsInUse; }
        set { SetIsInUse(value); }
      }
      public Builder SetIsInUse(bool value) {
        PrepareBuilder();
        result.hasIsInUse = true;
        result.isInUse_ = value;
        return this;
      }
      public Builder ClearIsInUse() {
        PrepareBuilder();
        result.hasIsInUse = false;
        result.isInUse_ = false;
        return this;
      }
    }
    static AccountRouteRecord() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountRouteAttribute : pb::GeneratedMessage<AccountRouteAttribute, AccountRouteAttribute.Builder> {
    private AccountRouteAttribute() { }
    private static readonly AccountRouteAttribute defaultInstance = new AccountRouteAttribute().MakeReadOnly();
    private static readonly string[] _accountRouteAttributeFieldNames = new string[] { "Name", "Value", "id" };
    private static readonly uint[] _accountRouteAttributeFieldTags = new uint[] { 10, 18, 26 };
    public static AccountRouteAttribute DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountRouteAttribute DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountRouteAttribute ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRouteAttribute__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountRouteAttribute, AccountRouteAttribute.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRouteAttribute__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private string value_ = "";
    public bool HasValue {
      get { return hasValue; }
    }
    public string Value {
      get { return value_; }
    }
    
    public const int IdFieldNumber = 3;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountRouteAttributeFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasValue) {
        output.WriteString(2, field_names[1], Value);
      }
      if (hasId) {
        output.WriteString(3, field_names[2], Id);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Value);
      }
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Id);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountRouteAttribute ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRouteAttribute ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRouteAttribute ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRouteAttribute ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRouteAttribute ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRouteAttribute ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountRouteAttribute ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountRouteAttribute ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountRouteAttribute ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRouteAttribute ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountRouteAttribute MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountRouteAttribute prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountRouteAttribute, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountRouteAttribute cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountRouteAttribute result;
      
      private AccountRouteAttribute PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountRouteAttribute original = result;
          result = new AccountRouteAttribute();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountRouteAttribute MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute.Descriptor; }
      }
      
      public override AccountRouteAttribute DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute.DefaultInstance; }
      }
      
      public override AccountRouteAttribute BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountRouteAttribute) {
          return MergeFrom((AccountRouteAttribute) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountRouteAttribute other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountRouteAttributeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountRouteAttributeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 18: {
              result.hasValue = input.ReadString(ref result.value_);
              break;
            }
            case 26: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public string Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = "";
        return this;
      }
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
    }
    static AccountRouteAttribute() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountUserLink : pb::GeneratedMessage<AccountUserLink, AccountUserLink.Builder> {
    private AccountUserLink() { }
    private static readonly AccountUserLink defaultInstance = new AccountUserLink().MakeReadOnly();
    private static readonly string[] _accountUserLinkFieldNames = new string[] { "account_id", "account_name", "allow_external_accounts", "brokerage_account_number", "brokerage_name", "is_force_care", "is_view_only", "user_id", "user_name" };
    private static readonly uint[] _accountUserLinkFieldTags = new uint[] { 8, 50, 72, 58, 66, 32, 24, 18, 42 };
    public static AccountUserLink DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountUserLink DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountUserLink ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountUserLink__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountUserLink, AccountUserLink.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountUserLink__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int UserIdFieldNumber = 2;
    private bool hasUserId;
    private string userId_ = "";
    public bool HasUserId {
      get { return hasUserId; }
    }
    public string UserId {
      get { return userId_; }
    }
    
    public const int IsViewOnlyFieldNumber = 3;
    private bool hasIsViewOnly;
    private bool isViewOnly_;
    public bool HasIsViewOnly {
      get { return hasIsViewOnly; }
    }
    public bool IsViewOnly {
      get { return isViewOnly_; }
    }
    
    public const int IsForceCareFieldNumber = 4;
    private bool hasIsForceCare;
    private bool isForceCare_;
    public bool HasIsForceCare {
      get { return hasIsForceCare; }
    }
    public bool IsForceCare {
      get { return isForceCare_; }
    }
    
    public const int UserNameFieldNumber = 5;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int AccountNameFieldNumber = 6;
    private bool hasAccountName;
    private string accountName_ = "";
    public bool HasAccountName {
      get { return hasAccountName; }
    }
    public string AccountName {
      get { return accountName_; }
    }
    
    public const int BrokerageAccountNumberFieldNumber = 7;
    private bool hasBrokerageAccountNumber;
    private string brokerageAccountNumber_ = "";
    public bool HasBrokerageAccountNumber {
      get { return hasBrokerageAccountNumber; }
    }
    public string BrokerageAccountNumber {
      get { return brokerageAccountNumber_; }
    }
    
    public const int BrokerageNameFieldNumber = 8;
    private bool hasBrokerageName;
    private string brokerageName_ = "";
    public bool HasBrokerageName {
      get { return hasBrokerageName; }
    }
    public string BrokerageName {
      get { return brokerageName_; }
    }
    
    public const int AllowExternalAccountsFieldNumber = 9;
    private bool hasAllowExternalAccounts;
    private bool allowExternalAccounts_;
    public bool HasAllowExternalAccounts {
      get { return hasAllowExternalAccounts; }
    }
    public bool AllowExternalAccounts {
      get { return allowExternalAccounts_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountUserLinkFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasUserId) {
        output.WriteString(2, field_names[7], UserId);
      }
      if (hasIsViewOnly) {
        output.WriteBool(3, field_names[6], IsViewOnly);
      }
      if (hasIsForceCare) {
        output.WriteBool(4, field_names[5], IsForceCare);
      }
      if (hasUserName) {
        output.WriteString(5, field_names[8], UserName);
      }
      if (hasAccountName) {
        output.WriteString(6, field_names[1], AccountName);
      }
      if (hasBrokerageAccountNumber) {
        output.WriteString(7, field_names[3], BrokerageAccountNumber);
      }
      if (hasBrokerageName) {
        output.WriteString(8, field_names[4], BrokerageName);
      }
      if (hasAllowExternalAccounts) {
        output.WriteBool(9, field_names[2], AllowExternalAccounts);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, UserId);
      }
      if (hasIsViewOnly) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, IsViewOnly);
      }
      if (hasIsForceCare) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, IsForceCare);
      }
      if (hasUserName) {
        size += pb::CodedOutputStream.ComputeStringSize(5, UserName);
      }
      if (hasAccountName) {
        size += pb::CodedOutputStream.ComputeStringSize(6, AccountName);
      }
      if (hasBrokerageAccountNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(7, BrokerageAccountNumber);
      }
      if (hasBrokerageName) {
        size += pb::CodedOutputStream.ComputeStringSize(8, BrokerageName);
      }
      if (hasAllowExternalAccounts) {
        size += pb::CodedOutputStream.ComputeBoolSize(9, AllowExternalAccounts);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountUserLink ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountUserLink ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountUserLink ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountUserLink ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountUserLink ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountUserLink ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountUserLink ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountUserLink ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountUserLink ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountUserLink ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountUserLink MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountUserLink prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountUserLink, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountUserLink cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountUserLink result;
      
      private AccountUserLink PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountUserLink original = result;
          result = new AccountUserLink();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountUserLink MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountUserLink.Descriptor; }
      }
      
      public override AccountUserLink DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountUserLink.DefaultInstance; }
      }
      
      public override AccountUserLink BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountUserLink) {
          return MergeFrom((AccountUserLink) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountUserLink other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountUserLink.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasIsViewOnly) {
          IsViewOnly = other.IsViewOnly;
        }
        if (other.HasIsForceCare) {
          IsForceCare = other.IsForceCare;
        }
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasAccountName) {
          AccountName = other.AccountName;
        }
        if (other.HasBrokerageAccountNumber) {
          BrokerageAccountNumber = other.BrokerageAccountNumber;
        }
        if (other.HasBrokerageName) {
          BrokerageName = other.BrokerageName;
        }
        if (other.HasAllowExternalAccounts) {
          AllowExternalAccounts = other.AllowExternalAccounts;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountUserLinkFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountUserLinkFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasUserId = input.ReadString(ref result.userId_);
              break;
            }
            case 24: {
              result.hasIsViewOnly = input.ReadBool(ref result.isViewOnly_);
              break;
            }
            case 32: {
              result.hasIsForceCare = input.ReadBool(ref result.isForceCare_);
              break;
            }
            case 42: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 50: {
              result.hasAccountName = input.ReadString(ref result.accountName_);
              break;
            }
            case 58: {
              result.hasBrokerageAccountNumber = input.ReadString(ref result.brokerageAccountNumber_);
              break;
            }
            case 66: {
              result.hasBrokerageName = input.ReadString(ref result.brokerageName_);
              break;
            }
            case 72: {
              result.hasAllowExternalAccounts = input.ReadBool(ref result.allowExternalAccounts_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public string UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = "";
        return this;
      }
      
      public bool HasIsViewOnly {
        get { return result.hasIsViewOnly; }
      }
      public bool IsViewOnly {
        get { return result.IsViewOnly; }
        set { SetIsViewOnly(value); }
      }
      public Builder SetIsViewOnly(bool value) {
        PrepareBuilder();
        result.hasIsViewOnly = true;
        result.isViewOnly_ = value;
        return this;
      }
      public Builder ClearIsViewOnly() {
        PrepareBuilder();
        result.hasIsViewOnly = false;
        result.isViewOnly_ = false;
        return this;
      }
      
      public bool HasIsForceCare {
        get { return result.hasIsForceCare; }
      }
      public bool IsForceCare {
        get { return result.IsForceCare; }
        set { SetIsForceCare(value); }
      }
      public Builder SetIsForceCare(bool value) {
        PrepareBuilder();
        result.hasIsForceCare = true;
        result.isForceCare_ = value;
        return this;
      }
      public Builder ClearIsForceCare() {
        PrepareBuilder();
        result.hasIsForceCare = false;
        result.isForceCare_ = false;
        return this;
      }
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasAccountName {
        get { return result.hasAccountName; }
      }
      public string AccountName {
        get { return result.AccountName; }
        set { SetAccountName(value); }
      }
      public Builder SetAccountName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountName = true;
        result.accountName_ = value;
        return this;
      }
      public Builder ClearAccountName() {
        PrepareBuilder();
        result.hasAccountName = false;
        result.accountName_ = "";
        return this;
      }
      
      public bool HasBrokerageAccountNumber {
        get { return result.hasBrokerageAccountNumber; }
      }
      public string BrokerageAccountNumber {
        get { return result.BrokerageAccountNumber; }
        set { SetBrokerageAccountNumber(value); }
      }
      public Builder SetBrokerageAccountNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageAccountNumber = true;
        result.brokerageAccountNumber_ = value;
        return this;
      }
      public Builder ClearBrokerageAccountNumber() {
        PrepareBuilder();
        result.hasBrokerageAccountNumber = false;
        result.brokerageAccountNumber_ = "";
        return this;
      }
      
      public bool HasBrokerageName {
        get { return result.hasBrokerageName; }
      }
      public string BrokerageName {
        get { return result.BrokerageName; }
        set { SetBrokerageName(value); }
      }
      public Builder SetBrokerageName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageName = true;
        result.brokerageName_ = value;
        return this;
      }
      public Builder ClearBrokerageName() {
        PrepareBuilder();
        result.hasBrokerageName = false;
        result.brokerageName_ = "";
        return this;
      }
      
      public bool HasAllowExternalAccounts {
        get { return result.hasAllowExternalAccounts; }
      }
      public bool AllowExternalAccounts {
        get { return result.AllowExternalAccounts; }
        set { SetAllowExternalAccounts(value); }
      }
      public Builder SetAllowExternalAccounts(bool value) {
        PrepareBuilder();
        result.hasAllowExternalAccounts = true;
        result.allowExternalAccounts_ = value;
        return this;
      }
      public Builder ClearAllowExternalAccounts() {
        PrepareBuilder();
        result.hasAllowExternalAccounts = false;
        result.allowExternalAccounts_ = false;
        return this;
      }
    }
    static AccountUserLink() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountSettings : pb::GeneratedMessage<AccountSettings, AccountSettings.Builder> {
    private AccountSettings() { }
    private static readonly AccountSettings defaultInstance = new AccountSettings().MakeReadOnly();
    private static readonly string[] _accountSettingsFieldNames = new string[] { "account_id", "block_size", "externally_provided_execution", "giveup_brokerage_id", "giveup_brokerage_name", "is_block", "is_giveup", "is_instruct", "liquidation_orders_outside_trading_time", "modes_account_groups", "reconciliation", "statement_option", "trading_time_from", "trading_time_to", "trading_time_zone", "zero_balance" };
    private static readonly uint[] _accountSettingsFieldTags = new uint[] { 8, 24, 120, 74, 42, 16, 32, 112, 104, 130, 64, 48, 82, 90, 98, 56 };
    public static AccountSettings DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountSettings DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountSettings ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountSettings__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountSettings, AccountSettings.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountSettings__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum StatementOption {
        GENERATE = 1,
        BROKERAGE = 2,
        RESET = 3,
      }
      
    }
    #endregion
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int IsBlockFieldNumber = 2;
    private bool hasIsBlock;
    private bool isBlock_;
    public bool HasIsBlock {
      get { return hasIsBlock; }
    }
    public bool IsBlock {
      get { return isBlock_; }
    }
    
    public const int BlockSizeFieldNumber = 3;
    private bool hasBlockSize;
    private int blockSize_;
    public bool HasBlockSize {
      get { return hasBlockSize; }
    }
    public int BlockSize {
      get { return blockSize_; }
    }
    
    public const int IsGiveupFieldNumber = 4;
    private bool hasIsGiveup;
    private bool isGiveup_;
    public bool HasIsGiveup {
      get { return hasIsGiveup; }
    }
    public bool IsGiveup {
      get { return isGiveup_; }
    }
    
    public const int GiveupBrokerageNameFieldNumber = 5;
    private bool hasGiveupBrokerageName;
    private string giveupBrokerageName_ = "";
    public bool HasGiveupBrokerageName {
      get { return hasGiveupBrokerageName; }
    }
    public string GiveupBrokerageName {
      get { return giveupBrokerageName_; }
    }
    
    public const int StatementOptionFieldNumber = 6;
    private bool hasStatementOption;
    private uint statementOption_;
    public bool HasStatementOption {
      get { return hasStatementOption; }
    }
    [global::System.CLSCompliant(false)]
    public uint StatementOption {
      get { return statementOption_; }
    }
    
    public const int ZeroBalanceFieldNumber = 7;
    private bool hasZeroBalance;
    private bool zeroBalance_;
    public bool HasZeroBalance {
      get { return hasZeroBalance; }
    }
    public bool ZeroBalance {
      get { return zeroBalance_; }
    }
    
    public const int ReconciliationFieldNumber = 8;
    private bool hasReconciliation;
    private bool reconciliation_;
    public bool HasReconciliation {
      get { return hasReconciliation; }
    }
    public bool Reconciliation {
      get { return reconciliation_; }
    }
    
    public const int GiveupBrokerageIdFieldNumber = 9;
    private bool hasGiveupBrokerageId;
    private string giveupBrokerageId_ = "";
    public bool HasGiveupBrokerageId {
      get { return hasGiveupBrokerageId; }
    }
    public string GiveupBrokerageId {
      get { return giveupBrokerageId_; }
    }
    
    public const int TradingTimeFromFieldNumber = 10;
    private bool hasTradingTimeFrom;
    private string tradingTimeFrom_ = "";
    public bool HasTradingTimeFrom {
      get { return hasTradingTimeFrom; }
    }
    public string TradingTimeFrom {
      get { return tradingTimeFrom_; }
    }
    
    public const int TradingTimeToFieldNumber = 11;
    private bool hasTradingTimeTo;
    private string tradingTimeTo_ = "";
    public bool HasTradingTimeTo {
      get { return hasTradingTimeTo; }
    }
    public string TradingTimeTo {
      get { return tradingTimeTo_; }
    }
    
    public const int TradingTimeZoneFieldNumber = 12;
    private bool hasTradingTimeZone;
    private string tradingTimeZone_ = "";
    public bool HasTradingTimeZone {
      get { return hasTradingTimeZone; }
    }
    public string TradingTimeZone {
      get { return tradingTimeZone_; }
    }
    
    public const int LiquidationOrdersOutsideTradingTimeFieldNumber = 13;
    private bool hasLiquidationOrdersOutsideTradingTime;
    private bool liquidationOrdersOutsideTradingTime_;
    public bool HasLiquidationOrdersOutsideTradingTime {
      get { return hasLiquidationOrdersOutsideTradingTime; }
    }
    public bool LiquidationOrdersOutsideTradingTime {
      get { return liquidationOrdersOutsideTradingTime_; }
    }
    
    public const int IsInstructFieldNumber = 14;
    private bool hasIsInstruct;
    private bool isInstruct_;
    public bool HasIsInstruct {
      get { return hasIsInstruct; }
    }
    public bool IsInstruct {
      get { return isInstruct_; }
    }
    
    public const int ExternallyProvidedExecutionFieldNumber = 15;
    private bool hasExternallyProvidedExecution;
    private bool externallyProvidedExecution_;
    public bool HasExternallyProvidedExecution {
      get { return hasExternallyProvidedExecution; }
    }
    public bool ExternallyProvidedExecution {
      get { return externallyProvidedExecution_; }
    }
    
    public const int ModesAccountGroupsFieldNumber = 16;
    private pbc::PopsicleList<string> modesAccountGroups_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ModesAccountGroupsList {
      get { return pbc::Lists.AsReadOnly(modesAccountGroups_); }
    }
    public int ModesAccountGroupsCount {
      get { return modesAccountGroups_.Count; }
    }
    public string GetModesAccountGroups(int index) {
      return modesAccountGroups_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountSettingsFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasIsBlock) {
        output.WriteBool(2, field_names[5], IsBlock);
      }
      if (hasBlockSize) {
        output.WriteSInt32(3, field_names[1], BlockSize);
      }
      if (hasIsGiveup) {
        output.WriteBool(4, field_names[6], IsGiveup);
      }
      if (hasGiveupBrokerageName) {
        output.WriteString(5, field_names[4], GiveupBrokerageName);
      }
      if (hasStatementOption) {
        output.WriteUInt32(6, field_names[11], StatementOption);
      }
      if (hasZeroBalance) {
        output.WriteBool(7, field_names[15], ZeroBalance);
      }
      if (hasReconciliation) {
        output.WriteBool(8, field_names[10], Reconciliation);
      }
      if (hasGiveupBrokerageId) {
        output.WriteString(9, field_names[3], GiveupBrokerageId);
      }
      if (hasTradingTimeFrom) {
        output.WriteString(10, field_names[12], TradingTimeFrom);
      }
      if (hasTradingTimeTo) {
        output.WriteString(11, field_names[13], TradingTimeTo);
      }
      if (hasTradingTimeZone) {
        output.WriteString(12, field_names[14], TradingTimeZone);
      }
      if (hasLiquidationOrdersOutsideTradingTime) {
        output.WriteBool(13, field_names[8], LiquidationOrdersOutsideTradingTime);
      }
      if (hasIsInstruct) {
        output.WriteBool(14, field_names[7], IsInstruct);
      }
      if (hasExternallyProvidedExecution) {
        output.WriteBool(15, field_names[2], ExternallyProvidedExecution);
      }
      if (modesAccountGroups_.Count > 0) {
        output.WriteStringArray(16, field_names[9], modesAccountGroups_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasIsBlock) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsBlock);
      }
      if (hasBlockSize) {
        size += pb::CodedOutputStream.ComputeSInt32Size(3, BlockSize);
      }
      if (hasIsGiveup) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, IsGiveup);
      }
      if (hasGiveupBrokerageName) {
        size += pb::CodedOutputStream.ComputeStringSize(5, GiveupBrokerageName);
      }
      if (hasStatementOption) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, StatementOption);
      }
      if (hasZeroBalance) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, ZeroBalance);
      }
      if (hasReconciliation) {
        size += pb::CodedOutputStream.ComputeBoolSize(8, Reconciliation);
      }
      if (hasGiveupBrokerageId) {
        size += pb::CodedOutputStream.ComputeStringSize(9, GiveupBrokerageId);
      }
      if (hasTradingTimeFrom) {
        size += pb::CodedOutputStream.ComputeStringSize(10, TradingTimeFrom);
      }
      if (hasTradingTimeTo) {
        size += pb::CodedOutputStream.ComputeStringSize(11, TradingTimeTo);
      }
      if (hasTradingTimeZone) {
        size += pb::CodedOutputStream.ComputeStringSize(12, TradingTimeZone);
      }
      if (hasLiquidationOrdersOutsideTradingTime) {
        size += pb::CodedOutputStream.ComputeBoolSize(13, LiquidationOrdersOutsideTradingTime);
      }
      if (hasIsInstruct) {
        size += pb::CodedOutputStream.ComputeBoolSize(14, IsInstruct);
      }
      if (hasExternallyProvidedExecution) {
        size += pb::CodedOutputStream.ComputeBoolSize(15, ExternallyProvidedExecution);
      }
      {
        int dataSize = 0;
        foreach (string element in ModesAccountGroupsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 2 * modesAccountGroups_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountSettings ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSettings ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSettings ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSettings ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSettings ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSettings ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountSettings ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountSettings ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountSettings ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSettings ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountSettings MakeReadOnly() {
      modesAccountGroups_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountSettings prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountSettings, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountSettings cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountSettings result;
      
      private AccountSettings PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountSettings original = result;
          result = new AccountSettings();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountSettings MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountSettings.Descriptor; }
      }
      
      public override AccountSettings DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountSettings.DefaultInstance; }
      }
      
      public override AccountSettings BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountSettings) {
          return MergeFrom((AccountSettings) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountSettings other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountSettings.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasIsBlock) {
          IsBlock = other.IsBlock;
        }
        if (other.HasBlockSize) {
          BlockSize = other.BlockSize;
        }
        if (other.HasIsGiveup) {
          IsGiveup = other.IsGiveup;
        }
        if (other.HasGiveupBrokerageName) {
          GiveupBrokerageName = other.GiveupBrokerageName;
        }
        if (other.HasStatementOption) {
          StatementOption = other.StatementOption;
        }
        if (other.HasZeroBalance) {
          ZeroBalance = other.ZeroBalance;
        }
        if (other.HasReconciliation) {
          Reconciliation = other.Reconciliation;
        }
        if (other.HasGiveupBrokerageId) {
          GiveupBrokerageId = other.GiveupBrokerageId;
        }
        if (other.HasTradingTimeFrom) {
          TradingTimeFrom = other.TradingTimeFrom;
        }
        if (other.HasTradingTimeTo) {
          TradingTimeTo = other.TradingTimeTo;
        }
        if (other.HasTradingTimeZone) {
          TradingTimeZone = other.TradingTimeZone;
        }
        if (other.HasLiquidationOrdersOutsideTradingTime) {
          LiquidationOrdersOutsideTradingTime = other.LiquidationOrdersOutsideTradingTime;
        }
        if (other.HasIsInstruct) {
          IsInstruct = other.IsInstruct;
        }
        if (other.HasExternallyProvidedExecution) {
          ExternallyProvidedExecution = other.ExternallyProvidedExecution;
        }
        if (other.modesAccountGroups_.Count != 0) {
          result.modesAccountGroups_.Add(other.modesAccountGroups_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountSettingsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountSettingsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 16: {
              result.hasIsBlock = input.ReadBool(ref result.isBlock_);
              break;
            }
            case 24: {
              result.hasBlockSize = input.ReadSInt32(ref result.blockSize_);
              break;
            }
            case 32: {
              result.hasIsGiveup = input.ReadBool(ref result.isGiveup_);
              break;
            }
            case 42: {
              result.hasGiveupBrokerageName = input.ReadString(ref result.giveupBrokerageName_);
              break;
            }
            case 48: {
              result.hasStatementOption = input.ReadUInt32(ref result.statementOption_);
              break;
            }
            case 56: {
              result.hasZeroBalance = input.ReadBool(ref result.zeroBalance_);
              break;
            }
            case 64: {
              result.hasReconciliation = input.ReadBool(ref result.reconciliation_);
              break;
            }
            case 74: {
              result.hasGiveupBrokerageId = input.ReadString(ref result.giveupBrokerageId_);
              break;
            }
            case 82: {
              result.hasTradingTimeFrom = input.ReadString(ref result.tradingTimeFrom_);
              break;
            }
            case 90: {
              result.hasTradingTimeTo = input.ReadString(ref result.tradingTimeTo_);
              break;
            }
            case 98: {
              result.hasTradingTimeZone = input.ReadString(ref result.tradingTimeZone_);
              break;
            }
            case 104: {
              result.hasLiquidationOrdersOutsideTradingTime = input.ReadBool(ref result.liquidationOrdersOutsideTradingTime_);
              break;
            }
            case 112: {
              result.hasIsInstruct = input.ReadBool(ref result.isInstruct_);
              break;
            }
            case 120: {
              result.hasExternallyProvidedExecution = input.ReadBool(ref result.externallyProvidedExecution_);
              break;
            }
            case 130: {
              input.ReadStringArray(tag, field_name, result.modesAccountGroups_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasIsBlock {
        get { return result.hasIsBlock; }
      }
      public bool IsBlock {
        get { return result.IsBlock; }
        set { SetIsBlock(value); }
      }
      public Builder SetIsBlock(bool value) {
        PrepareBuilder();
        result.hasIsBlock = true;
        result.isBlock_ = value;
        return this;
      }
      public Builder ClearIsBlock() {
        PrepareBuilder();
        result.hasIsBlock = false;
        result.isBlock_ = false;
        return this;
      }
      
      public bool HasBlockSize {
        get { return result.hasBlockSize; }
      }
      public int BlockSize {
        get { return result.BlockSize; }
        set { SetBlockSize(value); }
      }
      public Builder SetBlockSize(int value) {
        PrepareBuilder();
        result.hasBlockSize = true;
        result.blockSize_ = value;
        return this;
      }
      public Builder ClearBlockSize() {
        PrepareBuilder();
        result.hasBlockSize = false;
        result.blockSize_ = 0;
        return this;
      }
      
      public bool HasIsGiveup {
        get { return result.hasIsGiveup; }
      }
      public bool IsGiveup {
        get { return result.IsGiveup; }
        set { SetIsGiveup(value); }
      }
      public Builder SetIsGiveup(bool value) {
        PrepareBuilder();
        result.hasIsGiveup = true;
        result.isGiveup_ = value;
        return this;
      }
      public Builder ClearIsGiveup() {
        PrepareBuilder();
        result.hasIsGiveup = false;
        result.isGiveup_ = false;
        return this;
      }
      
      public bool HasGiveupBrokerageName {
        get { return result.hasGiveupBrokerageName; }
      }
      public string GiveupBrokerageName {
        get { return result.GiveupBrokerageName; }
        set { SetGiveupBrokerageName(value); }
      }
      public Builder SetGiveupBrokerageName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGiveupBrokerageName = true;
        result.giveupBrokerageName_ = value;
        return this;
      }
      public Builder ClearGiveupBrokerageName() {
        PrepareBuilder();
        result.hasGiveupBrokerageName = false;
        result.giveupBrokerageName_ = "";
        return this;
      }
      
      public bool HasStatementOption {
        get { return result.hasStatementOption; }
      }
      [global::System.CLSCompliant(false)]
      public uint StatementOption {
        get { return result.StatementOption; }
        set { SetStatementOption(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetStatementOption(uint value) {
        PrepareBuilder();
        result.hasStatementOption = true;
        result.statementOption_ = value;
        return this;
      }
      public Builder ClearStatementOption() {
        PrepareBuilder();
        result.hasStatementOption = false;
        result.statementOption_ = 0;
        return this;
      }
      
      public bool HasZeroBalance {
        get { return result.hasZeroBalance; }
      }
      public bool ZeroBalance {
        get { return result.ZeroBalance; }
        set { SetZeroBalance(value); }
      }
      public Builder SetZeroBalance(bool value) {
        PrepareBuilder();
        result.hasZeroBalance = true;
        result.zeroBalance_ = value;
        return this;
      }
      public Builder ClearZeroBalance() {
        PrepareBuilder();
        result.hasZeroBalance = false;
        result.zeroBalance_ = false;
        return this;
      }
      
      public bool HasReconciliation {
        get { return result.hasReconciliation; }
      }
      public bool Reconciliation {
        get { return result.Reconciliation; }
        set { SetReconciliation(value); }
      }
      public Builder SetReconciliation(bool value) {
        PrepareBuilder();
        result.hasReconciliation = true;
        result.reconciliation_ = value;
        return this;
      }
      public Builder ClearReconciliation() {
        PrepareBuilder();
        result.hasReconciliation = false;
        result.reconciliation_ = false;
        return this;
      }
      
      public bool HasGiveupBrokerageId {
        get { return result.hasGiveupBrokerageId; }
      }
      public string GiveupBrokerageId {
        get { return result.GiveupBrokerageId; }
        set { SetGiveupBrokerageId(value); }
      }
      public Builder SetGiveupBrokerageId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGiveupBrokerageId = true;
        result.giveupBrokerageId_ = value;
        return this;
      }
      public Builder ClearGiveupBrokerageId() {
        PrepareBuilder();
        result.hasGiveupBrokerageId = false;
        result.giveupBrokerageId_ = "";
        return this;
      }
      
      public bool HasTradingTimeFrom {
        get { return result.hasTradingTimeFrom; }
      }
      public string TradingTimeFrom {
        get { return result.TradingTimeFrom; }
        set { SetTradingTimeFrom(value); }
      }
      public Builder SetTradingTimeFrom(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradingTimeFrom = true;
        result.tradingTimeFrom_ = value;
        return this;
      }
      public Builder ClearTradingTimeFrom() {
        PrepareBuilder();
        result.hasTradingTimeFrom = false;
        result.tradingTimeFrom_ = "";
        return this;
      }
      
      public bool HasTradingTimeTo {
        get { return result.hasTradingTimeTo; }
      }
      public string TradingTimeTo {
        get { return result.TradingTimeTo; }
        set { SetTradingTimeTo(value); }
      }
      public Builder SetTradingTimeTo(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradingTimeTo = true;
        result.tradingTimeTo_ = value;
        return this;
      }
      public Builder ClearTradingTimeTo() {
        PrepareBuilder();
        result.hasTradingTimeTo = false;
        result.tradingTimeTo_ = "";
        return this;
      }
      
      public bool HasTradingTimeZone {
        get { return result.hasTradingTimeZone; }
      }
      public string TradingTimeZone {
        get { return result.TradingTimeZone; }
        set { SetTradingTimeZone(value); }
      }
      public Builder SetTradingTimeZone(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradingTimeZone = true;
        result.tradingTimeZone_ = value;
        return this;
      }
      public Builder ClearTradingTimeZone() {
        PrepareBuilder();
        result.hasTradingTimeZone = false;
        result.tradingTimeZone_ = "";
        return this;
      }
      
      public bool HasLiquidationOrdersOutsideTradingTime {
        get { return result.hasLiquidationOrdersOutsideTradingTime; }
      }
      public bool LiquidationOrdersOutsideTradingTime {
        get { return result.LiquidationOrdersOutsideTradingTime; }
        set { SetLiquidationOrdersOutsideTradingTime(value); }
      }
      public Builder SetLiquidationOrdersOutsideTradingTime(bool value) {
        PrepareBuilder();
        result.hasLiquidationOrdersOutsideTradingTime = true;
        result.liquidationOrdersOutsideTradingTime_ = value;
        return this;
      }
      public Builder ClearLiquidationOrdersOutsideTradingTime() {
        PrepareBuilder();
        result.hasLiquidationOrdersOutsideTradingTime = false;
        result.liquidationOrdersOutsideTradingTime_ = false;
        return this;
      }
      
      public bool HasIsInstruct {
        get { return result.hasIsInstruct; }
      }
      public bool IsInstruct {
        get { return result.IsInstruct; }
        set { SetIsInstruct(value); }
      }
      public Builder SetIsInstruct(bool value) {
        PrepareBuilder();
        result.hasIsInstruct = true;
        result.isInstruct_ = value;
        return this;
      }
      public Builder ClearIsInstruct() {
        PrepareBuilder();
        result.hasIsInstruct = false;
        result.isInstruct_ = false;
        return this;
      }
      
      public bool HasExternallyProvidedExecution {
        get { return result.hasExternallyProvidedExecution; }
      }
      public bool ExternallyProvidedExecution {
        get { return result.ExternallyProvidedExecution; }
        set { SetExternallyProvidedExecution(value); }
      }
      public Builder SetExternallyProvidedExecution(bool value) {
        PrepareBuilder();
        result.hasExternallyProvidedExecution = true;
        result.externallyProvidedExecution_ = value;
        return this;
      }
      public Builder ClearExternallyProvidedExecution() {
        PrepareBuilder();
        result.hasExternallyProvidedExecution = false;
        result.externallyProvidedExecution_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<string> ModesAccountGroupsList {
        get { return PrepareBuilder().modesAccountGroups_; }
      }
      public int ModesAccountGroupsCount {
        get { return result.ModesAccountGroupsCount; }
      }
      public string GetModesAccountGroups(int index) {
        return result.GetModesAccountGroups(index);
      }
      public Builder SetModesAccountGroups(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.modesAccountGroups_[index] = value;
        return this;
      }
      public Builder AddModesAccountGroups(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.modesAccountGroups_.Add(value);
        return this;
      }
      public Builder AddRangeModesAccountGroups(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.modesAccountGroups_.Add(values);
        return this;
      }
      public Builder ClearModesAccountGroups() {
        PrepareBuilder();
        result.modesAccountGroups_.Clear();
        return this;
      }
    }
    static AccountSettings() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountRiskParameters : pb::GeneratedMessage<AccountRiskParameters, AccountRiskParameters.Builder> {
    private AccountRiskParameters() { }
    private static readonly AccountRiskParameters defaultInstance = new AccountRiskParameters().MakeReadOnly();
    private static readonly string[] _accountRiskParametersFieldNames = new string[] { "account_id", "allow_futures", "allow_options", "commodity_position_limit", "contract_position_limit", "daily_loss_limit", "delta_daily_loss_limit", "enforce_commodity_position_limit", "enforce_contract_position_limit", "enforce_daily_loss_limit", "enforce_delta_daily_loss_limit", "enforce_margin_subsystem_parameters", "enforce_trade_margin_limit", "enforce_trade_price_limit_percent", "enforce_trade_price_limit_ticks", "enforce_trade_size_limit", "liquidation_only", "margin_subsystem_parameters", "maximum_order_rate", "reject_risky_market_orders", "trade_margin_limit", "trade_price_limit_percent", "trade_price_limit_ticks", "trade_size_limit" };
    private static readonly uint[] _accountRiskParametersFieldTags = new uint[] { 8, 24, 32, 98, 114, 146, 162, 88, 104, 136, 152, 120, 56, 184, 72, 40, 16, 130, 168, 176, 65, 194, 82, 48 };
    public static AccountRiskParameters DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountRiskParameters DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountRiskParameters ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRiskParameters__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountRiskParameters, AccountRiskParameters.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountRiskParameters__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum OptionsTrading {
        NO = 1,
        BUY = 2,
        ALL = 3,
      }
      
    }
    #endregion
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int LiquidationOnlyFieldNumber = 2;
    private bool hasLiquidationOnly;
    private bool liquidationOnly_;
    public bool HasLiquidationOnly {
      get { return hasLiquidationOnly; }
    }
    public bool LiquidationOnly {
      get { return liquidationOnly_; }
    }
    
    public const int AllowFuturesFieldNumber = 3;
    private bool hasAllowFutures;
    private bool allowFutures_;
    public bool HasAllowFutures {
      get { return hasAllowFutures; }
    }
    public bool AllowFutures {
      get { return allowFutures_; }
    }
    
    public const int AllowOptionsFieldNumber = 4;
    private bool hasAllowOptions;
    private uint allowOptions_;
    public bool HasAllowOptions {
      get { return hasAllowOptions; }
    }
    [global::System.CLSCompliant(false)]
    public uint AllowOptions {
      get { return allowOptions_; }
    }
    
    public const int EnforceTradeSizeLimitFieldNumber = 5;
    private bool hasEnforceTradeSizeLimit;
    private bool enforceTradeSizeLimit_;
    public bool HasEnforceTradeSizeLimit {
      get { return hasEnforceTradeSizeLimit; }
    }
    public bool EnforceTradeSizeLimit {
      get { return enforceTradeSizeLimit_; }
    }
    
    public const int TradeSizeLimitFieldNumber = 6;
    private bool hasTradeSizeLimit;
    private int tradeSizeLimit_;
    public bool HasTradeSizeLimit {
      get { return hasTradeSizeLimit; }
    }
    public int TradeSizeLimit {
      get { return tradeSizeLimit_; }
    }
    
    public const int EnforceTradeMarginLimitFieldNumber = 7;
    private bool hasEnforceTradeMarginLimit;
    private bool enforceTradeMarginLimit_;
    public bool HasEnforceTradeMarginLimit {
      get { return hasEnforceTradeMarginLimit; }
    }
    public bool EnforceTradeMarginLimit {
      get { return enforceTradeMarginLimit_; }
    }
    
    public const int TradeMarginLimitFieldNumber = 8;
    private bool hasTradeMarginLimit;
    private double tradeMarginLimit_;
    public bool HasTradeMarginLimit {
      get { return hasTradeMarginLimit; }
    }
    public double TradeMarginLimit {
      get { return tradeMarginLimit_; }
    }
    
    public const int EnforceTradePriceLimitTicksFieldNumber = 9;
    private bool hasEnforceTradePriceLimitTicks;
    private bool enforceTradePriceLimitTicks_;
    public bool HasEnforceTradePriceLimitTicks {
      get { return hasEnforceTradePriceLimitTicks; }
    }
    public bool EnforceTradePriceLimitTicks {
      get { return enforceTradePriceLimitTicks_; }
    }
    
    public const int TradePriceLimitTicksFieldNumber = 10;
    private bool hasTradePriceLimitTicks;
    private global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit tradePriceLimitTicks_;
    public bool HasTradePriceLimitTicks {
      get { return hasTradePriceLimitTicks; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit TradePriceLimitTicks {
      get { return tradePriceLimitTicks_ ?? global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit.DefaultInstance; }
    }
    
    public const int EnforceCommodityPositionLimitFieldNumber = 11;
    private bool hasEnforceCommodityPositionLimit;
    private bool enforceCommodityPositionLimit_;
    public bool HasEnforceCommodityPositionLimit {
      get { return hasEnforceCommodityPositionLimit; }
    }
    public bool EnforceCommodityPositionLimit {
      get { return enforceCommodityPositionLimit_; }
    }
    
    public const int CommodityPositionLimitFieldNumber = 12;
    private bool hasCommodityPositionLimit;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValue commodityPositionLimit_;
    public bool HasCommodityPositionLimit {
      get { return hasCommodityPositionLimit; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValue CommodityPositionLimit {
      get { return commodityPositionLimit_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance; }
    }
    
    public const int EnforceContractPositionLimitFieldNumber = 13;
    private bool hasEnforceContractPositionLimit;
    private bool enforceContractPositionLimit_;
    public bool HasEnforceContractPositionLimit {
      get { return hasEnforceContractPositionLimit; }
    }
    public bool EnforceContractPositionLimit {
      get { return enforceContractPositionLimit_; }
    }
    
    public const int ContractPositionLimitFieldNumber = 14;
    private bool hasContractPositionLimit;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValue contractPositionLimit_;
    public bool HasContractPositionLimit {
      get { return hasContractPositionLimit; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValue ContractPositionLimit {
      get { return contractPositionLimit_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance; }
    }
    
    public const int EnforceMarginSubsystemParametersFieldNumber = 15;
    private bool hasEnforceMarginSubsystemParameters;
    private bool enforceMarginSubsystemParameters_;
    public bool HasEnforceMarginSubsystemParameters {
      get { return hasEnforceMarginSubsystemParameters; }
    }
    public bool EnforceMarginSubsystemParameters {
      get { return enforceMarginSubsystemParameters_; }
    }
    
    public const int MarginSubsystemParametersFieldNumber = 16;
    private bool hasMarginSubsystemParameters;
    private global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters marginSubsystemParameters_;
    public bool HasMarginSubsystemParameters {
      get { return hasMarginSubsystemParameters; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters MarginSubsystemParameters {
      get { return marginSubsystemParameters_ ?? global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters.DefaultInstance; }
    }
    
    public const int EnforceDailyLossLimitFieldNumber = 17;
    private bool hasEnforceDailyLossLimit;
    private bool enforceDailyLossLimit_;
    public bool HasEnforceDailyLossLimit {
      get { return hasEnforceDailyLossLimit; }
    }
    public bool EnforceDailyLossLimit {
      get { return enforceDailyLossLimit_; }
    }
    
    public const int DailyLossLimitFieldNumber = 18;
    private bool hasDailyLossLimit;
    private global::CmsApiSamples.Protocol.CMSApi.LossLimit dailyLossLimit_;
    public bool HasDailyLossLimit {
      get { return hasDailyLossLimit; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LossLimit DailyLossLimit {
      get { return dailyLossLimit_ ?? global::CmsApiSamples.Protocol.CMSApi.LossLimit.DefaultInstance; }
    }
    
    public const int EnforceDeltaDailyLossLimitFieldNumber = 19;
    private bool hasEnforceDeltaDailyLossLimit;
    private bool enforceDeltaDailyLossLimit_;
    public bool HasEnforceDeltaDailyLossLimit {
      get { return hasEnforceDeltaDailyLossLimit; }
    }
    public bool EnforceDeltaDailyLossLimit {
      get { return enforceDeltaDailyLossLimit_; }
    }
    
    public const int DeltaDailyLossLimitFieldNumber = 20;
    private bool hasDeltaDailyLossLimit;
    private global::CmsApiSamples.Protocol.CMSApi.LossLimit deltaDailyLossLimit_;
    public bool HasDeltaDailyLossLimit {
      get { return hasDeltaDailyLossLimit; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LossLimit DeltaDailyLossLimit {
      get { return deltaDailyLossLimit_ ?? global::CmsApiSamples.Protocol.CMSApi.LossLimit.DefaultInstance; }
    }
    
    public const int MaximumOrderRateFieldNumber = 21;
    private bool hasMaximumOrderRate;
    private int maximumOrderRate_;
    public bool HasMaximumOrderRate {
      get { return hasMaximumOrderRate; }
    }
    public int MaximumOrderRate {
      get { return maximumOrderRate_; }
    }
    
    public const int RejectRiskyMarketOrdersFieldNumber = 22;
    private bool hasRejectRiskyMarketOrders;
    private bool rejectRiskyMarketOrders_;
    public bool HasRejectRiskyMarketOrders {
      get { return hasRejectRiskyMarketOrders; }
    }
    public bool RejectRiskyMarketOrders {
      get { return rejectRiskyMarketOrders_; }
    }
    
    public const int EnforceTradePriceLimitPercentFieldNumber = 23;
    private bool hasEnforceTradePriceLimitPercent;
    private bool enforceTradePriceLimitPercent_;
    public bool HasEnforceTradePriceLimitPercent {
      get { return hasEnforceTradePriceLimitPercent; }
    }
    public bool EnforceTradePriceLimitPercent {
      get { return enforceTradePriceLimitPercent_; }
    }
    
    public const int TradePriceLimitPercentFieldNumber = 24;
    private bool hasTradePriceLimitPercent;
    private global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent tradePriceLimitPercent_;
    public bool HasTradePriceLimitPercent {
      get { return hasTradePriceLimitPercent; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent TradePriceLimitPercent {
      get { return tradePriceLimitPercent_ ?? global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasDailyLossLimit) {
          if (!DailyLossLimit.IsInitialized) return false;
        }
        if (HasDeltaDailyLossLimit) {
          if (!DeltaDailyLossLimit.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountRiskParametersFieldNames;
      if (hasAccountId) {
        output.WriteSInt32(1, field_names[0], AccountId);
      }
      if (hasLiquidationOnly) {
        output.WriteBool(2, field_names[16], LiquidationOnly);
      }
      if (hasAllowFutures) {
        output.WriteBool(3, field_names[1], AllowFutures);
      }
      if (hasAllowOptions) {
        output.WriteUInt32(4, field_names[2], AllowOptions);
      }
      if (hasEnforceTradeSizeLimit) {
        output.WriteBool(5, field_names[15], EnforceTradeSizeLimit);
      }
      if (hasTradeSizeLimit) {
        output.WriteSInt32(6, field_names[23], TradeSizeLimit);
      }
      if (hasEnforceTradeMarginLimit) {
        output.WriteBool(7, field_names[12], EnforceTradeMarginLimit);
      }
      if (hasTradeMarginLimit) {
        output.WriteDouble(8, field_names[20], TradeMarginLimit);
      }
      if (hasEnforceTradePriceLimitTicks) {
        output.WriteBool(9, field_names[14], EnforceTradePriceLimitTicks);
      }
      if (hasTradePriceLimitTicks) {
        output.WriteMessage(10, field_names[22], TradePriceLimitTicks);
      }
      if (hasEnforceCommodityPositionLimit) {
        output.WriteBool(11, field_names[7], EnforceCommodityPositionLimit);
      }
      if (hasCommodityPositionLimit) {
        output.WriteMessage(12, field_names[3], CommodityPositionLimit);
      }
      if (hasEnforceContractPositionLimit) {
        output.WriteBool(13, field_names[8], EnforceContractPositionLimit);
      }
      if (hasContractPositionLimit) {
        output.WriteMessage(14, field_names[4], ContractPositionLimit);
      }
      if (hasEnforceMarginSubsystemParameters) {
        output.WriteBool(15, field_names[11], EnforceMarginSubsystemParameters);
      }
      if (hasMarginSubsystemParameters) {
        output.WriteMessage(16, field_names[17], MarginSubsystemParameters);
      }
      if (hasEnforceDailyLossLimit) {
        output.WriteBool(17, field_names[9], EnforceDailyLossLimit);
      }
      if (hasDailyLossLimit) {
        output.WriteMessage(18, field_names[5], DailyLossLimit);
      }
      if (hasEnforceDeltaDailyLossLimit) {
        output.WriteBool(19, field_names[10], EnforceDeltaDailyLossLimit);
      }
      if (hasDeltaDailyLossLimit) {
        output.WriteMessage(20, field_names[6], DeltaDailyLossLimit);
      }
      if (hasMaximumOrderRate) {
        output.WriteSInt32(21, field_names[18], MaximumOrderRate);
      }
      if (hasRejectRiskyMarketOrders) {
        output.WriteBool(22, field_names[19], RejectRiskyMarketOrders);
      }
      if (hasEnforceTradePriceLimitPercent) {
        output.WriteBool(23, field_names[13], EnforceTradePriceLimitPercent);
      }
      if (hasTradePriceLimitPercent) {
        output.WriteMessage(24, field_names[21], TradePriceLimitPercent);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, AccountId);
      }
      if (hasLiquidationOnly) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, LiquidationOnly);
      }
      if (hasAllowFutures) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, AllowFutures);
      }
      if (hasAllowOptions) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, AllowOptions);
      }
      if (hasEnforceTradeSizeLimit) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, EnforceTradeSizeLimit);
      }
      if (hasTradeSizeLimit) {
        size += pb::CodedOutputStream.ComputeSInt32Size(6, TradeSizeLimit);
      }
      if (hasEnforceTradeMarginLimit) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, EnforceTradeMarginLimit);
      }
      if (hasTradeMarginLimit) {
        size += pb::CodedOutputStream.ComputeDoubleSize(8, TradeMarginLimit);
      }
      if (hasEnforceTradePriceLimitTicks) {
        size += pb::CodedOutputStream.ComputeBoolSize(9, EnforceTradePriceLimitTicks);
      }
      if (hasTradePriceLimitTicks) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, TradePriceLimitTicks);
      }
      if (hasEnforceCommodityPositionLimit) {
        size += pb::CodedOutputStream.ComputeBoolSize(11, EnforceCommodityPositionLimit);
      }
      if (hasCommodityPositionLimit) {
        size += pb::CodedOutputStream.ComputeMessageSize(12, CommodityPositionLimit);
      }
      if (hasEnforceContractPositionLimit) {
        size += pb::CodedOutputStream.ComputeBoolSize(13, EnforceContractPositionLimit);
      }
      if (hasContractPositionLimit) {
        size += pb::CodedOutputStream.ComputeMessageSize(14, ContractPositionLimit);
      }
      if (hasEnforceMarginSubsystemParameters) {
        size += pb::CodedOutputStream.ComputeBoolSize(15, EnforceMarginSubsystemParameters);
      }
      if (hasMarginSubsystemParameters) {
        size += pb::CodedOutputStream.ComputeMessageSize(16, MarginSubsystemParameters);
      }
      if (hasEnforceDailyLossLimit) {
        size += pb::CodedOutputStream.ComputeBoolSize(17, EnforceDailyLossLimit);
      }
      if (hasDailyLossLimit) {
        size += pb::CodedOutputStream.ComputeMessageSize(18, DailyLossLimit);
      }
      if (hasEnforceDeltaDailyLossLimit) {
        size += pb::CodedOutputStream.ComputeBoolSize(19, EnforceDeltaDailyLossLimit);
      }
      if (hasDeltaDailyLossLimit) {
        size += pb::CodedOutputStream.ComputeMessageSize(20, DeltaDailyLossLimit);
      }
      if (hasMaximumOrderRate) {
        size += pb::CodedOutputStream.ComputeSInt32Size(21, MaximumOrderRate);
      }
      if (hasRejectRiskyMarketOrders) {
        size += pb::CodedOutputStream.ComputeBoolSize(22, RejectRiskyMarketOrders);
      }
      if (hasEnforceTradePriceLimitPercent) {
        size += pb::CodedOutputStream.ComputeBoolSize(23, EnforceTradePriceLimitPercent);
      }
      if (hasTradePriceLimitPercent) {
        size += pb::CodedOutputStream.ComputeMessageSize(24, TradePriceLimitPercent);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountRiskParameters ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRiskParameters ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRiskParameters ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountRiskParameters ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountRiskParameters ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRiskParameters ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountRiskParameters ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountRiskParameters ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountRiskParameters ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountRiskParameters ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountRiskParameters MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountRiskParameters prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountRiskParameters, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountRiskParameters cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountRiskParameters result;
      
      private AccountRiskParameters PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountRiskParameters original = result;
          result = new AccountRiskParameters();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountRiskParameters MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.Descriptor; }
      }
      
      public override AccountRiskParameters DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.DefaultInstance; }
      }
      
      public override AccountRiskParameters BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountRiskParameters) {
          return MergeFrom((AccountRiskParameters) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountRiskParameters other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountRiskParameters.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasLiquidationOnly) {
          LiquidationOnly = other.LiquidationOnly;
        }
        if (other.HasAllowFutures) {
          AllowFutures = other.AllowFutures;
        }
        if (other.HasAllowOptions) {
          AllowOptions = other.AllowOptions;
        }
        if (other.HasEnforceTradeSizeLimit) {
          EnforceTradeSizeLimit = other.EnforceTradeSizeLimit;
        }
        if (other.HasTradeSizeLimit) {
          TradeSizeLimit = other.TradeSizeLimit;
        }
        if (other.HasEnforceTradeMarginLimit) {
          EnforceTradeMarginLimit = other.EnforceTradeMarginLimit;
        }
        if (other.HasTradeMarginLimit) {
          TradeMarginLimit = other.TradeMarginLimit;
        }
        if (other.HasEnforceTradePriceLimitTicks) {
          EnforceTradePriceLimitTicks = other.EnforceTradePriceLimitTicks;
        }
        if (other.HasTradePriceLimitTicks) {
          MergeTradePriceLimitTicks(other.TradePriceLimitTicks);
        }
        if (other.HasEnforceCommodityPositionLimit) {
          EnforceCommodityPositionLimit = other.EnforceCommodityPositionLimit;
        }
        if (other.HasCommodityPositionLimit) {
          MergeCommodityPositionLimit(other.CommodityPositionLimit);
        }
        if (other.HasEnforceContractPositionLimit) {
          EnforceContractPositionLimit = other.EnforceContractPositionLimit;
        }
        if (other.HasContractPositionLimit) {
          MergeContractPositionLimit(other.ContractPositionLimit);
        }
        if (other.HasEnforceMarginSubsystemParameters) {
          EnforceMarginSubsystemParameters = other.EnforceMarginSubsystemParameters;
        }
        if (other.HasMarginSubsystemParameters) {
          MergeMarginSubsystemParameters(other.MarginSubsystemParameters);
        }
        if (other.HasEnforceDailyLossLimit) {
          EnforceDailyLossLimit = other.EnforceDailyLossLimit;
        }
        if (other.HasDailyLossLimit) {
          MergeDailyLossLimit(other.DailyLossLimit);
        }
        if (other.HasEnforceDeltaDailyLossLimit) {
          EnforceDeltaDailyLossLimit = other.EnforceDeltaDailyLossLimit;
        }
        if (other.HasDeltaDailyLossLimit) {
          MergeDeltaDailyLossLimit(other.DeltaDailyLossLimit);
        }
        if (other.HasMaximumOrderRate) {
          MaximumOrderRate = other.MaximumOrderRate;
        }
        if (other.HasRejectRiskyMarketOrders) {
          RejectRiskyMarketOrders = other.RejectRiskyMarketOrders;
        }
        if (other.HasEnforceTradePriceLimitPercent) {
          EnforceTradePriceLimitPercent = other.EnforceTradePriceLimitPercent;
        }
        if (other.HasTradePriceLimitPercent) {
          MergeTradePriceLimitPercent(other.TradePriceLimitPercent);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountRiskParametersFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountRiskParametersFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 16: {
              result.hasLiquidationOnly = input.ReadBool(ref result.liquidationOnly_);
              break;
            }
            case 24: {
              result.hasAllowFutures = input.ReadBool(ref result.allowFutures_);
              break;
            }
            case 32: {
              result.hasAllowOptions = input.ReadUInt32(ref result.allowOptions_);
              break;
            }
            case 40: {
              result.hasEnforceTradeSizeLimit = input.ReadBool(ref result.enforceTradeSizeLimit_);
              break;
            }
            case 48: {
              result.hasTradeSizeLimit = input.ReadSInt32(ref result.tradeSizeLimit_);
              break;
            }
            case 56: {
              result.hasEnforceTradeMarginLimit = input.ReadBool(ref result.enforceTradeMarginLimit_);
              break;
            }
            case 65: {
              result.hasTradeMarginLimit = input.ReadDouble(ref result.tradeMarginLimit_);
              break;
            }
            case 72: {
              result.hasEnforceTradePriceLimitTicks = input.ReadBool(ref result.enforceTradePriceLimitTicks_);
              break;
            }
            case 82: {
              global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit.CreateBuilder();
              if (result.hasTradePriceLimitTicks) {
                subBuilder.MergeFrom(TradePriceLimitTicks);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TradePriceLimitTicks = subBuilder.BuildPartial();
              break;
            }
            case 88: {
              result.hasEnforceCommodityPositionLimit = input.ReadBool(ref result.enforceCommodityPositionLimit_);
              break;
            }
            case 98: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder();
              if (result.hasCommodityPositionLimit) {
                subBuilder.MergeFrom(CommodityPositionLimit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CommodityPositionLimit = subBuilder.BuildPartial();
              break;
            }
            case 104: {
              result.hasEnforceContractPositionLimit = input.ReadBool(ref result.enforceContractPositionLimit_);
              break;
            }
            case 114: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder();
              if (result.hasContractPositionLimit) {
                subBuilder.MergeFrom(ContractPositionLimit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ContractPositionLimit = subBuilder.BuildPartial();
              break;
            }
            case 120: {
              result.hasEnforceMarginSubsystemParameters = input.ReadBool(ref result.enforceMarginSubsystemParameters_);
              break;
            }
            case 130: {
              global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters.CreateBuilder();
              if (result.hasMarginSubsystemParameters) {
                subBuilder.MergeFrom(MarginSubsystemParameters);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MarginSubsystemParameters = subBuilder.BuildPartial();
              break;
            }
            case 136: {
              result.hasEnforceDailyLossLimit = input.ReadBool(ref result.enforceDailyLossLimit_);
              break;
            }
            case 146: {
              global::CmsApiSamples.Protocol.CMSApi.LossLimit.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LossLimit.CreateBuilder();
              if (result.hasDailyLossLimit) {
                subBuilder.MergeFrom(DailyLossLimit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DailyLossLimit = subBuilder.BuildPartial();
              break;
            }
            case 152: {
              result.hasEnforceDeltaDailyLossLimit = input.ReadBool(ref result.enforceDeltaDailyLossLimit_);
              break;
            }
            case 162: {
              global::CmsApiSamples.Protocol.CMSApi.LossLimit.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LossLimit.CreateBuilder();
              if (result.hasDeltaDailyLossLimit) {
                subBuilder.MergeFrom(DeltaDailyLossLimit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DeltaDailyLossLimit = subBuilder.BuildPartial();
              break;
            }
            case 168: {
              result.hasMaximumOrderRate = input.ReadSInt32(ref result.maximumOrderRate_);
              break;
            }
            case 176: {
              result.hasRejectRiskyMarketOrders = input.ReadBool(ref result.rejectRiskyMarketOrders_);
              break;
            }
            case 184: {
              result.hasEnforceTradePriceLimitPercent = input.ReadBool(ref result.enforceTradePriceLimitPercent_);
              break;
            }
            case 194: {
              global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent.CreateBuilder();
              if (result.hasTradePriceLimitPercent) {
                subBuilder.MergeFrom(TradePriceLimitPercent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TradePriceLimitPercent = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasLiquidationOnly {
        get { return result.hasLiquidationOnly; }
      }
      public bool LiquidationOnly {
        get { return result.LiquidationOnly; }
        set { SetLiquidationOnly(value); }
      }
      public Builder SetLiquidationOnly(bool value) {
        PrepareBuilder();
        result.hasLiquidationOnly = true;
        result.liquidationOnly_ = value;
        return this;
      }
      public Builder ClearLiquidationOnly() {
        PrepareBuilder();
        result.hasLiquidationOnly = false;
        result.liquidationOnly_ = false;
        return this;
      }
      
      public bool HasAllowFutures {
        get { return result.hasAllowFutures; }
      }
      public bool AllowFutures {
        get { return result.AllowFutures; }
        set { SetAllowFutures(value); }
      }
      public Builder SetAllowFutures(bool value) {
        PrepareBuilder();
        result.hasAllowFutures = true;
        result.allowFutures_ = value;
        return this;
      }
      public Builder ClearAllowFutures() {
        PrepareBuilder();
        result.hasAllowFutures = false;
        result.allowFutures_ = false;
        return this;
      }
      
      public bool HasAllowOptions {
        get { return result.hasAllowOptions; }
      }
      [global::System.CLSCompliant(false)]
      public uint AllowOptions {
        get { return result.AllowOptions; }
        set { SetAllowOptions(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAllowOptions(uint value) {
        PrepareBuilder();
        result.hasAllowOptions = true;
        result.allowOptions_ = value;
        return this;
      }
      public Builder ClearAllowOptions() {
        PrepareBuilder();
        result.hasAllowOptions = false;
        result.allowOptions_ = 0;
        return this;
      }
      
      public bool HasEnforceTradeSizeLimit {
        get { return result.hasEnforceTradeSizeLimit; }
      }
      public bool EnforceTradeSizeLimit {
        get { return result.EnforceTradeSizeLimit; }
        set { SetEnforceTradeSizeLimit(value); }
      }
      public Builder SetEnforceTradeSizeLimit(bool value) {
        PrepareBuilder();
        result.hasEnforceTradeSizeLimit = true;
        result.enforceTradeSizeLimit_ = value;
        return this;
      }
      public Builder ClearEnforceTradeSizeLimit() {
        PrepareBuilder();
        result.hasEnforceTradeSizeLimit = false;
        result.enforceTradeSizeLimit_ = false;
        return this;
      }
      
      public bool HasTradeSizeLimit {
        get { return result.hasTradeSizeLimit; }
      }
      public int TradeSizeLimit {
        get { return result.TradeSizeLimit; }
        set { SetTradeSizeLimit(value); }
      }
      public Builder SetTradeSizeLimit(int value) {
        PrepareBuilder();
        result.hasTradeSizeLimit = true;
        result.tradeSizeLimit_ = value;
        return this;
      }
      public Builder ClearTradeSizeLimit() {
        PrepareBuilder();
        result.hasTradeSizeLimit = false;
        result.tradeSizeLimit_ = 0;
        return this;
      }
      
      public bool HasEnforceTradeMarginLimit {
        get { return result.hasEnforceTradeMarginLimit; }
      }
      public bool EnforceTradeMarginLimit {
        get { return result.EnforceTradeMarginLimit; }
        set { SetEnforceTradeMarginLimit(value); }
      }
      public Builder SetEnforceTradeMarginLimit(bool value) {
        PrepareBuilder();
        result.hasEnforceTradeMarginLimit = true;
        result.enforceTradeMarginLimit_ = value;
        return this;
      }
      public Builder ClearEnforceTradeMarginLimit() {
        PrepareBuilder();
        result.hasEnforceTradeMarginLimit = false;
        result.enforceTradeMarginLimit_ = false;
        return this;
      }
      
      public bool HasTradeMarginLimit {
        get { return result.hasTradeMarginLimit; }
      }
      public double TradeMarginLimit {
        get { return result.TradeMarginLimit; }
        set { SetTradeMarginLimit(value); }
      }
      public Builder SetTradeMarginLimit(double value) {
        PrepareBuilder();
        result.hasTradeMarginLimit = true;
        result.tradeMarginLimit_ = value;
        return this;
      }
      public Builder ClearTradeMarginLimit() {
        PrepareBuilder();
        result.hasTradeMarginLimit = false;
        result.tradeMarginLimit_ = 0D;
        return this;
      }
      
      public bool HasEnforceTradePriceLimitTicks {
        get { return result.hasEnforceTradePriceLimitTicks; }
      }
      public bool EnforceTradePriceLimitTicks {
        get { return result.EnforceTradePriceLimitTicks; }
        set { SetEnforceTradePriceLimitTicks(value); }
      }
      public Builder SetEnforceTradePriceLimitTicks(bool value) {
        PrepareBuilder();
        result.hasEnforceTradePriceLimitTicks = true;
        result.enforceTradePriceLimitTicks_ = value;
        return this;
      }
      public Builder ClearEnforceTradePriceLimitTicks() {
        PrepareBuilder();
        result.hasEnforceTradePriceLimitTicks = false;
        result.enforceTradePriceLimitTicks_ = false;
        return this;
      }
      
      public bool HasTradePriceLimitTicks {
       get { return result.hasTradePriceLimitTicks; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit TradePriceLimitTicks {
        get { return result.TradePriceLimitTicks; }
        set { SetTradePriceLimitTicks(value); }
      }
      public Builder SetTradePriceLimitTicks(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradePriceLimitTicks = true;
        result.tradePriceLimitTicks_ = value;
        return this;
      }
      public Builder SetTradePriceLimitTicks(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTradePriceLimitTicks = true;
        result.tradePriceLimitTicks_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTradePriceLimitTicks(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTradePriceLimitTicks &&
            result.tradePriceLimitTicks_ != global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit.DefaultInstance) {
            result.tradePriceLimitTicks_ = global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit.CreateBuilder(result.tradePriceLimitTicks_).MergeFrom(value).BuildPartial();
        } else {
          result.tradePriceLimitTicks_ = value;
        }
        result.hasTradePriceLimitTicks = true;
        return this;
      }
      public Builder ClearTradePriceLimitTicks() {
        PrepareBuilder();
        result.hasTradePriceLimitTicks = false;
        result.tradePriceLimitTicks_ = null;
        return this;
      }
      
      public bool HasEnforceCommodityPositionLimit {
        get { return result.hasEnforceCommodityPositionLimit; }
      }
      public bool EnforceCommodityPositionLimit {
        get { return result.EnforceCommodityPositionLimit; }
        set { SetEnforceCommodityPositionLimit(value); }
      }
      public Builder SetEnforceCommodityPositionLimit(bool value) {
        PrepareBuilder();
        result.hasEnforceCommodityPositionLimit = true;
        result.enforceCommodityPositionLimit_ = value;
        return this;
      }
      public Builder ClearEnforceCommodityPositionLimit() {
        PrepareBuilder();
        result.hasEnforceCommodityPositionLimit = false;
        result.enforceCommodityPositionLimit_ = false;
        return this;
      }
      
      public bool HasCommodityPositionLimit {
       get { return result.hasCommodityPositionLimit; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValue CommodityPositionLimit {
        get { return result.CommodityPositionLimit; }
        set { SetCommodityPositionLimit(value); }
      }
      public Builder SetCommodityPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCommodityPositionLimit = true;
        result.commodityPositionLimit_ = value;
        return this;
      }
      public Builder SetCommodityPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCommodityPositionLimit = true;
        result.commodityPositionLimit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCommodityPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCommodityPositionLimit &&
            result.commodityPositionLimit_ != global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance) {
            result.commodityPositionLimit_ = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder(result.commodityPositionLimit_).MergeFrom(value).BuildPartial();
        } else {
          result.commodityPositionLimit_ = value;
        }
        result.hasCommodityPositionLimit = true;
        return this;
      }
      public Builder ClearCommodityPositionLimit() {
        PrepareBuilder();
        result.hasCommodityPositionLimit = false;
        result.commodityPositionLimit_ = null;
        return this;
      }
      
      public bool HasEnforceContractPositionLimit {
        get { return result.hasEnforceContractPositionLimit; }
      }
      public bool EnforceContractPositionLimit {
        get { return result.EnforceContractPositionLimit; }
        set { SetEnforceContractPositionLimit(value); }
      }
      public Builder SetEnforceContractPositionLimit(bool value) {
        PrepareBuilder();
        result.hasEnforceContractPositionLimit = true;
        result.enforceContractPositionLimit_ = value;
        return this;
      }
      public Builder ClearEnforceContractPositionLimit() {
        PrepareBuilder();
        result.hasEnforceContractPositionLimit = false;
        result.enforceContractPositionLimit_ = false;
        return this;
      }
      
      public bool HasContractPositionLimit {
       get { return result.hasContractPositionLimit; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValue ContractPositionLimit {
        get { return result.ContractPositionLimit; }
        set { SetContractPositionLimit(value); }
      }
      public Builder SetContractPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContractPositionLimit = true;
        result.contractPositionLimit_ = value;
        return this;
      }
      public Builder SetContractPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasContractPositionLimit = true;
        result.contractPositionLimit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeContractPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasContractPositionLimit &&
            result.contractPositionLimit_ != global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance) {
            result.contractPositionLimit_ = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder(result.contractPositionLimit_).MergeFrom(value).BuildPartial();
        } else {
          result.contractPositionLimit_ = value;
        }
        result.hasContractPositionLimit = true;
        return this;
      }
      public Builder ClearContractPositionLimit() {
        PrepareBuilder();
        result.hasContractPositionLimit = false;
        result.contractPositionLimit_ = null;
        return this;
      }
      
      public bool HasEnforceMarginSubsystemParameters {
        get { return result.hasEnforceMarginSubsystemParameters; }
      }
      public bool EnforceMarginSubsystemParameters {
        get { return result.EnforceMarginSubsystemParameters; }
        set { SetEnforceMarginSubsystemParameters(value); }
      }
      public Builder SetEnforceMarginSubsystemParameters(bool value) {
        PrepareBuilder();
        result.hasEnforceMarginSubsystemParameters = true;
        result.enforceMarginSubsystemParameters_ = value;
        return this;
      }
      public Builder ClearEnforceMarginSubsystemParameters() {
        PrepareBuilder();
        result.hasEnforceMarginSubsystemParameters = false;
        result.enforceMarginSubsystemParameters_ = false;
        return this;
      }
      
      public bool HasMarginSubsystemParameters {
       get { return result.hasMarginSubsystemParameters; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters MarginSubsystemParameters {
        get { return result.MarginSubsystemParameters; }
        set { SetMarginSubsystemParameters(value); }
      }
      public Builder SetMarginSubsystemParameters(global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMarginSubsystemParameters = true;
        result.marginSubsystemParameters_ = value;
        return this;
      }
      public Builder SetMarginSubsystemParameters(global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMarginSubsystemParameters = true;
        result.marginSubsystemParameters_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMarginSubsystemParameters(global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMarginSubsystemParameters &&
            result.marginSubsystemParameters_ != global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters.DefaultInstance) {
            result.marginSubsystemParameters_ = global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters.CreateBuilder(result.marginSubsystemParameters_).MergeFrom(value).BuildPartial();
        } else {
          result.marginSubsystemParameters_ = value;
        }
        result.hasMarginSubsystemParameters = true;
        return this;
      }
      public Builder ClearMarginSubsystemParameters() {
        PrepareBuilder();
        result.hasMarginSubsystemParameters = false;
        result.marginSubsystemParameters_ = null;
        return this;
      }
      
      public bool HasEnforceDailyLossLimit {
        get { return result.hasEnforceDailyLossLimit; }
      }
      public bool EnforceDailyLossLimit {
        get { return result.EnforceDailyLossLimit; }
        set { SetEnforceDailyLossLimit(value); }
      }
      public Builder SetEnforceDailyLossLimit(bool value) {
        PrepareBuilder();
        result.hasEnforceDailyLossLimit = true;
        result.enforceDailyLossLimit_ = value;
        return this;
      }
      public Builder ClearEnforceDailyLossLimit() {
        PrepareBuilder();
        result.hasEnforceDailyLossLimit = false;
        result.enforceDailyLossLimit_ = false;
        return this;
      }
      
      public bool HasDailyLossLimit {
       get { return result.hasDailyLossLimit; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LossLimit DailyLossLimit {
        get { return result.DailyLossLimit; }
        set { SetDailyLossLimit(value); }
      }
      public Builder SetDailyLossLimit(global::CmsApiSamples.Protocol.CMSApi.LossLimit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDailyLossLimit = true;
        result.dailyLossLimit_ = value;
        return this;
      }
      public Builder SetDailyLossLimit(global::CmsApiSamples.Protocol.CMSApi.LossLimit.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDailyLossLimit = true;
        result.dailyLossLimit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDailyLossLimit(global::CmsApiSamples.Protocol.CMSApi.LossLimit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDailyLossLimit &&
            result.dailyLossLimit_ != global::CmsApiSamples.Protocol.CMSApi.LossLimit.DefaultInstance) {
            result.dailyLossLimit_ = global::CmsApiSamples.Protocol.CMSApi.LossLimit.CreateBuilder(result.dailyLossLimit_).MergeFrom(value).BuildPartial();
        } else {
          result.dailyLossLimit_ = value;
        }
        result.hasDailyLossLimit = true;
        return this;
      }
      public Builder ClearDailyLossLimit() {
        PrepareBuilder();
        result.hasDailyLossLimit = false;
        result.dailyLossLimit_ = null;
        return this;
      }
      
      public bool HasEnforceDeltaDailyLossLimit {
        get { return result.hasEnforceDeltaDailyLossLimit; }
      }
      public bool EnforceDeltaDailyLossLimit {
        get { return result.EnforceDeltaDailyLossLimit; }
        set { SetEnforceDeltaDailyLossLimit(value); }
      }
      public Builder SetEnforceDeltaDailyLossLimit(bool value) {
        PrepareBuilder();
        result.hasEnforceDeltaDailyLossLimit = true;
        result.enforceDeltaDailyLossLimit_ = value;
        return this;
      }
      public Builder ClearEnforceDeltaDailyLossLimit() {
        PrepareBuilder();
        result.hasEnforceDeltaDailyLossLimit = false;
        result.enforceDeltaDailyLossLimit_ = false;
        return this;
      }
      
      public bool HasDeltaDailyLossLimit {
       get { return result.hasDeltaDailyLossLimit; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LossLimit DeltaDailyLossLimit {
        get { return result.DeltaDailyLossLimit; }
        set { SetDeltaDailyLossLimit(value); }
      }
      public Builder SetDeltaDailyLossLimit(global::CmsApiSamples.Protocol.CMSApi.LossLimit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDeltaDailyLossLimit = true;
        result.deltaDailyLossLimit_ = value;
        return this;
      }
      public Builder SetDeltaDailyLossLimit(global::CmsApiSamples.Protocol.CMSApi.LossLimit.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDeltaDailyLossLimit = true;
        result.deltaDailyLossLimit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDeltaDailyLossLimit(global::CmsApiSamples.Protocol.CMSApi.LossLimit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDeltaDailyLossLimit &&
            result.deltaDailyLossLimit_ != global::CmsApiSamples.Protocol.CMSApi.LossLimit.DefaultInstance) {
            result.deltaDailyLossLimit_ = global::CmsApiSamples.Protocol.CMSApi.LossLimit.CreateBuilder(result.deltaDailyLossLimit_).MergeFrom(value).BuildPartial();
        } else {
          result.deltaDailyLossLimit_ = value;
        }
        result.hasDeltaDailyLossLimit = true;
        return this;
      }
      public Builder ClearDeltaDailyLossLimit() {
        PrepareBuilder();
        result.hasDeltaDailyLossLimit = false;
        result.deltaDailyLossLimit_ = null;
        return this;
      }
      
      public bool HasMaximumOrderRate {
        get { return result.hasMaximumOrderRate; }
      }
      public int MaximumOrderRate {
        get { return result.MaximumOrderRate; }
        set { SetMaximumOrderRate(value); }
      }
      public Builder SetMaximumOrderRate(int value) {
        PrepareBuilder();
        result.hasMaximumOrderRate = true;
        result.maximumOrderRate_ = value;
        return this;
      }
      public Builder ClearMaximumOrderRate() {
        PrepareBuilder();
        result.hasMaximumOrderRate = false;
        result.maximumOrderRate_ = 0;
        return this;
      }
      
      public bool HasRejectRiskyMarketOrders {
        get { return result.hasRejectRiskyMarketOrders; }
      }
      public bool RejectRiskyMarketOrders {
        get { return result.RejectRiskyMarketOrders; }
        set { SetRejectRiskyMarketOrders(value); }
      }
      public Builder SetRejectRiskyMarketOrders(bool value) {
        PrepareBuilder();
        result.hasRejectRiskyMarketOrders = true;
        result.rejectRiskyMarketOrders_ = value;
        return this;
      }
      public Builder ClearRejectRiskyMarketOrders() {
        PrepareBuilder();
        result.hasRejectRiskyMarketOrders = false;
        result.rejectRiskyMarketOrders_ = false;
        return this;
      }
      
      public bool HasEnforceTradePriceLimitPercent {
        get { return result.hasEnforceTradePriceLimitPercent; }
      }
      public bool EnforceTradePriceLimitPercent {
        get { return result.EnforceTradePriceLimitPercent; }
        set { SetEnforceTradePriceLimitPercent(value); }
      }
      public Builder SetEnforceTradePriceLimitPercent(bool value) {
        PrepareBuilder();
        result.hasEnforceTradePriceLimitPercent = true;
        result.enforceTradePriceLimitPercent_ = value;
        return this;
      }
      public Builder ClearEnforceTradePriceLimitPercent() {
        PrepareBuilder();
        result.hasEnforceTradePriceLimitPercent = false;
        result.enforceTradePriceLimitPercent_ = false;
        return this;
      }
      
      public bool HasTradePriceLimitPercent {
       get { return result.hasTradePriceLimitPercent; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent TradePriceLimitPercent {
        get { return result.TradePriceLimitPercent; }
        set { SetTradePriceLimitPercent(value); }
      }
      public Builder SetTradePriceLimitPercent(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradePriceLimitPercent = true;
        result.tradePriceLimitPercent_ = value;
        return this;
      }
      public Builder SetTradePriceLimitPercent(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTradePriceLimitPercent = true;
        result.tradePriceLimitPercent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTradePriceLimitPercent(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTradePriceLimitPercent &&
            result.tradePriceLimitPercent_ != global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent.DefaultInstance) {
            result.tradePriceLimitPercent_ = global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent.CreateBuilder(result.tradePriceLimitPercent_).MergeFrom(value).BuildPartial();
        } else {
          result.tradePriceLimitPercent_ = value;
        }
        result.hasTradePriceLimitPercent = true;
        return this;
      }
      public Builder ClearTradePriceLimitPercent() {
        PrepareBuilder();
        result.hasTradePriceLimitPercent = false;
        result.tradePriceLimitPercent_ = null;
        return this;
      }
    }
    static AccountRiskParameters() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountGroup : pb::GeneratedMessage<AccountGroup, AccountGroup.Builder> {
    private AccountGroup() { }
    private static readonly AccountGroup defaultInstance = new AccountGroup().MakeReadOnly();
    private static readonly string[] _accountGroupFieldNames = new string[] { "group_id", "master_account_id", "relation_type", "sub_accounts" };
    private static readonly uint[] _accountGroupFieldTags = new uint[] { 10, 18, 24, 34 };
    public static AccountGroup DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountGroup DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountGroup ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountGroup__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountGroup, AccountGroup.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountGroup__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum RelationType {
        MARGIN_INDEPENDENTLY_BORROW = 1,
        MARGIN_INDEPENDENTLY_SUM = 2,
        MARGIN_TOGETHER = 3,
      }
      
    }
    #endregion
    
    public const int GroupIdFieldNumber = 1;
    private bool hasGroupId;
    private string groupId_ = "";
    public bool HasGroupId {
      get { return hasGroupId; }
    }
    public string GroupId {
      get { return groupId_; }
    }
    
    public const int MasterAccountIdFieldNumber = 2;
    private bool hasMasterAccountId;
    private string masterAccountId_ = "";
    public bool HasMasterAccountId {
      get { return hasMasterAccountId; }
    }
    public string MasterAccountId {
      get { return masterAccountId_; }
    }
    
    public const int RelationTypeFieldNumber = 3;
    private bool hasRelationType;
    private uint relationType_;
    public bool HasRelationType {
      get { return hasRelationType; }
    }
    [global::System.CLSCompliant(false)]
    public uint RelationType {
      get { return relationType_; }
    }
    
    public const int SubAccountsFieldNumber = 4;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SubAccount> subAccounts_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.SubAccount>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.SubAccount> SubAccountsList {
      get { return subAccounts_; }
    }
    public int SubAccountsCount {
      get { return subAccounts_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.SubAccount GetSubAccounts(int index) {
      return subAccounts_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountGroupFieldNames;
      if (hasGroupId) {
        output.WriteString(1, field_names[0], GroupId);
      }
      if (hasMasterAccountId) {
        output.WriteString(2, field_names[1], MasterAccountId);
      }
      if (hasRelationType) {
        output.WriteUInt32(3, field_names[2], RelationType);
      }
      if (subAccounts_.Count > 0) {
        output.WriteMessageArray(4, field_names[3], subAccounts_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGroupId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, GroupId);
      }
      if (hasMasterAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, MasterAccountId);
      }
      if (hasRelationType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, RelationType);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.SubAccount element in SubAccountsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountGroup ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountGroup ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountGroup ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountGroup ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountGroup ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountGroup ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountGroup ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountGroup ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountGroup ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountGroup ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountGroup MakeReadOnly() {
      subAccounts_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountGroup prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountGroup, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountGroup cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountGroup result;
      
      private AccountGroup PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountGroup original = result;
          result = new AccountGroup();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountGroup MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountGroup.Descriptor; }
      }
      
      public override AccountGroup DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountGroup.DefaultInstance; }
      }
      
      public override AccountGroup BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountGroup) {
          return MergeFrom((AccountGroup) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountGroup other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountGroup.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGroupId) {
          GroupId = other.GroupId;
        }
        if (other.HasMasterAccountId) {
          MasterAccountId = other.MasterAccountId;
        }
        if (other.HasRelationType) {
          RelationType = other.RelationType;
        }
        if (other.subAccounts_.Count != 0) {
          result.subAccounts_.Add(other.subAccounts_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountGroupFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountGroupFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasGroupId = input.ReadString(ref result.groupId_);
              break;
            }
            case 18: {
              result.hasMasterAccountId = input.ReadString(ref result.masterAccountId_);
              break;
            }
            case 24: {
              result.hasRelationType = input.ReadUInt32(ref result.relationType_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.subAccounts_, global::CmsApiSamples.Protocol.CMSApi.SubAccount.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasGroupId {
        get { return result.hasGroupId; }
      }
      public string GroupId {
        get { return result.GroupId; }
        set { SetGroupId(value); }
      }
      public Builder SetGroupId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGroupId = true;
        result.groupId_ = value;
        return this;
      }
      public Builder ClearGroupId() {
        PrepareBuilder();
        result.hasGroupId = false;
        result.groupId_ = "";
        return this;
      }
      
      public bool HasMasterAccountId {
        get { return result.hasMasterAccountId; }
      }
      public string MasterAccountId {
        get { return result.MasterAccountId; }
        set { SetMasterAccountId(value); }
      }
      public Builder SetMasterAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMasterAccountId = true;
        result.masterAccountId_ = value;
        return this;
      }
      public Builder ClearMasterAccountId() {
        PrepareBuilder();
        result.hasMasterAccountId = false;
        result.masterAccountId_ = "";
        return this;
      }
      
      public bool HasRelationType {
        get { return result.hasRelationType; }
      }
      [global::System.CLSCompliant(false)]
      public uint RelationType {
        get { return result.RelationType; }
        set { SetRelationType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetRelationType(uint value) {
        PrepareBuilder();
        result.hasRelationType = true;
        result.relationType_ = value;
        return this;
      }
      public Builder ClearRelationType() {
        PrepareBuilder();
        result.hasRelationType = false;
        result.relationType_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.SubAccount> SubAccountsList {
        get { return PrepareBuilder().subAccounts_; }
      }
      public int SubAccountsCount {
        get { return result.SubAccountsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.SubAccount GetSubAccounts(int index) {
        return result.GetSubAccounts(index);
      }
      public Builder SetSubAccounts(int index, global::CmsApiSamples.Protocol.CMSApi.SubAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.subAccounts_[index] = value;
        return this;
      }
      public Builder SetSubAccounts(int index, global::CmsApiSamples.Protocol.CMSApi.SubAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.subAccounts_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSubAccounts(global::CmsApiSamples.Protocol.CMSApi.SubAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.subAccounts_.Add(value);
        return this;
      }
      public Builder AddSubAccounts(global::CmsApiSamples.Protocol.CMSApi.SubAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.subAccounts_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSubAccounts(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.SubAccount> values) {
        PrepareBuilder();
        result.subAccounts_.Add(values);
        return this;
      }
      public Builder ClearSubAccounts() {
        PrepareBuilder();
        result.subAccounts_.Clear();
        return this;
      }
    }
    static AccountGroup() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SubAccount : pb::GeneratedMessage<SubAccount, SubAccount.Builder> {
    private SubAccount() { }
    private static readonly SubAccount defaultInstance = new SubAccount().MakeReadOnly();
    private static readonly string[] _subAccountFieldNames = new string[] { "account_id", "account_name", "brokerage_account_number", "purchasing_power_fraction" };
    private static readonly uint[] _subAccountFieldTags = new uint[] { 10, 18, 26, 33 };
    public static SubAccount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubAccount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubAccount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_SubAccount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubAccount, SubAccount.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_SubAccount__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private string accountId_ = "";
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public string AccountId {
      get { return accountId_; }
    }
    
    public const int AccountNameFieldNumber = 2;
    private bool hasAccountName;
    private string accountName_ = "";
    public bool HasAccountName {
      get { return hasAccountName; }
    }
    public string AccountName {
      get { return accountName_; }
    }
    
    public const int BrokerageAccountNumberFieldNumber = 3;
    private bool hasBrokerageAccountNumber;
    private string brokerageAccountNumber_ = "";
    public bool HasBrokerageAccountNumber {
      get { return hasBrokerageAccountNumber; }
    }
    public string BrokerageAccountNumber {
      get { return brokerageAccountNumber_; }
    }
    
    public const int PurchasingPowerFractionFieldNumber = 4;
    private bool hasPurchasingPowerFraction;
    private double purchasingPowerFraction_;
    public bool HasPurchasingPowerFraction {
      get { return hasPurchasingPowerFraction; }
    }
    public double PurchasingPowerFraction {
      get { return purchasingPowerFraction_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _subAccountFieldNames;
      if (hasAccountId) {
        output.WriteString(1, field_names[0], AccountId);
      }
      if (hasAccountName) {
        output.WriteString(2, field_names[1], AccountName);
      }
      if (hasBrokerageAccountNumber) {
        output.WriteString(3, field_names[2], BrokerageAccountNumber);
      }
      if (hasPurchasingPowerFraction) {
        output.WriteDouble(4, field_names[3], PurchasingPowerFraction);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AccountId);
      }
      if (hasAccountName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, AccountName);
      }
      if (hasBrokerageAccountNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(3, BrokerageAccountNumber);
      }
      if (hasPurchasingPowerFraction) {
        size += pb::CodedOutputStream.ComputeDoubleSize(4, PurchasingPowerFraction);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SubAccount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubAccount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubAccount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubAccount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubAccount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubAccount MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubAccount prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SubAccount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubAccount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubAccount result;
      
      private SubAccount PrepareBuilder() {
        if (resultIsReadOnly) {
          SubAccount original = result;
          result = new SubAccount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubAccount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SubAccount.Descriptor; }
      }
      
      public override SubAccount DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.SubAccount.DefaultInstance; }
      }
      
      public override SubAccount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubAccount) {
          return MergeFrom((SubAccount) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubAccount other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.SubAccount.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasAccountName) {
          AccountName = other.AccountName;
        }
        if (other.HasBrokerageAccountNumber) {
          BrokerageAccountNumber = other.BrokerageAccountNumber;
        }
        if (other.HasPurchasingPowerFraction) {
          PurchasingPowerFraction = other.PurchasingPowerFraction;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccountId = input.ReadString(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasAccountName = input.ReadString(ref result.accountName_);
              break;
            }
            case 26: {
              result.hasBrokerageAccountNumber = input.ReadString(ref result.brokerageAccountNumber_);
              break;
            }
            case 33: {
              result.hasPurchasingPowerFraction = input.ReadDouble(ref result.purchasingPowerFraction_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public string AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = "";
        return this;
      }
      
      public bool HasAccountName {
        get { return result.hasAccountName; }
      }
      public string AccountName {
        get { return result.AccountName; }
        set { SetAccountName(value); }
      }
      public Builder SetAccountName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountName = true;
        result.accountName_ = value;
        return this;
      }
      public Builder ClearAccountName() {
        PrepareBuilder();
        result.hasAccountName = false;
        result.accountName_ = "";
        return this;
      }
      
      public bool HasBrokerageAccountNumber {
        get { return result.hasBrokerageAccountNumber; }
      }
      public string BrokerageAccountNumber {
        get { return result.BrokerageAccountNumber; }
        set { SetBrokerageAccountNumber(value); }
      }
      public Builder SetBrokerageAccountNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageAccountNumber = true;
        result.brokerageAccountNumber_ = value;
        return this;
      }
      public Builder ClearBrokerageAccountNumber() {
        PrepareBuilder();
        result.hasBrokerageAccountNumber = false;
        result.brokerageAccountNumber_ = "";
        return this;
      }
      
      public bool HasPurchasingPowerFraction {
        get { return result.hasPurchasingPowerFraction; }
      }
      public double PurchasingPowerFraction {
        get { return result.PurchasingPowerFraction; }
        set { SetPurchasingPowerFraction(value); }
      }
      public Builder SetPurchasingPowerFraction(double value) {
        PrepareBuilder();
        result.hasPurchasingPowerFraction = true;
        result.purchasingPowerFraction_ = value;
        return this;
      }
      public Builder ClearPurchasingPowerFraction() {
        PrepareBuilder();
        result.hasPurchasingPowerFraction = false;
        result.purchasingPowerFraction_ = 0D;
        return this;
      }
    }
    static SubAccount() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TradePriceLimit : pb::GeneratedMessage<TradePriceLimit, TradePriceLimit.Builder> {
    private TradePriceLimit() { }
    private static readonly TradePriceLimit defaultInstance = new TradePriceLimit().MakeReadOnly();
    private static readonly string[] _tradePriceLimitFieldNames = new string[] { "mode", "ticks", "value" };
    private static readonly uint[] _tradePriceLimitFieldTags = new uint[] { 8, 16, 26 };
    public static TradePriceLimit DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TradePriceLimit DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TradePriceLimit ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradePriceLimit__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TradePriceLimit, TradePriceLimit.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradePriceLimit__FieldAccessorTable; }
    }
    
    public const int ModeFieldNumber = 1;
    private bool hasMode;
    private uint mode_;
    public bool HasMode {
      get { return hasMode; }
    }
    [global::System.CLSCompliant(false)]
    public uint Mode {
      get { return mode_; }
    }
    
    public const int TicksFieldNumber = 2;
    private bool hasTicks;
    private int ticks_;
    public bool HasTicks {
      get { return hasTicks; }
    }
    public int Ticks {
      get { return ticks_; }
    }
    
    public const int ValueFieldNumber = 3;
    private bool hasValue;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValue value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValue Value {
      get { return value_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tradePriceLimitFieldNames;
      if (hasMode) {
        output.WriteUInt32(1, field_names[0], Mode);
      }
      if (hasTicks) {
        output.WriteSInt32(2, field_names[1], Ticks);
      }
      if (hasValue) {
        output.WriteMessage(3, field_names[2], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMode) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Mode);
      }
      if (hasTicks) {
        size += pb::CodedOutputStream.ComputeSInt32Size(2, Ticks);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TradePriceLimit ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradePriceLimit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradePriceLimit ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradePriceLimit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradePriceLimit ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradePriceLimit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TradePriceLimit ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TradePriceLimit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TradePriceLimit ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradePriceLimit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TradePriceLimit MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TradePriceLimit prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TradePriceLimit, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TradePriceLimit cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TradePriceLimit result;
      
      private TradePriceLimit PrepareBuilder() {
        if (resultIsReadOnly) {
          TradePriceLimit original = result;
          result = new TradePriceLimit();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TradePriceLimit MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit.Descriptor; }
      }
      
      public override TradePriceLimit DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit.DefaultInstance; }
      }
      
      public override TradePriceLimit BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TradePriceLimit) {
          return MergeFrom((TradePriceLimit) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TradePriceLimit other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.TradePriceLimit.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMode) {
          Mode = other.Mode;
        }
        if (other.HasTicks) {
          Ticks = other.Ticks;
        }
        if (other.HasValue) {
          MergeValue(other.Value);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tradePriceLimitFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tradePriceLimitFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMode = input.ReadUInt32(ref result.mode_);
              break;
            }
            case 16: {
              result.hasTicks = input.ReadSInt32(ref result.ticks_);
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder();
              if (result.hasValue) {
                subBuilder.MergeFrom(Value);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Value = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMode {
        get { return result.hasMode; }
      }
      [global::System.CLSCompliant(false)]
      public uint Mode {
        get { return result.Mode; }
        set { SetMode(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMode(uint value) {
        PrepareBuilder();
        result.hasMode = true;
        result.mode_ = value;
        return this;
      }
      public Builder ClearMode() {
        PrepareBuilder();
        result.hasMode = false;
        result.mode_ = 0;
        return this;
      }
      
      public bool HasTicks {
        get { return result.hasTicks; }
      }
      public int Ticks {
        get { return result.Ticks; }
        set { SetTicks(value); }
      }
      public Builder SetTicks(int value) {
        PrepareBuilder();
        result.hasTicks = true;
        result.ticks_ = value;
        return this;
      }
      public Builder ClearTicks() {
        PrepareBuilder();
        result.hasTicks = false;
        result.ticks_ = 0;
        return this;
      }
      
      public bool HasValue {
       get { return result.hasValue; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValue Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder SetValue(global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValue(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValue &&
            result.value_ != global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance) {
            result.value_ = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder(result.value_).MergeFrom(value).BuildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = null;
        return this;
      }
    }
    static TradePriceLimit() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TradePriceLimitPercent : pb::GeneratedMessage<TradePriceLimitPercent, TradePriceLimitPercent.Builder> {
    private TradePriceLimitPercent() { }
    private static readonly TradePriceLimitPercent defaultInstance = new TradePriceLimitPercent().MakeReadOnly();
    private static readonly string[] _tradePriceLimitPercentFieldNames = new string[] { "mode", "value" };
    private static readonly uint[] _tradePriceLimitPercentFieldTags = new uint[] { 8, 18 };
    public static TradePriceLimitPercent DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TradePriceLimitPercent DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TradePriceLimitPercent ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradePriceLimitPercent__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TradePriceLimitPercent, TradePriceLimitPercent.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradePriceLimitPercent__FieldAccessorTable; }
    }
    
    public const int ModeFieldNumber = 1;
    private bool hasMode;
    private uint mode_;
    public bool HasMode {
      get { return hasMode; }
    }
    [global::System.CLSCompliant(false)]
    public uint Mode {
      get { return mode_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble Value {
      get { return value_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tradePriceLimitPercentFieldNames;
      if (hasMode) {
        output.WriteUInt32(1, field_names[0], Mode);
      }
      if (hasValue) {
        output.WriteMessage(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMode) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Mode);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TradePriceLimitPercent ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradePriceLimitPercent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradePriceLimitPercent ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradePriceLimitPercent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradePriceLimitPercent ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradePriceLimitPercent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TradePriceLimitPercent ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TradePriceLimitPercent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TradePriceLimitPercent ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradePriceLimitPercent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TradePriceLimitPercent MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TradePriceLimitPercent prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TradePriceLimitPercent, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TradePriceLimitPercent cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TradePriceLimitPercent result;
      
      private TradePriceLimitPercent PrepareBuilder() {
        if (resultIsReadOnly) {
          TradePriceLimitPercent original = result;
          result = new TradePriceLimitPercent();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TradePriceLimitPercent MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent.Descriptor; }
      }
      
      public override TradePriceLimitPercent DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent.DefaultInstance; }
      }
      
      public override TradePriceLimitPercent BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TradePriceLimitPercent) {
          return MergeFrom((TradePriceLimitPercent) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TradePriceLimitPercent other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitPercent.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMode) {
          Mode = other.Mode;
        }
        if (other.HasValue) {
          MergeValue(other.Value);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tradePriceLimitPercentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tradePriceLimitPercentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMode = input.ReadUInt32(ref result.mode_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.CreateBuilder();
              if (result.hasValue) {
                subBuilder.MergeFrom(Value);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Value = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMode {
        get { return result.hasMode; }
      }
      [global::System.CLSCompliant(false)]
      public uint Mode {
        get { return result.Mode; }
        set { SetMode(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMode(uint value) {
        PrepareBuilder();
        result.hasMode = true;
        result.mode_ = value;
        return this;
      }
      public Builder ClearMode() {
        PrepareBuilder();
        result.hasMode = false;
        result.mode_ = 0;
        return this;
      }
      
      public bool HasValue {
       get { return result.hasValue; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder SetValue(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = builderForValue.Build();
        return this;
      }
      public Builder MergeValue(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasValue &&
            result.value_ != global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance) {
            result.value_ = global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.CreateBuilder(result.value_).MergeFrom(value).BuildPartial();
        } else {
          result.value_ = value;
        }
        result.hasValue = true;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = null;
        return this;
      }
    }
    static TradePriceLimitPercent() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LimitValue : pb::GeneratedMessage<LimitValue, LimitValue.Builder> {
    private LimitValue() { }
    private static readonly LimitValue defaultInstance = new LimitValue().MakeReadOnly();
    private static readonly string[] _limitValueFieldNames = new string[] { "expiration_limit", "mode", "value" };
    private static readonly uint[] _limitValueFieldTags = new uint[] { 26, 8, 16 };
    public static LimitValue DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LimitValue DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LimitValue ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_LimitValue__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LimitValue, LimitValue.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_LimitValue__FieldAccessorTable; }
    }
    
    public const int ModeFieldNumber = 1;
    private bool hasMode;
    private uint mode_;
    public bool HasMode {
      get { return hasMode; }
    }
    [global::System.CLSCompliant(false)]
    public uint Mode {
      get { return mode_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private int value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public int Value {
      get { return value_; }
    }
    
    public const int ExpirationLimitFieldNumber = 3;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit> expirationLimit_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit> ExpirationLimitList {
      get { return expirationLimit_; }
    }
    public int ExpirationLimitCount {
      get { return expirationLimit_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit GetExpirationLimit(int index) {
      return expirationLimit_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _limitValueFieldNames;
      if (hasMode) {
        output.WriteUInt32(1, field_names[1], Mode);
      }
      if (hasValue) {
        output.WriteSInt32(2, field_names[2], Value);
      }
      if (expirationLimit_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], expirationLimit_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMode) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Mode);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeSInt32Size(2, Value);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit element in ExpirationLimitList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LimitValue ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LimitValue ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LimitValue ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LimitValue ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LimitValue ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LimitValue ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LimitValue ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LimitValue ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LimitValue ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LimitValue ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LimitValue MakeReadOnly() {
      expirationLimit_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LimitValue prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LimitValue, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LimitValue cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LimitValue result;
      
      private LimitValue PrepareBuilder() {
        if (resultIsReadOnly) {
          LimitValue original = result;
          result = new LimitValue();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LimitValue MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LimitValue.Descriptor; }
      }
      
      public override LimitValue DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance; }
      }
      
      public override LimitValue BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LimitValue) {
          return MergeFrom((LimitValue) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LimitValue other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMode) {
          Mode = other.Mode;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        if (other.expirationLimit_.Count != 0) {
          result.expirationLimit_.Add(other.expirationLimit_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_limitValueFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _limitValueFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMode = input.ReadUInt32(ref result.mode_);
              break;
            }
            case 16: {
              result.hasValue = input.ReadSInt32(ref result.value_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.expirationLimit_, global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMode {
        get { return result.hasMode; }
      }
      [global::System.CLSCompliant(false)]
      public uint Mode {
        get { return result.Mode; }
        set { SetMode(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMode(uint value) {
        PrepareBuilder();
        result.hasMode = true;
        result.mode_ = value;
        return this;
      }
      public Builder ClearMode() {
        PrepareBuilder();
        result.hasMode = false;
        result.mode_ = 0;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public int Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(int value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit> ExpirationLimitList {
        get { return PrepareBuilder().expirationLimit_; }
      }
      public int ExpirationLimitCount {
        get { return result.ExpirationLimitCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit GetExpirationLimit(int index) {
        return result.GetExpirationLimit(index);
      }
      public Builder SetExpirationLimit(int index, global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.expirationLimit_[index] = value;
        return this;
      }
      public Builder SetExpirationLimit(int index, global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.expirationLimit_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddExpirationLimit(global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.expirationLimit_.Add(value);
        return this;
      }
      public Builder AddExpirationLimit(global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.expirationLimit_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeExpirationLimit(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit> values) {
        PrepareBuilder();
        result.expirationLimit_.Add(values);
        return this;
      }
      public Builder ClearExpirationLimit() {
        PrepareBuilder();
        result.expirationLimit_.Clear();
        return this;
      }
    }
    static LimitValue() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LimitValueDouble : pb::GeneratedMessage<LimitValueDouble, LimitValueDouble.Builder> {
    private LimitValueDouble() { }
    private static readonly LimitValueDouble defaultInstance = new LimitValueDouble().MakeReadOnly();
    private static readonly string[] _limitValueDoubleFieldNames = new string[] { "mode", "value" };
    private static readonly uint[] _limitValueDoubleFieldTags = new uint[] { 8, 17 };
    public static LimitValueDouble DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LimitValueDouble DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LimitValueDouble ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_LimitValueDouble__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LimitValueDouble, LimitValueDouble.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_LimitValueDouble__FieldAccessorTable; }
    }
    
    public const int ModeFieldNumber = 1;
    private bool hasMode;
    private uint mode_;
    public bool HasMode {
      get { return hasMode; }
    }
    [global::System.CLSCompliant(false)]
    public uint Mode {
      get { return mode_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private double value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public double Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _limitValueDoubleFieldNames;
      if (hasMode) {
        output.WriteUInt32(1, field_names[0], Mode);
      }
      if (hasValue) {
        output.WriteDouble(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMode) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Mode);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeDoubleSize(2, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LimitValueDouble ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LimitValueDouble ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LimitValueDouble ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LimitValueDouble ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LimitValueDouble ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LimitValueDouble ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LimitValueDouble ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LimitValueDouble ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LimitValueDouble ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LimitValueDouble ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LimitValueDouble MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LimitValueDouble prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LimitValueDouble, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LimitValueDouble cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LimitValueDouble result;
      
      private LimitValueDouble PrepareBuilder() {
        if (resultIsReadOnly) {
          LimitValueDouble original = result;
          result = new LimitValueDouble();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LimitValueDouble MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Descriptor; }
      }
      
      public override LimitValueDouble DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance; }
      }
      
      public override LimitValueDouble BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LimitValueDouble) {
          return MergeFrom((LimitValueDouble) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LimitValueDouble other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMode) {
          Mode = other.Mode;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_limitValueDoubleFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _limitValueDoubleFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMode = input.ReadUInt32(ref result.mode_);
              break;
            }
            case 17: {
              result.hasValue = input.ReadDouble(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMode {
        get { return result.hasMode; }
      }
      [global::System.CLSCompliant(false)]
      public uint Mode {
        get { return result.Mode; }
        set { SetMode(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetMode(uint value) {
        PrepareBuilder();
        result.hasMode = true;
        result.mode_ = value;
        return this;
      }
      public Builder ClearMode() {
        PrepareBuilder();
        result.hasMode = false;
        result.mode_ = 0;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public double Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(double value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0D;
        return this;
      }
    }
    static LimitValueDouble() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ExpirationLimit : pb::GeneratedMessage<ExpirationLimit, ExpirationLimit.Builder> {
    private ExpirationLimit() { }
    private static readonly ExpirationLimit defaultInstance = new ExpirationLimit().MakeReadOnly();
    private static readonly string[] _expirationLimitFieldNames = new string[] { "days_before_expiration", "value" };
    private static readonly uint[] _expirationLimitFieldTags = new uint[] { 8, 16 };
    public static ExpirationLimit DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ExpirationLimit DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ExpirationLimit ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ExpirationLimit__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ExpirationLimit, ExpirationLimit.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ExpirationLimit__FieldAccessorTable; }
    }
    
    public const int DaysBeforeExpirationFieldNumber = 1;
    private bool hasDaysBeforeExpiration;
    private uint daysBeforeExpiration_;
    public bool HasDaysBeforeExpiration {
      get { return hasDaysBeforeExpiration; }
    }
    [global::System.CLSCompliant(false)]
    public uint DaysBeforeExpiration {
      get { return daysBeforeExpiration_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private int value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public int Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _expirationLimitFieldNames;
      if (hasDaysBeforeExpiration) {
        output.WriteUInt32(1, field_names[0], DaysBeforeExpiration);
      }
      if (hasValue) {
        output.WriteSInt32(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDaysBeforeExpiration) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, DaysBeforeExpiration);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeSInt32Size(2, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ExpirationLimit ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExpirationLimit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExpirationLimit ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExpirationLimit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExpirationLimit ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExpirationLimit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ExpirationLimit ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ExpirationLimit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ExpirationLimit ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExpirationLimit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ExpirationLimit MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ExpirationLimit prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ExpirationLimit, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ExpirationLimit cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ExpirationLimit result;
      
      private ExpirationLimit PrepareBuilder() {
        if (resultIsReadOnly) {
          ExpirationLimit original = result;
          result = new ExpirationLimit();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ExpirationLimit MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit.Descriptor; }
      }
      
      public override ExpirationLimit DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit.DefaultInstance; }
      }
      
      public override ExpirationLimit BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ExpirationLimit) {
          return MergeFrom((ExpirationLimit) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ExpirationLimit other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ExpirationLimit.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDaysBeforeExpiration) {
          DaysBeforeExpiration = other.DaysBeforeExpiration;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_expirationLimitFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _expirationLimitFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDaysBeforeExpiration = input.ReadUInt32(ref result.daysBeforeExpiration_);
              break;
            }
            case 16: {
              result.hasValue = input.ReadSInt32(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDaysBeforeExpiration {
        get { return result.hasDaysBeforeExpiration; }
      }
      [global::System.CLSCompliant(false)]
      public uint DaysBeforeExpiration {
        get { return result.DaysBeforeExpiration; }
        set { SetDaysBeforeExpiration(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetDaysBeforeExpiration(uint value) {
        PrepareBuilder();
        result.hasDaysBeforeExpiration = true;
        result.daysBeforeExpiration_ = value;
        return this;
      }
      public Builder ClearDaysBeforeExpiration() {
        PrepareBuilder();
        result.hasDaysBeforeExpiration = false;
        result.daysBeforeExpiration_ = 0;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public int Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(int value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0;
        return this;
      }
    }
    static ExpirationLimit() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MarginSubsystemParameters : pb::GeneratedMessage<MarginSubsystemParameters, MarginSubsystemParameters.Builder> {
    private MarginSubsystemParameters() { }
    private static readonly MarginSubsystemParameters defaultInstance = new MarginSubsystemParameters().MakeReadOnly();
    private static readonly string[] _marginSubsystemParametersFieldNames = new string[] { "adjust_price_by_netchange", "allowable_margin_credit", "check_negative_balance", "cross_margining", "include_nov_pp", "include_ote_ll", "include_ote_pp", "include_upl_ll", "instrument_group_margin_multiplier", "margin_multiplier", "theo_ticks", "use_bba_nov_upl", "use_bba_ote", "use_brokerage_margins_only", "use_instrument_group_margin_multiplier", "use_theo_prices" };
    private static readonly uint[] _marginSubsystemParametersFieldTags = new uint[] { 96, 9, 56, 16, 32, 48, 24, 40, 129, 113, 72, 88, 80, 104, 120, 64 };
    public static MarginSubsystemParameters DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MarginSubsystemParameters DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MarginSubsystemParameters ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_MarginSubsystemParameters__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MarginSubsystemParameters, MarginSubsystemParameters.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_MarginSubsystemParameters__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum IncludeOption {
        YES = 1,
        NEGATIVE = 2,
        NO = 3,
      }
      
    }
    #endregion
    
    public const int AllowableMarginCreditFieldNumber = 1;
    private bool hasAllowableMarginCredit;
    private double allowableMarginCredit_;
    public bool HasAllowableMarginCredit {
      get { return hasAllowableMarginCredit; }
    }
    public double AllowableMarginCredit {
      get { return allowableMarginCredit_; }
    }
    
    public const int CrossMarginingFieldNumber = 2;
    private bool hasCrossMargining;
    private bool crossMargining_;
    public bool HasCrossMargining {
      get { return hasCrossMargining; }
    }
    public bool CrossMargining {
      get { return crossMargining_; }
    }
    
    public const int IncludeOtePpFieldNumber = 3;
    private bool hasIncludeOtePp;
    private uint includeOtePp_;
    public bool HasIncludeOtePp {
      get { return hasIncludeOtePp; }
    }
    [global::System.CLSCompliant(false)]
    public uint IncludeOtePp {
      get { return includeOtePp_; }
    }
    
    public const int IncludeNovPpFieldNumber = 4;
    private bool hasIncludeNovPp;
    private uint includeNovPp_;
    public bool HasIncludeNovPp {
      get { return hasIncludeNovPp; }
    }
    [global::System.CLSCompliant(false)]
    public uint IncludeNovPp {
      get { return includeNovPp_; }
    }
    
    public const int IncludeUplLlFieldNumber = 5;
    private bool hasIncludeUplLl;
    private uint includeUplLl_;
    public bool HasIncludeUplLl {
      get { return hasIncludeUplLl; }
    }
    [global::System.CLSCompliant(false)]
    public uint IncludeUplLl {
      get { return includeUplLl_; }
    }
    
    public const int IncludeOteLlFieldNumber = 6;
    private bool hasIncludeOteLl;
    private uint includeOteLl_;
    public bool HasIncludeOteLl {
      get { return hasIncludeOteLl; }
    }
    [global::System.CLSCompliant(false)]
    public uint IncludeOteLl {
      get { return includeOteLl_; }
    }
    
    public const int CheckNegativeBalanceFieldNumber = 7;
    private bool hasCheckNegativeBalance;
    private bool checkNegativeBalance_;
    public bool HasCheckNegativeBalance {
      get { return hasCheckNegativeBalance; }
    }
    public bool CheckNegativeBalance {
      get { return checkNegativeBalance_; }
    }
    
    public const int UseTheoPricesFieldNumber = 8;
    private bool hasUseTheoPrices;
    private bool useTheoPrices_;
    public bool HasUseTheoPrices {
      get { return hasUseTheoPrices; }
    }
    public bool UseTheoPrices {
      get { return useTheoPrices_; }
    }
    
    public const int TheoTicksFieldNumber = 9;
    private bool hasTheoTicks;
    private int theoTicks_;
    public bool HasTheoTicks {
      get { return hasTheoTicks; }
    }
    public int TheoTicks {
      get { return theoTicks_; }
    }
    
    public const int UseBbaOteFieldNumber = 10;
    private bool hasUseBbaOte;
    private bool useBbaOte_;
    public bool HasUseBbaOte {
      get { return hasUseBbaOte; }
    }
    public bool UseBbaOte {
      get { return useBbaOte_; }
    }
    
    public const int UseBbaNovUplFieldNumber = 11;
    private bool hasUseBbaNovUpl;
    private bool useBbaNovUpl_;
    public bool HasUseBbaNovUpl {
      get { return hasUseBbaNovUpl; }
    }
    public bool UseBbaNovUpl {
      get { return useBbaNovUpl_; }
    }
    
    public const int AdjustPriceByNetchangeFieldNumber = 12;
    private bool hasAdjustPriceByNetchange;
    private bool adjustPriceByNetchange_;
    public bool HasAdjustPriceByNetchange {
      get { return hasAdjustPriceByNetchange; }
    }
    public bool AdjustPriceByNetchange {
      get { return adjustPriceByNetchange_; }
    }
    
    public const int UseBrokerageMarginsOnlyFieldNumber = 13;
    private bool hasUseBrokerageMarginsOnly;
    private bool useBrokerageMarginsOnly_;
    public bool HasUseBrokerageMarginsOnly {
      get { return hasUseBrokerageMarginsOnly; }
    }
    public bool UseBrokerageMarginsOnly {
      get { return useBrokerageMarginsOnly_; }
    }
    
    public const int MarginMultiplierFieldNumber = 14;
    private bool hasMarginMultiplier;
    private double marginMultiplier_;
    public bool HasMarginMultiplier {
      get { return hasMarginMultiplier; }
    }
    public double MarginMultiplier {
      get { return marginMultiplier_; }
    }
    
    public const int UseInstrumentGroupMarginMultiplierFieldNumber = 15;
    private bool hasUseInstrumentGroupMarginMultiplier;
    private bool useInstrumentGroupMarginMultiplier_;
    public bool HasUseInstrumentGroupMarginMultiplier {
      get { return hasUseInstrumentGroupMarginMultiplier; }
    }
    public bool UseInstrumentGroupMarginMultiplier {
      get { return useInstrumentGroupMarginMultiplier_; }
    }
    
    public const int InstrumentGroupMarginMultiplierFieldNumber = 16;
    private bool hasInstrumentGroupMarginMultiplier;
    private double instrumentGroupMarginMultiplier_;
    public bool HasInstrumentGroupMarginMultiplier {
      get { return hasInstrumentGroupMarginMultiplier; }
    }
    public double InstrumentGroupMarginMultiplier {
      get { return instrumentGroupMarginMultiplier_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _marginSubsystemParametersFieldNames;
      if (hasAllowableMarginCredit) {
        output.WriteDouble(1, field_names[1], AllowableMarginCredit);
      }
      if (hasCrossMargining) {
        output.WriteBool(2, field_names[3], CrossMargining);
      }
      if (hasIncludeOtePp) {
        output.WriteUInt32(3, field_names[6], IncludeOtePp);
      }
      if (hasIncludeNovPp) {
        output.WriteUInt32(4, field_names[4], IncludeNovPp);
      }
      if (hasIncludeUplLl) {
        output.WriteUInt32(5, field_names[7], IncludeUplLl);
      }
      if (hasIncludeOteLl) {
        output.WriteUInt32(6, field_names[5], IncludeOteLl);
      }
      if (hasCheckNegativeBalance) {
        output.WriteBool(7, field_names[2], CheckNegativeBalance);
      }
      if (hasUseTheoPrices) {
        output.WriteBool(8, field_names[15], UseTheoPrices);
      }
      if (hasTheoTicks) {
        output.WriteSInt32(9, field_names[10], TheoTicks);
      }
      if (hasUseBbaOte) {
        output.WriteBool(10, field_names[12], UseBbaOte);
      }
      if (hasUseBbaNovUpl) {
        output.WriteBool(11, field_names[11], UseBbaNovUpl);
      }
      if (hasAdjustPriceByNetchange) {
        output.WriteBool(12, field_names[0], AdjustPriceByNetchange);
      }
      if (hasUseBrokerageMarginsOnly) {
        output.WriteBool(13, field_names[13], UseBrokerageMarginsOnly);
      }
      if (hasMarginMultiplier) {
        output.WriteDouble(14, field_names[9], MarginMultiplier);
      }
      if (hasUseInstrumentGroupMarginMultiplier) {
        output.WriteBool(15, field_names[14], UseInstrumentGroupMarginMultiplier);
      }
      if (hasInstrumentGroupMarginMultiplier) {
        output.WriteDouble(16, field_names[8], InstrumentGroupMarginMultiplier);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAllowableMarginCredit) {
        size += pb::CodedOutputStream.ComputeDoubleSize(1, AllowableMarginCredit);
      }
      if (hasCrossMargining) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, CrossMargining);
      }
      if (hasIncludeOtePp) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, IncludeOtePp);
      }
      if (hasIncludeNovPp) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, IncludeNovPp);
      }
      if (hasIncludeUplLl) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, IncludeUplLl);
      }
      if (hasIncludeOteLl) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, IncludeOteLl);
      }
      if (hasCheckNegativeBalance) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, CheckNegativeBalance);
      }
      if (hasUseTheoPrices) {
        size += pb::CodedOutputStream.ComputeBoolSize(8, UseTheoPrices);
      }
      if (hasTheoTicks) {
        size += pb::CodedOutputStream.ComputeSInt32Size(9, TheoTicks);
      }
      if (hasUseBbaOte) {
        size += pb::CodedOutputStream.ComputeBoolSize(10, UseBbaOte);
      }
      if (hasUseBbaNovUpl) {
        size += pb::CodedOutputStream.ComputeBoolSize(11, UseBbaNovUpl);
      }
      if (hasAdjustPriceByNetchange) {
        size += pb::CodedOutputStream.ComputeBoolSize(12, AdjustPriceByNetchange);
      }
      if (hasUseBrokerageMarginsOnly) {
        size += pb::CodedOutputStream.ComputeBoolSize(13, UseBrokerageMarginsOnly);
      }
      if (hasMarginMultiplier) {
        size += pb::CodedOutputStream.ComputeDoubleSize(14, MarginMultiplier);
      }
      if (hasUseInstrumentGroupMarginMultiplier) {
        size += pb::CodedOutputStream.ComputeBoolSize(15, UseInstrumentGroupMarginMultiplier);
      }
      if (hasInstrumentGroupMarginMultiplier) {
        size += pb::CodedOutputStream.ComputeDoubleSize(16, InstrumentGroupMarginMultiplier);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MarginSubsystemParameters ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MarginSubsystemParameters ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MarginSubsystemParameters ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MarginSubsystemParameters ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MarginSubsystemParameters ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MarginSubsystemParameters ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MarginSubsystemParameters ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MarginSubsystemParameters ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MarginSubsystemParameters ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MarginSubsystemParameters ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MarginSubsystemParameters MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MarginSubsystemParameters prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MarginSubsystemParameters, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MarginSubsystemParameters cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MarginSubsystemParameters result;
      
      private MarginSubsystemParameters PrepareBuilder() {
        if (resultIsReadOnly) {
          MarginSubsystemParameters original = result;
          result = new MarginSubsystemParameters();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MarginSubsystemParameters MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters.Descriptor; }
      }
      
      public override MarginSubsystemParameters DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters.DefaultInstance; }
      }
      
      public override MarginSubsystemParameters BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MarginSubsystemParameters) {
          return MergeFrom((MarginSubsystemParameters) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MarginSubsystemParameters other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.MarginSubsystemParameters.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAllowableMarginCredit) {
          AllowableMarginCredit = other.AllowableMarginCredit;
        }
        if (other.HasCrossMargining) {
          CrossMargining = other.CrossMargining;
        }
        if (other.HasIncludeOtePp) {
          IncludeOtePp = other.IncludeOtePp;
        }
        if (other.HasIncludeNovPp) {
          IncludeNovPp = other.IncludeNovPp;
        }
        if (other.HasIncludeUplLl) {
          IncludeUplLl = other.IncludeUplLl;
        }
        if (other.HasIncludeOteLl) {
          IncludeOteLl = other.IncludeOteLl;
        }
        if (other.HasCheckNegativeBalance) {
          CheckNegativeBalance = other.CheckNegativeBalance;
        }
        if (other.HasUseTheoPrices) {
          UseTheoPrices = other.UseTheoPrices;
        }
        if (other.HasTheoTicks) {
          TheoTicks = other.TheoTicks;
        }
        if (other.HasUseBbaOte) {
          UseBbaOte = other.UseBbaOte;
        }
        if (other.HasUseBbaNovUpl) {
          UseBbaNovUpl = other.UseBbaNovUpl;
        }
        if (other.HasAdjustPriceByNetchange) {
          AdjustPriceByNetchange = other.AdjustPriceByNetchange;
        }
        if (other.HasUseBrokerageMarginsOnly) {
          UseBrokerageMarginsOnly = other.UseBrokerageMarginsOnly;
        }
        if (other.HasMarginMultiplier) {
          MarginMultiplier = other.MarginMultiplier;
        }
        if (other.HasUseInstrumentGroupMarginMultiplier) {
          UseInstrumentGroupMarginMultiplier = other.UseInstrumentGroupMarginMultiplier;
        }
        if (other.HasInstrumentGroupMarginMultiplier) {
          InstrumentGroupMarginMultiplier = other.InstrumentGroupMarginMultiplier;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_marginSubsystemParametersFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _marginSubsystemParametersFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasAllowableMarginCredit = input.ReadDouble(ref result.allowableMarginCredit_);
              break;
            }
            case 16: {
              result.hasCrossMargining = input.ReadBool(ref result.crossMargining_);
              break;
            }
            case 24: {
              result.hasIncludeOtePp = input.ReadUInt32(ref result.includeOtePp_);
              break;
            }
            case 32: {
              result.hasIncludeNovPp = input.ReadUInt32(ref result.includeNovPp_);
              break;
            }
            case 40: {
              result.hasIncludeUplLl = input.ReadUInt32(ref result.includeUplLl_);
              break;
            }
            case 48: {
              result.hasIncludeOteLl = input.ReadUInt32(ref result.includeOteLl_);
              break;
            }
            case 56: {
              result.hasCheckNegativeBalance = input.ReadBool(ref result.checkNegativeBalance_);
              break;
            }
            case 64: {
              result.hasUseTheoPrices = input.ReadBool(ref result.useTheoPrices_);
              break;
            }
            case 72: {
              result.hasTheoTicks = input.ReadSInt32(ref result.theoTicks_);
              break;
            }
            case 80: {
              result.hasUseBbaOte = input.ReadBool(ref result.useBbaOte_);
              break;
            }
            case 88: {
              result.hasUseBbaNovUpl = input.ReadBool(ref result.useBbaNovUpl_);
              break;
            }
            case 96: {
              result.hasAdjustPriceByNetchange = input.ReadBool(ref result.adjustPriceByNetchange_);
              break;
            }
            case 104: {
              result.hasUseBrokerageMarginsOnly = input.ReadBool(ref result.useBrokerageMarginsOnly_);
              break;
            }
            case 113: {
              result.hasMarginMultiplier = input.ReadDouble(ref result.marginMultiplier_);
              break;
            }
            case 120: {
              result.hasUseInstrumentGroupMarginMultiplier = input.ReadBool(ref result.useInstrumentGroupMarginMultiplier_);
              break;
            }
            case 129: {
              result.hasInstrumentGroupMarginMultiplier = input.ReadDouble(ref result.instrumentGroupMarginMultiplier_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAllowableMarginCredit {
        get { return result.hasAllowableMarginCredit; }
      }
      public double AllowableMarginCredit {
        get { return result.AllowableMarginCredit; }
        set { SetAllowableMarginCredit(value); }
      }
      public Builder SetAllowableMarginCredit(double value) {
        PrepareBuilder();
        result.hasAllowableMarginCredit = true;
        result.allowableMarginCredit_ = value;
        return this;
      }
      public Builder ClearAllowableMarginCredit() {
        PrepareBuilder();
        result.hasAllowableMarginCredit = false;
        result.allowableMarginCredit_ = 0D;
        return this;
      }
      
      public bool HasCrossMargining {
        get { return result.hasCrossMargining; }
      }
      public bool CrossMargining {
        get { return result.CrossMargining; }
        set { SetCrossMargining(value); }
      }
      public Builder SetCrossMargining(bool value) {
        PrepareBuilder();
        result.hasCrossMargining = true;
        result.crossMargining_ = value;
        return this;
      }
      public Builder ClearCrossMargining() {
        PrepareBuilder();
        result.hasCrossMargining = false;
        result.crossMargining_ = false;
        return this;
      }
      
      public bool HasIncludeOtePp {
        get { return result.hasIncludeOtePp; }
      }
      [global::System.CLSCompliant(false)]
      public uint IncludeOtePp {
        get { return result.IncludeOtePp; }
        set { SetIncludeOtePp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetIncludeOtePp(uint value) {
        PrepareBuilder();
        result.hasIncludeOtePp = true;
        result.includeOtePp_ = value;
        return this;
      }
      public Builder ClearIncludeOtePp() {
        PrepareBuilder();
        result.hasIncludeOtePp = false;
        result.includeOtePp_ = 0;
        return this;
      }
      
      public bool HasIncludeNovPp {
        get { return result.hasIncludeNovPp; }
      }
      [global::System.CLSCompliant(false)]
      public uint IncludeNovPp {
        get { return result.IncludeNovPp; }
        set { SetIncludeNovPp(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetIncludeNovPp(uint value) {
        PrepareBuilder();
        result.hasIncludeNovPp = true;
        result.includeNovPp_ = value;
        return this;
      }
      public Builder ClearIncludeNovPp() {
        PrepareBuilder();
        result.hasIncludeNovPp = false;
        result.includeNovPp_ = 0;
        return this;
      }
      
      public bool HasIncludeUplLl {
        get { return result.hasIncludeUplLl; }
      }
      [global::System.CLSCompliant(false)]
      public uint IncludeUplLl {
        get { return result.IncludeUplLl; }
        set { SetIncludeUplLl(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetIncludeUplLl(uint value) {
        PrepareBuilder();
        result.hasIncludeUplLl = true;
        result.includeUplLl_ = value;
        return this;
      }
      public Builder ClearIncludeUplLl() {
        PrepareBuilder();
        result.hasIncludeUplLl = false;
        result.includeUplLl_ = 0;
        return this;
      }
      
      public bool HasIncludeOteLl {
        get { return result.hasIncludeOteLl; }
      }
      [global::System.CLSCompliant(false)]
      public uint IncludeOteLl {
        get { return result.IncludeOteLl; }
        set { SetIncludeOteLl(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetIncludeOteLl(uint value) {
        PrepareBuilder();
        result.hasIncludeOteLl = true;
        result.includeOteLl_ = value;
        return this;
      }
      public Builder ClearIncludeOteLl() {
        PrepareBuilder();
        result.hasIncludeOteLl = false;
        result.includeOteLl_ = 0;
        return this;
      }
      
      public bool HasCheckNegativeBalance {
        get { return result.hasCheckNegativeBalance; }
      }
      public bool CheckNegativeBalance {
        get { return result.CheckNegativeBalance; }
        set { SetCheckNegativeBalance(value); }
      }
      public Builder SetCheckNegativeBalance(bool value) {
        PrepareBuilder();
        result.hasCheckNegativeBalance = true;
        result.checkNegativeBalance_ = value;
        return this;
      }
      public Builder ClearCheckNegativeBalance() {
        PrepareBuilder();
        result.hasCheckNegativeBalance = false;
        result.checkNegativeBalance_ = false;
        return this;
      }
      
      public bool HasUseTheoPrices {
        get { return result.hasUseTheoPrices; }
      }
      public bool UseTheoPrices {
        get { return result.UseTheoPrices; }
        set { SetUseTheoPrices(value); }
      }
      public Builder SetUseTheoPrices(bool value) {
        PrepareBuilder();
        result.hasUseTheoPrices = true;
        result.useTheoPrices_ = value;
        return this;
      }
      public Builder ClearUseTheoPrices() {
        PrepareBuilder();
        result.hasUseTheoPrices = false;
        result.useTheoPrices_ = false;
        return this;
      }
      
      public bool HasTheoTicks {
        get { return result.hasTheoTicks; }
      }
      public int TheoTicks {
        get { return result.TheoTicks; }
        set { SetTheoTicks(value); }
      }
      public Builder SetTheoTicks(int value) {
        PrepareBuilder();
        result.hasTheoTicks = true;
        result.theoTicks_ = value;
        return this;
      }
      public Builder ClearTheoTicks() {
        PrepareBuilder();
        result.hasTheoTicks = false;
        result.theoTicks_ = 0;
        return this;
      }
      
      public bool HasUseBbaOte {
        get { return result.hasUseBbaOte; }
      }
      public bool UseBbaOte {
        get { return result.UseBbaOte; }
        set { SetUseBbaOte(value); }
      }
      public Builder SetUseBbaOte(bool value) {
        PrepareBuilder();
        result.hasUseBbaOte = true;
        result.useBbaOte_ = value;
        return this;
      }
      public Builder ClearUseBbaOte() {
        PrepareBuilder();
        result.hasUseBbaOte = false;
        result.useBbaOte_ = false;
        return this;
      }
      
      public bool HasUseBbaNovUpl {
        get { return result.hasUseBbaNovUpl; }
      }
      public bool UseBbaNovUpl {
        get { return result.UseBbaNovUpl; }
        set { SetUseBbaNovUpl(value); }
      }
      public Builder SetUseBbaNovUpl(bool value) {
        PrepareBuilder();
        result.hasUseBbaNovUpl = true;
        result.useBbaNovUpl_ = value;
        return this;
      }
      public Builder ClearUseBbaNovUpl() {
        PrepareBuilder();
        result.hasUseBbaNovUpl = false;
        result.useBbaNovUpl_ = false;
        return this;
      }
      
      public bool HasAdjustPriceByNetchange {
        get { return result.hasAdjustPriceByNetchange; }
      }
      public bool AdjustPriceByNetchange {
        get { return result.AdjustPriceByNetchange; }
        set { SetAdjustPriceByNetchange(value); }
      }
      public Builder SetAdjustPriceByNetchange(bool value) {
        PrepareBuilder();
        result.hasAdjustPriceByNetchange = true;
        result.adjustPriceByNetchange_ = value;
        return this;
      }
      public Builder ClearAdjustPriceByNetchange() {
        PrepareBuilder();
        result.hasAdjustPriceByNetchange = false;
        result.adjustPriceByNetchange_ = false;
        return this;
      }
      
      public bool HasUseBrokerageMarginsOnly {
        get { return result.hasUseBrokerageMarginsOnly; }
      }
      public bool UseBrokerageMarginsOnly {
        get { return result.UseBrokerageMarginsOnly; }
        set { SetUseBrokerageMarginsOnly(value); }
      }
      public Builder SetUseBrokerageMarginsOnly(bool value) {
        PrepareBuilder();
        result.hasUseBrokerageMarginsOnly = true;
        result.useBrokerageMarginsOnly_ = value;
        return this;
      }
      public Builder ClearUseBrokerageMarginsOnly() {
        PrepareBuilder();
        result.hasUseBrokerageMarginsOnly = false;
        result.useBrokerageMarginsOnly_ = false;
        return this;
      }
      
      public bool HasMarginMultiplier {
        get { return result.hasMarginMultiplier; }
      }
      public double MarginMultiplier {
        get { return result.MarginMultiplier; }
        set { SetMarginMultiplier(value); }
      }
      public Builder SetMarginMultiplier(double value) {
        PrepareBuilder();
        result.hasMarginMultiplier = true;
        result.marginMultiplier_ = value;
        return this;
      }
      public Builder ClearMarginMultiplier() {
        PrepareBuilder();
        result.hasMarginMultiplier = false;
        result.marginMultiplier_ = 0D;
        return this;
      }
      
      public bool HasUseInstrumentGroupMarginMultiplier {
        get { return result.hasUseInstrumentGroupMarginMultiplier; }
      }
      public bool UseInstrumentGroupMarginMultiplier {
        get { return result.UseInstrumentGroupMarginMultiplier; }
        set { SetUseInstrumentGroupMarginMultiplier(value); }
      }
      public Builder SetUseInstrumentGroupMarginMultiplier(bool value) {
        PrepareBuilder();
        result.hasUseInstrumentGroupMarginMultiplier = true;
        result.useInstrumentGroupMarginMultiplier_ = value;
        return this;
      }
      public Builder ClearUseInstrumentGroupMarginMultiplier() {
        PrepareBuilder();
        result.hasUseInstrumentGroupMarginMultiplier = false;
        result.useInstrumentGroupMarginMultiplier_ = false;
        return this;
      }
      
      public bool HasInstrumentGroupMarginMultiplier {
        get { return result.hasInstrumentGroupMarginMultiplier; }
      }
      public double InstrumentGroupMarginMultiplier {
        get { return result.InstrumentGroupMarginMultiplier; }
        set { SetInstrumentGroupMarginMultiplier(value); }
      }
      public Builder SetInstrumentGroupMarginMultiplier(double value) {
        PrepareBuilder();
        result.hasInstrumentGroupMarginMultiplier = true;
        result.instrumentGroupMarginMultiplier_ = value;
        return this;
      }
      public Builder ClearInstrumentGroupMarginMultiplier() {
        PrepareBuilder();
        result.hasInstrumentGroupMarginMultiplier = false;
        result.instrumentGroupMarginMultiplier_ = 0D;
        return this;
      }
    }
    static MarginSubsystemParameters() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LossLimit : pb::GeneratedMessage<LossLimit, LossLimit.Builder> {
    private LossLimit() { }
    private static readonly LossLimit defaultInstance = new LossLimit().MakeReadOnly();
    private static readonly string[] _lossLimitFieldNames = new string[] { "amount", "percent", "type" };
    private static readonly uint[] _lossLimitFieldTags = new uint[] { 25, 17, 8 };
    public static LossLimit DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LossLimit DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LossLimit ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_LossLimit__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LossLimit, LossLimit.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_LossLimit__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Type {
        PERCENT = 1,
        AMOUNT = 2,
        MIN_PERCENT_AMOUNT = 3,
        MAX_PERCENT_AMOUNT = 4,
        AMOUNT_NO_LIMIT = 5,
      }
      
    }
    #endregion
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private uint type_;
    public bool HasType {
      get { return hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return type_; }
    }
    
    public const int PercentFieldNumber = 2;
    private bool hasPercent;
    private double percent_;
    public bool HasPercent {
      get { return hasPercent; }
    }
    public double Percent {
      get { return percent_; }
    }
    
    public const int AmountFieldNumber = 3;
    private bool hasAmount;
    private double amount_;
    public bool HasAmount {
      get { return hasAmount; }
    }
    public double Amount {
      get { return amount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _lossLimitFieldNames;
      if (hasType) {
        output.WriteUInt32(1, field_names[2], Type);
      }
      if (hasPercent) {
        output.WriteDouble(2, field_names[1], Percent);
      }
      if (hasAmount) {
        output.WriteDouble(3, field_names[0], Amount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Type);
      }
      if (hasPercent) {
        size += pb::CodedOutputStream.ComputeDoubleSize(2, Percent);
      }
      if (hasAmount) {
        size += pb::CodedOutputStream.ComputeDoubleSize(3, Amount);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LossLimit ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LossLimit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LossLimit ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LossLimit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LossLimit ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LossLimit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LossLimit ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LossLimit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LossLimit ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LossLimit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LossLimit MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LossLimit prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LossLimit, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LossLimit cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LossLimit result;
      
      private LossLimit PrepareBuilder() {
        if (resultIsReadOnly) {
          LossLimit original = result;
          result = new LossLimit();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LossLimit MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LossLimit.Descriptor; }
      }
      
      public override LossLimit DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.LossLimit.DefaultInstance; }
      }
      
      public override LossLimit BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LossLimit) {
          return MergeFrom((LossLimit) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LossLimit other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.LossLimit.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasPercent) {
          Percent = other.Percent;
        }
        if (other.HasAmount) {
          Amount = other.Amount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_lossLimitFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _lossLimitFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasType = input.ReadUInt32(ref result.type_);
              break;
            }
            case 17: {
              result.hasPercent = input.ReadDouble(ref result.percent_);
              break;
            }
            case 25: {
              result.hasAmount = input.ReadDouble(ref result.amount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
        get { return result.hasType; }
      }
      [global::System.CLSCompliant(false)]
      public uint Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetType(uint value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasPercent {
        get { return result.hasPercent; }
      }
      public double Percent {
        get { return result.Percent; }
        set { SetPercent(value); }
      }
      public Builder SetPercent(double value) {
        PrepareBuilder();
        result.hasPercent = true;
        result.percent_ = value;
        return this;
      }
      public Builder ClearPercent() {
        PrepareBuilder();
        result.hasPercent = false;
        result.percent_ = 0D;
        return this;
      }
      
      public bool HasAmount {
        get { return result.hasAmount; }
      }
      public double Amount {
        get { return result.Amount; }
        set { SetAmount(value); }
      }
      public Builder SetAmount(double value) {
        PrepareBuilder();
        result.hasAmount = true;
        result.amount_ = value;
        return this;
      }
      public Builder ClearAmount() {
        PrepareBuilder();
        result.hasAmount = false;
        result.amount_ = 0D;
        return this;
      }
    }
    static LossLimit() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ExchangeGroup : pb::GeneratedMessage<ExchangeGroup, ExchangeGroup.Builder> {
    private ExchangeGroup() { }
    private static readonly ExchangeGroup defaultInstance = new ExchangeGroup().MakeReadOnly();
    private static readonly string[] _exchangeGroupFieldNames = new string[] { "fungible_commodity", "id", "name" };
    private static readonly uint[] _exchangeGroupFieldTags = new uint[] { 26, 8, 18 };
    public static ExchangeGroup DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ExchangeGroup DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ExchangeGroup ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ExchangeGroup__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ExchangeGroup, ExchangeGroup.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ExchangeGroup__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private global::CmsApiSamples.Protocol.CMSApi.Text name_;
    public bool HasName {
      get { return hasName; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Name {
      get { return name_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public const int FungibleCommodityFieldNumber = 3;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity> fungibleCommodity_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity> FungibleCommodityList {
      get { return fungibleCommodity_; }
    }
    public int FungibleCommodityCount {
      get { return fungibleCommodity_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity GetFungibleCommodity(int index) {
      return fungibleCommodity_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasName) return false;
        if (!Name.IsInitialized) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity element in FungibleCommodityList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _exchangeGroupFieldNames;
      if (hasId) {
        output.WriteSInt32(1, field_names[1], Id);
      }
      if (hasName) {
        output.WriteMessage(2, field_names[2], Name);
      }
      if (fungibleCommodity_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], fungibleCommodity_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, Id);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Name);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity element in FungibleCommodityList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ExchangeGroup ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExchangeGroup ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExchangeGroup ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExchangeGroup ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExchangeGroup ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExchangeGroup ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ExchangeGroup ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ExchangeGroup ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ExchangeGroup ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExchangeGroup ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ExchangeGroup MakeReadOnly() {
      fungibleCommodity_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ExchangeGroup prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ExchangeGroup, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ExchangeGroup cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ExchangeGroup result;
      
      private ExchangeGroup PrepareBuilder() {
        if (resultIsReadOnly) {
          ExchangeGroup original = result;
          result = new ExchangeGroup();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ExchangeGroup MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup.Descriptor; }
      }
      
      public override ExchangeGroup DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup.DefaultInstance; }
      }
      
      public override ExchangeGroup BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ExchangeGroup) {
          return MergeFrom((ExchangeGroup) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ExchangeGroup other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ExchangeGroup.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasName) {
          MergeName(other.Name);
        }
        if (other.fungibleCommodity_.Count != 0) {
          result.fungibleCommodity_.Add(other.fungibleCommodity_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_exchangeGroupFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _exchangeGroupFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadSInt32(ref result.id_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasName) {
                subBuilder.MergeFrom(Name);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Name = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.fungibleCommodity_, global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasName {
       get { return result.hasName; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = builderForValue.Build();
        return this;
      }
      public Builder MergeName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasName &&
            result.name_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.name_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.name_).MergeFrom(value).BuildPartial();
        } else {
          result.name_ = value;
        }
        result.hasName = true;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity> FungibleCommodityList {
        get { return PrepareBuilder().fungibleCommodity_; }
      }
      public int FungibleCommodityCount {
        get { return result.FungibleCommodityCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity GetFungibleCommodity(int index) {
        return result.GetFungibleCommodity(index);
      }
      public Builder SetFungibleCommodity(int index, global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fungibleCommodity_[index] = value;
        return this;
      }
      public Builder SetFungibleCommodity(int index, global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fungibleCommodity_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFungibleCommodity(global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fungibleCommodity_.Add(value);
        return this;
      }
      public Builder AddFungibleCommodity(global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fungibleCommodity_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFungibleCommodity(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity> values) {
        PrepareBuilder();
        result.fungibleCommodity_.Add(values);
        return this;
      }
      public Builder ClearFungibleCommodity() {
        PrepareBuilder();
        result.fungibleCommodity_.Clear();
        return this;
      }
    }
    static ExchangeGroup() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FungibleCommodity : pb::GeneratedMessage<FungibleCommodity, FungibleCommodity.Builder> {
    private FungibleCommodity() { }
    private static readonly FungibleCommodity defaultInstance = new FungibleCommodity().MakeReadOnly();
    private static readonly string[] _fungibleCommodityFieldNames = new string[] { "id", "instrument_type_id", "is_us", "name", "tradable_commodity" };
    private static readonly uint[] _fungibleCommodityFieldTags = new uint[] { 8, 40, 32, 18, 26 };
    public static FungibleCommodity DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FungibleCommodity DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FungibleCommodity ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_FungibleCommodity__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FungibleCommodity, FungibleCommodity.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_FungibleCommodity__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private global::CmsApiSamples.Protocol.CMSApi.Text name_;
    public bool HasName {
      get { return hasName; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Name {
      get { return name_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public const int TradableCommodityFieldNumber = 3;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.TradableCommodity> tradableCommodity_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.TradableCommodity>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.TradableCommodity> TradableCommodityList {
      get { return tradableCommodity_; }
    }
    public int TradableCommodityCount {
      get { return tradableCommodity_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.TradableCommodity GetTradableCommodity(int index) {
      return tradableCommodity_[index];
    }
    
    public const int IsUsFieldNumber = 4;
    private bool hasIsUs;
    private bool isUs_;
    public bool HasIsUs {
      get { return hasIsUs; }
    }
    public bool IsUs {
      get { return isUs_; }
    }
    
    public const int InstrumentTypeIdFieldNumber = 5;
    private pbc::PopsicleList<int> instrumentTypeId_ = new pbc::PopsicleList<int>();
    public scg::IList<int> InstrumentTypeIdList {
      get { return pbc::Lists.AsReadOnly(instrumentTypeId_); }
    }
    public int InstrumentTypeIdCount {
      get { return instrumentTypeId_.Count; }
    }
    public int GetInstrumentTypeId(int index) {
      return instrumentTypeId_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasName) return false;
        if (!hasIsUs) return false;
        if (!Name.IsInitialized) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.TradableCommodity element in TradableCommodityList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _fungibleCommodityFieldNames;
      if (hasId) {
        output.WriteSInt32(1, field_names[0], Id);
      }
      if (hasName) {
        output.WriteMessage(2, field_names[3], Name);
      }
      if (tradableCommodity_.Count > 0) {
        output.WriteMessageArray(3, field_names[4], tradableCommodity_);
      }
      if (hasIsUs) {
        output.WriteBool(4, field_names[2], IsUs);
      }
      if (instrumentTypeId_.Count > 0) {
        output.WriteSInt32Array(5, field_names[1], instrumentTypeId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, Id);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Name);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.TradableCommodity element in TradableCommodityList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasIsUs) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, IsUs);
      }
      {
        int dataSize = 0;
        foreach (int element in InstrumentTypeIdList) {
          dataSize += pb::CodedOutputStream.ComputeSInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * instrumentTypeId_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static FungibleCommodity ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FungibleCommodity ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FungibleCommodity ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FungibleCommodity ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FungibleCommodity ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FungibleCommodity ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FungibleCommodity ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FungibleCommodity ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FungibleCommodity ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FungibleCommodity ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FungibleCommodity MakeReadOnly() {
      tradableCommodity_.MakeReadOnly();
      instrumentTypeId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FungibleCommodity prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<FungibleCommodity, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FungibleCommodity cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FungibleCommodity result;
      
      private FungibleCommodity PrepareBuilder() {
        if (resultIsReadOnly) {
          FungibleCommodity original = result;
          result = new FungibleCommodity();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FungibleCommodity MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity.Descriptor; }
      }
      
      public override FungibleCommodity DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity.DefaultInstance; }
      }
      
      public override FungibleCommodity BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FungibleCommodity) {
          return MergeFrom((FungibleCommodity) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FungibleCommodity other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.FungibleCommodity.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasName) {
          MergeName(other.Name);
        }
        if (other.tradableCommodity_.Count != 0) {
          result.tradableCommodity_.Add(other.tradableCommodity_);
        }
        if (other.HasIsUs) {
          IsUs = other.IsUs;
        }
        if (other.instrumentTypeId_.Count != 0) {
          result.instrumentTypeId_.Add(other.instrumentTypeId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_fungibleCommodityFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _fungibleCommodityFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadSInt32(ref result.id_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasName) {
                subBuilder.MergeFrom(Name);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Name = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.tradableCommodity_, global::CmsApiSamples.Protocol.CMSApi.TradableCommodity.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasIsUs = input.ReadBool(ref result.isUs_);
              break;
            }
            case 42:
            case 40: {
              input.ReadSInt32Array(tag, field_name, result.instrumentTypeId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasName {
       get { return result.hasName; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = builderForValue.Build();
        return this;
      }
      public Builder MergeName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasName &&
            result.name_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.name_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.name_).MergeFrom(value).BuildPartial();
        } else {
          result.name_ = value;
        }
        result.hasName = true;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.TradableCommodity> TradableCommodityList {
        get { return PrepareBuilder().tradableCommodity_; }
      }
      public int TradableCommodityCount {
        get { return result.TradableCommodityCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.TradableCommodity GetTradableCommodity(int index) {
        return result.GetTradableCommodity(index);
      }
      public Builder SetTradableCommodity(int index, global::CmsApiSamples.Protocol.CMSApi.TradableCommodity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tradableCommodity_[index] = value;
        return this;
      }
      public Builder SetTradableCommodity(int index, global::CmsApiSamples.Protocol.CMSApi.TradableCommodity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tradableCommodity_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTradableCommodity(global::CmsApiSamples.Protocol.CMSApi.TradableCommodity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tradableCommodity_.Add(value);
        return this;
      }
      public Builder AddTradableCommodity(global::CmsApiSamples.Protocol.CMSApi.TradableCommodity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tradableCommodity_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTradableCommodity(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.TradableCommodity> values) {
        PrepareBuilder();
        result.tradableCommodity_.Add(values);
        return this;
      }
      public Builder ClearTradableCommodity() {
        PrepareBuilder();
        result.tradableCommodity_.Clear();
        return this;
      }
      
      public bool HasIsUs {
        get { return result.hasIsUs; }
      }
      public bool IsUs {
        get { return result.IsUs; }
        set { SetIsUs(value); }
      }
      public Builder SetIsUs(bool value) {
        PrepareBuilder();
        result.hasIsUs = true;
        result.isUs_ = value;
        return this;
      }
      public Builder ClearIsUs() {
        PrepareBuilder();
        result.hasIsUs = false;
        result.isUs_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<int> InstrumentTypeIdList {
        get { return PrepareBuilder().instrumentTypeId_; }
      }
      public int InstrumentTypeIdCount {
        get { return result.InstrumentTypeIdCount; }
      }
      public int GetInstrumentTypeId(int index) {
        return result.GetInstrumentTypeId(index);
      }
      public Builder SetInstrumentTypeId(int index, int value) {
        PrepareBuilder();
        result.instrumentTypeId_[index] = value;
        return this;
      }
      public Builder AddInstrumentTypeId(int value) {
        PrepareBuilder();
        result.instrumentTypeId_.Add(value);
        return this;
      }
      public Builder AddRangeInstrumentTypeId(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.instrumentTypeId_.Add(values);
        return this;
      }
      public Builder ClearInstrumentTypeId() {
        PrepareBuilder();
        result.instrumentTypeId_.Clear();
        return this;
      }
    }
    static FungibleCommodity() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TradableCommodity : pb::GeneratedMessage<TradableCommodity, TradableCommodity.Builder> {
    private TradableCommodity() { }
    private static readonly TradableCommodity defaultInstance = new TradableCommodity().MakeReadOnly();
    private static readonly string[] _tradableCommodityFieldNames = new string[] { "id", "symbol" };
    private static readonly uint[] _tradableCommodityFieldTags = new uint[] { 10, 18 };
    public static TradableCommodity DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TradableCommodity DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TradableCommodity ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradableCommodity__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TradableCommodity, TradableCommodity.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradableCommodity__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int SymbolFieldNumber = 2;
    private bool hasSymbol;
    private string symbol_ = "";
    public bool HasSymbol {
      get { return hasSymbol; }
    }
    public string Symbol {
      get { return symbol_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasSymbol) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tradableCommodityFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[0], Id);
      }
      if (hasSymbol) {
        output.WriteString(2, field_names[1], Symbol);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      if (hasSymbol) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Symbol);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TradableCommodity ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradableCommodity ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradableCommodity ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradableCommodity ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradableCommodity ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradableCommodity ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TradableCommodity ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TradableCommodity ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TradableCommodity ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradableCommodity ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TradableCommodity MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TradableCommodity prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TradableCommodity, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TradableCommodity cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TradableCommodity result;
      
      private TradableCommodity PrepareBuilder() {
        if (resultIsReadOnly) {
          TradableCommodity original = result;
          result = new TradableCommodity();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TradableCommodity MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradableCommodity.Descriptor; }
      }
      
      public override TradableCommodity DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradableCommodity.DefaultInstance; }
      }
      
      public override TradableCommodity BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TradableCommodity) {
          return MergeFrom((TradableCommodity) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TradableCommodity other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.TradableCommodity.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasSymbol) {
          Symbol = other.Symbol;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tradableCommodityFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tradableCommodityFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 18: {
              result.hasSymbol = input.ReadString(ref result.symbol_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasSymbol {
        get { return result.hasSymbol; }
      }
      public string Symbol {
        get { return result.Symbol; }
        set { SetSymbol(value); }
      }
      public Builder SetSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSymbol = true;
        result.symbol_ = value;
        return this;
      }
      public Builder ClearSymbol() {
        PrepareBuilder();
        result.hasSymbol = false;
        result.symbol_ = "";
        return this;
      }
    }
    static TradableCommodity() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class InstrumentType : pb::GeneratedMessage<InstrumentType, InstrumentType.Builder> {
    private InstrumentType() { }
    private static readonly InstrumentType defaultInstance = new InstrumentType().MakeReadOnly();
    private static readonly string[] _instrumentTypeFieldNames = new string[] { "allowed_limits", "id", "name" };
    private static readonly uint[] _instrumentTypeFieldTags = new uint[] { 24, 8, 18 };
    public static InstrumentType DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InstrumentType DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InstrumentType ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_InstrumentType__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InstrumentType, InstrumentType.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_InstrumentType__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum MarketLimitType {
        INSTRUMENT_POSITION_LIMIT = 1,
        CONTRACT_POSITION_LIMIT = 2,
        TRADE_SIZE_LIMIT = 3,
        TRADE_PRICE_LIMIT = 4,
      }
      
    }
    #endregion
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private global::CmsApiSamples.Protocol.CMSApi.Text name_;
    public bool HasName {
      get { return hasName; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Text Name {
      get { return name_ ?? global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance; }
    }
    
    public const int AllowedLimitsFieldNumber = 3;
    private pbc::PopsicleList<uint> allowedLimits_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> AllowedLimitsList {
      get { return pbc::Lists.AsReadOnly(allowedLimits_); }
    }
    public int AllowedLimitsCount {
      get { return allowedLimits_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetAllowedLimits(int index) {
      return allowedLimits_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasName) return false;
        if (!Name.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _instrumentTypeFieldNames;
      if (hasId) {
        output.WriteSInt32(1, field_names[1], Id);
      }
      if (hasName) {
        output.WriteMessage(2, field_names[2], Name);
      }
      if (allowedLimits_.Count > 0) {
        output.WriteUInt32Array(3, field_names[0], allowedLimits_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, Id);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Name);
      }
      {
        int dataSize = 0;
        foreach (uint element in AllowedLimitsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * allowedLimits_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static InstrumentType ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InstrumentType ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InstrumentType ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InstrumentType ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InstrumentType ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InstrumentType ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InstrumentType ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InstrumentType ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InstrumentType ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InstrumentType ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InstrumentType MakeReadOnly() {
      allowedLimits_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InstrumentType prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<InstrumentType, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InstrumentType cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InstrumentType result;
      
      private InstrumentType PrepareBuilder() {
        if (resultIsReadOnly) {
          InstrumentType original = result;
          result = new InstrumentType();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InstrumentType MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.InstrumentType.Descriptor; }
      }
      
      public override InstrumentType DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.InstrumentType.DefaultInstance; }
      }
      
      public override InstrumentType BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InstrumentType) {
          return MergeFrom((InstrumentType) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InstrumentType other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.InstrumentType.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasName) {
          MergeName(other.Name);
        }
        if (other.allowedLimits_.Count != 0) {
          result.allowedLimits_.Add(other.allowedLimits_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_instrumentTypeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _instrumentTypeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadSInt32(ref result.id_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.Text.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder();
              if (result.hasName) {
                subBuilder.MergeFrom(Name);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Name = subBuilder.BuildPartial();
              break;
            }
            case 26:
            case 24: {
              input.ReadUInt32Array(tag, field_name, result.allowedLimits_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasName {
       get { return result.hasName; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Text Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder SetName(global::CmsApiSamples.Protocol.CMSApi.Text.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = builderForValue.Build();
        return this;
      }
      public Builder MergeName(global::CmsApiSamples.Protocol.CMSApi.Text value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasName &&
            result.name_ != global::CmsApiSamples.Protocol.CMSApi.Text.DefaultInstance) {
            result.name_ = global::CmsApiSamples.Protocol.CMSApi.Text.CreateBuilder(result.name_).MergeFrom(value).BuildPartial();
        } else {
          result.name_ = value;
        }
        result.hasName = true;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = null;
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> AllowedLimitsList {
        get { return PrepareBuilder().allowedLimits_; }
      }
      public int AllowedLimitsCount {
        get { return result.AllowedLimitsCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetAllowedLimits(int index) {
        return result.GetAllowedLimits(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetAllowedLimits(int index, uint value) {
        PrepareBuilder();
        result.allowedLimits_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddAllowedLimits(uint value) {
        PrepareBuilder();
        result.allowedLimits_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeAllowedLimits(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.allowedLimits_.Add(values);
        return this;
      }
      public Builder ClearAllowedLimits() {
        PrepareBuilder();
        result.allowedLimits_.Clear();
        return this;
      }
    }
    static InstrumentType() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MarketLimits : pb::GeneratedMessage<MarketLimits, MarketLimits.Builder> {
    private MarketLimits() { }
    private static readonly MarketLimits defaultInstance = new MarketLimits().MakeReadOnly();
    private static readonly string[] _marketLimitsFieldNames = new string[] { "all_market_limits", "exchange_market_limits", "non_us_market_limits", "us_market_limits" };
    private static readonly uint[] _marketLimitsFieldTags = new uint[] { 10, 34, 26, 18 };
    public static MarketLimits DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MarketLimits DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MarketLimits ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_MarketLimits__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MarketLimits, MarketLimits.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_MarketLimits__FieldAccessorTable; }
    }
    
    public const int AllMarketLimitsFieldNumber = 1;
    private bool hasAllMarketLimits;
    private global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord allMarketLimits_;
    public bool HasAllMarketLimits {
      get { return hasAllMarketLimits; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord AllMarketLimits {
      get { return allMarketLimits_ ?? global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.DefaultInstance; }
    }
    
    public const int UsMarketLimitsFieldNumber = 2;
    private bool hasUsMarketLimits;
    private global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord usMarketLimits_;
    public bool HasUsMarketLimits {
      get { return hasUsMarketLimits; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord UsMarketLimits {
      get { return usMarketLimits_ ?? global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.DefaultInstance; }
    }
    
    public const int NonUsMarketLimitsFieldNumber = 3;
    private bool hasNonUsMarketLimits;
    private global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord nonUsMarketLimits_;
    public bool HasNonUsMarketLimits {
      get { return hasNonUsMarketLimits; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord NonUsMarketLimits {
      get { return nonUsMarketLimits_ ?? global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.DefaultInstance; }
    }
    
    public const int ExchangeMarketLimitsFieldNumber = 4;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits> exchangeMarketLimits_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits> ExchangeMarketLimitsList {
      get { return exchangeMarketLimits_; }
    }
    public int ExchangeMarketLimitsCount {
      get { return exchangeMarketLimits_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits GetExchangeMarketLimits(int index) {
      return exchangeMarketLimits_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits element in ExchangeMarketLimitsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _marketLimitsFieldNames;
      if (hasAllMarketLimits) {
        output.WriteMessage(1, field_names[0], AllMarketLimits);
      }
      if (hasUsMarketLimits) {
        output.WriteMessage(2, field_names[3], UsMarketLimits);
      }
      if (hasNonUsMarketLimits) {
        output.WriteMessage(3, field_names[2], NonUsMarketLimits);
      }
      if (exchangeMarketLimits_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], exchangeMarketLimits_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAllMarketLimits) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, AllMarketLimits);
      }
      if (hasUsMarketLimits) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, UsMarketLimits);
      }
      if (hasNonUsMarketLimits) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, NonUsMarketLimits);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits element in ExchangeMarketLimitsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MarketLimits ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MarketLimits ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MarketLimits ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MarketLimits ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MarketLimits ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MarketLimits ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MarketLimits ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MarketLimits ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MarketLimits ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MarketLimits ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MarketLimits MakeReadOnly() {
      exchangeMarketLimits_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MarketLimits prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MarketLimits, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MarketLimits cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MarketLimits result;
      
      private MarketLimits PrepareBuilder() {
        if (resultIsReadOnly) {
          MarketLimits original = result;
          result = new MarketLimits();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MarketLimits MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.MarketLimits.Descriptor; }
      }
      
      public override MarketLimits DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.MarketLimits.DefaultInstance; }
      }
      
      public override MarketLimits BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MarketLimits) {
          return MergeFrom((MarketLimits) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MarketLimits other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.MarketLimits.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAllMarketLimits) {
          MergeAllMarketLimits(other.AllMarketLimits);
        }
        if (other.HasUsMarketLimits) {
          MergeUsMarketLimits(other.UsMarketLimits);
        }
        if (other.HasNonUsMarketLimits) {
          MergeNonUsMarketLimits(other.NonUsMarketLimits);
        }
        if (other.exchangeMarketLimits_.Count != 0) {
          result.exchangeMarketLimits_.Add(other.exchangeMarketLimits_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_marketLimitsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _marketLimitsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.CreateBuilder();
              if (result.hasAllMarketLimits) {
                subBuilder.MergeFrom(AllMarketLimits);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AllMarketLimits = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.CreateBuilder();
              if (result.hasUsMarketLimits) {
                subBuilder.MergeFrom(UsMarketLimits);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UsMarketLimits = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.CreateBuilder();
              if (result.hasNonUsMarketLimits) {
                subBuilder.MergeFrom(NonUsMarketLimits);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NonUsMarketLimits = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.exchangeMarketLimits_, global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAllMarketLimits {
       get { return result.hasAllMarketLimits; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord AllMarketLimits {
        get { return result.AllMarketLimits; }
        set { SetAllMarketLimits(value); }
      }
      public Builder SetAllMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAllMarketLimits = true;
        result.allMarketLimits_ = value;
        return this;
      }
      public Builder SetAllMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAllMarketLimits = true;
        result.allMarketLimits_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAllMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAllMarketLimits &&
            result.allMarketLimits_ != global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.DefaultInstance) {
            result.allMarketLimits_ = global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.CreateBuilder(result.allMarketLimits_).MergeFrom(value).BuildPartial();
        } else {
          result.allMarketLimits_ = value;
        }
        result.hasAllMarketLimits = true;
        return this;
      }
      public Builder ClearAllMarketLimits() {
        PrepareBuilder();
        result.hasAllMarketLimits = false;
        result.allMarketLimits_ = null;
        return this;
      }
      
      public bool HasUsMarketLimits {
       get { return result.hasUsMarketLimits; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord UsMarketLimits {
        get { return result.UsMarketLimits; }
        set { SetUsMarketLimits(value); }
      }
      public Builder SetUsMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsMarketLimits = true;
        result.usMarketLimits_ = value;
        return this;
      }
      public Builder SetUsMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUsMarketLimits = true;
        result.usMarketLimits_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUsMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUsMarketLimits &&
            result.usMarketLimits_ != global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.DefaultInstance) {
            result.usMarketLimits_ = global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.CreateBuilder(result.usMarketLimits_).MergeFrom(value).BuildPartial();
        } else {
          result.usMarketLimits_ = value;
        }
        result.hasUsMarketLimits = true;
        return this;
      }
      public Builder ClearUsMarketLimits() {
        PrepareBuilder();
        result.hasUsMarketLimits = false;
        result.usMarketLimits_ = null;
        return this;
      }
      
      public bool HasNonUsMarketLimits {
       get { return result.hasNonUsMarketLimits; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord NonUsMarketLimits {
        get { return result.NonUsMarketLimits; }
        set { SetNonUsMarketLimits(value); }
      }
      public Builder SetNonUsMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNonUsMarketLimits = true;
        result.nonUsMarketLimits_ = value;
        return this;
      }
      public Builder SetNonUsMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNonUsMarketLimits = true;
        result.nonUsMarketLimits_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNonUsMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNonUsMarketLimits &&
            result.nonUsMarketLimits_ != global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.DefaultInstance) {
            result.nonUsMarketLimits_ = global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.CreateBuilder(result.nonUsMarketLimits_).MergeFrom(value).BuildPartial();
        } else {
          result.nonUsMarketLimits_ = value;
        }
        result.hasNonUsMarketLimits = true;
        return this;
      }
      public Builder ClearNonUsMarketLimits() {
        PrepareBuilder();
        result.hasNonUsMarketLimits = false;
        result.nonUsMarketLimits_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits> ExchangeMarketLimitsList {
        get { return PrepareBuilder().exchangeMarketLimits_; }
      }
      public int ExchangeMarketLimitsCount {
        get { return result.ExchangeMarketLimitsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits GetExchangeMarketLimits(int index) {
        return result.GetExchangeMarketLimits(index);
      }
      public Builder SetExchangeMarketLimits(int index, global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.exchangeMarketLimits_[index] = value;
        return this;
      }
      public Builder SetExchangeMarketLimits(int index, global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.exchangeMarketLimits_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddExchangeMarketLimits(global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.exchangeMarketLimits_.Add(value);
        return this;
      }
      public Builder AddExchangeMarketLimits(global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.exchangeMarketLimits_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeExchangeMarketLimits(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits> values) {
        PrepareBuilder();
        result.exchangeMarketLimits_.Add(values);
        return this;
      }
      public Builder ClearExchangeMarketLimits() {
        PrepareBuilder();
        result.exchangeMarketLimits_.Clear();
        return this;
      }
    }
    static MarketLimits() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MarketLimitsRecord : pb::GeneratedMessage<MarketLimitsRecord, MarketLimitsRecord.Builder> {
    private MarketLimitsRecord() { }
    private static readonly MarketLimitsRecord defaultInstance = new MarketLimitsRecord().MakeReadOnly();
    private static readonly string[] _marketLimitsRecordFieldNames = new string[] { "allowed_to_trade", "margin_multiplier", "position_and_trade_limits" };
    private static readonly uint[] _marketLimitsRecordFieldTags = new uint[] { 8, 17, 26 };
    public static MarketLimitsRecord DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MarketLimitsRecord DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MarketLimitsRecord ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_MarketLimitsRecord__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MarketLimitsRecord, MarketLimitsRecord.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_MarketLimitsRecord__FieldAccessorTable; }
    }
    
    public const int AllowedToTradeFieldNumber = 1;
    private bool hasAllowedToTrade;
    private bool allowedToTrade_;
    public bool HasAllowedToTrade {
      get { return hasAllowedToTrade; }
    }
    public bool AllowedToTrade {
      get { return allowedToTrade_; }
    }
    
    public const int MarginMultiplierFieldNumber = 2;
    private bool hasMarginMultiplier;
    private double marginMultiplier_;
    public bool HasMarginMultiplier {
      get { return hasMarginMultiplier; }
    }
    public double MarginMultiplier {
      get { return marginMultiplier_; }
    }
    
    public const int PositionAndTradeLimitsFieldNumber = 3;
    private bool hasPositionAndTradeLimits;
    private global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits positionAndTradeLimits_;
    public bool HasPositionAndTradeLimits {
      get { return hasPositionAndTradeLimits; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits PositionAndTradeLimits {
      get { return positionAndTradeLimits_ ?? global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _marketLimitsRecordFieldNames;
      if (hasAllowedToTrade) {
        output.WriteBool(1, field_names[0], AllowedToTrade);
      }
      if (hasMarginMultiplier) {
        output.WriteDouble(2, field_names[1], MarginMultiplier);
      }
      if (hasPositionAndTradeLimits) {
        output.WriteMessage(3, field_names[2], PositionAndTradeLimits);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAllowedToTrade) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, AllowedToTrade);
      }
      if (hasMarginMultiplier) {
        size += pb::CodedOutputStream.ComputeDoubleSize(2, MarginMultiplier);
      }
      if (hasPositionAndTradeLimits) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, PositionAndTradeLimits);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MarketLimitsRecord ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MarketLimitsRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MarketLimitsRecord ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MarketLimitsRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MarketLimitsRecord ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MarketLimitsRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MarketLimitsRecord ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MarketLimitsRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MarketLimitsRecord ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MarketLimitsRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MarketLimitsRecord MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MarketLimitsRecord prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MarketLimitsRecord, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MarketLimitsRecord cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MarketLimitsRecord result;
      
      private MarketLimitsRecord PrepareBuilder() {
        if (resultIsReadOnly) {
          MarketLimitsRecord original = result;
          result = new MarketLimitsRecord();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MarketLimitsRecord MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.Descriptor; }
      }
      
      public override MarketLimitsRecord DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.DefaultInstance; }
      }
      
      public override MarketLimitsRecord BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MarketLimitsRecord) {
          return MergeFrom((MarketLimitsRecord) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MarketLimitsRecord other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAllowedToTrade) {
          AllowedToTrade = other.AllowedToTrade;
        }
        if (other.HasMarginMultiplier) {
          MarginMultiplier = other.MarginMultiplier;
        }
        if (other.HasPositionAndTradeLimits) {
          MergePositionAndTradeLimits(other.PositionAndTradeLimits);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_marketLimitsRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _marketLimitsRecordFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAllowedToTrade = input.ReadBool(ref result.allowedToTrade_);
              break;
            }
            case 17: {
              result.hasMarginMultiplier = input.ReadDouble(ref result.marginMultiplier_);
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.CreateBuilder();
              if (result.hasPositionAndTradeLimits) {
                subBuilder.MergeFrom(PositionAndTradeLimits);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PositionAndTradeLimits = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAllowedToTrade {
        get { return result.hasAllowedToTrade; }
      }
      public bool AllowedToTrade {
        get { return result.AllowedToTrade; }
        set { SetAllowedToTrade(value); }
      }
      public Builder SetAllowedToTrade(bool value) {
        PrepareBuilder();
        result.hasAllowedToTrade = true;
        result.allowedToTrade_ = value;
        return this;
      }
      public Builder ClearAllowedToTrade() {
        PrepareBuilder();
        result.hasAllowedToTrade = false;
        result.allowedToTrade_ = false;
        return this;
      }
      
      public bool HasMarginMultiplier {
        get { return result.hasMarginMultiplier; }
      }
      public double MarginMultiplier {
        get { return result.MarginMultiplier; }
        set { SetMarginMultiplier(value); }
      }
      public Builder SetMarginMultiplier(double value) {
        PrepareBuilder();
        result.hasMarginMultiplier = true;
        result.marginMultiplier_ = value;
        return this;
      }
      public Builder ClearMarginMultiplier() {
        PrepareBuilder();
        result.hasMarginMultiplier = false;
        result.marginMultiplier_ = 0D;
        return this;
      }
      
      public bool HasPositionAndTradeLimits {
       get { return result.hasPositionAndTradeLimits; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits PositionAndTradeLimits {
        get { return result.PositionAndTradeLimits; }
        set { SetPositionAndTradeLimits(value); }
      }
      public Builder SetPositionAndTradeLimits(global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPositionAndTradeLimits = true;
        result.positionAndTradeLimits_ = value;
        return this;
      }
      public Builder SetPositionAndTradeLimits(global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPositionAndTradeLimits = true;
        result.positionAndTradeLimits_ = builderForValue.Build();
        return this;
      }
      public Builder MergePositionAndTradeLimits(global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPositionAndTradeLimits &&
            result.positionAndTradeLimits_ != global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.DefaultInstance) {
            result.positionAndTradeLimits_ = global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.CreateBuilder(result.positionAndTradeLimits_).MergeFrom(value).BuildPartial();
        } else {
          result.positionAndTradeLimits_ = value;
        }
        result.hasPositionAndTradeLimits = true;
        return this;
      }
      public Builder ClearPositionAndTradeLimits() {
        PrepareBuilder();
        result.hasPositionAndTradeLimits = false;
        result.positionAndTradeLimits_ = null;
        return this;
      }
    }
    static MarketLimitsRecord() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class PositionAndTradeLimits : pb::GeneratedMessage<PositionAndTradeLimits, PositionAndTradeLimits.Builder> {
    private PositionAndTradeLimits() { }
    private static readonly PositionAndTradeLimits defaultInstance = new PositionAndTradeLimits().MakeReadOnly();
    private static readonly string[] _positionAndTradeLimitsFieldNames = new string[] { "commodity_position_limit", "contract_position_limit", "instrument_position_limit", "trade_price_limit_percent", "trade_price_limit_percent_continuous", "trade_price_limit_percent_non_continuous", "trade_price_limit_ticks", "trade_price_limit_ticks_continuous", "trade_price_limit_ticks_non_continuous", "trade_size_limit" };
    private static readonly uint[] _positionAndTradeLimitsFieldTags = new uint[] { 10, 26, 18, 50, 74, 82, 42, 58, 66, 34 };
    public static PositionAndTradeLimits DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PositionAndTradeLimits DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PositionAndTradeLimits ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_PositionAndTradeLimits__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PositionAndTradeLimits, PositionAndTradeLimits.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_PositionAndTradeLimits__FieldAccessorTable; }
    }
    
    public const int CommodityPositionLimitFieldNumber = 1;
    private bool hasCommodityPositionLimit;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValue commodityPositionLimit_;
    public bool HasCommodityPositionLimit {
      get { return hasCommodityPositionLimit; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValue CommodityPositionLimit {
      get { return commodityPositionLimit_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance; }
    }
    
    public const int InstrumentPositionLimitFieldNumber = 2;
    private bool hasInstrumentPositionLimit;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValue instrumentPositionLimit_;
    public bool HasInstrumentPositionLimit {
      get { return hasInstrumentPositionLimit; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValue InstrumentPositionLimit {
      get { return instrumentPositionLimit_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance; }
    }
    
    public const int ContractPositionLimitFieldNumber = 3;
    private bool hasContractPositionLimit;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValue contractPositionLimit_;
    public bool HasContractPositionLimit {
      get { return hasContractPositionLimit; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValue ContractPositionLimit {
      get { return contractPositionLimit_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance; }
    }
    
    public const int TradeSizeLimitFieldNumber = 4;
    private bool hasTradeSizeLimit;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValue tradeSizeLimit_;
    public bool HasTradeSizeLimit {
      get { return hasTradeSizeLimit; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValue TradeSizeLimit {
      get { return tradeSizeLimit_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance; }
    }
    
    public const int TradePriceLimitTicksFieldNumber = 5;
    private bool hasTradePriceLimitTicks;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValue tradePriceLimitTicks_;
    public bool HasTradePriceLimitTicks {
      get { return hasTradePriceLimitTicks; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValue TradePriceLimitTicks {
      get { return tradePriceLimitTicks_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance; }
    }
    
    public const int TradePriceLimitPercentFieldNumber = 6;
    private bool hasTradePriceLimitPercent;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble tradePriceLimitPercent_;
    public bool HasTradePriceLimitPercent {
      get { return hasTradePriceLimitPercent; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble TradePriceLimitPercent {
      get { return tradePriceLimitPercent_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance; }
    }
    
    public const int TradePriceLimitTicksContinuousFieldNumber = 7;
    private bool hasTradePriceLimitTicksContinuous;
    private global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks tradePriceLimitTicksContinuous_;
    public bool HasTradePriceLimitTicksContinuous {
      get { return hasTradePriceLimitTicksContinuous; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks TradePriceLimitTicksContinuous {
      get { return tradePriceLimitTicksContinuous_ ?? global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.DefaultInstance; }
    }
    
    public const int TradePriceLimitTicksNonContinuousFieldNumber = 8;
    private bool hasTradePriceLimitTicksNonContinuous;
    private global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks tradePriceLimitTicksNonContinuous_;
    public bool HasTradePriceLimitTicksNonContinuous {
      get { return hasTradePriceLimitTicksNonContinuous; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks TradePriceLimitTicksNonContinuous {
      get { return tradePriceLimitTicksNonContinuous_ ?? global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.DefaultInstance; }
    }
    
    public const int TradePriceLimitPercentContinuousFieldNumber = 9;
    private bool hasTradePriceLimitPercentContinuous;
    private global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent tradePriceLimitPercentContinuous_;
    public bool HasTradePriceLimitPercentContinuous {
      get { return hasTradePriceLimitPercentContinuous; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent TradePriceLimitPercentContinuous {
      get { return tradePriceLimitPercentContinuous_ ?? global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.DefaultInstance; }
    }
    
    public const int TradePriceLimitPercentNonContinuousFieldNumber = 10;
    private bool hasTradePriceLimitPercentNonContinuous;
    private global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent tradePriceLimitPercentNonContinuous_;
    public bool HasTradePriceLimitPercentNonContinuous {
      get { return hasTradePriceLimitPercentNonContinuous; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent TradePriceLimitPercentNonContinuous {
      get { return tradePriceLimitPercentNonContinuous_ ?? global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _positionAndTradeLimitsFieldNames;
      if (hasCommodityPositionLimit) {
        output.WriteMessage(1, field_names[0], CommodityPositionLimit);
      }
      if (hasInstrumentPositionLimit) {
        output.WriteMessage(2, field_names[2], InstrumentPositionLimit);
      }
      if (hasContractPositionLimit) {
        output.WriteMessage(3, field_names[1], ContractPositionLimit);
      }
      if (hasTradeSizeLimit) {
        output.WriteMessage(4, field_names[9], TradeSizeLimit);
      }
      if (hasTradePriceLimitTicks) {
        output.WriteMessage(5, field_names[6], TradePriceLimitTicks);
      }
      if (hasTradePriceLimitPercent) {
        output.WriteMessage(6, field_names[3], TradePriceLimitPercent);
      }
      if (hasTradePriceLimitTicksContinuous) {
        output.WriteMessage(7, field_names[7], TradePriceLimitTicksContinuous);
      }
      if (hasTradePriceLimitTicksNonContinuous) {
        output.WriteMessage(8, field_names[8], TradePriceLimitTicksNonContinuous);
      }
      if (hasTradePriceLimitPercentContinuous) {
        output.WriteMessage(9, field_names[4], TradePriceLimitPercentContinuous);
      }
      if (hasTradePriceLimitPercentNonContinuous) {
        output.WriteMessage(10, field_names[5], TradePriceLimitPercentNonContinuous);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCommodityPositionLimit) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, CommodityPositionLimit);
      }
      if (hasInstrumentPositionLimit) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, InstrumentPositionLimit);
      }
      if (hasContractPositionLimit) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, ContractPositionLimit);
      }
      if (hasTradeSizeLimit) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, TradeSizeLimit);
      }
      if (hasTradePriceLimitTicks) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, TradePriceLimitTicks);
      }
      if (hasTradePriceLimitPercent) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, TradePriceLimitPercent);
      }
      if (hasTradePriceLimitTicksContinuous) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, TradePriceLimitTicksContinuous);
      }
      if (hasTradePriceLimitTicksNonContinuous) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, TradePriceLimitTicksNonContinuous);
      }
      if (hasTradePriceLimitPercentContinuous) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, TradePriceLimitPercentContinuous);
      }
      if (hasTradePriceLimitPercentNonContinuous) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, TradePriceLimitPercentNonContinuous);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static PositionAndTradeLimits ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PositionAndTradeLimits ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PositionAndTradeLimits ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PositionAndTradeLimits ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PositionAndTradeLimits ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PositionAndTradeLimits ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PositionAndTradeLimits ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PositionAndTradeLimits ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PositionAndTradeLimits ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PositionAndTradeLimits ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PositionAndTradeLimits MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PositionAndTradeLimits prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<PositionAndTradeLimits, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PositionAndTradeLimits cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PositionAndTradeLimits result;
      
      private PositionAndTradeLimits PrepareBuilder() {
        if (resultIsReadOnly) {
          PositionAndTradeLimits original = result;
          result = new PositionAndTradeLimits();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PositionAndTradeLimits MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.Descriptor; }
      }
      
      public override PositionAndTradeLimits DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.DefaultInstance; }
      }
      
      public override PositionAndTradeLimits BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PositionAndTradeLimits) {
          return MergeFrom((PositionAndTradeLimits) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PositionAndTradeLimits other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCommodityPositionLimit) {
          MergeCommodityPositionLimit(other.CommodityPositionLimit);
        }
        if (other.HasInstrumentPositionLimit) {
          MergeInstrumentPositionLimit(other.InstrumentPositionLimit);
        }
        if (other.HasContractPositionLimit) {
          MergeContractPositionLimit(other.ContractPositionLimit);
        }
        if (other.HasTradeSizeLimit) {
          MergeTradeSizeLimit(other.TradeSizeLimit);
        }
        if (other.HasTradePriceLimitTicks) {
          MergeTradePriceLimitTicks(other.TradePriceLimitTicks);
        }
        if (other.HasTradePriceLimitPercent) {
          MergeTradePriceLimitPercent(other.TradePriceLimitPercent);
        }
        if (other.HasTradePriceLimitTicksContinuous) {
          MergeTradePriceLimitTicksContinuous(other.TradePriceLimitTicksContinuous);
        }
        if (other.HasTradePriceLimitTicksNonContinuous) {
          MergeTradePriceLimitTicksNonContinuous(other.TradePriceLimitTicksNonContinuous);
        }
        if (other.HasTradePriceLimitPercentContinuous) {
          MergeTradePriceLimitPercentContinuous(other.TradePriceLimitPercentContinuous);
        }
        if (other.HasTradePriceLimitPercentNonContinuous) {
          MergeTradePriceLimitPercentNonContinuous(other.TradePriceLimitPercentNonContinuous);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_positionAndTradeLimitsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _positionAndTradeLimitsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder();
              if (result.hasCommodityPositionLimit) {
                subBuilder.MergeFrom(CommodityPositionLimit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              CommodityPositionLimit = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder();
              if (result.hasInstrumentPositionLimit) {
                subBuilder.MergeFrom(InstrumentPositionLimit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InstrumentPositionLimit = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder();
              if (result.hasContractPositionLimit) {
                subBuilder.MergeFrom(ContractPositionLimit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ContractPositionLimit = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder();
              if (result.hasTradeSizeLimit) {
                subBuilder.MergeFrom(TradeSizeLimit);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TradeSizeLimit = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder();
              if (result.hasTradePriceLimitTicks) {
                subBuilder.MergeFrom(TradePriceLimitTicks);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TradePriceLimitTicks = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.CreateBuilder();
              if (result.hasTradePriceLimitPercent) {
                subBuilder.MergeFrom(TradePriceLimitPercent);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TradePriceLimitPercent = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.CreateBuilder();
              if (result.hasTradePriceLimitTicksContinuous) {
                subBuilder.MergeFrom(TradePriceLimitTicksContinuous);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TradePriceLimitTicksContinuous = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.CreateBuilder();
              if (result.hasTradePriceLimitTicksNonContinuous) {
                subBuilder.MergeFrom(TradePriceLimitTicksNonContinuous);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TradePriceLimitTicksNonContinuous = subBuilder.BuildPartial();
              break;
            }
            case 74: {
              global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.CreateBuilder();
              if (result.hasTradePriceLimitPercentContinuous) {
                subBuilder.MergeFrom(TradePriceLimitPercentContinuous);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TradePriceLimitPercentContinuous = subBuilder.BuildPartial();
              break;
            }
            case 82: {
              global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.CreateBuilder();
              if (result.hasTradePriceLimitPercentNonContinuous) {
                subBuilder.MergeFrom(TradePriceLimitPercentNonContinuous);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TradePriceLimitPercentNonContinuous = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCommodityPositionLimit {
       get { return result.hasCommodityPositionLimit; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValue CommodityPositionLimit {
        get { return result.CommodityPositionLimit; }
        set { SetCommodityPositionLimit(value); }
      }
      public Builder SetCommodityPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCommodityPositionLimit = true;
        result.commodityPositionLimit_ = value;
        return this;
      }
      public Builder SetCommodityPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCommodityPositionLimit = true;
        result.commodityPositionLimit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCommodityPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCommodityPositionLimit &&
            result.commodityPositionLimit_ != global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance) {
            result.commodityPositionLimit_ = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder(result.commodityPositionLimit_).MergeFrom(value).BuildPartial();
        } else {
          result.commodityPositionLimit_ = value;
        }
        result.hasCommodityPositionLimit = true;
        return this;
      }
      public Builder ClearCommodityPositionLimit() {
        PrepareBuilder();
        result.hasCommodityPositionLimit = false;
        result.commodityPositionLimit_ = null;
        return this;
      }
      
      public bool HasInstrumentPositionLimit {
       get { return result.hasInstrumentPositionLimit; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValue InstrumentPositionLimit {
        get { return result.InstrumentPositionLimit; }
        set { SetInstrumentPositionLimit(value); }
      }
      public Builder SetInstrumentPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInstrumentPositionLimit = true;
        result.instrumentPositionLimit_ = value;
        return this;
      }
      public Builder SetInstrumentPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInstrumentPositionLimit = true;
        result.instrumentPositionLimit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInstrumentPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInstrumentPositionLimit &&
            result.instrumentPositionLimit_ != global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance) {
            result.instrumentPositionLimit_ = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder(result.instrumentPositionLimit_).MergeFrom(value).BuildPartial();
        } else {
          result.instrumentPositionLimit_ = value;
        }
        result.hasInstrumentPositionLimit = true;
        return this;
      }
      public Builder ClearInstrumentPositionLimit() {
        PrepareBuilder();
        result.hasInstrumentPositionLimit = false;
        result.instrumentPositionLimit_ = null;
        return this;
      }
      
      public bool HasContractPositionLimit {
       get { return result.hasContractPositionLimit; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValue ContractPositionLimit {
        get { return result.ContractPositionLimit; }
        set { SetContractPositionLimit(value); }
      }
      public Builder SetContractPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContractPositionLimit = true;
        result.contractPositionLimit_ = value;
        return this;
      }
      public Builder SetContractPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasContractPositionLimit = true;
        result.contractPositionLimit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeContractPositionLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasContractPositionLimit &&
            result.contractPositionLimit_ != global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance) {
            result.contractPositionLimit_ = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder(result.contractPositionLimit_).MergeFrom(value).BuildPartial();
        } else {
          result.contractPositionLimit_ = value;
        }
        result.hasContractPositionLimit = true;
        return this;
      }
      public Builder ClearContractPositionLimit() {
        PrepareBuilder();
        result.hasContractPositionLimit = false;
        result.contractPositionLimit_ = null;
        return this;
      }
      
      public bool HasTradeSizeLimit {
       get { return result.hasTradeSizeLimit; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValue TradeSizeLimit {
        get { return result.TradeSizeLimit; }
        set { SetTradeSizeLimit(value); }
      }
      public Builder SetTradeSizeLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradeSizeLimit = true;
        result.tradeSizeLimit_ = value;
        return this;
      }
      public Builder SetTradeSizeLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTradeSizeLimit = true;
        result.tradeSizeLimit_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTradeSizeLimit(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTradeSizeLimit &&
            result.tradeSizeLimit_ != global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance) {
            result.tradeSizeLimit_ = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder(result.tradeSizeLimit_).MergeFrom(value).BuildPartial();
        } else {
          result.tradeSizeLimit_ = value;
        }
        result.hasTradeSizeLimit = true;
        return this;
      }
      public Builder ClearTradeSizeLimit() {
        PrepareBuilder();
        result.hasTradeSizeLimit = false;
        result.tradeSizeLimit_ = null;
        return this;
      }
      
      public bool HasTradePriceLimitTicks {
       get { return result.hasTradePriceLimitTicks; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValue TradePriceLimitTicks {
        get { return result.TradePriceLimitTicks; }
        set { SetTradePriceLimitTicks(value); }
      }
      public Builder SetTradePriceLimitTicks(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradePriceLimitTicks = true;
        result.tradePriceLimitTicks_ = value;
        return this;
      }
      public Builder SetTradePriceLimitTicks(global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTradePriceLimitTicks = true;
        result.tradePriceLimitTicks_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTradePriceLimitTicks(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTradePriceLimitTicks &&
            result.tradePriceLimitTicks_ != global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance) {
            result.tradePriceLimitTicks_ = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder(result.tradePriceLimitTicks_).MergeFrom(value).BuildPartial();
        } else {
          result.tradePriceLimitTicks_ = value;
        }
        result.hasTradePriceLimitTicks = true;
        return this;
      }
      public Builder ClearTradePriceLimitTicks() {
        PrepareBuilder();
        result.hasTradePriceLimitTicks = false;
        result.tradePriceLimitTicks_ = null;
        return this;
      }
      
      public bool HasTradePriceLimitPercent {
       get { return result.hasTradePriceLimitPercent; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble TradePriceLimitPercent {
        get { return result.TradePriceLimitPercent; }
        set { SetTradePriceLimitPercent(value); }
      }
      public Builder SetTradePriceLimitPercent(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradePriceLimitPercent = true;
        result.tradePriceLimitPercent_ = value;
        return this;
      }
      public Builder SetTradePriceLimitPercent(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTradePriceLimitPercent = true;
        result.tradePriceLimitPercent_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTradePriceLimitPercent(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTradePriceLimitPercent &&
            result.tradePriceLimitPercent_ != global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance) {
            result.tradePriceLimitPercent_ = global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.CreateBuilder(result.tradePriceLimitPercent_).MergeFrom(value).BuildPartial();
        } else {
          result.tradePriceLimitPercent_ = value;
        }
        result.hasTradePriceLimitPercent = true;
        return this;
      }
      public Builder ClearTradePriceLimitPercent() {
        PrepareBuilder();
        result.hasTradePriceLimitPercent = false;
        result.tradePriceLimitPercent_ = null;
        return this;
      }
      
      public bool HasTradePriceLimitTicksContinuous {
       get { return result.hasTradePriceLimitTicksContinuous; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks TradePriceLimitTicksContinuous {
        get { return result.TradePriceLimitTicksContinuous; }
        set { SetTradePriceLimitTicksContinuous(value); }
      }
      public Builder SetTradePriceLimitTicksContinuous(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradePriceLimitTicksContinuous = true;
        result.tradePriceLimitTicksContinuous_ = value;
        return this;
      }
      public Builder SetTradePriceLimitTicksContinuous(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTradePriceLimitTicksContinuous = true;
        result.tradePriceLimitTicksContinuous_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTradePriceLimitTicksContinuous(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTradePriceLimitTicksContinuous &&
            result.tradePriceLimitTicksContinuous_ != global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.DefaultInstance) {
            result.tradePriceLimitTicksContinuous_ = global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.CreateBuilder(result.tradePriceLimitTicksContinuous_).MergeFrom(value).BuildPartial();
        } else {
          result.tradePriceLimitTicksContinuous_ = value;
        }
        result.hasTradePriceLimitTicksContinuous = true;
        return this;
      }
      public Builder ClearTradePriceLimitTicksContinuous() {
        PrepareBuilder();
        result.hasTradePriceLimitTicksContinuous = false;
        result.tradePriceLimitTicksContinuous_ = null;
        return this;
      }
      
      public bool HasTradePriceLimitTicksNonContinuous {
       get { return result.hasTradePriceLimitTicksNonContinuous; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks TradePriceLimitTicksNonContinuous {
        get { return result.TradePriceLimitTicksNonContinuous; }
        set { SetTradePriceLimitTicksNonContinuous(value); }
      }
      public Builder SetTradePriceLimitTicksNonContinuous(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradePriceLimitTicksNonContinuous = true;
        result.tradePriceLimitTicksNonContinuous_ = value;
        return this;
      }
      public Builder SetTradePriceLimitTicksNonContinuous(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTradePriceLimitTicksNonContinuous = true;
        result.tradePriceLimitTicksNonContinuous_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTradePriceLimitTicksNonContinuous(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTradePriceLimitTicksNonContinuous &&
            result.tradePriceLimitTicksNonContinuous_ != global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.DefaultInstance) {
            result.tradePriceLimitTicksNonContinuous_ = global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.CreateBuilder(result.tradePriceLimitTicksNonContinuous_).MergeFrom(value).BuildPartial();
        } else {
          result.tradePriceLimitTicksNonContinuous_ = value;
        }
        result.hasTradePriceLimitTicksNonContinuous = true;
        return this;
      }
      public Builder ClearTradePriceLimitTicksNonContinuous() {
        PrepareBuilder();
        result.hasTradePriceLimitTicksNonContinuous = false;
        result.tradePriceLimitTicksNonContinuous_ = null;
        return this;
      }
      
      public bool HasTradePriceLimitPercentContinuous {
       get { return result.hasTradePriceLimitPercentContinuous; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent TradePriceLimitPercentContinuous {
        get { return result.TradePriceLimitPercentContinuous; }
        set { SetTradePriceLimitPercentContinuous(value); }
      }
      public Builder SetTradePriceLimitPercentContinuous(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradePriceLimitPercentContinuous = true;
        result.tradePriceLimitPercentContinuous_ = value;
        return this;
      }
      public Builder SetTradePriceLimitPercentContinuous(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTradePriceLimitPercentContinuous = true;
        result.tradePriceLimitPercentContinuous_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTradePriceLimitPercentContinuous(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTradePriceLimitPercentContinuous &&
            result.tradePriceLimitPercentContinuous_ != global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.DefaultInstance) {
            result.tradePriceLimitPercentContinuous_ = global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.CreateBuilder(result.tradePriceLimitPercentContinuous_).MergeFrom(value).BuildPartial();
        } else {
          result.tradePriceLimitPercentContinuous_ = value;
        }
        result.hasTradePriceLimitPercentContinuous = true;
        return this;
      }
      public Builder ClearTradePriceLimitPercentContinuous() {
        PrepareBuilder();
        result.hasTradePriceLimitPercentContinuous = false;
        result.tradePriceLimitPercentContinuous_ = null;
        return this;
      }
      
      public bool HasTradePriceLimitPercentNonContinuous {
       get { return result.hasTradePriceLimitPercentNonContinuous; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent TradePriceLimitPercentNonContinuous {
        get { return result.TradePriceLimitPercentNonContinuous; }
        set { SetTradePriceLimitPercentNonContinuous(value); }
      }
      public Builder SetTradePriceLimitPercentNonContinuous(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTradePriceLimitPercentNonContinuous = true;
        result.tradePriceLimitPercentNonContinuous_ = value;
        return this;
      }
      public Builder SetTradePriceLimitPercentNonContinuous(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTradePriceLimitPercentNonContinuous = true;
        result.tradePriceLimitPercentNonContinuous_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTradePriceLimitPercentNonContinuous(global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTradePriceLimitPercentNonContinuous &&
            result.tradePriceLimitPercentNonContinuous_ != global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.DefaultInstance) {
            result.tradePriceLimitPercentNonContinuous_ = global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.CreateBuilder(result.tradePriceLimitPercentNonContinuous_).MergeFrom(value).BuildPartial();
        } else {
          result.tradePriceLimitPercentNonContinuous_ = value;
        }
        result.hasTradePriceLimitPercentNonContinuous = true;
        return this;
      }
      public Builder ClearTradePriceLimitPercentNonContinuous() {
        PrepareBuilder();
        result.hasTradePriceLimitPercentNonContinuous = false;
        result.tradePriceLimitPercentNonContinuous_ = null;
        return this;
      }
    }
    static PositionAndTradeLimits() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TradePriceLimitsTicks : pb::GeneratedMessage<TradePriceLimitsTicks, TradePriceLimitsTicks.Builder> {
    private TradePriceLimitsTicks() { }
    private static readonly TradePriceLimitsTicks defaultInstance = new TradePriceLimitsTicks().MakeReadOnly();
    private static readonly string[] _tradePriceLimitsTicksFieldNames = new string[] { "bid_ask", "last", "open", "settlement" };
    private static readonly uint[] _tradePriceLimitsTicksFieldTags = new uint[] { 10, 18, 26, 34 };
    public static TradePriceLimitsTicks DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TradePriceLimitsTicks DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TradePriceLimitsTicks ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradePriceLimitsTicks__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TradePriceLimitsTicks, TradePriceLimitsTicks.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradePriceLimitsTicks__FieldAccessorTable; }
    }
    
    public const int BidAskFieldNumber = 1;
    private bool hasBidAsk;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValue bidAsk_;
    public bool HasBidAsk {
      get { return hasBidAsk; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValue BidAsk {
      get { return bidAsk_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance; }
    }
    
    public const int LastFieldNumber = 2;
    private bool hasLast;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValue last_;
    public bool HasLast {
      get { return hasLast; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValue Last {
      get { return last_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance; }
    }
    
    public const int OpenFieldNumber = 3;
    private bool hasOpen;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValue open_;
    public bool HasOpen {
      get { return hasOpen; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValue Open {
      get { return open_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance; }
    }
    
    public const int SettlementFieldNumber = 4;
    private bool hasSettlement;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValue settlement_;
    public bool HasSettlement {
      get { return hasSettlement; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValue Settlement {
      get { return settlement_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tradePriceLimitsTicksFieldNames;
      if (hasBidAsk) {
        output.WriteMessage(1, field_names[0], BidAsk);
      }
      if (hasLast) {
        output.WriteMessage(2, field_names[1], Last);
      }
      if (hasOpen) {
        output.WriteMessage(3, field_names[2], Open);
      }
      if (hasSettlement) {
        output.WriteMessage(4, field_names[3], Settlement);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBidAsk) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, BidAsk);
      }
      if (hasLast) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Last);
      }
      if (hasOpen) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Open);
      }
      if (hasSettlement) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, Settlement);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TradePriceLimitsTicks ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradePriceLimitsTicks ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradePriceLimitsTicks ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradePriceLimitsTicks ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradePriceLimitsTicks ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradePriceLimitsTicks ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TradePriceLimitsTicks ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TradePriceLimitsTicks ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TradePriceLimitsTicks ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradePriceLimitsTicks ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TradePriceLimitsTicks MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TradePriceLimitsTicks prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TradePriceLimitsTicks, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TradePriceLimitsTicks cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TradePriceLimitsTicks result;
      
      private TradePriceLimitsTicks PrepareBuilder() {
        if (resultIsReadOnly) {
          TradePriceLimitsTicks original = result;
          result = new TradePriceLimitsTicks();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TradePriceLimitsTicks MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.Descriptor; }
      }
      
      public override TradePriceLimitsTicks DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.DefaultInstance; }
      }
      
      public override TradePriceLimitsTicks BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TradePriceLimitsTicks) {
          return MergeFrom((TradePriceLimitsTicks) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TradePriceLimitsTicks other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsTicks.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBidAsk) {
          MergeBidAsk(other.BidAsk);
        }
        if (other.HasLast) {
          MergeLast(other.Last);
        }
        if (other.HasOpen) {
          MergeOpen(other.Open);
        }
        if (other.HasSettlement) {
          MergeSettlement(other.Settlement);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tradePriceLimitsTicksFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tradePriceLimitsTicksFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder();
              if (result.hasBidAsk) {
                subBuilder.MergeFrom(BidAsk);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BidAsk = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder();
              if (result.hasLast) {
                subBuilder.MergeFrom(Last);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Last = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder();
              if (result.hasOpen) {
                subBuilder.MergeFrom(Open);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Open = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder();
              if (result.hasSettlement) {
                subBuilder.MergeFrom(Settlement);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Settlement = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBidAsk {
       get { return result.hasBidAsk; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValue BidAsk {
        get { return result.BidAsk; }
        set { SetBidAsk(value); }
      }
      public Builder SetBidAsk(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBidAsk = true;
        result.bidAsk_ = value;
        return this;
      }
      public Builder SetBidAsk(global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBidAsk = true;
        result.bidAsk_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBidAsk(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBidAsk &&
            result.bidAsk_ != global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance) {
            result.bidAsk_ = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder(result.bidAsk_).MergeFrom(value).BuildPartial();
        } else {
          result.bidAsk_ = value;
        }
        result.hasBidAsk = true;
        return this;
      }
      public Builder ClearBidAsk() {
        PrepareBuilder();
        result.hasBidAsk = false;
        result.bidAsk_ = null;
        return this;
      }
      
      public bool HasLast {
       get { return result.hasLast; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValue Last {
        get { return result.Last; }
        set { SetLast(value); }
      }
      public Builder SetLast(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLast = true;
        result.last_ = value;
        return this;
      }
      public Builder SetLast(global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLast = true;
        result.last_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLast(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLast &&
            result.last_ != global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance) {
            result.last_ = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder(result.last_).MergeFrom(value).BuildPartial();
        } else {
          result.last_ = value;
        }
        result.hasLast = true;
        return this;
      }
      public Builder ClearLast() {
        PrepareBuilder();
        result.hasLast = false;
        result.last_ = null;
        return this;
      }
      
      public bool HasOpen {
       get { return result.hasOpen; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValue Open {
        get { return result.Open; }
        set { SetOpen(value); }
      }
      public Builder SetOpen(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOpen = true;
        result.open_ = value;
        return this;
      }
      public Builder SetOpen(global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOpen = true;
        result.open_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOpen(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOpen &&
            result.open_ != global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance) {
            result.open_ = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder(result.open_).MergeFrom(value).BuildPartial();
        } else {
          result.open_ = value;
        }
        result.hasOpen = true;
        return this;
      }
      public Builder ClearOpen() {
        PrepareBuilder();
        result.hasOpen = false;
        result.open_ = null;
        return this;
      }
      
      public bool HasSettlement {
       get { return result.hasSettlement; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValue Settlement {
        get { return result.Settlement; }
        set { SetSettlement(value); }
      }
      public Builder SetSettlement(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSettlement = true;
        result.settlement_ = value;
        return this;
      }
      public Builder SetSettlement(global::CmsApiSamples.Protocol.CMSApi.LimitValue.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSettlement = true;
        result.settlement_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSettlement(global::CmsApiSamples.Protocol.CMSApi.LimitValue value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSettlement &&
            result.settlement_ != global::CmsApiSamples.Protocol.CMSApi.LimitValue.DefaultInstance) {
            result.settlement_ = global::CmsApiSamples.Protocol.CMSApi.LimitValue.CreateBuilder(result.settlement_).MergeFrom(value).BuildPartial();
        } else {
          result.settlement_ = value;
        }
        result.hasSettlement = true;
        return this;
      }
      public Builder ClearSettlement() {
        PrepareBuilder();
        result.hasSettlement = false;
        result.settlement_ = null;
        return this;
      }
    }
    static TradePriceLimitsTicks() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TradePriceLimitsPercent : pb::GeneratedMessage<TradePriceLimitsPercent, TradePriceLimitsPercent.Builder> {
    private TradePriceLimitsPercent() { }
    private static readonly TradePriceLimitsPercent defaultInstance = new TradePriceLimitsPercent().MakeReadOnly();
    private static readonly string[] _tradePriceLimitsPercentFieldNames = new string[] { "bid_ask", "last", "open", "settlement" };
    private static readonly uint[] _tradePriceLimitsPercentFieldTags = new uint[] { 10, 18, 26, 34 };
    public static TradePriceLimitsPercent DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TradePriceLimitsPercent DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TradePriceLimitsPercent ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradePriceLimitsPercent__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TradePriceLimitsPercent, TradePriceLimitsPercent.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_TradePriceLimitsPercent__FieldAccessorTable; }
    }
    
    public const int BidAskFieldNumber = 1;
    private bool hasBidAsk;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble bidAsk_;
    public bool HasBidAsk {
      get { return hasBidAsk; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble BidAsk {
      get { return bidAsk_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance; }
    }
    
    public const int LastFieldNumber = 2;
    private bool hasLast;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble last_;
    public bool HasLast {
      get { return hasLast; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble Last {
      get { return last_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance; }
    }
    
    public const int OpenFieldNumber = 3;
    private bool hasOpen;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble open_;
    public bool HasOpen {
      get { return hasOpen; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble Open {
      get { return open_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance; }
    }
    
    public const int SettlementFieldNumber = 4;
    private bool hasSettlement;
    private global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble settlement_;
    public bool HasSettlement {
      get { return hasSettlement; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble Settlement {
      get { return settlement_ ?? global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _tradePriceLimitsPercentFieldNames;
      if (hasBidAsk) {
        output.WriteMessage(1, field_names[0], BidAsk);
      }
      if (hasLast) {
        output.WriteMessage(2, field_names[1], Last);
      }
      if (hasOpen) {
        output.WriteMessage(3, field_names[2], Open);
      }
      if (hasSettlement) {
        output.WriteMessage(4, field_names[3], Settlement);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBidAsk) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, BidAsk);
      }
      if (hasLast) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Last);
      }
      if (hasOpen) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Open);
      }
      if (hasSettlement) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, Settlement);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TradePriceLimitsPercent ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradePriceLimitsPercent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradePriceLimitsPercent ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TradePriceLimitsPercent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TradePriceLimitsPercent ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradePriceLimitsPercent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TradePriceLimitsPercent ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TradePriceLimitsPercent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TradePriceLimitsPercent ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TradePriceLimitsPercent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TradePriceLimitsPercent MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TradePriceLimitsPercent prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TradePriceLimitsPercent, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TradePriceLimitsPercent cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TradePriceLimitsPercent result;
      
      private TradePriceLimitsPercent PrepareBuilder() {
        if (resultIsReadOnly) {
          TradePriceLimitsPercent original = result;
          result = new TradePriceLimitsPercent();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TradePriceLimitsPercent MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.Descriptor; }
      }
      
      public override TradePriceLimitsPercent DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.DefaultInstance; }
      }
      
      public override TradePriceLimitsPercent BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TradePriceLimitsPercent) {
          return MergeFrom((TradePriceLimitsPercent) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TradePriceLimitsPercent other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.TradePriceLimitsPercent.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBidAsk) {
          MergeBidAsk(other.BidAsk);
        }
        if (other.HasLast) {
          MergeLast(other.Last);
        }
        if (other.HasOpen) {
          MergeOpen(other.Open);
        }
        if (other.HasSettlement) {
          MergeSettlement(other.Settlement);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_tradePriceLimitsPercentFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _tradePriceLimitsPercentFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.CreateBuilder();
              if (result.hasBidAsk) {
                subBuilder.MergeFrom(BidAsk);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BidAsk = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.CreateBuilder();
              if (result.hasLast) {
                subBuilder.MergeFrom(Last);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Last = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.CreateBuilder();
              if (result.hasOpen) {
                subBuilder.MergeFrom(Open);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Open = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.CreateBuilder();
              if (result.hasSettlement) {
                subBuilder.MergeFrom(Settlement);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Settlement = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBidAsk {
       get { return result.hasBidAsk; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble BidAsk {
        get { return result.BidAsk; }
        set { SetBidAsk(value); }
      }
      public Builder SetBidAsk(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBidAsk = true;
        result.bidAsk_ = value;
        return this;
      }
      public Builder SetBidAsk(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBidAsk = true;
        result.bidAsk_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBidAsk(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBidAsk &&
            result.bidAsk_ != global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance) {
            result.bidAsk_ = global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.CreateBuilder(result.bidAsk_).MergeFrom(value).BuildPartial();
        } else {
          result.bidAsk_ = value;
        }
        result.hasBidAsk = true;
        return this;
      }
      public Builder ClearBidAsk() {
        PrepareBuilder();
        result.hasBidAsk = false;
        result.bidAsk_ = null;
        return this;
      }
      
      public bool HasLast {
       get { return result.hasLast; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble Last {
        get { return result.Last; }
        set { SetLast(value); }
      }
      public Builder SetLast(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLast = true;
        result.last_ = value;
        return this;
      }
      public Builder SetLast(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLast = true;
        result.last_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLast(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLast &&
            result.last_ != global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance) {
            result.last_ = global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.CreateBuilder(result.last_).MergeFrom(value).BuildPartial();
        } else {
          result.last_ = value;
        }
        result.hasLast = true;
        return this;
      }
      public Builder ClearLast() {
        PrepareBuilder();
        result.hasLast = false;
        result.last_ = null;
        return this;
      }
      
      public bool HasOpen {
       get { return result.hasOpen; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble Open {
        get { return result.Open; }
        set { SetOpen(value); }
      }
      public Builder SetOpen(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOpen = true;
        result.open_ = value;
        return this;
      }
      public Builder SetOpen(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOpen = true;
        result.open_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOpen(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOpen &&
            result.open_ != global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance) {
            result.open_ = global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.CreateBuilder(result.open_).MergeFrom(value).BuildPartial();
        } else {
          result.open_ = value;
        }
        result.hasOpen = true;
        return this;
      }
      public Builder ClearOpen() {
        PrepareBuilder();
        result.hasOpen = false;
        result.open_ = null;
        return this;
      }
      
      public bool HasSettlement {
       get { return result.hasSettlement; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble Settlement {
        get { return result.Settlement; }
        set { SetSettlement(value); }
      }
      public Builder SetSettlement(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSettlement = true;
        result.settlement_ = value;
        return this;
      }
      public Builder SetSettlement(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSettlement = true;
        result.settlement_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSettlement(global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSettlement &&
            result.settlement_ != global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.DefaultInstance) {
            result.settlement_ = global::CmsApiSamples.Protocol.CMSApi.LimitValueDouble.CreateBuilder(result.settlement_).MergeFrom(value).BuildPartial();
        } else {
          result.settlement_ = value;
        }
        result.hasSettlement = true;
        return this;
      }
      public Builder ClearSettlement() {
        PrepareBuilder();
        result.hasSettlement = false;
        result.settlement_ = null;
        return this;
      }
    }
    static TradePriceLimitsPercent() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ExchangeMarketLimits : pb::GeneratedMessage<ExchangeMarketLimits, ExchangeMarketLimits.Builder> {
    private ExchangeMarketLimits() { }
    private static readonly ExchangeMarketLimits defaultInstance = new ExchangeMarketLimits().MakeReadOnly();
    private static readonly string[] _exchangeMarketLimitsFieldNames = new string[] { "commodity_market_limits", "default_market_limits", "exchange_group_id" };
    private static readonly uint[] _exchangeMarketLimitsFieldTags = new uint[] { 26, 18, 8 };
    public static ExchangeMarketLimits DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ExchangeMarketLimits DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ExchangeMarketLimits ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ExchangeMarketLimits__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ExchangeMarketLimits, ExchangeMarketLimits.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ExchangeMarketLimits__FieldAccessorTable; }
    }
    
    public const int ExchangeGroupIdFieldNumber = 1;
    private bool hasExchangeGroupId;
    private int exchangeGroupId_;
    public bool HasExchangeGroupId {
      get { return hasExchangeGroupId; }
    }
    public int ExchangeGroupId {
      get { return exchangeGroupId_; }
    }
    
    public const int DefaultMarketLimitsFieldNumber = 2;
    private bool hasDefaultMarketLimits;
    private global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord defaultMarketLimits_;
    public bool HasDefaultMarketLimits {
      get { return hasDefaultMarketLimits; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord DefaultMarketLimits {
      get { return defaultMarketLimits_ ?? global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.DefaultInstance; }
    }
    
    public const int CommodityMarketLimitsFieldNumber = 3;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits> commodityMarketLimits_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits> CommodityMarketLimitsList {
      get { return commodityMarketLimits_; }
    }
    public int CommodityMarketLimitsCount {
      get { return commodityMarketLimits_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits GetCommodityMarketLimits(int index) {
      return commodityMarketLimits_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasExchangeGroupId) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits element in CommodityMarketLimitsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _exchangeMarketLimitsFieldNames;
      if (hasExchangeGroupId) {
        output.WriteSInt32(1, field_names[2], ExchangeGroupId);
      }
      if (hasDefaultMarketLimits) {
        output.WriteMessage(2, field_names[1], DefaultMarketLimits);
      }
      if (commodityMarketLimits_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], commodityMarketLimits_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasExchangeGroupId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, ExchangeGroupId);
      }
      if (hasDefaultMarketLimits) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, DefaultMarketLimits);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits element in CommodityMarketLimitsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ExchangeMarketLimits ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExchangeMarketLimits ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExchangeMarketLimits ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ExchangeMarketLimits ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ExchangeMarketLimits ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExchangeMarketLimits ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ExchangeMarketLimits ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ExchangeMarketLimits ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ExchangeMarketLimits ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ExchangeMarketLimits ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ExchangeMarketLimits MakeReadOnly() {
      commodityMarketLimits_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ExchangeMarketLimits prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ExchangeMarketLimits, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ExchangeMarketLimits cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ExchangeMarketLimits result;
      
      private ExchangeMarketLimits PrepareBuilder() {
        if (resultIsReadOnly) {
          ExchangeMarketLimits original = result;
          result = new ExchangeMarketLimits();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ExchangeMarketLimits MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits.Descriptor; }
      }
      
      public override ExchangeMarketLimits DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits.DefaultInstance; }
      }
      
      public override ExchangeMarketLimits BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ExchangeMarketLimits) {
          return MergeFrom((ExchangeMarketLimits) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ExchangeMarketLimits other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ExchangeMarketLimits.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasExchangeGroupId) {
          ExchangeGroupId = other.ExchangeGroupId;
        }
        if (other.HasDefaultMarketLimits) {
          MergeDefaultMarketLimits(other.DefaultMarketLimits);
        }
        if (other.commodityMarketLimits_.Count != 0) {
          result.commodityMarketLimits_.Add(other.commodityMarketLimits_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_exchangeMarketLimitsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _exchangeMarketLimitsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasExchangeGroupId = input.ReadSInt32(ref result.exchangeGroupId_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.CreateBuilder();
              if (result.hasDefaultMarketLimits) {
                subBuilder.MergeFrom(DefaultMarketLimits);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DefaultMarketLimits = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.commodityMarketLimits_, global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasExchangeGroupId {
        get { return result.hasExchangeGroupId; }
      }
      public int ExchangeGroupId {
        get { return result.ExchangeGroupId; }
        set { SetExchangeGroupId(value); }
      }
      public Builder SetExchangeGroupId(int value) {
        PrepareBuilder();
        result.hasExchangeGroupId = true;
        result.exchangeGroupId_ = value;
        return this;
      }
      public Builder ClearExchangeGroupId() {
        PrepareBuilder();
        result.hasExchangeGroupId = false;
        result.exchangeGroupId_ = 0;
        return this;
      }
      
      public bool HasDefaultMarketLimits {
       get { return result.hasDefaultMarketLimits; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord DefaultMarketLimits {
        get { return result.DefaultMarketLimits; }
        set { SetDefaultMarketLimits(value); }
      }
      public Builder SetDefaultMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDefaultMarketLimits = true;
        result.defaultMarketLimits_ = value;
        return this;
      }
      public Builder SetDefaultMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDefaultMarketLimits = true;
        result.defaultMarketLimits_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDefaultMarketLimits(global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDefaultMarketLimits &&
            result.defaultMarketLimits_ != global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.DefaultInstance) {
            result.defaultMarketLimits_ = global::CmsApiSamples.Protocol.CMSApi.MarketLimitsRecord.CreateBuilder(result.defaultMarketLimits_).MergeFrom(value).BuildPartial();
        } else {
          result.defaultMarketLimits_ = value;
        }
        result.hasDefaultMarketLimits = true;
        return this;
      }
      public Builder ClearDefaultMarketLimits() {
        PrepareBuilder();
        result.hasDefaultMarketLimits = false;
        result.defaultMarketLimits_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits> CommodityMarketLimitsList {
        get { return PrepareBuilder().commodityMarketLimits_; }
      }
      public int CommodityMarketLimitsCount {
        get { return result.CommodityMarketLimitsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits GetCommodityMarketLimits(int index) {
        return result.GetCommodityMarketLimits(index);
      }
      public Builder SetCommodityMarketLimits(int index, global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.commodityMarketLimits_[index] = value;
        return this;
      }
      public Builder SetCommodityMarketLimits(int index, global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.commodityMarketLimits_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCommodityMarketLimits(global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.commodityMarketLimits_.Add(value);
        return this;
      }
      public Builder AddCommodityMarketLimits(global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.commodityMarketLimits_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCommodityMarketLimits(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits> values) {
        PrepareBuilder();
        result.commodityMarketLimits_.Add(values);
        return this;
      }
      public Builder ClearCommodityMarketLimits() {
        PrepareBuilder();
        result.commodityMarketLimits_.Clear();
        return this;
      }
    }
    static ExchangeMarketLimits() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CommodityMarketLimits : pb::GeneratedMessage<CommodityMarketLimits, CommodityMarketLimits.Builder> {
    private CommodityMarketLimits() { }
    private static readonly CommodityMarketLimits defaultInstance = new CommodityMarketLimits().MakeReadOnly();
    private static readonly string[] _commodityMarketLimitsFieldNames = new string[] { "fungible_commodity_id", "instrument_market_limits", "position_and_trade_limits", "tradable_commodity_id" };
    private static readonly uint[] _commodityMarketLimitsFieldTags = new uint[] { 8, 34, 26, 18 };
    public static CommodityMarketLimits DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CommodityMarketLimits DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CommodityMarketLimits ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CommodityMarketLimits__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CommodityMarketLimits, CommodityMarketLimits.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_CommodityMarketLimits__FieldAccessorTable; }
    }
    
    public const int FungibleCommodityIdFieldNumber = 1;
    private bool hasFungibleCommodityId;
    private int fungibleCommodityId_;
    public bool HasFungibleCommodityId {
      get { return hasFungibleCommodityId; }
    }
    public int FungibleCommodityId {
      get { return fungibleCommodityId_; }
    }
    
    public const int TradableCommodityIdFieldNumber = 2;
    private pbc::PopsicleList<string> tradableCommodityId_ = new pbc::PopsicleList<string>();
    public scg::IList<string> TradableCommodityIdList {
      get { return pbc::Lists.AsReadOnly(tradableCommodityId_); }
    }
    public int TradableCommodityIdCount {
      get { return tradableCommodityId_.Count; }
    }
    public string GetTradableCommodityId(int index) {
      return tradableCommodityId_[index];
    }
    
    public const int PositionAndTradeLimitsFieldNumber = 3;
    private bool hasPositionAndTradeLimits;
    private global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits positionAndTradeLimits_;
    public bool HasPositionAndTradeLimits {
      get { return hasPositionAndTradeLimits; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits PositionAndTradeLimits {
      get { return positionAndTradeLimits_ ?? global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.DefaultInstance; }
    }
    
    public const int InstrumentMarketLimitsFieldNumber = 4;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits> instrumentMarketLimits_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits> InstrumentMarketLimitsList {
      get { return instrumentMarketLimits_; }
    }
    public int InstrumentMarketLimitsCount {
      get { return instrumentMarketLimits_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits GetInstrumentMarketLimits(int index) {
      return instrumentMarketLimits_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFungibleCommodityId) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits element in InstrumentMarketLimitsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _commodityMarketLimitsFieldNames;
      if (hasFungibleCommodityId) {
        output.WriteSInt32(1, field_names[0], FungibleCommodityId);
      }
      if (tradableCommodityId_.Count > 0) {
        output.WriteStringArray(2, field_names[3], tradableCommodityId_);
      }
      if (hasPositionAndTradeLimits) {
        output.WriteMessage(3, field_names[2], PositionAndTradeLimits);
      }
      if (instrumentMarketLimits_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], instrumentMarketLimits_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFungibleCommodityId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, FungibleCommodityId);
      }
      {
        int dataSize = 0;
        foreach (string element in TradableCommodityIdList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * tradableCommodityId_.Count;
      }
      if (hasPositionAndTradeLimits) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, PositionAndTradeLimits);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits element in InstrumentMarketLimitsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CommodityMarketLimits ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CommodityMarketLimits ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CommodityMarketLimits ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CommodityMarketLimits ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CommodityMarketLimits ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CommodityMarketLimits ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CommodityMarketLimits ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CommodityMarketLimits ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CommodityMarketLimits ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CommodityMarketLimits ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CommodityMarketLimits MakeReadOnly() {
      tradableCommodityId_.MakeReadOnly();
      instrumentMarketLimits_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CommodityMarketLimits prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CommodityMarketLimits, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CommodityMarketLimits cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CommodityMarketLimits result;
      
      private CommodityMarketLimits PrepareBuilder() {
        if (resultIsReadOnly) {
          CommodityMarketLimits original = result;
          result = new CommodityMarketLimits();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CommodityMarketLimits MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits.Descriptor; }
      }
      
      public override CommodityMarketLimits DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits.DefaultInstance; }
      }
      
      public override CommodityMarketLimits BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CommodityMarketLimits) {
          return MergeFrom((CommodityMarketLimits) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CommodityMarketLimits other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.CommodityMarketLimits.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFungibleCommodityId) {
          FungibleCommodityId = other.FungibleCommodityId;
        }
        if (other.tradableCommodityId_.Count != 0) {
          result.tradableCommodityId_.Add(other.tradableCommodityId_);
        }
        if (other.HasPositionAndTradeLimits) {
          MergePositionAndTradeLimits(other.PositionAndTradeLimits);
        }
        if (other.instrumentMarketLimits_.Count != 0) {
          result.instrumentMarketLimits_.Add(other.instrumentMarketLimits_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_commodityMarketLimitsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _commodityMarketLimitsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasFungibleCommodityId = input.ReadSInt32(ref result.fungibleCommodityId_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.tradableCommodityId_);
              break;
            }
            case 26: {
              global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.CreateBuilder();
              if (result.hasPositionAndTradeLimits) {
                subBuilder.MergeFrom(PositionAndTradeLimits);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PositionAndTradeLimits = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.instrumentMarketLimits_, global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFungibleCommodityId {
        get { return result.hasFungibleCommodityId; }
      }
      public int FungibleCommodityId {
        get { return result.FungibleCommodityId; }
        set { SetFungibleCommodityId(value); }
      }
      public Builder SetFungibleCommodityId(int value) {
        PrepareBuilder();
        result.hasFungibleCommodityId = true;
        result.fungibleCommodityId_ = value;
        return this;
      }
      public Builder ClearFungibleCommodityId() {
        PrepareBuilder();
        result.hasFungibleCommodityId = false;
        result.fungibleCommodityId_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<string> TradableCommodityIdList {
        get { return PrepareBuilder().tradableCommodityId_; }
      }
      public int TradableCommodityIdCount {
        get { return result.TradableCommodityIdCount; }
      }
      public string GetTradableCommodityId(int index) {
        return result.GetTradableCommodityId(index);
      }
      public Builder SetTradableCommodityId(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tradableCommodityId_[index] = value;
        return this;
      }
      public Builder AddTradableCommodityId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tradableCommodityId_.Add(value);
        return this;
      }
      public Builder AddRangeTradableCommodityId(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.tradableCommodityId_.Add(values);
        return this;
      }
      public Builder ClearTradableCommodityId() {
        PrepareBuilder();
        result.tradableCommodityId_.Clear();
        return this;
      }
      
      public bool HasPositionAndTradeLimits {
       get { return result.hasPositionAndTradeLimits; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits PositionAndTradeLimits {
        get { return result.PositionAndTradeLimits; }
        set { SetPositionAndTradeLimits(value); }
      }
      public Builder SetPositionAndTradeLimits(global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPositionAndTradeLimits = true;
        result.positionAndTradeLimits_ = value;
        return this;
      }
      public Builder SetPositionAndTradeLimits(global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPositionAndTradeLimits = true;
        result.positionAndTradeLimits_ = builderForValue.Build();
        return this;
      }
      public Builder MergePositionAndTradeLimits(global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPositionAndTradeLimits &&
            result.positionAndTradeLimits_ != global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.DefaultInstance) {
            result.positionAndTradeLimits_ = global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.CreateBuilder(result.positionAndTradeLimits_).MergeFrom(value).BuildPartial();
        } else {
          result.positionAndTradeLimits_ = value;
        }
        result.hasPositionAndTradeLimits = true;
        return this;
      }
      public Builder ClearPositionAndTradeLimits() {
        PrepareBuilder();
        result.hasPositionAndTradeLimits = false;
        result.positionAndTradeLimits_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits> InstrumentMarketLimitsList {
        get { return PrepareBuilder().instrumentMarketLimits_; }
      }
      public int InstrumentMarketLimitsCount {
        get { return result.InstrumentMarketLimitsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits GetInstrumentMarketLimits(int index) {
        return result.GetInstrumentMarketLimits(index);
      }
      public Builder SetInstrumentMarketLimits(int index, global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.instrumentMarketLimits_[index] = value;
        return this;
      }
      public Builder SetInstrumentMarketLimits(int index, global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.instrumentMarketLimits_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddInstrumentMarketLimits(global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.instrumentMarketLimits_.Add(value);
        return this;
      }
      public Builder AddInstrumentMarketLimits(global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.instrumentMarketLimits_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeInstrumentMarketLimits(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits> values) {
        PrepareBuilder();
        result.instrumentMarketLimits_.Add(values);
        return this;
      }
      public Builder ClearInstrumentMarketLimits() {
        PrepareBuilder();
        result.instrumentMarketLimits_.Clear();
        return this;
      }
    }
    static CommodityMarketLimits() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class InstrumentMarketLimits : pb::GeneratedMessage<InstrumentMarketLimits, InstrumentMarketLimits.Builder> {
    private InstrumentMarketLimits() { }
    private static readonly InstrumentMarketLimits defaultInstance = new InstrumentMarketLimits().MakeReadOnly();
    private static readonly string[] _instrumentMarketLimitsFieldNames = new string[] { "instrument_type_id", "position_and_trade_limits" };
    private static readonly uint[] _instrumentMarketLimitsFieldTags = new uint[] { 8, 18 };
    public static InstrumentMarketLimits DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InstrumentMarketLimits DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InstrumentMarketLimits ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_InstrumentMarketLimits__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InstrumentMarketLimits, InstrumentMarketLimits.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_InstrumentMarketLimits__FieldAccessorTable; }
    }
    
    public const int InstrumentTypeIdFieldNumber = 1;
    private bool hasInstrumentTypeId;
    private int instrumentTypeId_;
    public bool HasInstrumentTypeId {
      get { return hasInstrumentTypeId; }
    }
    public int InstrumentTypeId {
      get { return instrumentTypeId_; }
    }
    
    public const int PositionAndTradeLimitsFieldNumber = 2;
    private bool hasPositionAndTradeLimits;
    private global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits positionAndTradeLimits_;
    public bool HasPositionAndTradeLimits {
      get { return hasPositionAndTradeLimits; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits PositionAndTradeLimits {
      get { return positionAndTradeLimits_ ?? global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasInstrumentTypeId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _instrumentMarketLimitsFieldNames;
      if (hasInstrumentTypeId) {
        output.WriteSInt32(1, field_names[0], InstrumentTypeId);
      }
      if (hasPositionAndTradeLimits) {
        output.WriteMessage(2, field_names[1], PositionAndTradeLimits);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasInstrumentTypeId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(1, InstrumentTypeId);
      }
      if (hasPositionAndTradeLimits) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, PositionAndTradeLimits);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static InstrumentMarketLimits ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InstrumentMarketLimits ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InstrumentMarketLimits ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InstrumentMarketLimits ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InstrumentMarketLimits ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InstrumentMarketLimits ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InstrumentMarketLimits ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InstrumentMarketLimits ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InstrumentMarketLimits ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InstrumentMarketLimits ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InstrumentMarketLimits MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InstrumentMarketLimits prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<InstrumentMarketLimits, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InstrumentMarketLimits cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InstrumentMarketLimits result;
      
      private InstrumentMarketLimits PrepareBuilder() {
        if (resultIsReadOnly) {
          InstrumentMarketLimits original = result;
          result = new InstrumentMarketLimits();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InstrumentMarketLimits MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits.Descriptor; }
      }
      
      public override InstrumentMarketLimits DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits.DefaultInstance; }
      }
      
      public override InstrumentMarketLimits BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InstrumentMarketLimits) {
          return MergeFrom((InstrumentMarketLimits) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InstrumentMarketLimits other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.InstrumentMarketLimits.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasInstrumentTypeId) {
          InstrumentTypeId = other.InstrumentTypeId;
        }
        if (other.HasPositionAndTradeLimits) {
          MergePositionAndTradeLimits(other.PositionAndTradeLimits);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_instrumentMarketLimitsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _instrumentMarketLimitsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasInstrumentTypeId = input.ReadSInt32(ref result.instrumentTypeId_);
              break;
            }
            case 18: {
              global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.CreateBuilder();
              if (result.hasPositionAndTradeLimits) {
                subBuilder.MergeFrom(PositionAndTradeLimits);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PositionAndTradeLimits = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasInstrumentTypeId {
        get { return result.hasInstrumentTypeId; }
      }
      public int InstrumentTypeId {
        get { return result.InstrumentTypeId; }
        set { SetInstrumentTypeId(value); }
      }
      public Builder SetInstrumentTypeId(int value) {
        PrepareBuilder();
        result.hasInstrumentTypeId = true;
        result.instrumentTypeId_ = value;
        return this;
      }
      public Builder ClearInstrumentTypeId() {
        PrepareBuilder();
        result.hasInstrumentTypeId = false;
        result.instrumentTypeId_ = 0;
        return this;
      }
      
      public bool HasPositionAndTradeLimits {
       get { return result.hasPositionAndTradeLimits; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits PositionAndTradeLimits {
        get { return result.PositionAndTradeLimits; }
        set { SetPositionAndTradeLimits(value); }
      }
      public Builder SetPositionAndTradeLimits(global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPositionAndTradeLimits = true;
        result.positionAndTradeLimits_ = value;
        return this;
      }
      public Builder SetPositionAndTradeLimits(global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPositionAndTradeLimits = true;
        result.positionAndTradeLimits_ = builderForValue.Build();
        return this;
      }
      public Builder MergePositionAndTradeLimits(global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPositionAndTradeLimits &&
            result.positionAndTradeLimits_ != global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.DefaultInstance) {
            result.positionAndTradeLimits_ = global::CmsApiSamples.Protocol.CMSApi.PositionAndTradeLimits.CreateBuilder(result.positionAndTradeLimits_).MergeFrom(value).BuildPartial();
        } else {
          result.positionAndTradeLimits_ = value;
        }
        result.hasPositionAndTradeLimits = true;
        return this;
      }
      public Builder ClearPositionAndTradeLimits() {
        PrepareBuilder();
        result.hasPositionAndTradeLimits = false;
        result.positionAndTradeLimits_ = null;
        return this;
      }
    }
    static InstrumentMarketLimits() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ContractPosition : pb::GeneratedMessage<ContractPosition, ContractPosition.Builder> {
    private ContractPosition() { }
    private static readonly ContractPosition defaultInstance = new ContractPosition().MakeReadOnly();
    private static readonly string[] _contractPositionFieldNames = new string[] { "is_short_open_position", "open_position", "symbol" };
    private static readonly uint[] _contractPositionFieldTags = new uint[] { 16, 26, 10 };
    public static ContractPosition DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ContractPosition DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ContractPosition ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ContractPosition__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ContractPosition, ContractPosition.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_ContractPosition__FieldAccessorTable; }
    }
    
    public const int SymbolFieldNumber = 1;
    private bool hasSymbol;
    private string symbol_ = "";
    public bool HasSymbol {
      get { return hasSymbol; }
    }
    public string Symbol {
      get { return symbol_; }
    }
    
    public const int IsShortOpenPositionFieldNumber = 2;
    private bool hasIsShortOpenPosition;
    private bool isShortOpenPosition_;
    public bool HasIsShortOpenPosition {
      get { return hasIsShortOpenPosition; }
    }
    public bool IsShortOpenPosition {
      get { return isShortOpenPosition_; }
    }
    
    public const int OpenPositionFieldNumber = 3;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.OpenPosition> openPosition_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.OpenPosition>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.OpenPosition> OpenPositionList {
      get { return openPosition_; }
    }
    public int OpenPositionCount {
      get { return openPosition_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.OpenPosition GetOpenPosition(int index) {
      return openPosition_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSymbol) return false;
        if (!hasIsShortOpenPosition) return false;
        foreach (global::CmsApiSamples.Protocol.CMSApi.OpenPosition element in OpenPositionList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _contractPositionFieldNames;
      if (hasSymbol) {
        output.WriteString(1, field_names[2], Symbol);
      }
      if (hasIsShortOpenPosition) {
        output.WriteBool(2, field_names[0], IsShortOpenPosition);
      }
      if (openPosition_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], openPosition_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSymbol) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Symbol);
      }
      if (hasIsShortOpenPosition) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, IsShortOpenPosition);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.OpenPosition element in OpenPositionList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ContractPosition ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ContractPosition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ContractPosition ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ContractPosition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ContractPosition ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ContractPosition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ContractPosition ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ContractPosition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ContractPosition ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ContractPosition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ContractPosition MakeReadOnly() {
      openPosition_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ContractPosition prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ContractPosition, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ContractPosition cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ContractPosition result;
      
      private ContractPosition PrepareBuilder() {
        if (resultIsReadOnly) {
          ContractPosition original = result;
          result = new ContractPosition();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ContractPosition MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ContractPosition.Descriptor; }
      }
      
      public override ContractPosition DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.ContractPosition.DefaultInstance; }
      }
      
      public override ContractPosition BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ContractPosition) {
          return MergeFrom((ContractPosition) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ContractPosition other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.ContractPosition.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSymbol) {
          Symbol = other.Symbol;
        }
        if (other.HasIsShortOpenPosition) {
          IsShortOpenPosition = other.IsShortOpenPosition;
        }
        if (other.openPosition_.Count != 0) {
          result.openPosition_.Add(other.openPosition_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_contractPositionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _contractPositionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasSymbol = input.ReadString(ref result.symbol_);
              break;
            }
            case 16: {
              result.hasIsShortOpenPosition = input.ReadBool(ref result.isShortOpenPosition_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.openPosition_, global::CmsApiSamples.Protocol.CMSApi.OpenPosition.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSymbol {
        get { return result.hasSymbol; }
      }
      public string Symbol {
        get { return result.Symbol; }
        set { SetSymbol(value); }
      }
      public Builder SetSymbol(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSymbol = true;
        result.symbol_ = value;
        return this;
      }
      public Builder ClearSymbol() {
        PrepareBuilder();
        result.hasSymbol = false;
        result.symbol_ = "";
        return this;
      }
      
      public bool HasIsShortOpenPosition {
        get { return result.hasIsShortOpenPosition; }
      }
      public bool IsShortOpenPosition {
        get { return result.IsShortOpenPosition; }
        set { SetIsShortOpenPosition(value); }
      }
      public Builder SetIsShortOpenPosition(bool value) {
        PrepareBuilder();
        result.hasIsShortOpenPosition = true;
        result.isShortOpenPosition_ = value;
        return this;
      }
      public Builder ClearIsShortOpenPosition() {
        PrepareBuilder();
        result.hasIsShortOpenPosition = false;
        result.isShortOpenPosition_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.OpenPosition> OpenPositionList {
        get { return PrepareBuilder().openPosition_; }
      }
      public int OpenPositionCount {
        get { return result.OpenPositionCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.OpenPosition GetOpenPosition(int index) {
        return result.GetOpenPosition(index);
      }
      public Builder SetOpenPosition(int index, global::CmsApiSamples.Protocol.CMSApi.OpenPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.openPosition_[index] = value;
        return this;
      }
      public Builder SetOpenPosition(int index, global::CmsApiSamples.Protocol.CMSApi.OpenPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.openPosition_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOpenPosition(global::CmsApiSamples.Protocol.CMSApi.OpenPosition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.openPosition_.Add(value);
        return this;
      }
      public Builder AddOpenPosition(global::CmsApiSamples.Protocol.CMSApi.OpenPosition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.openPosition_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOpenPosition(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.OpenPosition> values) {
        PrepareBuilder();
        result.openPosition_.Add(values);
        return this;
      }
      public Builder ClearOpenPosition() {
        PrepareBuilder();
        result.openPosition_.Clear();
        return this;
      }
    }
    static ContractPosition() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OpenPosition : pb::GeneratedMessage<OpenPosition, OpenPosition.Builder> {
    private OpenPosition() { }
    private static readonly OpenPosition defaultInstance = new OpenPosition().MakeReadOnly();
    private static readonly string[] _openPositionFieldNames = new string[] { "position_id", "price", "qty", "statement_date", "trade_date", "trade_utc_time" };
    private static readonly uint[] _openPositionFieldTags = new uint[] { 58, 25, 16, 40, 32, 48 };
    public static OpenPosition DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OpenPosition DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OpenPosition ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OpenPosition__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OpenPosition, OpenPosition.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OpenPosition__FieldAccessorTable; }
    }
    
    public const int QtyFieldNumber = 2;
    private bool hasQty;
    private uint qty_;
    public bool HasQty {
      get { return hasQty; }
    }
    [global::System.CLSCompliant(false)]
    public uint Qty {
      get { return qty_; }
    }
    
    public const int PriceFieldNumber = 3;
    private bool hasPrice;
    private double price_;
    public bool HasPrice {
      get { return hasPrice; }
    }
    public double Price {
      get { return price_; }
    }
    
    public const int TradeDateFieldNumber = 4;
    private bool hasTradeDate;
    private long tradeDate_;
    public bool HasTradeDate {
      get { return hasTradeDate; }
    }
    public long TradeDate {
      get { return tradeDate_; }
    }
    
    public const int StatementDateFieldNumber = 5;
    private bool hasStatementDate;
    private long statementDate_;
    public bool HasStatementDate {
      get { return hasStatementDate; }
    }
    public long StatementDate {
      get { return statementDate_; }
    }
    
    public const int TradeUtcTimeFieldNumber = 6;
    private bool hasTradeUtcTime;
    private long tradeUtcTime_;
    public bool HasTradeUtcTime {
      get { return hasTradeUtcTime; }
    }
    public long TradeUtcTime {
      get { return tradeUtcTime_; }
    }
    
    public const int PositionIdFieldNumber = 7;
    private bool hasPositionId;
    private string positionId_ = "";
    public bool HasPositionId {
      get { return hasPositionId; }
    }
    public string PositionId {
      get { return positionId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasQty) return false;
        if (!hasPrice) return false;
        if (!hasTradeDate) return false;
        if (!hasStatementDate) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _openPositionFieldNames;
      if (hasQty) {
        output.WriteUInt32(2, field_names[2], Qty);
      }
      if (hasPrice) {
        output.WriteDouble(3, field_names[1], Price);
      }
      if (hasTradeDate) {
        output.WriteSInt64(4, field_names[4], TradeDate);
      }
      if (hasStatementDate) {
        output.WriteSInt64(5, field_names[3], StatementDate);
      }
      if (hasTradeUtcTime) {
        output.WriteSInt64(6, field_names[5], TradeUtcTime);
      }
      if (hasPositionId) {
        output.WriteString(7, field_names[0], PositionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasQty) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Qty);
      }
      if (hasPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(3, Price);
      }
      if (hasTradeDate) {
        size += pb::CodedOutputStream.ComputeSInt64Size(4, TradeDate);
      }
      if (hasStatementDate) {
        size += pb::CodedOutputStream.ComputeSInt64Size(5, StatementDate);
      }
      if (hasTradeUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(6, TradeUtcTime);
      }
      if (hasPositionId) {
        size += pb::CodedOutputStream.ComputeStringSize(7, PositionId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OpenPosition ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OpenPosition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OpenPosition ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OpenPosition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OpenPosition ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OpenPosition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OpenPosition ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OpenPosition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OpenPosition ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OpenPosition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OpenPosition MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OpenPosition prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OpenPosition, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OpenPosition cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OpenPosition result;
      
      private OpenPosition PrepareBuilder() {
        if (resultIsReadOnly) {
          OpenPosition original = result;
          result = new OpenPosition();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OpenPosition MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OpenPosition.Descriptor; }
      }
      
      public override OpenPosition DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OpenPosition.DefaultInstance; }
      }
      
      public override OpenPosition BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OpenPosition) {
          return MergeFrom((OpenPosition) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OpenPosition other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OpenPosition.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasQty) {
          Qty = other.Qty;
        }
        if (other.HasPrice) {
          Price = other.Price;
        }
        if (other.HasTradeDate) {
          TradeDate = other.TradeDate;
        }
        if (other.HasStatementDate) {
          StatementDate = other.StatementDate;
        }
        if (other.HasTradeUtcTime) {
          TradeUtcTime = other.TradeUtcTime;
        }
        if (other.HasPositionId) {
          PositionId = other.PositionId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_openPositionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _openPositionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 16: {
              result.hasQty = input.ReadUInt32(ref result.qty_);
              break;
            }
            case 25: {
              result.hasPrice = input.ReadDouble(ref result.price_);
              break;
            }
            case 32: {
              result.hasTradeDate = input.ReadSInt64(ref result.tradeDate_);
              break;
            }
            case 40: {
              result.hasStatementDate = input.ReadSInt64(ref result.statementDate_);
              break;
            }
            case 48: {
              result.hasTradeUtcTime = input.ReadSInt64(ref result.tradeUtcTime_);
              break;
            }
            case 58: {
              result.hasPositionId = input.ReadString(ref result.positionId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasQty {
        get { return result.hasQty; }
      }
      [global::System.CLSCompliant(false)]
      public uint Qty {
        get { return result.Qty; }
        set { SetQty(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetQty(uint value) {
        PrepareBuilder();
        result.hasQty = true;
        result.qty_ = value;
        return this;
      }
      public Builder ClearQty() {
        PrepareBuilder();
        result.hasQty = false;
        result.qty_ = 0;
        return this;
      }
      
      public bool HasPrice {
        get { return result.hasPrice; }
      }
      public double Price {
        get { return result.Price; }
        set { SetPrice(value); }
      }
      public Builder SetPrice(double value) {
        PrepareBuilder();
        result.hasPrice = true;
        result.price_ = value;
        return this;
      }
      public Builder ClearPrice() {
        PrepareBuilder();
        result.hasPrice = false;
        result.price_ = 0D;
        return this;
      }
      
      public bool HasTradeDate {
        get { return result.hasTradeDate; }
      }
      public long TradeDate {
        get { return result.TradeDate; }
        set { SetTradeDate(value); }
      }
      public Builder SetTradeDate(long value) {
        PrepareBuilder();
        result.hasTradeDate = true;
        result.tradeDate_ = value;
        return this;
      }
      public Builder ClearTradeDate() {
        PrepareBuilder();
        result.hasTradeDate = false;
        result.tradeDate_ = 0;
        return this;
      }
      
      public bool HasStatementDate {
        get { return result.hasStatementDate; }
      }
      public long StatementDate {
        get { return result.StatementDate; }
        set { SetStatementDate(value); }
      }
      public Builder SetStatementDate(long value) {
        PrepareBuilder();
        result.hasStatementDate = true;
        result.statementDate_ = value;
        return this;
      }
      public Builder ClearStatementDate() {
        PrepareBuilder();
        result.hasStatementDate = false;
        result.statementDate_ = 0;
        return this;
      }
      
      public bool HasTradeUtcTime {
        get { return result.hasTradeUtcTime; }
      }
      public long TradeUtcTime {
        get { return result.TradeUtcTime; }
        set { SetTradeUtcTime(value); }
      }
      public Builder SetTradeUtcTime(long value) {
        PrepareBuilder();
        result.hasTradeUtcTime = true;
        result.tradeUtcTime_ = value;
        return this;
      }
      public Builder ClearTradeUtcTime() {
        PrepareBuilder();
        result.hasTradeUtcTime = false;
        result.tradeUtcTime_ = 0;
        return this;
      }
      
      public bool HasPositionId {
        get { return result.hasPositionId; }
      }
      public string PositionId {
        get { return result.PositionId; }
        set { SetPositionId(value); }
      }
      public Builder SetPositionId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPositionId = true;
        result.positionId_ = value;
        return this;
      }
      public Builder ClearPositionId() {
        PrepareBuilder();
        result.hasPositionId = false;
        result.positionId_ = "";
        return this;
      }
    }
    static OpenPosition() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Equity : pb::GeneratedMessage<Equity, Equity.Builder> {
    private Equity() { }
    private static readonly Equity defaultInstance = new Equity().MakeReadOnly();
    private static readonly string[] _equityFieldNames = new string[] { "balance", "cash_excess", "currency", "initial_margin", "maint_margin", "mvo", "ote", "posted_margin", "securities", "total_equity", "total_value" };
    private static readonly uint[] _equityFieldTags = new uint[] { 25, 65, 10, 73, 81, 49, 33, 89, 17, 41, 57 };
    public static Equity DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Equity DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Equity ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_Equity__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Equity, Equity.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_Equity__FieldAccessorTable; }
    }
    
    public const int CurrencyFieldNumber = 1;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int SecuritiesFieldNumber = 2;
    private bool hasSecurities;
    private double securities_;
    public bool HasSecurities {
      get { return hasSecurities; }
    }
    public double Securities {
      get { return securities_; }
    }
    
    public const int BalanceFieldNumber = 3;
    private bool hasBalance;
    private double balance_;
    public bool HasBalance {
      get { return hasBalance; }
    }
    public double Balance {
      get { return balance_; }
    }
    
    public const int OteFieldNumber = 4;
    private bool hasOte;
    private double ote_;
    public bool HasOte {
      get { return hasOte; }
    }
    public double Ote {
      get { return ote_; }
    }
    
    public const int TotalEquityFieldNumber = 5;
    private bool hasTotalEquity;
    private double totalEquity_;
    public bool HasTotalEquity {
      get { return hasTotalEquity; }
    }
    public double TotalEquity {
      get { return totalEquity_; }
    }
    
    public const int MvoFieldNumber = 6;
    private bool hasMvo;
    private double mvo_;
    public bool HasMvo {
      get { return hasMvo; }
    }
    public double Mvo {
      get { return mvo_; }
    }
    
    public const int TotalValueFieldNumber = 7;
    private bool hasTotalValue;
    private double totalValue_;
    public bool HasTotalValue {
      get { return hasTotalValue; }
    }
    public double TotalValue {
      get { return totalValue_; }
    }
    
    public const int CashExcessFieldNumber = 8;
    private bool hasCashExcess;
    private double cashExcess_;
    public bool HasCashExcess {
      get { return hasCashExcess; }
    }
    public double CashExcess {
      get { return cashExcess_; }
    }
    
    public const int InitialMarginFieldNumber = 9;
    private bool hasInitialMargin;
    private double initialMargin_;
    public bool HasInitialMargin {
      get { return hasInitialMargin; }
    }
    public double InitialMargin {
      get { return initialMargin_; }
    }
    
    public const int MaintMarginFieldNumber = 10;
    private bool hasMaintMargin;
    private double maintMargin_;
    public bool HasMaintMargin {
      get { return hasMaintMargin; }
    }
    public double MaintMargin {
      get { return maintMargin_; }
    }
    
    public const int PostedMarginFieldNumber = 11;
    private bool hasPostedMargin;
    private double postedMargin_;
    public bool HasPostedMargin {
      get { return hasPostedMargin; }
    }
    public double PostedMargin {
      get { return postedMargin_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCurrency) return false;
        if (!hasSecurities) return false;
        if (!hasBalance) return false;
        if (!hasOte) return false;
        if (!hasTotalEquity) return false;
        if (!hasMvo) return false;
        if (!hasTotalValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _equityFieldNames;
      if (hasCurrency) {
        output.WriteString(1, field_names[2], Currency);
      }
      if (hasSecurities) {
        output.WriteDouble(2, field_names[8], Securities);
      }
      if (hasBalance) {
        output.WriteDouble(3, field_names[0], Balance);
      }
      if (hasOte) {
        output.WriteDouble(4, field_names[6], Ote);
      }
      if (hasTotalEquity) {
        output.WriteDouble(5, field_names[9], TotalEquity);
      }
      if (hasMvo) {
        output.WriteDouble(6, field_names[5], Mvo);
      }
      if (hasTotalValue) {
        output.WriteDouble(7, field_names[10], TotalValue);
      }
      if (hasCashExcess) {
        output.WriteDouble(8, field_names[1], CashExcess);
      }
      if (hasInitialMargin) {
        output.WriteDouble(9, field_names[3], InitialMargin);
      }
      if (hasMaintMargin) {
        output.WriteDouble(10, field_names[4], MaintMargin);
      }
      if (hasPostedMargin) {
        output.WriteDouble(11, field_names[7], PostedMargin);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCurrency) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Currency);
      }
      if (hasSecurities) {
        size += pb::CodedOutputStream.ComputeDoubleSize(2, Securities);
      }
      if (hasBalance) {
        size += pb::CodedOutputStream.ComputeDoubleSize(3, Balance);
      }
      if (hasOte) {
        size += pb::CodedOutputStream.ComputeDoubleSize(4, Ote);
      }
      if (hasTotalEquity) {
        size += pb::CodedOutputStream.ComputeDoubleSize(5, TotalEquity);
      }
      if (hasMvo) {
        size += pb::CodedOutputStream.ComputeDoubleSize(6, Mvo);
      }
      if (hasTotalValue) {
        size += pb::CodedOutputStream.ComputeDoubleSize(7, TotalValue);
      }
      if (hasCashExcess) {
        size += pb::CodedOutputStream.ComputeDoubleSize(8, CashExcess);
      }
      if (hasInitialMargin) {
        size += pb::CodedOutputStream.ComputeDoubleSize(9, InitialMargin);
      }
      if (hasMaintMargin) {
        size += pb::CodedOutputStream.ComputeDoubleSize(10, MaintMargin);
      }
      if (hasPostedMargin) {
        size += pb::CodedOutputStream.ComputeDoubleSize(11, PostedMargin);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Equity ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Equity ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Equity ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Equity ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Equity ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Equity ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Equity ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Equity ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Equity ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Equity ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Equity MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Equity prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Equity, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Equity cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Equity result;
      
      private Equity PrepareBuilder() {
        if (resultIsReadOnly) {
          Equity original = result;
          result = new Equity();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Equity MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Equity.Descriptor; }
      }
      
      public override Equity DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Equity.DefaultInstance; }
      }
      
      public override Equity BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Equity) {
          return MergeFrom((Equity) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Equity other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Equity.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasSecurities) {
          Securities = other.Securities;
        }
        if (other.HasBalance) {
          Balance = other.Balance;
        }
        if (other.HasOte) {
          Ote = other.Ote;
        }
        if (other.HasTotalEquity) {
          TotalEquity = other.TotalEquity;
        }
        if (other.HasMvo) {
          Mvo = other.Mvo;
        }
        if (other.HasTotalValue) {
          TotalValue = other.TotalValue;
        }
        if (other.HasCashExcess) {
          CashExcess = other.CashExcess;
        }
        if (other.HasInitialMargin) {
          InitialMargin = other.InitialMargin;
        }
        if (other.HasMaintMargin) {
          MaintMargin = other.MaintMargin;
        }
        if (other.HasPostedMargin) {
          PostedMargin = other.PostedMargin;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_equityFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _equityFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 17: {
              result.hasSecurities = input.ReadDouble(ref result.securities_);
              break;
            }
            case 25: {
              result.hasBalance = input.ReadDouble(ref result.balance_);
              break;
            }
            case 33: {
              result.hasOte = input.ReadDouble(ref result.ote_);
              break;
            }
            case 41: {
              result.hasTotalEquity = input.ReadDouble(ref result.totalEquity_);
              break;
            }
            case 49: {
              result.hasMvo = input.ReadDouble(ref result.mvo_);
              break;
            }
            case 57: {
              result.hasTotalValue = input.ReadDouble(ref result.totalValue_);
              break;
            }
            case 65: {
              result.hasCashExcess = input.ReadDouble(ref result.cashExcess_);
              break;
            }
            case 73: {
              result.hasInitialMargin = input.ReadDouble(ref result.initialMargin_);
              break;
            }
            case 81: {
              result.hasMaintMargin = input.ReadDouble(ref result.maintMargin_);
              break;
            }
            case 89: {
              result.hasPostedMargin = input.ReadDouble(ref result.postedMargin_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasSecurities {
        get { return result.hasSecurities; }
      }
      public double Securities {
        get { return result.Securities; }
        set { SetSecurities(value); }
      }
      public Builder SetSecurities(double value) {
        PrepareBuilder();
        result.hasSecurities = true;
        result.securities_ = value;
        return this;
      }
      public Builder ClearSecurities() {
        PrepareBuilder();
        result.hasSecurities = false;
        result.securities_ = 0D;
        return this;
      }
      
      public bool HasBalance {
        get { return result.hasBalance; }
      }
      public double Balance {
        get { return result.Balance; }
        set { SetBalance(value); }
      }
      public Builder SetBalance(double value) {
        PrepareBuilder();
        result.hasBalance = true;
        result.balance_ = value;
        return this;
      }
      public Builder ClearBalance() {
        PrepareBuilder();
        result.hasBalance = false;
        result.balance_ = 0D;
        return this;
      }
      
      public bool HasOte {
        get { return result.hasOte; }
      }
      public double Ote {
        get { return result.Ote; }
        set { SetOte(value); }
      }
      public Builder SetOte(double value) {
        PrepareBuilder();
        result.hasOte = true;
        result.ote_ = value;
        return this;
      }
      public Builder ClearOte() {
        PrepareBuilder();
        result.hasOte = false;
        result.ote_ = 0D;
        return this;
      }
      
      public bool HasTotalEquity {
        get { return result.hasTotalEquity; }
      }
      public double TotalEquity {
        get { return result.TotalEquity; }
        set { SetTotalEquity(value); }
      }
      public Builder SetTotalEquity(double value) {
        PrepareBuilder();
        result.hasTotalEquity = true;
        result.totalEquity_ = value;
        return this;
      }
      public Builder ClearTotalEquity() {
        PrepareBuilder();
        result.hasTotalEquity = false;
        result.totalEquity_ = 0D;
        return this;
      }
      
      public bool HasMvo {
        get { return result.hasMvo; }
      }
      public double Mvo {
        get { return result.Mvo; }
        set { SetMvo(value); }
      }
      public Builder SetMvo(double value) {
        PrepareBuilder();
        result.hasMvo = true;
        result.mvo_ = value;
        return this;
      }
      public Builder ClearMvo() {
        PrepareBuilder();
        result.hasMvo = false;
        result.mvo_ = 0D;
        return this;
      }
      
      public bool HasTotalValue {
        get { return result.hasTotalValue; }
      }
      public double TotalValue {
        get { return result.TotalValue; }
        set { SetTotalValue(value); }
      }
      public Builder SetTotalValue(double value) {
        PrepareBuilder();
        result.hasTotalValue = true;
        result.totalValue_ = value;
        return this;
      }
      public Builder ClearTotalValue() {
        PrepareBuilder();
        result.hasTotalValue = false;
        result.totalValue_ = 0D;
        return this;
      }
      
      public bool HasCashExcess {
        get { return result.hasCashExcess; }
      }
      public double CashExcess {
        get { return result.CashExcess; }
        set { SetCashExcess(value); }
      }
      public Builder SetCashExcess(double value) {
        PrepareBuilder();
        result.hasCashExcess = true;
        result.cashExcess_ = value;
        return this;
      }
      public Builder ClearCashExcess() {
        PrepareBuilder();
        result.hasCashExcess = false;
        result.cashExcess_ = 0D;
        return this;
      }
      
      public bool HasInitialMargin {
        get { return result.hasInitialMargin; }
      }
      public double InitialMargin {
        get { return result.InitialMargin; }
        set { SetInitialMargin(value); }
      }
      public Builder SetInitialMargin(double value) {
        PrepareBuilder();
        result.hasInitialMargin = true;
        result.initialMargin_ = value;
        return this;
      }
      public Builder ClearInitialMargin() {
        PrepareBuilder();
        result.hasInitialMargin = false;
        result.initialMargin_ = 0D;
        return this;
      }
      
      public bool HasMaintMargin {
        get { return result.hasMaintMargin; }
      }
      public double MaintMargin {
        get { return result.MaintMargin; }
        set { SetMaintMargin(value); }
      }
      public Builder SetMaintMargin(double value) {
        PrepareBuilder();
        result.hasMaintMargin = true;
        result.maintMargin_ = value;
        return this;
      }
      public Builder ClearMaintMargin() {
        PrepareBuilder();
        result.hasMaintMargin = false;
        result.maintMargin_ = 0D;
        return this;
      }
      
      public bool HasPostedMargin {
        get { return result.hasPostedMargin; }
      }
      public double PostedMargin {
        get { return result.PostedMargin; }
        set { SetPostedMargin(value); }
      }
      public Builder SetPostedMargin(double value) {
        PrepareBuilder();
        result.hasPostedMargin = true;
        result.postedMargin_ = value;
        return this;
      }
      public Builder ClearPostedMargin() {
        PrepareBuilder();
        result.hasPostedMargin = false;
        result.postedMargin_ = 0D;
        return this;
      }
    }
    static Equity() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Collateral : pb::GeneratedMessage<Collateral, Collateral.Builder> {
    private Collateral() { }
    private static readonly Collateral defaultInstance = new Collateral().MakeReadOnly();
    private static readonly string[] _collateralFieldNames = new string[] { "currency", "purchasing_power", "total_margin" };
    private static readonly uint[] _collateralFieldTags = new uint[] { 34, 49, 41 };
    public static Collateral DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Collateral DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Collateral ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_Collateral__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Collateral, Collateral.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_Collateral__FieldAccessorTable; }
    }
    
    public const int CurrencyFieldNumber = 4;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int TotalMarginFieldNumber = 5;
    private bool hasTotalMargin;
    private double totalMargin_;
    public bool HasTotalMargin {
      get { return hasTotalMargin; }
    }
    public double TotalMargin {
      get { return totalMargin_; }
    }
    
    public const int PurchasingPowerFieldNumber = 6;
    private bool hasPurchasingPower;
    private double purchasingPower_;
    public bool HasPurchasingPower {
      get { return hasPurchasingPower; }
    }
    public double PurchasingPower {
      get { return purchasingPower_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCurrency) return false;
        if (!hasTotalMargin) return false;
        if (!hasPurchasingPower) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _collateralFieldNames;
      if (hasCurrency) {
        output.WriteString(4, field_names[0], Currency);
      }
      if (hasTotalMargin) {
        output.WriteDouble(5, field_names[2], TotalMargin);
      }
      if (hasPurchasingPower) {
        output.WriteDouble(6, field_names[1], PurchasingPower);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCurrency) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Currency);
      }
      if (hasTotalMargin) {
        size += pb::CodedOutputStream.ComputeDoubleSize(5, TotalMargin);
      }
      if (hasPurchasingPower) {
        size += pb::CodedOutputStream.ComputeDoubleSize(6, PurchasingPower);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Collateral ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Collateral ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Collateral ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Collateral ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Collateral ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Collateral ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Collateral ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Collateral ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Collateral ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Collateral ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Collateral MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Collateral prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Collateral, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Collateral cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Collateral result;
      
      private Collateral PrepareBuilder() {
        if (resultIsReadOnly) {
          Collateral original = result;
          result = new Collateral();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Collateral MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Collateral.Descriptor; }
      }
      
      public override Collateral DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Collateral.DefaultInstance; }
      }
      
      public override Collateral BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Collateral) {
          return MergeFrom((Collateral) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Collateral other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Collateral.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasTotalMargin) {
          TotalMargin = other.TotalMargin;
        }
        if (other.HasPurchasingPower) {
          PurchasingPower = other.PurchasingPower;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_collateralFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _collateralFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 34: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 41: {
              result.hasTotalMargin = input.ReadDouble(ref result.totalMargin_);
              break;
            }
            case 49: {
              result.hasPurchasingPower = input.ReadDouble(ref result.purchasingPower_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasTotalMargin {
        get { return result.hasTotalMargin; }
      }
      public double TotalMargin {
        get { return result.TotalMargin; }
        set { SetTotalMargin(value); }
      }
      public Builder SetTotalMargin(double value) {
        PrepareBuilder();
        result.hasTotalMargin = true;
        result.totalMargin_ = value;
        return this;
      }
      public Builder ClearTotalMargin() {
        PrepareBuilder();
        result.hasTotalMargin = false;
        result.totalMargin_ = 0D;
        return this;
      }
      
      public bool HasPurchasingPower {
        get { return result.hasPurchasingPower; }
      }
      public double PurchasingPower {
        get { return result.PurchasingPower; }
        set { SetPurchasingPower(value); }
      }
      public Builder SetPurchasingPower(double value) {
        PrepareBuilder();
        result.hasPurchasingPower = true;
        result.purchasingPower_ = value;
        return this;
      }
      public Builder ClearPurchasingPower() {
        PrepareBuilder();
        result.hasPurchasingPower = false;
        result.purchasingPower_ = 0D;
        return this;
      }
    }
    static Collateral() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderSearchResultRecord : pb::GeneratedMessage<OrderSearchResultRecord, OrderSearchResultRecord.Builder> {
    private OrderSearchResultRecord() { }
    private static readonly OrderSearchResultRecord defaultInstance = new OrderSearchResultRecord().MakeReadOnly();
    private static readonly string[] _orderSearchResultRecordFieldNames = new string[] { "account_id", "account_name", "brokerage_account_number", "brokerage_name", "chain_order_id", "contract_name", "customer_last_name", "display_limit_price", "display_stop_price", "exchange_name", "limit_price", "native_route_name", "order_id", "route_client_order_id", "route_name", "sales_series_id", "sales_series_name", "sales_series_number", "side", "size", "status", "stop_price", "submitted_utc_time", "ticket_number", "type", "user_name" };
    private static readonly uint[] _orderSearchResultRecordFieldTags = new uint[] { 120, 130, 10, 106, 162, 66, 98, 168, 176, 154, 49, 138, 18, 146, 114, 210, 202, 194, 32, 184, 80, 57, 72, 26, 40, 90 };
    public static OrderSearchResultRecord DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderSearchResultRecord DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderSearchResultRecord ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderSearchResultRecord__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderSearchResultRecord, OrderSearchResultRecord.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_OrderSearchResultRecord__FieldAccessorTable; }
    }
    
    public const int BrokerageAccountNumberFieldNumber = 1;
    private bool hasBrokerageAccountNumber;
    private string brokerageAccountNumber_ = "";
    public bool HasBrokerageAccountNumber {
      get { return hasBrokerageAccountNumber; }
    }
    public string BrokerageAccountNumber {
      get { return brokerageAccountNumber_; }
    }
    
    public const int OrderIdFieldNumber = 2;
    private bool hasOrderId;
    private string orderId_ = "";
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public string OrderId {
      get { return orderId_; }
    }
    
    public const int TicketNumberFieldNumber = 3;
    private bool hasTicketNumber;
    private string ticketNumber_ = "";
    public bool HasTicketNumber {
      get { return hasTicketNumber; }
    }
    public string TicketNumber {
      get { return ticketNumber_; }
    }
    
    public const int SideFieldNumber = 4;
    private bool hasSide;
    private uint side_;
    public bool HasSide {
      get { return hasSide; }
    }
    [global::System.CLSCompliant(false)]
    public uint Side {
      get { return side_; }
    }
    
    public const int TypeFieldNumber = 5;
    private bool hasType;
    private uint type_;
    public bool HasType {
      get { return hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return type_; }
    }
    
    public const int LimitPriceFieldNumber = 6;
    private bool hasLimitPrice;
    private double limitPrice_;
    public bool HasLimitPrice {
      get { return hasLimitPrice; }
    }
    public double LimitPrice {
      get { return limitPrice_; }
    }
    
    public const int StopPriceFieldNumber = 7;
    private bool hasStopPrice;
    private double stopPrice_;
    public bool HasStopPrice {
      get { return hasStopPrice; }
    }
    public double StopPrice {
      get { return stopPrice_; }
    }
    
    public const int ContractNameFieldNumber = 8;
    private bool hasContractName;
    private string contractName_ = "";
    public bool HasContractName {
      get { return hasContractName; }
    }
    public string ContractName {
      get { return contractName_; }
    }
    
    public const int SubmittedUtcTimeFieldNumber = 9;
    private bool hasSubmittedUtcTime;
    private long submittedUtcTime_;
    public bool HasSubmittedUtcTime {
      get { return hasSubmittedUtcTime; }
    }
    public long SubmittedUtcTime {
      get { return submittedUtcTime_; }
    }
    
    public const int StatusFieldNumber = 10;
    private bool hasStatus;
    private uint status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint Status {
      get { return status_; }
    }
    
    public const int UserNameFieldNumber = 11;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public const int CustomerLastNameFieldNumber = 12;
    private bool hasCustomerLastName;
    private string customerLastName_ = "";
    public bool HasCustomerLastName {
      get { return hasCustomerLastName; }
    }
    public string CustomerLastName {
      get { return customerLastName_; }
    }
    
    public const int BrokerageNameFieldNumber = 13;
    private bool hasBrokerageName;
    private string brokerageName_ = "";
    public bool HasBrokerageName {
      get { return hasBrokerageName; }
    }
    public string BrokerageName {
      get { return brokerageName_; }
    }
    
    public const int RouteNameFieldNumber = 14;
    private bool hasRouteName;
    private string routeName_ = "";
    public bool HasRouteName {
      get { return hasRouteName; }
    }
    public string RouteName {
      get { return routeName_; }
    }
    
    public const int AccountIdFieldNumber = 15;
    private bool hasAccountId;
    private int accountId_;
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public int AccountId {
      get { return accountId_; }
    }
    
    public const int AccountNameFieldNumber = 16;
    private bool hasAccountName;
    private string accountName_ = "";
    public bool HasAccountName {
      get { return hasAccountName; }
    }
    public string AccountName {
      get { return accountName_; }
    }
    
    public const int NativeRouteNameFieldNumber = 17;
    private bool hasNativeRouteName;
    private string nativeRouteName_ = "";
    public bool HasNativeRouteName {
      get { return hasNativeRouteName; }
    }
    public string NativeRouteName {
      get { return nativeRouteName_; }
    }
    
    public const int RouteClientOrderIdFieldNumber = 18;
    private bool hasRouteClientOrderId;
    private string routeClientOrderId_ = "";
    public bool HasRouteClientOrderId {
      get { return hasRouteClientOrderId; }
    }
    public string RouteClientOrderId {
      get { return routeClientOrderId_; }
    }
    
    public const int ExchangeNameFieldNumber = 19;
    private bool hasExchangeName;
    private string exchangeName_ = "";
    public bool HasExchangeName {
      get { return hasExchangeName; }
    }
    public string ExchangeName {
      get { return exchangeName_; }
    }
    
    public const int ChainOrderIdFieldNumber = 20;
    private bool hasChainOrderId;
    private string chainOrderId_ = "";
    public bool HasChainOrderId {
      get { return hasChainOrderId; }
    }
    public string ChainOrderId {
      get { return chainOrderId_; }
    }
    
    public const int DisplayLimitPriceFieldNumber = 21;
    private bool hasDisplayLimitPrice;
    private long displayLimitPrice_;
    public bool HasDisplayLimitPrice {
      get { return hasDisplayLimitPrice; }
    }
    public long DisplayLimitPrice {
      get { return displayLimitPrice_; }
    }
    
    public const int DisplayStopPriceFieldNumber = 22;
    private bool hasDisplayStopPrice;
    private long displayStopPrice_;
    public bool HasDisplayStopPrice {
      get { return hasDisplayStopPrice; }
    }
    public long DisplayStopPrice {
      get { return displayStopPrice_; }
    }
    
    public const int SizeFieldNumber = 23;
    private bool hasSize;
    private uint size_;
    public bool HasSize {
      get { return hasSize; }
    }
    [global::System.CLSCompliant(false)]
    public uint Size {
      get { return size_; }
    }
    
    public const int SalesSeriesNumberFieldNumber = 24;
    private bool hasSalesSeriesNumber;
    private string salesSeriesNumber_ = "";
    public bool HasSalesSeriesNumber {
      get { return hasSalesSeriesNumber; }
    }
    public string SalesSeriesNumber {
      get { return salesSeriesNumber_; }
    }
    
    public const int SalesSeriesNameFieldNumber = 25;
    private bool hasSalesSeriesName;
    private string salesSeriesName_ = "";
    public bool HasSalesSeriesName {
      get { return hasSalesSeriesName; }
    }
    public string SalesSeriesName {
      get { return salesSeriesName_; }
    }
    
    public const int SalesSeriesIdFieldNumber = 26;
    private bool hasSalesSeriesId;
    private string salesSeriesId_ = "";
    public bool HasSalesSeriesId {
      get { return hasSalesSeriesId; }
    }
    public string SalesSeriesId {
      get { return salesSeriesId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBrokerageAccountNumber) return false;
        if (!hasOrderId) return false;
        if (!hasSide) return false;
        if (!hasType) return false;
        if (!hasContractName) return false;
        if (!hasSubmittedUtcTime) return false;
        if (!hasStatus) return false;
        if (!hasBrokerageName) return false;
        if (!hasRouteName) return false;
        if (!hasAccountId) return false;
        if (!hasAccountName) return false;
        if (!hasRouteClientOrderId) return false;
        if (!hasExchangeName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _orderSearchResultRecordFieldNames;
      if (hasBrokerageAccountNumber) {
        output.WriteString(1, field_names[2], BrokerageAccountNumber);
      }
      if (hasOrderId) {
        output.WriteString(2, field_names[12], OrderId);
      }
      if (hasTicketNumber) {
        output.WriteString(3, field_names[23], TicketNumber);
      }
      if (hasSide) {
        output.WriteUInt32(4, field_names[18], Side);
      }
      if (hasType) {
        output.WriteUInt32(5, field_names[24], Type);
      }
      if (hasLimitPrice) {
        output.WriteDouble(6, field_names[10], LimitPrice);
      }
      if (hasStopPrice) {
        output.WriteDouble(7, field_names[21], StopPrice);
      }
      if (hasContractName) {
        output.WriteString(8, field_names[5], ContractName);
      }
      if (hasSubmittedUtcTime) {
        output.WriteSInt64(9, field_names[22], SubmittedUtcTime);
      }
      if (hasStatus) {
        output.WriteUInt32(10, field_names[20], Status);
      }
      if (hasUserName) {
        output.WriteString(11, field_names[25], UserName);
      }
      if (hasCustomerLastName) {
        output.WriteString(12, field_names[6], CustomerLastName);
      }
      if (hasBrokerageName) {
        output.WriteString(13, field_names[3], BrokerageName);
      }
      if (hasRouteName) {
        output.WriteString(14, field_names[14], RouteName);
      }
      if (hasAccountId) {
        output.WriteSInt32(15, field_names[0], AccountId);
      }
      if (hasAccountName) {
        output.WriteString(16, field_names[1], AccountName);
      }
      if (hasNativeRouteName) {
        output.WriteString(17, field_names[11], NativeRouteName);
      }
      if (hasRouteClientOrderId) {
        output.WriteString(18, field_names[13], RouteClientOrderId);
      }
      if (hasExchangeName) {
        output.WriteString(19, field_names[9], ExchangeName);
      }
      if (hasChainOrderId) {
        output.WriteString(20, field_names[4], ChainOrderId);
      }
      if (hasDisplayLimitPrice) {
        output.WriteSInt64(21, field_names[7], DisplayLimitPrice);
      }
      if (hasDisplayStopPrice) {
        output.WriteSInt64(22, field_names[8], DisplayStopPrice);
      }
      if (hasSize) {
        output.WriteUInt32(23, field_names[19], Size);
      }
      if (hasSalesSeriesNumber) {
        output.WriteString(24, field_names[17], SalesSeriesNumber);
      }
      if (hasSalesSeriesName) {
        output.WriteString(25, field_names[16], SalesSeriesName);
      }
      if (hasSalesSeriesId) {
        output.WriteString(26, field_names[15], SalesSeriesId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBrokerageAccountNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(1, BrokerageAccountNumber);
      }
      if (hasOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, OrderId);
      }
      if (hasTicketNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(3, TicketNumber);
      }
      if (hasSide) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Side);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, Type);
      }
      if (hasLimitPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(6, LimitPrice);
      }
      if (hasStopPrice) {
        size += pb::CodedOutputStream.ComputeDoubleSize(7, StopPrice);
      }
      if (hasContractName) {
        size += pb::CodedOutputStream.ComputeStringSize(8, ContractName);
      }
      if (hasSubmittedUtcTime) {
        size += pb::CodedOutputStream.ComputeSInt64Size(9, SubmittedUtcTime);
      }
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(10, Status);
      }
      if (hasUserName) {
        size += pb::CodedOutputStream.ComputeStringSize(11, UserName);
      }
      if (hasCustomerLastName) {
        size += pb::CodedOutputStream.ComputeStringSize(12, CustomerLastName);
      }
      if (hasBrokerageName) {
        size += pb::CodedOutputStream.ComputeStringSize(13, BrokerageName);
      }
      if (hasRouteName) {
        size += pb::CodedOutputStream.ComputeStringSize(14, RouteName);
      }
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(15, AccountId);
      }
      if (hasAccountName) {
        size += pb::CodedOutputStream.ComputeStringSize(16, AccountName);
      }
      if (hasNativeRouteName) {
        size += pb::CodedOutputStream.ComputeStringSize(17, NativeRouteName);
      }
      if (hasRouteClientOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(18, RouteClientOrderId);
      }
      if (hasExchangeName) {
        size += pb::CodedOutputStream.ComputeStringSize(19, ExchangeName);
      }
      if (hasChainOrderId) {
        size += pb::CodedOutputStream.ComputeStringSize(20, ChainOrderId);
      }
      if (hasDisplayLimitPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(21, DisplayLimitPrice);
      }
      if (hasDisplayStopPrice) {
        size += pb::CodedOutputStream.ComputeSInt64Size(22, DisplayStopPrice);
      }
      if (hasSize) {
        size += pb::CodedOutputStream.ComputeUInt32Size(23, Size);
      }
      if (hasSalesSeriesNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(24, SalesSeriesNumber);
      }
      if (hasSalesSeriesName) {
        size += pb::CodedOutputStream.ComputeStringSize(25, SalesSeriesName);
      }
      if (hasSalesSeriesId) {
        size += pb::CodedOutputStream.ComputeStringSize(26, SalesSeriesId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static OrderSearchResultRecord ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderSearchResultRecord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderSearchResultRecord ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderSearchResultRecord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderSearchResultRecord ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderSearchResultRecord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderSearchResultRecord ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderSearchResultRecord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderSearchResultRecord ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderSearchResultRecord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderSearchResultRecord MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderSearchResultRecord prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderSearchResultRecord, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderSearchResultRecord cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderSearchResultRecord result;
      
      private OrderSearchResultRecord PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderSearchResultRecord original = result;
          result = new OrderSearchResultRecord();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderSearchResultRecord MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord.Descriptor; }
      }
      
      public override OrderSearchResultRecord DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord.DefaultInstance; }
      }
      
      public override OrderSearchResultRecord BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderSearchResultRecord) {
          return MergeFrom((OrderSearchResultRecord) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderSearchResultRecord other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.OrderSearchResultRecord.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBrokerageAccountNumber) {
          BrokerageAccountNumber = other.BrokerageAccountNumber;
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasTicketNumber) {
          TicketNumber = other.TicketNumber;
        }
        if (other.HasSide) {
          Side = other.Side;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasLimitPrice) {
          LimitPrice = other.LimitPrice;
        }
        if (other.HasStopPrice) {
          StopPrice = other.StopPrice;
        }
        if (other.HasContractName) {
          ContractName = other.ContractName;
        }
        if (other.HasSubmittedUtcTime) {
          SubmittedUtcTime = other.SubmittedUtcTime;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        if (other.HasCustomerLastName) {
          CustomerLastName = other.CustomerLastName;
        }
        if (other.HasBrokerageName) {
          BrokerageName = other.BrokerageName;
        }
        if (other.HasRouteName) {
          RouteName = other.RouteName;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasAccountName) {
          AccountName = other.AccountName;
        }
        if (other.HasNativeRouteName) {
          NativeRouteName = other.NativeRouteName;
        }
        if (other.HasRouteClientOrderId) {
          RouteClientOrderId = other.RouteClientOrderId;
        }
        if (other.HasExchangeName) {
          ExchangeName = other.ExchangeName;
        }
        if (other.HasChainOrderId) {
          ChainOrderId = other.ChainOrderId;
        }
        if (other.HasDisplayLimitPrice) {
          DisplayLimitPrice = other.DisplayLimitPrice;
        }
        if (other.HasDisplayStopPrice) {
          DisplayStopPrice = other.DisplayStopPrice;
        }
        if (other.HasSize) {
          Size = other.Size;
        }
        if (other.HasSalesSeriesNumber) {
          SalesSeriesNumber = other.SalesSeriesNumber;
        }
        if (other.HasSalesSeriesName) {
          SalesSeriesName = other.SalesSeriesName;
        }
        if (other.HasSalesSeriesId) {
          SalesSeriesId = other.SalesSeriesId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderSearchResultRecordFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderSearchResultRecordFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasBrokerageAccountNumber = input.ReadString(ref result.brokerageAccountNumber_);
              break;
            }
            case 18: {
              result.hasOrderId = input.ReadString(ref result.orderId_);
              break;
            }
            case 26: {
              result.hasTicketNumber = input.ReadString(ref result.ticketNumber_);
              break;
            }
            case 32: {
              result.hasSide = input.ReadUInt32(ref result.side_);
              break;
            }
            case 40: {
              result.hasType = input.ReadUInt32(ref result.type_);
              break;
            }
            case 49: {
              result.hasLimitPrice = input.ReadDouble(ref result.limitPrice_);
              break;
            }
            case 57: {
              result.hasStopPrice = input.ReadDouble(ref result.stopPrice_);
              break;
            }
            case 66: {
              result.hasContractName = input.ReadString(ref result.contractName_);
              break;
            }
            case 72: {
              result.hasSubmittedUtcTime = input.ReadSInt64(ref result.submittedUtcTime_);
              break;
            }
            case 80: {
              result.hasStatus = input.ReadUInt32(ref result.status_);
              break;
            }
            case 90: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
            case 98: {
              result.hasCustomerLastName = input.ReadString(ref result.customerLastName_);
              break;
            }
            case 106: {
              result.hasBrokerageName = input.ReadString(ref result.brokerageName_);
              break;
            }
            case 114: {
              result.hasRouteName = input.ReadString(ref result.routeName_);
              break;
            }
            case 120: {
              result.hasAccountId = input.ReadSInt32(ref result.accountId_);
              break;
            }
            case 130: {
              result.hasAccountName = input.ReadString(ref result.accountName_);
              break;
            }
            case 138: {
              result.hasNativeRouteName = input.ReadString(ref result.nativeRouteName_);
              break;
            }
            case 146: {
              result.hasRouteClientOrderId = input.ReadString(ref result.routeClientOrderId_);
              break;
            }
            case 154: {
              result.hasExchangeName = input.ReadString(ref result.exchangeName_);
              break;
            }
            case 162: {
              result.hasChainOrderId = input.ReadString(ref result.chainOrderId_);
              break;
            }
            case 168: {
              result.hasDisplayLimitPrice = input.ReadSInt64(ref result.displayLimitPrice_);
              break;
            }
            case 176: {
              result.hasDisplayStopPrice = input.ReadSInt64(ref result.displayStopPrice_);
              break;
            }
            case 184: {
              result.hasSize = input.ReadUInt32(ref result.size_);
              break;
            }
            case 194: {
              result.hasSalesSeriesNumber = input.ReadString(ref result.salesSeriesNumber_);
              break;
            }
            case 202: {
              result.hasSalesSeriesName = input.ReadString(ref result.salesSeriesName_);
              break;
            }
            case 210: {
              result.hasSalesSeriesId = input.ReadString(ref result.salesSeriesId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBrokerageAccountNumber {
        get { return result.hasBrokerageAccountNumber; }
      }
      public string BrokerageAccountNumber {
        get { return result.BrokerageAccountNumber; }
        set { SetBrokerageAccountNumber(value); }
      }
      public Builder SetBrokerageAccountNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageAccountNumber = true;
        result.brokerageAccountNumber_ = value;
        return this;
      }
      public Builder ClearBrokerageAccountNumber() {
        PrepareBuilder();
        result.hasBrokerageAccountNumber = false;
        result.brokerageAccountNumber_ = "";
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public string OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = "";
        return this;
      }
      
      public bool HasTicketNumber {
        get { return result.hasTicketNumber; }
      }
      public string TicketNumber {
        get { return result.TicketNumber; }
        set { SetTicketNumber(value); }
      }
      public Builder SetTicketNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTicketNumber = true;
        result.ticketNumber_ = value;
        return this;
      }
      public Builder ClearTicketNumber() {
        PrepareBuilder();
        result.hasTicketNumber = false;
        result.ticketNumber_ = "";
        return this;
      }
      
      public bool HasSide {
        get { return result.hasSide; }
      }
      [global::System.CLSCompliant(false)]
      public uint Side {
        get { return result.Side; }
        set { SetSide(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSide(uint value) {
        PrepareBuilder();
        result.hasSide = true;
        result.side_ = value;
        return this;
      }
      public Builder ClearSide() {
        PrepareBuilder();
        result.hasSide = false;
        result.side_ = 0;
        return this;
      }
      
      public bool HasType {
        get { return result.hasType; }
      }
      [global::System.CLSCompliant(false)]
      public uint Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetType(uint value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = 0;
        return this;
      }
      
      public bool HasLimitPrice {
        get { return result.hasLimitPrice; }
      }
      public double LimitPrice {
        get { return result.LimitPrice; }
        set { SetLimitPrice(value); }
      }
      public Builder SetLimitPrice(double value) {
        PrepareBuilder();
        result.hasLimitPrice = true;
        result.limitPrice_ = value;
        return this;
      }
      public Builder ClearLimitPrice() {
        PrepareBuilder();
        result.hasLimitPrice = false;
        result.limitPrice_ = 0D;
        return this;
      }
      
      public bool HasStopPrice {
        get { return result.hasStopPrice; }
      }
      public double StopPrice {
        get { return result.StopPrice; }
        set { SetStopPrice(value); }
      }
      public Builder SetStopPrice(double value) {
        PrepareBuilder();
        result.hasStopPrice = true;
        result.stopPrice_ = value;
        return this;
      }
      public Builder ClearStopPrice() {
        PrepareBuilder();
        result.hasStopPrice = false;
        result.stopPrice_ = 0D;
        return this;
      }
      
      public bool HasContractName {
        get { return result.hasContractName; }
      }
      public string ContractName {
        get { return result.ContractName; }
        set { SetContractName(value); }
      }
      public Builder SetContractName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasContractName = true;
        result.contractName_ = value;
        return this;
      }
      public Builder ClearContractName() {
        PrepareBuilder();
        result.hasContractName = false;
        result.contractName_ = "";
        return this;
      }
      
      public bool HasSubmittedUtcTime {
        get { return result.hasSubmittedUtcTime; }
      }
      public long SubmittedUtcTime {
        get { return result.SubmittedUtcTime; }
        set { SetSubmittedUtcTime(value); }
      }
      public Builder SetSubmittedUtcTime(long value) {
        PrepareBuilder();
        result.hasSubmittedUtcTime = true;
        result.submittedUtcTime_ = value;
        return this;
      }
      public Builder ClearSubmittedUtcTime() {
        PrepareBuilder();
        result.hasSubmittedUtcTime = false;
        result.submittedUtcTime_ = 0;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      [global::System.CLSCompliant(false)]
      public uint Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetStatus(uint value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
      
      public bool HasCustomerLastName {
        get { return result.hasCustomerLastName; }
      }
      public string CustomerLastName {
        get { return result.CustomerLastName; }
        set { SetCustomerLastName(value); }
      }
      public Builder SetCustomerLastName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCustomerLastName = true;
        result.customerLastName_ = value;
        return this;
      }
      public Builder ClearCustomerLastName() {
        PrepareBuilder();
        result.hasCustomerLastName = false;
        result.customerLastName_ = "";
        return this;
      }
      
      public bool HasBrokerageName {
        get { return result.hasBrokerageName; }
      }
      public string BrokerageName {
        get { return result.BrokerageName; }
        set { SetBrokerageName(value); }
      }
      public Builder SetBrokerageName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageName = true;
        result.brokerageName_ = value;
        return this;
      }
      public Builder ClearBrokerageName() {
        PrepareBuilder();
        result.hasBrokerageName = false;
        result.brokerageName_ = "";
        return this;
      }
      
      public bool HasRouteName {
        get { return result.hasRouteName; }
      }
      public string RouteName {
        get { return result.RouteName; }
        set { SetRouteName(value); }
      }
      public Builder SetRouteName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRouteName = true;
        result.routeName_ = value;
        return this;
      }
      public Builder ClearRouteName() {
        PrepareBuilder();
        result.hasRouteName = false;
        result.routeName_ = "";
        return this;
      }
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public int AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(int value) {
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = 0;
        return this;
      }
      
      public bool HasAccountName {
        get { return result.hasAccountName; }
      }
      public string AccountName {
        get { return result.AccountName; }
        set { SetAccountName(value); }
      }
      public Builder SetAccountName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountName = true;
        result.accountName_ = value;
        return this;
      }
      public Builder ClearAccountName() {
        PrepareBuilder();
        result.hasAccountName = false;
        result.accountName_ = "";
        return this;
      }
      
      public bool HasNativeRouteName {
        get { return result.hasNativeRouteName; }
      }
      public string NativeRouteName {
        get { return result.NativeRouteName; }
        set { SetNativeRouteName(value); }
      }
      public Builder SetNativeRouteName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNativeRouteName = true;
        result.nativeRouteName_ = value;
        return this;
      }
      public Builder ClearNativeRouteName() {
        PrepareBuilder();
        result.hasNativeRouteName = false;
        result.nativeRouteName_ = "";
        return this;
      }
      
      public bool HasRouteClientOrderId {
        get { return result.hasRouteClientOrderId; }
      }
      public string RouteClientOrderId {
        get { return result.RouteClientOrderId; }
        set { SetRouteClientOrderId(value); }
      }
      public Builder SetRouteClientOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRouteClientOrderId = true;
        result.routeClientOrderId_ = value;
        return this;
      }
      public Builder ClearRouteClientOrderId() {
        PrepareBuilder();
        result.hasRouteClientOrderId = false;
        result.routeClientOrderId_ = "";
        return this;
      }
      
      public bool HasExchangeName {
        get { return result.hasExchangeName; }
      }
      public string ExchangeName {
        get { return result.ExchangeName; }
        set { SetExchangeName(value); }
      }
      public Builder SetExchangeName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExchangeName = true;
        result.exchangeName_ = value;
        return this;
      }
      public Builder ClearExchangeName() {
        PrepareBuilder();
        result.hasExchangeName = false;
        result.exchangeName_ = "";
        return this;
      }
      
      public bool HasChainOrderId {
        get { return result.hasChainOrderId; }
      }
      public string ChainOrderId {
        get { return result.ChainOrderId; }
        set { SetChainOrderId(value); }
      }
      public Builder SetChainOrderId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChainOrderId = true;
        result.chainOrderId_ = value;
        return this;
      }
      public Builder ClearChainOrderId() {
        PrepareBuilder();
        result.hasChainOrderId = false;
        result.chainOrderId_ = "";
        return this;
      }
      
      public bool HasDisplayLimitPrice {
        get { return result.hasDisplayLimitPrice; }
      }
      public long DisplayLimitPrice {
        get { return result.DisplayLimitPrice; }
        set { SetDisplayLimitPrice(value); }
      }
      public Builder SetDisplayLimitPrice(long value) {
        PrepareBuilder();
        result.hasDisplayLimitPrice = true;
        result.displayLimitPrice_ = value;
        return this;
      }
      public Builder ClearDisplayLimitPrice() {
        PrepareBuilder();
        result.hasDisplayLimitPrice = false;
        result.displayLimitPrice_ = 0;
        return this;
      }
      
      public bool HasDisplayStopPrice {
        get { return result.hasDisplayStopPrice; }
      }
      public long DisplayStopPrice {
        get { return result.DisplayStopPrice; }
        set { SetDisplayStopPrice(value); }
      }
      public Builder SetDisplayStopPrice(long value) {
        PrepareBuilder();
        result.hasDisplayStopPrice = true;
        result.displayStopPrice_ = value;
        return this;
      }
      public Builder ClearDisplayStopPrice() {
        PrepareBuilder();
        result.hasDisplayStopPrice = false;
        result.displayStopPrice_ = 0;
        return this;
      }
      
      public bool HasSize {
        get { return result.hasSize; }
      }
      [global::System.CLSCompliant(false)]
      public uint Size {
        get { return result.Size; }
        set { SetSize(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetSize(uint value) {
        PrepareBuilder();
        result.hasSize = true;
        result.size_ = value;
        return this;
      }
      public Builder ClearSize() {
        PrepareBuilder();
        result.hasSize = false;
        result.size_ = 0;
        return this;
      }
      
      public bool HasSalesSeriesNumber {
        get { return result.hasSalesSeriesNumber; }
      }
      public string SalesSeriesNumber {
        get { return result.SalesSeriesNumber; }
        set { SetSalesSeriesNumber(value); }
      }
      public Builder SetSalesSeriesNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesNumber = true;
        result.salesSeriesNumber_ = value;
        return this;
      }
      public Builder ClearSalesSeriesNumber() {
        PrepareBuilder();
        result.hasSalesSeriesNumber = false;
        result.salesSeriesNumber_ = "";
        return this;
      }
      
      public bool HasSalesSeriesName {
        get { return result.hasSalesSeriesName; }
      }
      public string SalesSeriesName {
        get { return result.SalesSeriesName; }
        set { SetSalesSeriesName(value); }
      }
      public Builder SetSalesSeriesName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesName = true;
        result.salesSeriesName_ = value;
        return this;
      }
      public Builder ClearSalesSeriesName() {
        PrepareBuilder();
        result.hasSalesSeriesName = false;
        result.salesSeriesName_ = "";
        return this;
      }
      
      public bool HasSalesSeriesId {
        get { return result.hasSalesSeriesId; }
      }
      public string SalesSeriesId {
        get { return result.SalesSeriesId; }
        set { SetSalesSeriesId(value); }
      }
      public Builder SetSalesSeriesId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSalesSeriesId = true;
        result.salesSeriesId_ = value;
        return this;
      }
      public Builder ClearSalesSeriesId() {
        PrepareBuilder();
        result.hasSalesSeriesId = false;
        result.salesSeriesId_ = "";
        return this;
      }
    }
    static OrderSearchResultRecord() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountCluster : pb::GeneratedMessage<AccountCluster, AccountCluster.Builder> {
    private AccountCluster() { }
    private static readonly AccountCluster defaultInstance = new AccountCluster().MakeReadOnly();
    private static readonly string[] _accountClusterFieldNames = new string[] { "brokerage_id", "id", "is_removed", "name" };
    private static readonly uint[] _accountClusterFieldTags = new uint[] { 18, 10, 32, 26 };
    public static AccountCluster DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountCluster DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountCluster ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountCluster__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountCluster, AccountCluster.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountCluster__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int BrokerageIdFieldNumber = 2;
    private bool hasBrokerageId;
    private string brokerageId_ = "";
    public bool HasBrokerageId {
      get { return hasBrokerageId; }
    }
    public string BrokerageId {
      get { return brokerageId_; }
    }
    
    public const int NameFieldNumber = 3;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int IsRemovedFieldNumber = 4;
    private bool hasIsRemoved;
    private bool isRemoved_;
    public bool HasIsRemoved {
      get { return hasIsRemoved; }
    }
    public bool IsRemoved {
      get { return isRemoved_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountClusterFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[1], Id);
      }
      if (hasBrokerageId) {
        output.WriteString(2, field_names[0], BrokerageId);
      }
      if (hasName) {
        output.WriteString(3, field_names[3], Name);
      }
      if (hasIsRemoved) {
        output.WriteBool(4, field_names[2], IsRemoved);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Id);
      }
      if (hasBrokerageId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, BrokerageId);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Name);
      }
      if (hasIsRemoved) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, IsRemoved);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountCluster ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountCluster ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountCluster ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountCluster ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountCluster ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountCluster ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountCluster ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountCluster ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountCluster ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountCluster ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountCluster MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountCluster prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountCluster, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountCluster cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountCluster result;
      
      private AccountCluster PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountCluster original = result;
          result = new AccountCluster();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountCluster MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountCluster.Descriptor; }
      }
      
      public override AccountCluster DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountCluster.DefaultInstance; }
      }
      
      public override AccountCluster BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountCluster) {
          return MergeFrom((AccountCluster) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountCluster other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountCluster.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasBrokerageId) {
          BrokerageId = other.BrokerageId;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasIsRemoved) {
          IsRemoved = other.IsRemoved;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountClusterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountClusterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 18: {
              result.hasBrokerageId = input.ReadString(ref result.brokerageId_);
              break;
            }
            case 26: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 32: {
              result.hasIsRemoved = input.ReadBool(ref result.isRemoved_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasBrokerageId {
        get { return result.hasBrokerageId; }
      }
      public string BrokerageId {
        get { return result.BrokerageId; }
        set { SetBrokerageId(value); }
      }
      public Builder SetBrokerageId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageId = true;
        result.brokerageId_ = value;
        return this;
      }
      public Builder ClearBrokerageId() {
        PrepareBuilder();
        result.hasBrokerageId = false;
        result.brokerageId_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasIsRemoved {
        get { return result.hasIsRemoved; }
      }
      public bool IsRemoved {
        get { return result.IsRemoved; }
        set { SetIsRemoved(value); }
      }
      public Builder SetIsRemoved(bool value) {
        PrepareBuilder();
        result.hasIsRemoved = true;
        result.isRemoved_ = value;
        return this;
      }
      public Builder ClearIsRemoved() {
        PrepareBuilder();
        result.hasIsRemoved = false;
        result.isRemoved_ = false;
        return this;
      }
    }
    static AccountCluster() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountClusterPriceOffset : pb::GeneratedMessage<AccountClusterPriceOffset, AccountClusterPriceOffset.Builder> {
    private AccountClusterPriceOffset() { }
    private static readonly AccountClusterPriceOffset defaultInstance = new AccountClusterPriceOffset().MakeReadOnly();
    private static readonly string[] _accountClusterPriceOffsetFieldNames = new string[] { "cleared_fields", "commodity_id", "hedge_exec_instruction", "hedge_offset_ticks", "iceberg_visible_qty_percent", "instrument_type_id", "price_offset_ticks" };
    private static readonly uint[] _accountClusterPriceOffsetFieldTags = new uint[] { 56, 10, 40, 32, 48, 16, 24 };
    public static AccountClusterPriceOffset DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountClusterPriceOffset DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountClusterPriceOffset ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountClusterPriceOffset__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountClusterPriceOffset, AccountClusterPriceOffset.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountClusterPriceOffset__FieldAccessorTable; }
    }
    
    public const int ClearedFieldsFieldNumber = 7;
    private pbc::PopsicleList<uint> clearedFields_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> ClearedFieldsList {
      get { return pbc::Lists.AsReadOnly(clearedFields_); }
    }
    public int ClearedFieldsCount {
      get { return clearedFields_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetClearedFields(int index) {
      return clearedFields_[index];
    }
    
    public const int CommodityIdFieldNumber = 1;
    private bool hasCommodityId;
    private string commodityId_ = "";
    public bool HasCommodityId {
      get { return hasCommodityId; }
    }
    public string CommodityId {
      get { return commodityId_; }
    }
    
    public const int InstrumentTypeIdFieldNumber = 2;
    private bool hasInstrumentTypeId;
    private int instrumentTypeId_;
    public bool HasInstrumentTypeId {
      get { return hasInstrumentTypeId; }
    }
    public int InstrumentTypeId {
      get { return instrumentTypeId_; }
    }
    
    public const int PriceOffsetTicksFieldNumber = 3;
    private bool hasPriceOffsetTicks;
    private int priceOffsetTicks_;
    public bool HasPriceOffsetTicks {
      get { return hasPriceOffsetTicks; }
    }
    public int PriceOffsetTicks {
      get { return priceOffsetTicks_; }
    }
    
    public const int HedgeOffsetTicksFieldNumber = 4;
    private bool hasHedgeOffsetTicks;
    private int hedgeOffsetTicks_;
    public bool HasHedgeOffsetTicks {
      get { return hasHedgeOffsetTicks; }
    }
    public int HedgeOffsetTicks {
      get { return hedgeOffsetTicks_; }
    }
    
    public const int HedgeExecInstructionFieldNumber = 5;
    private pbc::PopsicleList<uint> hedgeExecInstruction_ = new pbc::PopsicleList<uint>();
    [global::System.CLSCompliant(false)]
    public scg::IList<uint> HedgeExecInstructionList {
      get { return pbc::Lists.AsReadOnly(hedgeExecInstruction_); }
    }
    public int HedgeExecInstructionCount {
      get { return hedgeExecInstruction_.Count; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetHedgeExecInstruction(int index) {
      return hedgeExecInstruction_[index];
    }
    
    public const int IcebergVisibleQtyPercentFieldNumber = 6;
    private bool hasIcebergVisibleQtyPercent;
    private uint icebergVisibleQtyPercent_;
    public bool HasIcebergVisibleQtyPercent {
      get { return hasIcebergVisibleQtyPercent; }
    }
    [global::System.CLSCompliant(false)]
    public uint IcebergVisibleQtyPercent {
      get { return icebergVisibleQtyPercent_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountClusterPriceOffsetFieldNames;
      if (hasCommodityId) {
        output.WriteString(1, field_names[1], CommodityId);
      }
      if (hasInstrumentTypeId) {
        output.WriteSInt32(2, field_names[5], InstrumentTypeId);
      }
      if (hasPriceOffsetTicks) {
        output.WriteSInt32(3, field_names[6], PriceOffsetTicks);
      }
      if (hasHedgeOffsetTicks) {
        output.WriteSInt32(4, field_names[3], HedgeOffsetTicks);
      }
      if (hedgeExecInstruction_.Count > 0) {
        output.WriteUInt32Array(5, field_names[2], hedgeExecInstruction_);
      }
      if (hasIcebergVisibleQtyPercent) {
        output.WriteUInt32(6, field_names[4], IcebergVisibleQtyPercent);
      }
      if (clearedFields_.Count > 0) {
        output.WriteUInt32Array(7, field_names[0], clearedFields_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (uint element in ClearedFieldsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * clearedFields_.Count;
      }
      if (hasCommodityId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, CommodityId);
      }
      if (hasInstrumentTypeId) {
        size += pb::CodedOutputStream.ComputeSInt32Size(2, InstrumentTypeId);
      }
      if (hasPriceOffsetTicks) {
        size += pb::CodedOutputStream.ComputeSInt32Size(3, PriceOffsetTicks);
      }
      if (hasHedgeOffsetTicks) {
        size += pb::CodedOutputStream.ComputeSInt32Size(4, HedgeOffsetTicks);
      }
      {
        int dataSize = 0;
        foreach (uint element in HedgeExecInstructionList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * hedgeExecInstruction_.Count;
      }
      if (hasIcebergVisibleQtyPercent) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, IcebergVisibleQtyPercent);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountClusterPriceOffset ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountClusterPriceOffset ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountClusterPriceOffset ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountClusterPriceOffset ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountClusterPriceOffset ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountClusterPriceOffset ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountClusterPriceOffset ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountClusterPriceOffset ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountClusterPriceOffset ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountClusterPriceOffset ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountClusterPriceOffset MakeReadOnly() {
      clearedFields_.MakeReadOnly();
      hedgeExecInstruction_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountClusterPriceOffset prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountClusterPriceOffset, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountClusterPriceOffset cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountClusterPriceOffset result;
      
      private AccountClusterPriceOffset PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountClusterPriceOffset original = result;
          result = new AccountClusterPriceOffset();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountClusterPriceOffset MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.Descriptor; }
      }
      
      public override AccountClusterPriceOffset DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.DefaultInstance; }
      }
      
      public override AccountClusterPriceOffset BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountClusterPriceOffset) {
          return MergeFrom((AccountClusterPriceOffset) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountClusterPriceOffset other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountClusterPriceOffset.DefaultInstance) return this;
        PrepareBuilder();
        if (other.clearedFields_.Count != 0) {
          result.clearedFields_.Add(other.clearedFields_);
        }
        if (other.HasCommodityId) {
          CommodityId = other.CommodityId;
        }
        if (other.HasInstrumentTypeId) {
          InstrumentTypeId = other.InstrumentTypeId;
        }
        if (other.HasPriceOffsetTicks) {
          PriceOffsetTicks = other.PriceOffsetTicks;
        }
        if (other.HasHedgeOffsetTicks) {
          HedgeOffsetTicks = other.HedgeOffsetTicks;
        }
        if (other.hedgeExecInstruction_.Count != 0) {
          result.hedgeExecInstruction_.Add(other.hedgeExecInstruction_);
        }
        if (other.HasIcebergVisibleQtyPercent) {
          IcebergVisibleQtyPercent = other.IcebergVisibleQtyPercent;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountClusterPriceOffsetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountClusterPriceOffsetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCommodityId = input.ReadString(ref result.commodityId_);
              break;
            }
            case 16: {
              result.hasInstrumentTypeId = input.ReadSInt32(ref result.instrumentTypeId_);
              break;
            }
            case 24: {
              result.hasPriceOffsetTicks = input.ReadSInt32(ref result.priceOffsetTicks_);
              break;
            }
            case 32: {
              result.hasHedgeOffsetTicks = input.ReadSInt32(ref result.hedgeOffsetTicks_);
              break;
            }
            case 42:
            case 40: {
              input.ReadUInt32Array(tag, field_name, result.hedgeExecInstruction_);
              break;
            }
            case 48: {
              result.hasIcebergVisibleQtyPercent = input.ReadUInt32(ref result.icebergVisibleQtyPercent_);
              break;
            }
            case 58:
            case 56: {
              input.ReadUInt32Array(tag, field_name, result.clearedFields_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> ClearedFieldsList {
        get { return PrepareBuilder().clearedFields_; }
      }
      public int ClearedFieldsCount {
        get { return result.ClearedFieldsCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetClearedFields(int index) {
        return result.GetClearedFields(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetClearedFields(int index, uint value) {
        PrepareBuilder();
        result.clearedFields_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddClearedFields(uint value) {
        PrepareBuilder();
        result.clearedFields_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeClearedFields(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.clearedFields_.Add(values);
        return this;
      }
      public Builder ClearClearedFields() {
        PrepareBuilder();
        result.clearedFields_.Clear();
        return this;
      }
      
      public bool HasCommodityId {
        get { return result.hasCommodityId; }
      }
      public string CommodityId {
        get { return result.CommodityId; }
        set { SetCommodityId(value); }
      }
      public Builder SetCommodityId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCommodityId = true;
        result.commodityId_ = value;
        return this;
      }
      public Builder ClearCommodityId() {
        PrepareBuilder();
        result.hasCommodityId = false;
        result.commodityId_ = "";
        return this;
      }
      
      public bool HasInstrumentTypeId {
        get { return result.hasInstrumentTypeId; }
      }
      public int InstrumentTypeId {
        get { return result.InstrumentTypeId; }
        set { SetInstrumentTypeId(value); }
      }
      public Builder SetInstrumentTypeId(int value) {
        PrepareBuilder();
        result.hasInstrumentTypeId = true;
        result.instrumentTypeId_ = value;
        return this;
      }
      public Builder ClearInstrumentTypeId() {
        PrepareBuilder();
        result.hasInstrumentTypeId = false;
        result.instrumentTypeId_ = 0;
        return this;
      }
      
      public bool HasPriceOffsetTicks {
        get { return result.hasPriceOffsetTicks; }
      }
      public int PriceOffsetTicks {
        get { return result.PriceOffsetTicks; }
        set { SetPriceOffsetTicks(value); }
      }
      public Builder SetPriceOffsetTicks(int value) {
        PrepareBuilder();
        result.hasPriceOffsetTicks = true;
        result.priceOffsetTicks_ = value;
        return this;
      }
      public Builder ClearPriceOffsetTicks() {
        PrepareBuilder();
        result.hasPriceOffsetTicks = false;
        result.priceOffsetTicks_ = 0;
        return this;
      }
      
      public bool HasHedgeOffsetTicks {
        get { return result.hasHedgeOffsetTicks; }
      }
      public int HedgeOffsetTicks {
        get { return result.HedgeOffsetTicks; }
        set { SetHedgeOffsetTicks(value); }
      }
      public Builder SetHedgeOffsetTicks(int value) {
        PrepareBuilder();
        result.hasHedgeOffsetTicks = true;
        result.hedgeOffsetTicks_ = value;
        return this;
      }
      public Builder ClearHedgeOffsetTicks() {
        PrepareBuilder();
        result.hasHedgeOffsetTicks = false;
        result.hedgeOffsetTicks_ = 0;
        return this;
      }
      
      [global::System.CLSCompliant(false)]
      public pbc::IPopsicleList<uint> HedgeExecInstructionList {
        get { return PrepareBuilder().hedgeExecInstruction_; }
      }
      public int HedgeExecInstructionCount {
        get { return result.HedgeExecInstructionCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint GetHedgeExecInstruction(int index) {
        return result.GetHedgeExecInstruction(index);
      }
      [global::System.CLSCompliant(false)]
      public Builder SetHedgeExecInstruction(int index, uint value) {
        PrepareBuilder();
        result.hedgeExecInstruction_[index] = value;
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddHedgeExecInstruction(uint value) {
        PrepareBuilder();
        result.hedgeExecInstruction_.Add(value);
        return this;
      }
      [global::System.CLSCompliant(false)]
      public Builder AddRangeHedgeExecInstruction(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.hedgeExecInstruction_.Add(values);
        return this;
      }
      public Builder ClearHedgeExecInstruction() {
        PrepareBuilder();
        result.hedgeExecInstruction_.Clear();
        return this;
      }
      
      public bool HasIcebergVisibleQtyPercent {
        get { return result.hasIcebergVisibleQtyPercent; }
      }
      [global::System.CLSCompliant(false)]
      public uint IcebergVisibleQtyPercent {
        get { return result.IcebergVisibleQtyPercent; }
        set { SetIcebergVisibleQtyPercent(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetIcebergVisibleQtyPercent(uint value) {
        PrepareBuilder();
        result.hasIcebergVisibleQtyPercent = true;
        result.icebergVisibleQtyPercent_ = value;
        return this;
      }
      public Builder ClearIcebergVisibleQtyPercent() {
        PrepareBuilder();
        result.hasIcebergVisibleQtyPercent = false;
        result.icebergVisibleQtyPercent_ = 0;
        return this;
      }
    }
    static AccountClusterPriceOffset() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Route : pb::GeneratedMessage<Route, Route.Builder> {
    private Route() { }
    private static readonly Route defaultInstance = new Route().MakeReadOnly();
    private static readonly string[] _routeFieldNames = new string[] { "omnibus_accounts", "omnibus_support_type", "priority", "route_information" };
    private static readonly uint[] _routeFieldTags = new uint[] { 34, 24, 16, 10 };
    public static Route DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Route DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Route ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_Route__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Route, Route.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_Route__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum OmnibusSupportType {
        PROHIBITED = 1,
        ALLOWED = 2,
        REQUIRED = 3,
      }
      
    }
    #endregion
    
    public const int RouteInformationFieldNumber = 1;
    private bool hasRouteInformation;
    private global::CmsApiSamples.Protocol.CMSApi.RouteInformation routeInformation_;
    public bool HasRouteInformation {
      get { return hasRouteInformation; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RouteInformation RouteInformation {
      get { return routeInformation_ ?? global::CmsApiSamples.Protocol.CMSApi.RouteInformation.DefaultInstance; }
    }
    
    public const int PriorityFieldNumber = 2;
    private bool hasPriority;
    private uint priority_;
    public bool HasPriority {
      get { return hasPriority; }
    }
    [global::System.CLSCompliant(false)]
    public uint Priority {
      get { return priority_; }
    }
    
    public const int OmnibusSupportTypeFieldNumber = 3;
    private bool hasOmnibusSupportType;
    private uint omnibusSupportType_;
    public bool HasOmnibusSupportType {
      get { return hasOmnibusSupportType; }
    }
    [global::System.CLSCompliant(false)]
    public uint OmnibusSupportType {
      get { return omnibusSupportType_; }
    }
    
    public const int OmnibusAccountsFieldNumber = 4;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount> omnibusAccounts_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount> OmnibusAccountsList {
      get { return omnibusAccounts_; }
    }
    public int OmnibusAccountsCount {
      get { return omnibusAccounts_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount GetOmnibusAccounts(int index) {
      return omnibusAccounts_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (HasRouteInformation) {
          if (!RouteInformation.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _routeFieldNames;
      if (hasRouteInformation) {
        output.WriteMessage(1, field_names[3], RouteInformation);
      }
      if (hasPriority) {
        output.WriteUInt32(2, field_names[2], Priority);
      }
      if (hasOmnibusSupportType) {
        output.WriteUInt32(3, field_names[1], OmnibusSupportType);
      }
      if (omnibusAccounts_.Count > 0) {
        output.WriteMessageArray(4, field_names[0], omnibusAccounts_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRouteInformation) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, RouteInformation);
      }
      if (hasPriority) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Priority);
      }
      if (hasOmnibusSupportType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, OmnibusSupportType);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount element in OmnibusAccountsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Route ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Route ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Route ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Route ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Route ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Route ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Route ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Route ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Route ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Route ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Route MakeReadOnly() {
      omnibusAccounts_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Route prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Route, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Route cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Route result;
      
      private Route PrepareBuilder() {
        if (resultIsReadOnly) {
          Route original = result;
          result = new Route();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Route MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Route.Descriptor; }
      }
      
      public override Route DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.Route.DefaultInstance; }
      }
      
      public override Route BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Route) {
          return MergeFrom((Route) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Route other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.Route.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRouteInformation) {
          MergeRouteInformation(other.RouteInformation);
        }
        if (other.HasPriority) {
          Priority = other.Priority;
        }
        if (other.HasOmnibusSupportType) {
          OmnibusSupportType = other.OmnibusSupportType;
        }
        if (other.omnibusAccounts_.Count != 0) {
          result.omnibusAccounts_.Add(other.omnibusAccounts_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_routeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _routeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::CmsApiSamples.Protocol.CMSApi.RouteInformation.Builder subBuilder = global::CmsApiSamples.Protocol.CMSApi.RouteInformation.CreateBuilder();
              if (result.hasRouteInformation) {
                subBuilder.MergeFrom(RouteInformation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RouteInformation = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasPriority = input.ReadUInt32(ref result.priority_);
              break;
            }
            case 24: {
              result.hasOmnibusSupportType = input.ReadUInt32(ref result.omnibusSupportType_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.omnibusAccounts_, global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRouteInformation {
       get { return result.hasRouteInformation; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RouteInformation RouteInformation {
        get { return result.RouteInformation; }
        set { SetRouteInformation(value); }
      }
      public Builder SetRouteInformation(global::CmsApiSamples.Protocol.CMSApi.RouteInformation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRouteInformation = true;
        result.routeInformation_ = value;
        return this;
      }
      public Builder SetRouteInformation(global::CmsApiSamples.Protocol.CMSApi.RouteInformation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRouteInformation = true;
        result.routeInformation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRouteInformation(global::CmsApiSamples.Protocol.CMSApi.RouteInformation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRouteInformation &&
            result.routeInformation_ != global::CmsApiSamples.Protocol.CMSApi.RouteInformation.DefaultInstance) {
            result.routeInformation_ = global::CmsApiSamples.Protocol.CMSApi.RouteInformation.CreateBuilder(result.routeInformation_).MergeFrom(value).BuildPartial();
        } else {
          result.routeInformation_ = value;
        }
        result.hasRouteInformation = true;
        return this;
      }
      public Builder ClearRouteInformation() {
        PrepareBuilder();
        result.hasRouteInformation = false;
        result.routeInformation_ = null;
        return this;
      }
      
      public bool HasPriority {
        get { return result.hasPriority; }
      }
      [global::System.CLSCompliant(false)]
      public uint Priority {
        get { return result.Priority; }
        set { SetPriority(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetPriority(uint value) {
        PrepareBuilder();
        result.hasPriority = true;
        result.priority_ = value;
        return this;
      }
      public Builder ClearPriority() {
        PrepareBuilder();
        result.hasPriority = false;
        result.priority_ = 0;
        return this;
      }
      
      public bool HasOmnibusSupportType {
        get { return result.hasOmnibusSupportType; }
      }
      [global::System.CLSCompliant(false)]
      public uint OmnibusSupportType {
        get { return result.OmnibusSupportType; }
        set { SetOmnibusSupportType(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOmnibusSupportType(uint value) {
        PrepareBuilder();
        result.hasOmnibusSupportType = true;
        result.omnibusSupportType_ = value;
        return this;
      }
      public Builder ClearOmnibusSupportType() {
        PrepareBuilder();
        result.hasOmnibusSupportType = false;
        result.omnibusSupportType_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount> OmnibusAccountsList {
        get { return PrepareBuilder().omnibusAccounts_; }
      }
      public int OmnibusAccountsCount {
        get { return result.OmnibusAccountsCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount GetOmnibusAccounts(int index) {
        return result.GetOmnibusAccounts(index);
      }
      public Builder SetOmnibusAccounts(int index, global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.omnibusAccounts_[index] = value;
        return this;
      }
      public Builder SetOmnibusAccounts(int index, global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.omnibusAccounts_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOmnibusAccounts(global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.omnibusAccounts_.Add(value);
        return this;
      }
      public Builder AddOmnibusAccounts(global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.omnibusAccounts_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOmnibusAccounts(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount> values) {
        PrepareBuilder();
        result.omnibusAccounts_.Add(values);
        return this;
      }
      public Builder ClearOmnibusAccounts() {
        PrepareBuilder();
        result.omnibusAccounts_.Clear();
        return this;
      }
    }
    static Route() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RouteOmnibusAccount : pb::GeneratedMessage<RouteOmnibusAccount, RouteOmnibusAccount.Builder> {
    private RouteOmnibusAccount() { }
    private static readonly RouteOmnibusAccount defaultInstance = new RouteOmnibusAccount().MakeReadOnly();
    private static readonly string[] _routeOmnibusAccountFieldNames = new string[] { "account_id", "account_name", "brokerage_account_number", "priority" };
    private static readonly uint[] _routeOmnibusAccountFieldTags = new uint[] { 10, 18, 26, 32 };
    public static RouteOmnibusAccount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RouteOmnibusAccount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RouteOmnibusAccount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RouteOmnibusAccount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RouteOmnibusAccount, RouteOmnibusAccount.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RouteOmnibusAccount__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private string accountId_ = "";
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public string AccountId {
      get { return accountId_; }
    }
    
    public const int AccountNameFieldNumber = 2;
    private bool hasAccountName;
    private string accountName_ = "";
    public bool HasAccountName {
      get { return hasAccountName; }
    }
    public string AccountName {
      get { return accountName_; }
    }
    
    public const int BrokerageAccountNumberFieldNumber = 3;
    private bool hasBrokerageAccountNumber;
    private string brokerageAccountNumber_ = "";
    public bool HasBrokerageAccountNumber {
      get { return hasBrokerageAccountNumber; }
    }
    public string BrokerageAccountNumber {
      get { return brokerageAccountNumber_; }
    }
    
    public const int PriorityFieldNumber = 4;
    private bool hasPriority;
    private uint priority_;
    public bool HasPriority {
      get { return hasPriority; }
    }
    [global::System.CLSCompliant(false)]
    public uint Priority {
      get { return priority_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _routeOmnibusAccountFieldNames;
      if (hasAccountId) {
        output.WriteString(1, field_names[0], AccountId);
      }
      if (hasAccountName) {
        output.WriteString(2, field_names[1], AccountName);
      }
      if (hasBrokerageAccountNumber) {
        output.WriteString(3, field_names[2], BrokerageAccountNumber);
      }
      if (hasPriority) {
        output.WriteUInt32(4, field_names[3], Priority);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AccountId);
      }
      if (hasAccountName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, AccountName);
      }
      if (hasBrokerageAccountNumber) {
        size += pb::CodedOutputStream.ComputeStringSize(3, BrokerageAccountNumber);
      }
      if (hasPriority) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Priority);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RouteOmnibusAccount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RouteOmnibusAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RouteOmnibusAccount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RouteOmnibusAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RouteOmnibusAccount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RouteOmnibusAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RouteOmnibusAccount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RouteOmnibusAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RouteOmnibusAccount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RouteOmnibusAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RouteOmnibusAccount MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RouteOmnibusAccount prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RouteOmnibusAccount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RouteOmnibusAccount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RouteOmnibusAccount result;
      
      private RouteOmnibusAccount PrepareBuilder() {
        if (resultIsReadOnly) {
          RouteOmnibusAccount original = result;
          result = new RouteOmnibusAccount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RouteOmnibusAccount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount.Descriptor; }
      }
      
      public override RouteOmnibusAccount DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount.DefaultInstance; }
      }
      
      public override RouteOmnibusAccount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RouteOmnibusAccount) {
          return MergeFrom((RouteOmnibusAccount) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RouteOmnibusAccount other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RouteOmnibusAccount.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasAccountName) {
          AccountName = other.AccountName;
        }
        if (other.HasBrokerageAccountNumber) {
          BrokerageAccountNumber = other.BrokerageAccountNumber;
        }
        if (other.HasPriority) {
          Priority = other.Priority;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_routeOmnibusAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _routeOmnibusAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccountId = input.ReadString(ref result.accountId_);
              break;
            }
            case 18: {
              result.hasAccountName = input.ReadString(ref result.accountName_);
              break;
            }
            case 26: {
              result.hasBrokerageAccountNumber = input.ReadString(ref result.brokerageAccountNumber_);
              break;
            }
            case 32: {
              result.hasPriority = input.ReadUInt32(ref result.priority_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public string AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = "";
        return this;
      }
      
      public bool HasAccountName {
        get { return result.hasAccountName; }
      }
      public string AccountName {
        get { return result.AccountName; }
        set { SetAccountName(value); }
      }
      public Builder SetAccountName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountName = true;
        result.accountName_ = value;
        return this;
      }
      public Builder ClearAccountName() {
        PrepareBuilder();
        result.hasAccountName = false;
        result.accountName_ = "";
        return this;
      }
      
      public bool HasBrokerageAccountNumber {
        get { return result.hasBrokerageAccountNumber; }
      }
      public string BrokerageAccountNumber {
        get { return result.BrokerageAccountNumber; }
        set { SetBrokerageAccountNumber(value); }
      }
      public Builder SetBrokerageAccountNumber(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBrokerageAccountNumber = true;
        result.brokerageAccountNumber_ = value;
        return this;
      }
      public Builder ClearBrokerageAccountNumber() {
        PrepareBuilder();
        result.hasBrokerageAccountNumber = false;
        result.brokerageAccountNumber_ = "";
        return this;
      }
      
      public bool HasPriority {
        get { return result.hasPriority; }
      }
      [global::System.CLSCompliant(false)]
      public uint Priority {
        get { return result.Priority; }
        set { SetPriority(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetPriority(uint value) {
        PrepareBuilder();
        result.hasPriority = true;
        result.priority_ = value;
        return this;
      }
      public Builder ClearPriority() {
        PrepareBuilder();
        result.hasPriority = false;
        result.priority_ = 0;
        return this;
      }
    }
    static RouteOmnibusAccount() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RouteInformation : pb::GeneratedMessage<RouteInformation, RouteInformation.Builder> {
    private RouteInformation() { }
    private static readonly RouteInformation defaultInstance = new RouteInformation().MakeReadOnly();
    private static readonly string[] _routeInformationFieldNames = new string[] { "attributes", "authorization_required", "has_overlapped_instruments", "route_code", "route_name", "synthetic_strategies" };
    private static readonly uint[] _routeInformationFieldTags = new uint[] { 34, 48, 40, 10, 18, 24 };
    public static RouteInformation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RouteInformation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RouteInformation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RouteInformation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RouteInformation, RouteInformation.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RouteInformation__FieldAccessorTable; }
    }
    
    public const int RouteCodeFieldNumber = 1;
    private bool hasRouteCode;
    private string routeCode_ = "";
    public bool HasRouteCode {
      get { return hasRouteCode; }
    }
    public string RouteCode {
      get { return routeCode_; }
    }
    
    public const int RouteNameFieldNumber = 2;
    private bool hasRouteName;
    private string routeName_ = "";
    public bool HasRouteName {
      get { return hasRouteName; }
    }
    public string RouteName {
      get { return routeName_; }
    }
    
    public const int SyntheticStrategiesFieldNumber = 3;
    private bool hasSyntheticStrategies;
    private bool syntheticStrategies_;
    public bool HasSyntheticStrategies {
      get { return hasSyntheticStrategies; }
    }
    public bool SyntheticStrategies {
      get { return syntheticStrategies_; }
    }
    
    public const int AttributesFieldNumber = 4;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute> attributes_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute> AttributesList {
      get { return attributes_; }
    }
    public int AttributesCount {
      get { return attributes_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute GetAttributes(int index) {
      return attributes_[index];
    }
    
    public const int HasOverlappedInstrumentsFieldNumber = 5;
    private bool hasHasOverlappedInstruments;
    private bool hasOverlappedInstruments_;
    public bool HasHasOverlappedInstruments {
      get { return hasHasOverlappedInstruments; }
    }
    public bool HasOverlappedInstruments {
      get { return hasOverlappedInstruments_; }
    }
    
    public const int AuthorizationRequiredFieldNumber = 6;
    private bool hasAuthorizationRequired;
    private bool authorizationRequired_;
    public bool HasAuthorizationRequired {
      get { return hasAuthorizationRequired; }
    }
    public bool AuthorizationRequired {
      get { return authorizationRequired_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute element in AttributesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _routeInformationFieldNames;
      if (hasRouteCode) {
        output.WriteString(1, field_names[3], RouteCode);
      }
      if (hasRouteName) {
        output.WriteString(2, field_names[4], RouteName);
      }
      if (hasSyntheticStrategies) {
        output.WriteBool(3, field_names[5], SyntheticStrategies);
      }
      if (attributes_.Count > 0) {
        output.WriteMessageArray(4, field_names[0], attributes_);
      }
      if (hasHasOverlappedInstruments) {
        output.WriteBool(5, field_names[2], HasOverlappedInstruments);
      }
      if (hasAuthorizationRequired) {
        output.WriteBool(6, field_names[1], AuthorizationRequired);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRouteCode) {
        size += pb::CodedOutputStream.ComputeStringSize(1, RouteCode);
      }
      if (hasRouteName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, RouteName);
      }
      if (hasSyntheticStrategies) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, SyntheticStrategies);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute element in AttributesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      if (hasHasOverlappedInstruments) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, HasOverlappedInstruments);
      }
      if (hasAuthorizationRequired) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, AuthorizationRequired);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RouteInformation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RouteInformation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RouteInformation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RouteInformation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RouteInformation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RouteInformation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RouteInformation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RouteInformation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RouteInformation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RouteInformation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RouteInformation MakeReadOnly() {
      attributes_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RouteInformation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RouteInformation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RouteInformation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RouteInformation result;
      
      private RouteInformation PrepareBuilder() {
        if (resultIsReadOnly) {
          RouteInformation original = result;
          result = new RouteInformation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RouteInformation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RouteInformation.Descriptor; }
      }
      
      public override RouteInformation DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RouteInformation.DefaultInstance; }
      }
      
      public override RouteInformation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RouteInformation) {
          return MergeFrom((RouteInformation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RouteInformation other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RouteInformation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRouteCode) {
          RouteCode = other.RouteCode;
        }
        if (other.HasRouteName) {
          RouteName = other.RouteName;
        }
        if (other.HasSyntheticStrategies) {
          SyntheticStrategies = other.SyntheticStrategies;
        }
        if (other.attributes_.Count != 0) {
          result.attributes_.Add(other.attributes_);
        }
        if (other.HasHasOverlappedInstruments) {
          HasOverlappedInstruments = other.HasOverlappedInstruments;
        }
        if (other.HasAuthorizationRequired) {
          AuthorizationRequired = other.AuthorizationRequired;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_routeInformationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _routeInformationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasRouteCode = input.ReadString(ref result.routeCode_);
              break;
            }
            case 18: {
              result.hasRouteName = input.ReadString(ref result.routeName_);
              break;
            }
            case 24: {
              result.hasSyntheticStrategies = input.ReadBool(ref result.syntheticStrategies_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.attributes_, global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 40: {
              result.hasHasOverlappedInstruments = input.ReadBool(ref result.hasOverlappedInstruments_);
              break;
            }
            case 48: {
              result.hasAuthorizationRequired = input.ReadBool(ref result.authorizationRequired_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRouteCode {
        get { return result.hasRouteCode; }
      }
      public string RouteCode {
        get { return result.RouteCode; }
        set { SetRouteCode(value); }
      }
      public Builder SetRouteCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRouteCode = true;
        result.routeCode_ = value;
        return this;
      }
      public Builder ClearRouteCode() {
        PrepareBuilder();
        result.hasRouteCode = false;
        result.routeCode_ = "";
        return this;
      }
      
      public bool HasRouteName {
        get { return result.hasRouteName; }
      }
      public string RouteName {
        get { return result.RouteName; }
        set { SetRouteName(value); }
      }
      public Builder SetRouteName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRouteName = true;
        result.routeName_ = value;
        return this;
      }
      public Builder ClearRouteName() {
        PrepareBuilder();
        result.hasRouteName = false;
        result.routeName_ = "";
        return this;
      }
      
      public bool HasSyntheticStrategies {
        get { return result.hasSyntheticStrategies; }
      }
      public bool SyntheticStrategies {
        get { return result.SyntheticStrategies; }
        set { SetSyntheticStrategies(value); }
      }
      public Builder SetSyntheticStrategies(bool value) {
        PrepareBuilder();
        result.hasSyntheticStrategies = true;
        result.syntheticStrategies_ = value;
        return this;
      }
      public Builder ClearSyntheticStrategies() {
        PrepareBuilder();
        result.hasSyntheticStrategies = false;
        result.syntheticStrategies_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute> AttributesList {
        get { return PrepareBuilder().attributes_; }
      }
      public int AttributesCount {
        get { return result.AttributesCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute GetAttributes(int index) {
        return result.GetAttributes(index);
      }
      public Builder SetAttributes(int index, global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributes_[index] = value;
        return this;
      }
      public Builder SetAttributes(int index, global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttributes(global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributes_.Add(value);
        return this;
      }
      public Builder AddAttributes(global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttributes(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AccountRouteAttribute> values) {
        PrepareBuilder();
        result.attributes_.Add(values);
        return this;
      }
      public Builder ClearAttributes() {
        PrepareBuilder();
        result.attributes_.Clear();
        return this;
      }
      
      public bool HasHasOverlappedInstruments {
        get { return result.hasHasOverlappedInstruments; }
      }
      public bool HasOverlappedInstruments {
        get { return result.HasOverlappedInstruments; }
        set { SetHasOverlappedInstruments(value); }
      }
      public Builder SetHasOverlappedInstruments(bool value) {
        PrepareBuilder();
        result.hasHasOverlappedInstruments = true;
        result.hasOverlappedInstruments_ = value;
        return this;
      }
      public Builder ClearHasOverlappedInstruments() {
        PrepareBuilder();
        result.hasHasOverlappedInstruments = false;
        result.hasOverlappedInstruments_ = false;
        return this;
      }
      
      public bool HasAuthorizationRequired {
        get { return result.hasAuthorizationRequired; }
      }
      public bool AuthorizationRequired {
        get { return result.AuthorizationRequired; }
        set { SetAuthorizationRequired(value); }
      }
      public Builder SetAuthorizationRequired(bool value) {
        PrepareBuilder();
        result.hasAuthorizationRequired = true;
        result.authorizationRequired_ = value;
        return this;
      }
      public Builder ClearAuthorizationRequired() {
        PrepareBuilder();
        result.hasAuthorizationRequired = false;
        result.authorizationRequired_ = false;
        return this;
      }
    }
    static RouteInformation() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RestoreAccount : pb::GeneratedMessage<RestoreAccount, RestoreAccount.Builder> {
    private RestoreAccount() { }
    private static readonly RestoreAccount defaultInstance = new RestoreAccount().MakeReadOnly();
    private static readonly string[] _restoreAccountFieldNames = new string[] { "account_id" };
    private static readonly uint[] _restoreAccountFieldTags = new uint[] { 10 };
    public static RestoreAccount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RestoreAccount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RestoreAccount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RestoreAccount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RestoreAccount, RestoreAccount.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RestoreAccount__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private string accountId_ = "";
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public string AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _restoreAccountFieldNames;
      if (hasAccountId) {
        output.WriteString(1, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RestoreAccount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreAccount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreAccount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RestoreAccount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RestoreAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RestoreAccount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RestoreAccount MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RestoreAccount prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RestoreAccount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RestoreAccount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RestoreAccount result;
      
      private RestoreAccount PrepareBuilder() {
        if (resultIsReadOnly) {
          RestoreAccount original = result;
          result = new RestoreAccount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RestoreAccount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreAccount.Descriptor; }
      }
      
      public override RestoreAccount DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreAccount.DefaultInstance; }
      }
      
      public override RestoreAccount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RestoreAccount) {
          return MergeFrom((RestoreAccount) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RestoreAccount other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RestoreAccount.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_restoreAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _restoreAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccountId = input.ReadString(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public string AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = "";
        return this;
      }
    }
    static RestoreAccount() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountTypeOverrideListRequest : pb::GeneratedMessage<AccountTypeOverrideListRequest, AccountTypeOverrideListRequest.Builder> {
    private AccountTypeOverrideListRequest() { }
    private static readonly AccountTypeOverrideListRequest defaultInstance = new AccountTypeOverrideListRequest().MakeReadOnly();
    private static readonly string[] _accountTypeOverrideListRequestFieldNames = new string[] { "account_id" };
    private static readonly uint[] _accountTypeOverrideListRequestFieldTags = new uint[] { 10 };
    public static AccountTypeOverrideListRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountTypeOverrideListRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountTypeOverrideListRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountTypeOverrideListRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountTypeOverrideListRequest, AccountTypeOverrideListRequest.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountTypeOverrideListRequest__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private string accountId_ = "";
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public string AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountTypeOverrideListRequestFieldNames;
      if (hasAccountId) {
        output.WriteString(1, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountTypeOverrideListRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountTypeOverrideListRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountTypeOverrideListRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountTypeOverrideListRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountTypeOverrideListRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountTypeOverrideListRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountTypeOverrideListRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountTypeOverrideListRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountTypeOverrideListRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountTypeOverrideListRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountTypeOverrideListRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountTypeOverrideListRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountTypeOverrideListRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountTypeOverrideListRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountTypeOverrideListRequest result;
      
      private AccountTypeOverrideListRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountTypeOverrideListRequest original = result;
          result = new AccountTypeOverrideListRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountTypeOverrideListRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest.Descriptor; }
      }
      
      public override AccountTypeOverrideListRequest DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest.DefaultInstance; }
      }
      
      public override AccountTypeOverrideListRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountTypeOverrideListRequest) {
          return MergeFrom((AccountTypeOverrideListRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountTypeOverrideListRequest other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountTypeOverrideListRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountTypeOverrideListRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccountId = input.ReadString(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public string AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = "";
        return this;
      }
    }
    static AccountTypeOverrideListRequest() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountTypeOverrideList : pb::GeneratedMessage<UpdateAccountTypeOverrideList, UpdateAccountTypeOverrideList.Builder> {
    private UpdateAccountTypeOverrideList() { }
    private static readonly UpdateAccountTypeOverrideList defaultInstance = new UpdateAccountTypeOverrideList().MakeReadOnly();
    private static readonly string[] _updateAccountTypeOverrideListFieldNames = new string[] { "account_id", "overrides_to_remove", "overrides_to_set" };
    private static readonly uint[] _updateAccountTypeOverrideListFieldTags = new uint[] { 10, 26, 18 };
    public static UpdateAccountTypeOverrideList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountTypeOverrideList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountTypeOverrideList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountTypeOverrideList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountTypeOverrideList, UpdateAccountTypeOverrideList.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountTypeOverrideList__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private string accountId_ = "";
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public string AccountId {
      get { return accountId_; }
    }
    
    public const int OverridesToSetFieldNumber = 2;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride> overridesToSet_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride> OverridesToSetList {
      get { return overridesToSet_; }
    }
    public int OverridesToSetCount {
      get { return overridesToSet_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride GetOverridesToSet(int index) {
      return overridesToSet_[index];
    }
    
    public const int OverridesToRemoveFieldNumber = 3;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> overridesToRemove_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Tuple> OverridesToRemoveList {
      get { return overridesToRemove_; }
    }
    public int OverridesToRemoveCount {
      get { return overridesToRemove_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Tuple GetOverridesToRemove(int index) {
      return overridesToRemove_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountTypeOverrideListFieldNames;
      if (hasAccountId) {
        output.WriteString(1, field_names[0], AccountId);
      }
      if (overridesToSet_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], overridesToSet_);
      }
      if (overridesToRemove_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], overridesToRemove_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AccountId);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride element in OverridesToSetList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.Tuple element in OverridesToRemoveList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountTypeOverrideList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountTypeOverrideList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountTypeOverrideList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountTypeOverrideList MakeReadOnly() {
      overridesToSet_.MakeReadOnly();
      overridesToRemove_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountTypeOverrideList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountTypeOverrideList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountTypeOverrideList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountTypeOverrideList result;
      
      private UpdateAccountTypeOverrideList PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountTypeOverrideList original = result;
          result = new UpdateAccountTypeOverrideList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountTypeOverrideList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList.Descriptor; }
      }
      
      public override UpdateAccountTypeOverrideList DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList.DefaultInstance; }
      }
      
      public override UpdateAccountTypeOverrideList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountTypeOverrideList) {
          return MergeFrom((UpdateAccountTypeOverrideList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountTypeOverrideList other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.overridesToSet_.Count != 0) {
          result.overridesToSet_.Add(other.overridesToSet_);
        }
        if (other.overridesToRemove_.Count != 0) {
          result.overridesToRemove_.Add(other.overridesToRemove_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountTypeOverrideListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountTypeOverrideListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccountId = input.ReadString(ref result.accountId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.overridesToSet_, global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.overridesToRemove_, global::CmsApiSamples.Protocol.CMSApi.Tuple.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public string AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride> OverridesToSetList {
        get { return PrepareBuilder().overridesToSet_; }
      }
      public int OverridesToSetCount {
        get { return result.OverridesToSetCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride GetOverridesToSet(int index) {
        return result.GetOverridesToSet(index);
      }
      public Builder SetOverridesToSet(int index, global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.overridesToSet_[index] = value;
        return this;
      }
      public Builder SetOverridesToSet(int index, global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.overridesToSet_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOverridesToSet(global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.overridesToSet_.Add(value);
        return this;
      }
      public Builder AddOverridesToSet(global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.overridesToSet_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOverridesToSet(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride> values) {
        PrepareBuilder();
        result.overridesToSet_.Add(values);
        return this;
      }
      public Builder ClearOverridesToSet() {
        PrepareBuilder();
        result.overridesToSet_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> OverridesToRemoveList {
        get { return PrepareBuilder().overridesToRemove_; }
      }
      public int OverridesToRemoveCount {
        get { return result.OverridesToRemoveCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Tuple GetOverridesToRemove(int index) {
        return result.GetOverridesToRemove(index);
      }
      public Builder SetOverridesToRemove(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.overridesToRemove_[index] = value;
        return this;
      }
      public Builder SetOverridesToRemove(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.overridesToRemove_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOverridesToRemove(global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.overridesToRemove_.Add(value);
        return this;
      }
      public Builder AddOverridesToRemove(global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.overridesToRemove_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOverridesToRemove(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Tuple> values) {
        PrepareBuilder();
        result.overridesToRemove_.Add(values);
        return this;
      }
      public Builder ClearOverridesToRemove() {
        PrepareBuilder();
        result.overridesToRemove_.Clear();
        return this;
      }
    }
    static UpdateAccountTypeOverrideList() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RestoreAccountResult : pb::GeneratedMessage<RestoreAccountResult, RestoreAccountResult.Builder> {
    private RestoreAccountResult() { }
    private static readonly RestoreAccountResult defaultInstance = new RestoreAccountResult().MakeReadOnly();
    private static readonly string[] _restoreAccountResultFieldNames = new string[] {  };
    private static readonly uint[] _restoreAccountResultFieldTags = new uint[] {  };
    public static RestoreAccountResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RestoreAccountResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RestoreAccountResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RestoreAccountResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RestoreAccountResult, RestoreAccountResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RestoreAccountResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _restoreAccountResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RestoreAccountResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreAccountResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreAccountResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RestoreAccountResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RestoreAccountResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreAccountResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RestoreAccountResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RestoreAccountResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RestoreAccountResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RestoreAccountResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RestoreAccountResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RestoreAccountResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RestoreAccountResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RestoreAccountResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RestoreAccountResult result;
      
      private RestoreAccountResult PrepareBuilder() {
        if (resultIsReadOnly) {
          RestoreAccountResult original = result;
          result = new RestoreAccountResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RestoreAccountResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult.Descriptor; }
      }
      
      public override RestoreAccountResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult.DefaultInstance; }
      }
      
      public override RestoreAccountResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RestoreAccountResult) {
          return MergeFrom((RestoreAccountResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RestoreAccountResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RestoreAccountResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_restoreAccountResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _restoreAccountResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static RestoreAccountResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountTypeOverrideListResult : pb::GeneratedMessage<AccountTypeOverrideListResult, AccountTypeOverrideListResult.Builder> {
    private AccountTypeOverrideListResult() { }
    private static readonly AccountTypeOverrideListResult defaultInstance = new AccountTypeOverrideListResult().MakeReadOnly();
    private static readonly string[] _accountTypeOverrideListResultFieldNames = new string[] { "overrides" };
    private static readonly uint[] _accountTypeOverrideListResultFieldTags = new uint[] { 10 };
    public static AccountTypeOverrideListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountTypeOverrideListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountTypeOverrideListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountTypeOverrideListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountTypeOverrideListResult, AccountTypeOverrideListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountTypeOverrideListResult__FieldAccessorTable; }
    }
    
    public const int OverridesFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride> overrides_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride> OverridesList {
      get { return overrides_; }
    }
    public int OverridesCount {
      get { return overrides_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride GetOverrides(int index) {
      return overrides_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountTypeOverrideListResultFieldNames;
      if (overrides_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], overrides_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride element in OverridesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountTypeOverrideListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountTypeOverrideListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountTypeOverrideListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountTypeOverrideListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountTypeOverrideListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountTypeOverrideListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountTypeOverrideListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountTypeOverrideListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountTypeOverrideListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountTypeOverrideListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountTypeOverrideListResult MakeReadOnly() {
      overrides_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountTypeOverrideListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountTypeOverrideListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountTypeOverrideListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountTypeOverrideListResult result;
      
      private AccountTypeOverrideListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountTypeOverrideListResult original = result;
          result = new AccountTypeOverrideListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountTypeOverrideListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult.Descriptor; }
      }
      
      public override AccountTypeOverrideListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult.DefaultInstance; }
      }
      
      public override AccountTypeOverrideListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountTypeOverrideListResult) {
          return MergeFrom((AccountTypeOverrideListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountTypeOverrideListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverrideListResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.overrides_.Count != 0) {
          result.overrides_.Add(other.overrides_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountTypeOverrideListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountTypeOverrideListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.overrides_, global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride> OverridesList {
        get { return PrepareBuilder().overrides_; }
      }
      public int OverridesCount {
        get { return result.OverridesCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride GetOverrides(int index) {
        return result.GetOverrides(index);
      }
      public Builder SetOverrides(int index, global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.overrides_[index] = value;
        return this;
      }
      public Builder SetOverrides(int index, global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.overrides_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOverrides(global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.overrides_.Add(value);
        return this;
      }
      public Builder AddOverrides(global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.overrides_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOverrides(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride> values) {
        PrepareBuilder();
        result.overrides_.Add(values);
        return this;
      }
      public Builder ClearOverrides() {
        PrepareBuilder();
        result.overrides_.Clear();
        return this;
      }
    }
    static AccountTypeOverrideListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AccountTypeOverride : pb::GeneratedMessage<AccountTypeOverride, AccountTypeOverride.Builder> {
    private AccountTypeOverride() { }
    private static readonly AccountTypeOverride defaultInstance = new AccountTypeOverride().MakeReadOnly();
    private static readonly string[] _accountTypeOverrideFieldNames = new string[] { "exchange_key", "login_id", "origin_id", "type_id" };
    private static readonly uint[] _accountTypeOverrideFieldTags = new uint[] { 18, 26, 42, 34 };
    public static AccountTypeOverride DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountTypeOverride DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountTypeOverride ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountTypeOverride__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountTypeOverride, AccountTypeOverride.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_AccountTypeOverride__FieldAccessorTable; }
    }
    
    public const int ExchangeKeyFieldNumber = 2;
    private bool hasExchangeKey;
    private string exchangeKey_ = "";
    public bool HasExchangeKey {
      get { return hasExchangeKey; }
    }
    public string ExchangeKey {
      get { return exchangeKey_; }
    }
    
    public const int LoginIdFieldNumber = 3;
    private bool hasLoginId;
    private string loginId_ = "";
    public bool HasLoginId {
      get { return hasLoginId; }
    }
    public string LoginId {
      get { return loginId_; }
    }
    
    public const int TypeIdFieldNumber = 4;
    private bool hasTypeId;
    private string typeId_ = "";
    public bool HasTypeId {
      get { return hasTypeId; }
    }
    public string TypeId {
      get { return typeId_; }
    }
    
    public const int OriginIdFieldNumber = 5;
    private bool hasOriginId;
    private string originId_ = "";
    public bool HasOriginId {
      get { return hasOriginId; }
    }
    public string OriginId {
      get { return originId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _accountTypeOverrideFieldNames;
      if (hasExchangeKey) {
        output.WriteString(2, field_names[0], ExchangeKey);
      }
      if (hasLoginId) {
        output.WriteString(3, field_names[1], LoginId);
      }
      if (hasTypeId) {
        output.WriteString(4, field_names[3], TypeId);
      }
      if (hasOriginId) {
        output.WriteString(5, field_names[2], OriginId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasExchangeKey) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ExchangeKey);
      }
      if (hasLoginId) {
        size += pb::CodedOutputStream.ComputeStringSize(3, LoginId);
      }
      if (hasTypeId) {
        size += pb::CodedOutputStream.ComputeStringSize(4, TypeId);
      }
      if (hasOriginId) {
        size += pb::CodedOutputStream.ComputeStringSize(5, OriginId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AccountTypeOverride ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountTypeOverride ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountTypeOverride ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountTypeOverride ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountTypeOverride ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountTypeOverride ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountTypeOverride ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountTypeOverride ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountTypeOverride ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountTypeOverride ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountTypeOverride MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountTypeOverride prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountTypeOverride, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountTypeOverride cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountTypeOverride result;
      
      private AccountTypeOverride PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountTypeOverride original = result;
          result = new AccountTypeOverride();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountTypeOverride MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride.Descriptor; }
      }
      
      public override AccountTypeOverride DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride.DefaultInstance; }
      }
      
      public override AccountTypeOverride BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountTypeOverride) {
          return MergeFrom((AccountTypeOverride) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountTypeOverride other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.AccountTypeOverride.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasExchangeKey) {
          ExchangeKey = other.ExchangeKey;
        }
        if (other.HasLoginId) {
          LoginId = other.LoginId;
        }
        if (other.HasTypeId) {
          TypeId = other.TypeId;
        }
        if (other.HasOriginId) {
          OriginId = other.OriginId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountTypeOverrideFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountTypeOverrideFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              result.hasExchangeKey = input.ReadString(ref result.exchangeKey_);
              break;
            }
            case 26: {
              result.hasLoginId = input.ReadString(ref result.loginId_);
              break;
            }
            case 34: {
              result.hasTypeId = input.ReadString(ref result.typeId_);
              break;
            }
            case 42: {
              result.hasOriginId = input.ReadString(ref result.originId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasExchangeKey {
        get { return result.hasExchangeKey; }
      }
      public string ExchangeKey {
        get { return result.ExchangeKey; }
        set { SetExchangeKey(value); }
      }
      public Builder SetExchangeKey(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExchangeKey = true;
        result.exchangeKey_ = value;
        return this;
      }
      public Builder ClearExchangeKey() {
        PrepareBuilder();
        result.hasExchangeKey = false;
        result.exchangeKey_ = "";
        return this;
      }
      
      public bool HasLoginId {
        get { return result.hasLoginId; }
      }
      public string LoginId {
        get { return result.LoginId; }
        set { SetLoginId(value); }
      }
      public Builder SetLoginId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLoginId = true;
        result.loginId_ = value;
        return this;
      }
      public Builder ClearLoginId() {
        PrepareBuilder();
        result.hasLoginId = false;
        result.loginId_ = "";
        return this;
      }
      
      public bool HasTypeId {
        get { return result.hasTypeId; }
      }
      public string TypeId {
        get { return result.TypeId; }
        set { SetTypeId(value); }
      }
      public Builder SetTypeId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTypeId = true;
        result.typeId_ = value;
        return this;
      }
      public Builder ClearTypeId() {
        PrepareBuilder();
        result.hasTypeId = false;
        result.typeId_ = "";
        return this;
      }
      
      public bool HasOriginId {
        get { return result.hasOriginId; }
      }
      public string OriginId {
        get { return result.OriginId; }
        set { SetOriginId(value); }
      }
      public Builder SetOriginId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOriginId = true;
        result.originId_ = value;
        return this;
      }
      public Builder ClearOriginId() {
        PrepareBuilder();
        result.hasOriginId = false;
        result.originId_ = "";
        return this;
      }
    }
    static AccountTypeOverride() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountTypeOverrideListResult : pb::GeneratedMessage<UpdateAccountTypeOverrideListResult, UpdateAccountTypeOverrideListResult.Builder> {
    private UpdateAccountTypeOverrideListResult() { }
    private static readonly UpdateAccountTypeOverrideListResult defaultInstance = new UpdateAccountTypeOverrideListResult().MakeReadOnly();
    private static readonly string[] _updateAccountTypeOverrideListResultFieldNames = new string[] {  };
    private static readonly uint[] _updateAccountTypeOverrideListResultFieldTags = new uint[] {  };
    public static UpdateAccountTypeOverrideListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountTypeOverrideListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountTypeOverrideListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountTypeOverrideListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountTypeOverrideListResult, UpdateAccountTypeOverrideListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountTypeOverrideListResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountTypeOverrideListResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountTypeOverrideListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountTypeOverrideListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountTypeOverrideListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountTypeOverrideListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountTypeOverrideListResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountTypeOverrideListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountTypeOverrideListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountTypeOverrideListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountTypeOverrideListResult result;
      
      private UpdateAccountTypeOverrideListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountTypeOverrideListResult original = result;
          result = new UpdateAccountTypeOverrideListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountTypeOverrideListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult.Descriptor; }
      }
      
      public override UpdateAccountTypeOverrideListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult.DefaultInstance; }
      }
      
      public override UpdateAccountTypeOverrideListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountTypeOverrideListResult) {
          return MergeFrom((UpdateAccountTypeOverrideListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountTypeOverrideListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountTypeOverrideListResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountTypeOverrideListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountTypeOverrideListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateAccountTypeOverrideListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountUserAuthorizationList : pb::GeneratedMessage<UpdateAccountUserAuthorizationList, UpdateAccountUserAuthorizationList.Builder> {
    private UpdateAccountUserAuthorizationList() { }
    private static readonly UpdateAccountUserAuthorizationList defaultInstance = new UpdateAccountUserAuthorizationList().MakeReadOnly();
    private static readonly string[] _updateAccountUserAuthorizationListFieldNames = new string[] { "links_to_remove", "links_to_set" };
    private static readonly uint[] _updateAccountUserAuthorizationListFieldTags = new uint[] { 18, 10 };
    public static UpdateAccountUserAuthorizationList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountUserAuthorizationList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountUserAuthorizationList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountUserAuthorizationList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountUserAuthorizationList, UpdateAccountUserAuthorizationList.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountUserAuthorizationList__FieldAccessorTable; }
    }
    
    public const int LinksToSetFieldNumber = 1;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountUserLink> linksToSet_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountUserLink>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.AccountUserLink> LinksToSetList {
      get { return linksToSet_; }
    }
    public int LinksToSetCount {
      get { return linksToSet_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.AccountUserLink GetLinksToSet(int index) {
      return linksToSet_[index];
    }
    
    public const int LinksToRemoveFieldNumber = 2;
    private pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> linksToRemove_ = new pbc::PopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple>();
    public scg::IList<global::CmsApiSamples.Protocol.CMSApi.Tuple> LinksToRemoveList {
      get { return linksToRemove_; }
    }
    public int LinksToRemoveCount {
      get { return linksToRemove_.Count; }
    }
    public global::CmsApiSamples.Protocol.CMSApi.Tuple GetLinksToRemove(int index) {
      return linksToRemove_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountUserAuthorizationListFieldNames;
      if (linksToSet_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], linksToSet_);
      }
      if (linksToRemove_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], linksToRemove_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CmsApiSamples.Protocol.CMSApi.AccountUserLink element in LinksToSetList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      foreach (global::CmsApiSamples.Protocol.CMSApi.Tuple element in LinksToRemoveList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountUserAuthorizationList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountUserAuthorizationList MakeReadOnly() {
      linksToSet_.MakeReadOnly();
      linksToRemove_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountUserAuthorizationList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountUserAuthorizationList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountUserAuthorizationList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountUserAuthorizationList result;
      
      private UpdateAccountUserAuthorizationList PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountUserAuthorizationList original = result;
          result = new UpdateAccountUserAuthorizationList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountUserAuthorizationList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList.Descriptor; }
      }
      
      public override UpdateAccountUserAuthorizationList DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList.DefaultInstance; }
      }
      
      public override UpdateAccountUserAuthorizationList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountUserAuthorizationList) {
          return MergeFrom((UpdateAccountUserAuthorizationList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountUserAuthorizationList other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.linksToSet_.Count != 0) {
          result.linksToSet_.Add(other.linksToSet_);
        }
        if (other.linksToRemove_.Count != 0) {
          result.linksToRemove_.Add(other.linksToRemove_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountUserAuthorizationListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountUserAuthorizationListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.linksToSet_, global::CmsApiSamples.Protocol.CMSApi.AccountUserLink.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.linksToRemove_, global::CmsApiSamples.Protocol.CMSApi.Tuple.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.AccountUserLink> LinksToSetList {
        get { return PrepareBuilder().linksToSet_; }
      }
      public int LinksToSetCount {
        get { return result.LinksToSetCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.AccountUserLink GetLinksToSet(int index) {
        return result.GetLinksToSet(index);
      }
      public Builder SetLinksToSet(int index, global::CmsApiSamples.Protocol.CMSApi.AccountUserLink value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.linksToSet_[index] = value;
        return this;
      }
      public Builder SetLinksToSet(int index, global::CmsApiSamples.Protocol.CMSApi.AccountUserLink.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.linksToSet_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLinksToSet(global::CmsApiSamples.Protocol.CMSApi.AccountUserLink value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.linksToSet_.Add(value);
        return this;
      }
      public Builder AddLinksToSet(global::CmsApiSamples.Protocol.CMSApi.AccountUserLink.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.linksToSet_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLinksToSet(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.AccountUserLink> values) {
        PrepareBuilder();
        result.linksToSet_.Add(values);
        return this;
      }
      public Builder ClearLinksToSet() {
        PrepareBuilder();
        result.linksToSet_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::CmsApiSamples.Protocol.CMSApi.Tuple> LinksToRemoveList {
        get { return PrepareBuilder().linksToRemove_; }
      }
      public int LinksToRemoveCount {
        get { return result.LinksToRemoveCount; }
      }
      public global::CmsApiSamples.Protocol.CMSApi.Tuple GetLinksToRemove(int index) {
        return result.GetLinksToRemove(index);
      }
      public Builder SetLinksToRemove(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.linksToRemove_[index] = value;
        return this;
      }
      public Builder SetLinksToRemove(int index, global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.linksToRemove_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLinksToRemove(global::CmsApiSamples.Protocol.CMSApi.Tuple value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.linksToRemove_.Add(value);
        return this;
      }
      public Builder AddLinksToRemove(global::CmsApiSamples.Protocol.CMSApi.Tuple.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.linksToRemove_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLinksToRemove(scg::IEnumerable<global::CmsApiSamples.Protocol.CMSApi.Tuple> values) {
        PrepareBuilder();
        result.linksToRemove_.Add(values);
        return this;
      }
      public Builder ClearLinksToRemove() {
        PrepareBuilder();
        result.linksToRemove_.Clear();
        return this;
      }
    }
    static UpdateAccountUserAuthorizationList() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class UpdateAccountUserAuthorizationListResult : pb::GeneratedMessage<UpdateAccountUserAuthorizationListResult, UpdateAccountUserAuthorizationListResult.Builder> {
    private UpdateAccountUserAuthorizationListResult() { }
    private static readonly UpdateAccountUserAuthorizationListResult defaultInstance = new UpdateAccountUserAuthorizationListResult().MakeReadOnly();
    private static readonly string[] _updateAccountUserAuthorizationListResultFieldNames = new string[] {  };
    private static readonly uint[] _updateAccountUserAuthorizationListResultFieldTags = new uint[] {  };
    public static UpdateAccountUserAuthorizationListResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateAccountUserAuthorizationListResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateAccountUserAuthorizationListResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountUserAuthorizationListResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateAccountUserAuthorizationListResult, UpdateAccountUserAuthorizationListResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_UpdateAccountUserAuthorizationListResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _updateAccountUserAuthorizationListResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static UpdateAccountUserAuthorizationListResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationListResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationListResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationListResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationListResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationListResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationListResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationListResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationListResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateAccountUserAuthorizationListResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateAccountUserAuthorizationListResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateAccountUserAuthorizationListResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateAccountUserAuthorizationListResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateAccountUserAuthorizationListResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateAccountUserAuthorizationListResult result;
      
      private UpdateAccountUserAuthorizationListResult PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateAccountUserAuthorizationListResult original = result;
          result = new UpdateAccountUserAuthorizationListResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateAccountUserAuthorizationListResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult.Descriptor; }
      }
      
      public override UpdateAccountUserAuthorizationListResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult.DefaultInstance; }
      }
      
      public override UpdateAccountUserAuthorizationListResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateAccountUserAuthorizationListResult) {
          return MergeFrom((UpdateAccountUserAuthorizationListResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateAccountUserAuthorizationListResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.UpdateAccountUserAuthorizationListResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateAccountUserAuthorizationListResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateAccountUserAuthorizationListResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UpdateAccountUserAuthorizationListResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RemoveAccount : pb::GeneratedMessage<RemoveAccount, RemoveAccount.Builder> {
    private RemoveAccount() { }
    private static readonly RemoveAccount defaultInstance = new RemoveAccount().MakeReadOnly();
    private static readonly string[] _removeAccountFieldNames = new string[] { "account_id" };
    private static readonly uint[] _removeAccountFieldTags = new uint[] { 10 };
    public static RemoveAccount DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveAccount DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveAccount ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RemoveAccount__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveAccount, RemoveAccount.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RemoveAccount__FieldAccessorTable; }
    }
    
    public const int AccountIdFieldNumber = 1;
    private bool hasAccountId;
    private string accountId_ = "";
    public bool HasAccountId {
      get { return hasAccountId; }
    }
    public string AccountId {
      get { return accountId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _removeAccountFieldNames;
      if (hasAccountId) {
        output.WriteString(1, field_names[0], AccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AccountId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RemoveAccount ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveAccount ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveAccount ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveAccount ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveAccount ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveAccount MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveAccount prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveAccount, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveAccount cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveAccount result;
      
      private RemoveAccount PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveAccount original = result;
          result = new RemoveAccount();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveAccount MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RemoveAccount.Descriptor; }
      }
      
      public override RemoveAccount DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RemoveAccount.DefaultInstance; }
      }
      
      public override RemoveAccount BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveAccount) {
          return MergeFrom((RemoveAccount) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveAccount other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RemoveAccount.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeAccountFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAccountId = input.ReadString(ref result.accountId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountId {
        get { return result.hasAccountId; }
      }
      public string AccountId {
        get { return result.AccountId; }
        set { SetAccountId(value); }
      }
      public Builder SetAccountId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountId = true;
        result.accountId_ = value;
        return this;
      }
      public Builder ClearAccountId() {
        PrepareBuilder();
        result.hasAccountId = false;
        result.accountId_ = "";
        return this;
      }
    }
    static RemoveAccount() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RemoveAccountResult : pb::GeneratedMessage<RemoveAccountResult, RemoveAccountResult.Builder> {
    private RemoveAccountResult() { }
    private static readonly RemoveAccountResult defaultInstance = new RemoveAccountResult().MakeReadOnly();
    private static readonly string[] _removeAccountResultFieldNames = new string[] {  };
    private static readonly uint[] _removeAccountResultFieldTags = new uint[] {  };
    public static RemoveAccountResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveAccountResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveAccountResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RemoveAccountResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveAccountResult, RemoveAccountResult.Builder> InternalFieldAccessors {
      get { return global::CmsApiSamples.Protocol.CMSApi.Traderouting1.internal__static_traderouting_1_RemoveAccountResult__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _removeAccountResultFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RemoveAccountResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveAccountResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveAccountResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveAccountResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveAccountResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveAccountResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveAccountResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveAccountResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveAccountResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveAccountResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveAccountResult MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveAccountResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveAccountResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveAccountResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveAccountResult result;
      
      private RemoveAccountResult PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveAccountResult original = result;
          result = new RemoveAccountResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveAccountResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult.Descriptor; }
      }
      
      public override RemoveAccountResult DefaultInstanceForType {
        get { return global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult.DefaultInstance; }
      }
      
      public override RemoveAccountResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveAccountResult) {
          return MergeFrom((RemoveAccountResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveAccountResult other) {
        if (other == global::CmsApiSamples.Protocol.CMSApi.RemoveAccountResult.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeAccountResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeAccountResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static RemoveAccountResult() {
      object.ReferenceEquals(global::CmsApiSamples.Protocol.CMSApi.Traderouting1.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
